
Lab4_6_SoundAcquisition.elf:     file format elf32-littlenios2
Lab4_6_SoundAcquisition.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020248

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00016560 memsz 0x00016560 flags r-x
    LOAD off    0x00017580 vaddr 0x00036580 paddr 0x00038188 align 2**12
         filesz 0x00001c08 memsz 0x00001c08 flags rw-
    LOAD off    0x00019d90 vaddr 0x00039d90 paddr 0x00039d90 align 2**12
         filesz 0x00000000 memsz 0x00000190 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000159bc  00020248  00020248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000097c  00035c04  00035c04  00016c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c08  00036580  00038188  00017580  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000190  00039d90  00039d90  00019d90  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00039f20  00039f20  00019188  2**0
                  CONTENTS
  7 .SDRAM_controller 00000000  04000000  04000000  00019188  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00019188  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00001270  00000000  00000000  000191b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00029389  00000000  00000000  0001a420  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000b203  00000000  00000000  000437a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000e5a7  00000000  00000000  0004e9ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002fd4  00000000  00000000  0005cf54  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00004d17  00000000  00000000  0005ff28  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001cc9d  00000000  00000000  00064c3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  000818dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001f80  00000000  00000000  00081940  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00087cb6  2**0
                  CONTENTS, READONLY
 19 .cpu          00000017  00000000  00000000  00087cb9  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00087cd0  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00087cd1  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00087cd2  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00087cd6  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00087cda  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  00087cde  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  00087ce9  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  00087cf4  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000b  00000000  00000000  00087cff  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000041  00000000  00000000  00087d0a  2**0
                  CONTENTS, READONLY
 30 .jdi          0000baf4  00000000  00000000  00087d4b  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000cfc96  00000000  00000000  0009383f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020248 l    d  .text	00000000 .text
00035c04 l    d  .rodata	00000000 .rodata
00036580 l    d  .rwdata	00000000 .rwdata
00039d90 l    d  .bss	00000000 .bss
00039f20 l    d  .onchip_memory	00000000 .onchip_memory
04000000 l    d  .SDRAM_controller	00000000 .SDRAM_controller
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Lab4_6_SoundAcquisition_bsp//obj/HAL/src/crt0.o
00020290 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 SoundAcquisition.c
00038130 l     O .rwdata	00000004 first_available_address.3404
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 w_sqrt.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
000360ac l     O .rodata	00000108 two_over_pi
0003602c l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
000361f4 l     O .rodata	00000010 init_jk
000361b4 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
00036580 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0003634e l     O .rodata	00000010 zeroes.4404
00029b14 l     F .text	000000bc __sbprintf
0003635e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00029d24 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0002b854 l     F .text	00000008 __fp_unlock
0002b868 l     F .text	0000019c __sinit.part.1
0002ba04 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
000369c4 l     O .rwdata	00000020 lc_ctype_charset
000369a4 l     O .rwdata	00000020 lc_message_charset
000369e4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0003638c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002ed8c l     F .text	000000fc __sprint_r.part.0
000364c0 l     O .rodata	00000010 blanks.4348
000364b0 l     O .rodata	00000010 zeroes.4349
00030318 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
00031860 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0003196c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00031998 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
00031a84 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00031b64 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00031c50 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00031e24 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00038168 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
000320a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
000321d4 l     F .text	00000034 alt_dev_reg
00032208 l     F .text	0000003c alt_get_errno
00032244 l     F .text	00000068 alt_avalon_mutex_reg
00036fcc l     O .rwdata	00001060 jtag_uart_0
0003802c l     O .rwdata	00000048 mailbox_to_FFT
00038074 l     O .rwdata	00000048 mailbox_to_Sound_Acquisition
000380bc l     O .rwdata	00000010 mutex_SDRAM
000380cc l     O .rwdata	00000030 audio_and_video_config_0
000380fc l     O .rwdata	00000030 audio_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
000325ac l     F .text	00000210 altera_avalon_jtag_uart_irq
000327bc l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_mailbox_simple.c
00032df4 l     F .text	00000090 altera_avalon_mailbox_identify
00032e84 l     F .text	00000078 altera_avalon_mailbox_post
00032efc l     F .text	0000013c altera_avalon_mailbox_simple_tx_isr
00033038 l     F .text	000000ac altera_avalon_mailbox_simple_rx_isr
00000000 l    df *ABS*	00000000 altera_avalon_mutex.c
0003372c l     F .text	0000003c alt_get_errno
00033768 l     F .text	0000007c alt_mutex_trylock
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000339f8 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_audio.c
00000000 l    df *ABS*	00000000 altera_up_avalon_audio_and_video_config.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00034c58 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00034ebc l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0003517c l     F .text	0000003c alt_get_errno
000351b8 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00039dc4 g     O .bss	00000004 alt_instruction_exception_handler
000343d4 g     F .text	00000038 alt_up_av_config_reset
0002e444 g     F .text	00000074 _mprec_log10
0003482c g     F .text	00000058 alt_up_av_config_read_D5M_cfg_register
000334a0 g     F .text	00000150 altera_avalon_mailbox_send
0002e530 g     F .text	0000008c __any_on
000308b4 g     F .text	00000054 _isatty_r
00036398 g     O .rodata	00000028 __mprec_tinytens
00034444 g     F .text	00000034 alt_up_av_config_disable_interrupt
00031d60 g     F .text	0000007c alt_main
00027794 g     F .text	000000c0 _puts_r
00039e20 g     O .bss	00000100 alt_irq
00023344 g     F .text	00000014 fabs
00030908 g     F .text	00000060 _lseek_r
00021320 g     F .text	00000130 sqrt
00038188 g       *ABS*	00000000 __flash_rwdata_start
00026034 g     F .text	00000088 .hidden __eqdf2
00033d90 g     F .text	00000060 alt_up_audio_read_fifo_avail
00034508 g     F .text	000000a4 alt_up_av_config_write_audio_cfg_register
00039f20 g       *ABS*	00000000 __alt_heap_start
00027758 g     F .text	0000003c printf
00033df0 g     F .text	00000068 alt_up_audio_record_r
00030b20 g     F .text	0000009c _wcrtomb_r
0002ec4c g     F .text	0000005c __sseek
0002bba4 g     F .text	00000010 __sinit
000309c8 g     F .text	00000140 __swbuf_r
0002c66c g     F .text	0000007c _setlocale_r
0002ba0c g     F .text	00000068 __sfmoreglue
00031e00 g     F .text	00000024 __malloc_unlock
00023e68 g     F .text	00000440 .hidden __divsf3
00033cfc g     F .text	00000094 alt_up_audio_reset_audio_core
0002d33c g     F .text	0000015c memmove
0002bb8c g     F .text	00000018 _cleanup
000338a0 g     F .text	00000040 altera_avalon_mutex_trylock
0002d5c0 g     F .text	000000a8 _Balloc
00024d0c g     F .text	00000070 .hidden __fixsfsi
000260bc g     F .text	000000dc .hidden __gtdf2
00035574 g     F .text	00000024 altera_nios2_gen2_irq_init
00027718 g     F .text	00000010 __errno
00020000 g     F .entry	0000001c __reset
00033934 g     F .text	00000074 altera_avalon_mutex_is_mine
00020020 g       *ABS*	00000000 __flash_exceptions_start
00030858 g     F .text	0000005c _fstat_r
00039da8 g     O .bss	00000004 errno
00023358 g     F .text	000001ec floor
0002ebc8 g     F .text	00000008 __seofread
00033cbc g     F .text	00000040 alt_up_audio_write_interrupt_pending
00039db0 g     O .bss	00000004 alt_argv
0004012c g       *ABS*	00000000 _gp
000335f0 g     F .text	0000013c altera_avalon_mailbox_retrieve_poll
00032070 g     F .text	00000030 usleep
00024828 g     F .text	000004e4 .hidden __subsf3
00036e4c g     O .rwdata	00000180 alt_fd_list
00021450 g     F .text	0000076c __ieee754_rem_pio2
00034df8 g     F .text	00000090 alt_find_dev
0002d1f4 g     F .text	00000148 memcpy
0002b85c g     F .text	0000000c _cleanup_r
00027320 g     F .text	000000dc .hidden __floatsidf
00034f80 g     F .text	0000007c alt_io_redirect
00026198 g     F .text	000000f4 .hidden __ltdf2
00035c04 g       *ABS*	00000000 __DTOR_END__
00027854 g     F .text	00000014 puts
000357d4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
000330e4 g     F .text	00000078 altera_avalon_mailbox_simple_init
00023544 g     F .text	00000074 __fpclassifyd
0002e3a0 g     F .text	000000a4 __ratio
000302fc g     F .text	0000001c __vfiprintf_internal
000341d8 g     F .text	00000050 alt_up_audio_read_fifo_head
000329b4 g     F .text	0000021c altera_avalon_jtag_uart_read
00027728 g     F .text	00000030 _printf_r
000238e4 g     F .text	00000064 .hidden __udivsi3
00031ac0 g     F .text	000000a4 isatty
000363e8 g     O .rodata	000000c8 __mprec_tens
00033428 g     F .text	00000078 altera_avalon_mailbox_status
00033320 g     F .text	00000108 altera_avalon_mailbox_close
0002c6e8 g     F .text	0000000c __locale_charset
00021e44 g     F .text	000004a4 __kernel_cos
00024364 g     F .text	000000c8 .hidden __lesf2
00023778 g     F .text	00000074 .hidden __fixunsdfsi
00035744 g     F .text	00000090 alt_icache_flush
00039da4 g     O .bss	00000004 __malloc_top_pad
00034354 g     F .text	00000080 alt_up_av_config_read_data
00038140 g     O .rwdata	00000004 __mb_cur_max
0002c718 g     F .text	0000000c _localeconv_r
0002d9cc g     F .text	0000003c __i2b
0002c028 g     F .text	000004bc __sfvwrite_r
0002eb20 g     F .text	00000054 _sbrk_r
00030968 g     F .text	00000060 _read_r
00038160 g     O .rwdata	00000004 alt_max_fd
00034228 g     F .text	00000068 alt_up_audio_write_fifo_head
0003054c g     F .text	000000f0 _fclose_r
0002b824 g     F .text	00000030 fflush
00039da0 g     O .bss	00000004 __malloc_max_sbrked_mem
00034ffc g     F .text	00000180 alt_irq_register
00020964 g     F .text	000000b8 new_audio_file
00023078 g     F .text	000002cc __kernel_sin
000273fc g     F .text	00000110 .hidden __extendsfdf2
00024ea0 g     F .text	000008ac .hidden __adddf3
0002e148 g     F .text	0000010c __b2d
00031280 g     F .text	00000538 .hidden __umoddi3
00031c8c g     F .text	000000d4 lseek
000339a8 g     F .text	00000050 altera_avalon_mutex_first_lock
00038134 g     O .rwdata	00000004 __fdlib_version
00038138 g     O .rwdata	00000004 _global_impure_ptr
0002e5bc g     F .text	00000564 _realloc_r
00039f20 g       *ABS*	00000000 __bss_end
0003546c g     F .text	00000108 alt_tick
00030d08 g     F .text	00000578 .hidden __udivdi3
000307b4 g     F .text	00000024 _fputwc_r
000207e0 g     F .text	00000184 start_recording
000363c0 g     O .rodata	00000028 __mprec_bigtens
0002d7b0 g     F .text	00000104 __s2b
000317b8 g     F .text	000000a8 .hidden __floatunsidf
0002de88 g     F .text	00000060 __mcmp
00033ae8 g     F .text	0000003c alt_up_audio_open_dev
0002bbc4 g     F .text	00000018 __fp_lock_all
00020e84 g     F .text	00000148 average_amplitude
00033f20 g     F .text	00000068 alt_up_audio_play_r
000353d0 g     F .text	0000009c alt_alarm_stop
00021020 g     F .text	000000fc receiver_mailbox_callback
00039db8 g     O .bss	00000004 alt_irq_active
0002111c g     F .text	00000114 show_state_on_7_segments
000200fc g     F .exceptions	000000d8 alt_irq_handler
00036e24 g     O .rwdata	00000028 alt_dev_null
000222e8 g     F .text	00000d90 __kernel_rem_pio2
000337e4 g     F .text	00000054 altera_avalon_mutex_open
00034c10 g     F .text	00000048 alt_dcache_flush_all
0002d8b4 g     F .text	00000068 __hi0bits
000272a0 g     F .text	00000080 .hidden __fixdfsi
00038188 g       *ABS*	00000000 __ram_rwdata_end
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory
00038158 g     O .rwdata	00000008 alt_dev_list
000320dc g     F .text	000000f8 write
000242a8 g     F .text	000000bc .hidden __gtsf2
00038174 g     O .rwdata	00000008 alt_mutex_list
00036580 g       *ABS*	00000000 __ram_rodata_end
000319d4 g     F .text	000000b0 fstat
00026198 g     F .text	000000f4 .hidden __ledf2
0002dc00 g     F .text	00000140 __pow5mult
0002eea0 g     F .text	0000145c ___vfiprintf_internal_r
00039d98 g     O .bss	00000004 __nlocale_changed
00023948 g     F .text	00000058 .hidden __umodsi3
00039f20 g       *ABS*	00000000 end
0003812c g     O .rwdata	00000004 recording_index
000324f8 g     F .text	000000b4 altera_avalon_jtag_uart_init
000201d4 g     F .exceptions	00000074 alt_instruction_exception_entry
00035c04 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
00033a74 g     F .text	00000074 alt_avalon_timer_sc_init
000276b4 g     F .text	00000064 .hidden __clzsi2
00032bd0 g     F .text	00000224 altera_avalon_jtag_uart_write
0002bbb4 g     F .text	00000004 __sfp_lock_acquire
0002d110 g     F .text	000000e4 memchr
00027900 g     F .text	000021f8 ___vfprintf_internal_r
0002bd18 g     F .text	00000310 _free_r
0002c6f4 g     F .text	00000010 __locale_mb_cur_max
00035a50 g     F .text	00000180 __call_exitprocs
00039d94 g     O .bss	00000004 __mlocale_changed
00038144 g     O .rwdata	00000004 __malloc_sbrk_base
00020248 g     F .text	0000004c _start
00039dbc g     O .bss	00000004 _alt_tick_rate
00020cc0 g     F .text	00000128 play_file
00021230 g     F .text	000000f0 sin
000340d0 g     F .text	00000108 alt_up_audio_write_fifo
0002dd40 g     F .text	00000148 __lshift
000342f0 g     F .text	00000064 alt_up_av_config_write_data
00039dc0 g     O .bss	00000004 _alt_nticks
00031e60 g     F .text	000000fc read
000322e4 g     F .text	000000b0 alt_sys_init
00024d7c g     F .text	00000124 .hidden __floatsisf
00033ff0 g     F .text	000000e0 alt_up_audio_read_fifo
00035938 g     F .text	00000118 __register_exitproc
00034934 g     F .text	00000058 alt_up_av_config_write_LTM_cfg_register
00033c24 g     F .text	00000058 alt_up_audio_disable_write_interrupt
000338e0 g     F .text	00000054 altera_avalon_mutex_unlock
0002da08 g     F .text	000001f8 __multiply
0003285c g     F .text	00000068 altera_avalon_jtag_uart_close
00036580 g       *ABS*	00000000 __ram_rwdata_start
00035c04 g       *ABS*	00000000 __ram_rodata_start
00039dc8 g     O .bss	00000028 __malloc_current_mallinfo
0002e254 g     F .text	0000014c __d2b
00020de8 g     F .text	0000009c show_amplitude_on_LEDS
00032394 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
000356a0 g     F .text	000000a4 alt_get_fd
00034ab8 g     F .text	00000158 alt_busy_sleep
00030434 g     F .text	00000054 _close_r
00033bd0 g     F .text	00000054 alt_up_audio_enable_write_interrupt
000358bc g     F .text	0000007c memcmp
00032454 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00039f20 g       *ABS*	00000000 __alt_stack_base
000324a4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00029bd0 g     F .text	00000154 __swsetup_r
0002574c g     F .text	000008e8 .hidden __divdf3
00033b78 g     F .text	00000058 alt_up_audio_disable_read_interrupt
0002ba74 g     F .text	00000118 __sfp
0002e4b8 g     F .text	00000078 __copybits
00036a1c g     O .rwdata	00000408 __malloc_av_
0002bbc0 g     F .text	00000004 __sinit_lock_release
0002628c g     F .text	00000718 .hidden __muldf3
0002eb74 g     F .text	00000054 __sread
00035598 g     F .text	00000108 alt_find_file
00034c94 g     F .text	000000a4 alt_dev_llist_insert
00031ddc g     F .text	00000024 __malloc_lock
00031fc0 g     F .text	000000b0 sbrk
0002b7c8 g     F .text	0000005c _fflush_r
00030488 g     F .text	000000c4 _calloc_r
00039d90 g       *ABS*	00000000 __bss_start
0002d498 g     F .text	00000128 memset
00020294 g     F .text	0000054c main
00033ec0 g     F .text	00000060 alt_up_audio_write_fifo_space
00039db4 g     O .bss	00000004 alt_envp
00039d9c g     O .bss	00000004 __malloc_max_total_mem
000323f4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00030b08 g     F .text	00000018 __swbuf
00024364 g     F .text	000000c8 .hidden __ltsf2
00039df0 g     O .bss	00000030 recording
0002eca8 g     F .text	00000008 __sclose
000235b8 g     F .text	00000008 matherr
00040000 g       *ABS*	00000000 __alt_heap_limit
0003063c g     F .text	00000014 fclose
0002750c g     F .text	000001a8 .hidden __truncdfsf2
0003385c g     F .text	00000044 altera_avalon_mutex_lock
00029f24 g     F .text	00001688 _dtoa_r
0002c904 g     F .text	0000080c _malloc_r
00030c7c g     F .text	00000030 __ascii_wctomb
00038164 g     O .rwdata	00000004 alt_errno
0002c4e4 g     F .text	000000c4 _fwalk
000237ec g     F .text	00000084 .hidden __divsi3
0002bbf4 g     F .text	00000124 _malloc_trim_r
00035c04 g       *ABS*	00000000 __CTOR_END__
0002442c g     F .text	000003fc .hidden __mulsf3
0002ecb0 g     F .text	000000dc strcmp
00035c04 g       *ABS*	00000000 __flash_rodata_start
00035c04 g       *ABS*	00000000 __DTOR_LIST__
0002375c g     F .text	0000001c copysign
00026034 g     F .text	00000088 .hidden __nedf2
04000000 g       *ABS*	00000000 __alt_mem_SDRAM_controller
00034290 g     F .text	00000060 alt_up_av_config_open_dev
000322ac g     F .text	00000038 alt_irq_init
00031f5c g     F .text	00000064 alt_release_fd
00036204 g     O .rodata	00000100 .hidden __clz_tab
00039d90 g     O .bss	00000004 _PathLocale
00020a1c g     F .text	000002a4 generate_sinusoid
00035870 g     F .text	00000014 atexit
000242a8 g     F .text	000000bc .hidden __gesf2
000303d4 g     F .text	00000060 _write_r
000344d0 g     F .text	00000038 alt_up_av_config_read_ready
0002c724 g     F .text	00000018 setlocale
0003813c g     O .rwdata	00000004 _impure_ptr
00039dac g     O .bss	00000004 alt_argc
0002b5ac g     F .text	0000021c __sflush_r
000235c0 g     F .text	0000019c scalbn
00034d98 g     F .text	00000060 _do_dtors
0002c710 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
0002e0e4 g     F .text	00000064 __ulp
0002bbdc g     F .text	00000018 __fp_unlock_all
00038150 g     O .rwdata	00000008 alt_fs_list
00033e58 g     F .text	00000068 alt_up_audio_record_l
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002c73c g     F .text	0000000c localeconv
00021bbc g     F .text	00000288 __ieee754_sqrt
0003440c g     F .text	00000038 alt_up_av_config_enable_interrupt
00034478 g     F .text	00000058 alt_up_av_config_read_acknowledge
000347d4 g     F .text	00000058 alt_up_av_config_write_DC2_cfg_register
00038188 g       *ABS*	00000000 _edata
00039f20 g       *ABS*	00000000 _end
00030650 g     F .text	00000164 __fputwc
00020248 g       *ABS*	00000000 __ram_exceptions_end
000328c4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00033f88 g     F .text	00000068 alt_up_audio_play_l
0003816c g     O .rwdata	00000008 alt_mailbox_simple_list
0002ebd0 g     F .text	0000007c __swrite
00038148 g     O .rwdata	00000004 __malloc_trim_threshold
0002c704 g     F .text	0000000c __locale_msgcharset
00035884 g     F .text	00000038 exit
0002c5a8 g     F .text	000000c4 _fwalk_reent
0002dee8 g     F .text	000001fc __mdiff
000348dc g     F .text	00000058 alt_up_av_config_read_LTM_cfg_register
00023870 g     F .text	00000074 .hidden __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
0002bbb8 g     F .text	00000004 __sfp_lock_release
0003315c g     F .text	000001c4 altera_avalon_mailbox_open
00035bd0 g     F .text	00000034 _exit
0003498c g     F .text	0000012c alt_alarm_start
0002c748 g     F .text	000001bc __smakebuf_r
00027868 g     F .text	00000098 strlen
0003527c g     F .text	00000154 open
000260bc g     F .text	000000dc .hidden __gedf2
000345ac g     F .text	000000e8 alt_up_av_config_read_video_cfg_register
0003814c g     O .rwdata	00000004 __wctomb
00020fcc g     F .text	00000054 sender_mailbox_callback
0002ee88 g     F .text	00000018 __sprint_r
00034e88 g     F .text	00000034 alt_icache_flush_all
0003817c g     O .rwdata	00000004 alt_priority_mask
00029af8 g     F .text	0000001c __vfprintf_internal
00033838 g     F .text	00000024 altera_avalon_mutex_close
00034884 g     F .text	00000058 alt_up_av_config_write_D5M_cfg_register
00030cac g     F .text	0000005c _wctomb_r
000269a4 g     F .text	000008fc .hidden __subdf3
0002d91c g     F .text	000000b0 __lo0bits
00038180 g     O .rwdata	00000008 alt_alarm_list
00034d38 g     F .text	00000060 _do_ctors
00030bbc g     F .text	000000c0 wcrtomb
0003189c g     F .text	000000d0 close
000239a0 g     F .text	000004c8 .hidden __addsf3
00031bcc g     F .text	00000084 alt_load
00033b24 g     F .text	00000054 alt_up_audio_enable_read_interrupt
00034694 g     F .text	000000e8 alt_up_av_config_write_video_cfg_register
000307d8 g     F .text	00000080 fputwc
0002bbbc g     F .text	00000004 __sinit_lock_acquire
0002d690 g     F .text	00000120 __multadd
0002d668 g     F .text	00000028 _Bfree
0003477c g     F .text	00000058 alt_up_av_config_read_DC2_cfg_register
00033c7c g     F .text	00000040 alt_up_audio_read_interrupt_pending



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_mem_SDRAM_controller+0xfc020004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409214 	ori	at,at,584
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_onchip_memory-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d40 	call	201d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001526 	beq	r2,zero,20190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   2013c:	00800134 	movhi	r2,4
   20140:	10a78804 	addi	r2,r2,-25056
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	00800134 	movhi	r2,4
   20158:	10a78804 	addi	r2,r2,-25056
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	e17ffd17 	ldw	r5,-12(fp)
   20174:	1009883a 	mov	r4,r2
   20178:	183ee83a 	callr	r3
#endif
        break;
   2017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20180:	0005313a 	rdctl	r2,ipending
   20184:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20188:	e0bfff17 	ldw	r2,-4(fp)
   2018c:	00000706 	br	201ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
   20190:	e0bffc17 	ldw	r2,-16(fp)
   20194:	1085883a 	add	r2,r2,r2
   20198:	e0bffc15 	stw	r2,-16(fp)
      i++;
   2019c:	e0bffd17 	ldw	r2,-12(fp)
   201a0:	10800044 	addi	r2,r2,1
   201a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a8:	003fe006 	br	2012c <__alt_mem_SDRAM_controller+0xfc02012c>

    active = alt_irq_pending ();
   201ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201b0:	e0bffb17 	ldw	r2,-20(fp)
   201b4:	103fda1e 	bne	r2,zero,20120 <__alt_mem_SDRAM_controller+0xfc020120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b8:	0001883a 	nop
}
   201bc:	0001883a 	nop
   201c0:	e037883a 	mov	sp,fp
   201c4:	dfc00117 	ldw	ra,4(sp)
   201c8:	df000017 	ldw	fp,0(sp)
   201cc:	dec00204 	addi	sp,sp,8
   201d0:	f800283a 	ret

000201d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d4:	defffb04 	addi	sp,sp,-20
   201d8:	dfc00415 	stw	ra,16(sp)
   201dc:	df000315 	stw	fp,12(sp)
   201e0:	df000304 	addi	fp,sp,12
   201e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e8:	000531fa 	rdctl	r2,exception
   201ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201f0:	e0bffd17 	ldw	r2,-12(fp)
   201f4:	10801f0c 	andi	r2,r2,124
   201f8:	1004d0ba 	srli	r2,r2,2
   201fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   20200:	0005333a 	rdctl	r2,badaddr
   20204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20208:	d0a72617 	ldw	r2,-25448(gp)
   2020c:	10000726 	beq	r2,zero,2022c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   20210:	d0a72617 	ldw	r2,-25448(gp)
   20214:	e0fffd17 	ldw	r3,-12(fp)
   20218:	e1bffe17 	ldw	r6,-8(fp)
   2021c:	e17fff17 	ldw	r5,-4(fp)
   20220:	1809883a 	mov	r4,r3
   20224:	103ee83a 	callr	r2
   20228:	00000206 	br	20234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   2022c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   20230:	0005883a 	mov	r2,zero
}
   20234:	e037883a 	mov	sp,fp
   20238:	dfc00117 	ldw	ra,4(sp)
   2023c:	df000017 	ldw	fp,0(sp)
   20240:	dec00204 	addi	sp,sp,8
   20244:	f800283a 	ret

Disassembly of section .text:

00020248 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20248:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   2024c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   20250:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20254:	00bffd16 	blt	zero,r2,2024c <__alt_mem_SDRAM_controller+0xfc02024c>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20258:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   2025c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   20260:	06800134 	movhi	gp,4
    ori gp, gp, %lo(_gp)
   20264:	d6804b14 	ori	gp,gp,300
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20268:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   2026c:	10a76414 	ori	r2,r2,40336

    movhi r3, %hi(__bss_end)
   20270:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20274:	18e7c814 	ori	r3,r3,40736

    beq r2, r3, 1f
   20278:	10c00326 	beq	r2,r3,20288 <_start+0x40>

0:
    stw zero, (r2)
   2027c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   20280:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20284:	10fffd36 	bltu	r2,r3,2027c <__alt_mem_SDRAM_controller+0xfc02027c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20288:	0031bcc0 	call	31bcc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   2028c:	0031d600 	call	31d60 <alt_main>

00020290 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   20290:	003fff06 	br	20290 <__alt_mem_SDRAM_controller+0xfc020290>

00020294 <main>:

AudioFile recording[RECORDING_MAX_NUMBER];
int recording_index = -1;

int main()
{
   20294:	deff6804 	addi	sp,sp,-608
   20298:	dfc09715 	stw	ra,604(sp)
   2029c:	df009615 	stw	fp,600(sp)
   202a0:	dc009515 	stw	r16,596(sp)
   202a4:	df009604 	addi	fp,sp,600
	alt_up_audio_dev *audio_device;
	alt_up_av_config_dev *audio_config;
	float sound_loudness = 0;
   202a8:	e03f6e15 	stw	zero,-584(fp)
	altera_avalon_mailbox_dev *sender_mailbox, *receiver_mailbox;	// handle to the Mailboxes
	alt_u32 message[2];



	printf("Hello from Sound Acquisition Processor!\n");
   202ac:	010000f4 	movhi	r4,3
   202b0:	21170104 	addi	r4,r4,23556
   202b4:	00278540 	call	27854 <puts>

	// Open mailboxes
	sender_mailbox = altera_avalon_mailbox_open("/dev/mailbox_to_FFT", sender_mailbox_callback, NULL);
   202b8:	000d883a 	mov	r6,zero
   202bc:	014000b4 	movhi	r5,2
   202c0:	2943f304 	addi	r5,r5,4044
   202c4:	010000f4 	movhi	r4,3
   202c8:	21170b04 	addi	r4,r4,23596
   202cc:	003315c0 	call	3315c <altera_avalon_mailbox_open>
   202d0:	e0bf6f15 	stw	r2,-580(fp)
	if (!sender_mailbox){
   202d4:	e0bf6f17 	ldw	r2,-580(fp)
   202d8:	1000051e 	bne	r2,zero,202f0 <main+0x5c>
		printf ("FAIL: Unable to open mailbox to other processor\n");
   202dc:	010000f4 	movhi	r4,3
   202e0:	21171004 	addi	r4,r4,23616
   202e4:	00278540 	call	27854 <puts>
		return 1;
   202e8:	00800044 	movi	r2,1
   202ec:	00013606 	br	207c8 <main+0x534>
	}
	receiver_mailbox = altera_avalon_mailbox_open("/dev/mailbox_to_Sound_Acquisition", NULL, receiver_mailbox_callback);
   202f0:	018000b4 	movhi	r6,2
   202f4:	31840804 	addi	r6,r6,4128
   202f8:	000b883a 	mov	r5,zero
   202fc:	010000f4 	movhi	r4,3
   20300:	21171c04 	addi	r4,r4,23664
   20304:	003315c0 	call	3315c <altera_avalon_mailbox_open>
   20308:	e0bf7015 	stw	r2,-576(fp)
	if (!receiver_mailbox){
   2030c:	e0bf7017 	ldw	r2,-576(fp)
   20310:	1000051e 	bne	r2,zero,20328 <main+0x94>
		printf ("FAIL: Unable to open mailbox from other processor\n");
   20314:	010000f4 	movhi	r4,3
   20318:	21172504 	addi	r4,r4,23700
   2031c:	00278540 	call	27854 <puts>
		return 1;
   20320:	00800044 	movi	r2,1
   20324:	00012806 	br	207c8 <main+0x534>
	}

	// gets handles to audio devices
	audio_device = alt_up_audio_open_dev(AUDIO_0_NAME);	// handle to the circuit that interfaces with the audio CODEC
   20328:	010000f4 	movhi	r4,3
   2032c:	21173204 	addi	r4,r4,23752
   20330:	0033ae80 	call	33ae8 <alt_up_audio_open_dev>
   20334:	e0bf7115 	stw	r2,-572(fp)
	audio_config = alt_up_av_config_open_dev(AUDIO_AND_VIDEO_CONFIG_0_NAME); // handle to the circuit that initializes the audio CODEC
   20338:	010000f4 	movhi	r4,3
   2033c:	21173604 	addi	r4,r4,23768
   20340:	00342900 	call	34290 <alt_up_av_config_open_dev>
   20344:	e0bf7215 	stw	r2,-568(fp)

	// waits for the audio CODEC to be ready
	while (!alt_up_av_config_read_ready(audio_config)) {
   20348:	00000306 	br	20358 <main+0xc4>
		printf("Audio CODEC not ready\n");
   2034c:	010000f4 	movhi	r4,3
   20350:	21173e04 	addi	r4,r4,23800
   20354:	00278540 	call	27854 <puts>
	// gets handles to audio devices
	audio_device = alt_up_audio_open_dev(AUDIO_0_NAME);	// handle to the circuit that interfaces with the audio CODEC
	audio_config = alt_up_av_config_open_dev(AUDIO_AND_VIDEO_CONFIG_0_NAME); // handle to the circuit that initializes the audio CODEC

	// waits for the audio CODEC to be ready
	while (!alt_up_av_config_read_ready(audio_config)) {
   20358:	e13f7217 	ldw	r4,-568(fp)
   2035c:	00344d00 	call	344d0 <alt_up_av_config_read_ready>
   20360:	103ffa26 	beq	r2,zero,2034c <__alt_mem_SDRAM_controller+0xfc02034c>
		printf("Audio CODEC not ready\n");
	}

	// resets the audio CODEC just in case
	if (alt_up_av_config_reset(audio_config))
   20364:	e13f7217 	ldw	r4,-568(fp)
   20368:	00343d40 	call	343d4 <alt_up_av_config_reset>
   2036c:	10000326 	beq	r2,zero,2037c <main+0xe8>
		printf("Error resetting the audio CODEC\n");
   20370:	010000f4 	movhi	r4,3
   20374:	21174404 	addi	r4,r4,23824
   20378:	00278540 	call	27854 <puts>

	// initialize parallel ports
	IOWR_ALTERA_AVALON_PIO_DIRECTION(PIO_LEDS_BASE, 0xFFFFFFFF);	// sets all pins as output
   2037c:	00ffffc4 	movi	r3,-1
   20380:	00800134 	movhi	r2,4
   20384:	10840504 	addi	r2,r2,4116
   20388:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DIRECTION(PIO_BUTTONS_BASE, 0x0);	// sets all pins as input
   2038c:	0007883a 	mov	r3,zero
   20390:	00800134 	movhi	r2,4
   20394:	10840904 	addi	r2,r2,4132
   20398:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DIRECTION(PIO_7_SEGMENTS_BASE, 0xFFFFFFFF);	// sets all pins as output
   2039c:	00ffffc4 	movi	r3,-1
   203a0:	00800134 	movhi	r2,4
   203a4:	10840104 	addi	r2,r2,4100
   203a8:	10c00035 	stwio	r3,0(r2)

	beep_sound = new_audio_file(BEEP_SAMPLES);
   203ac:	e0bff504 	addi	r2,fp,-44
   203b0:	016ee014 	movui	r5,48000
   203b4:	1009883a 	mov	r4,r2
   203b8:	00209640 	call	20964 <new_audio_file>
	printf("\n\nGenerating sinusoid for beep sound. Please wait...\n");
   203bc:	010000f4 	movhi	r4,3
   203c0:	21174c04 	addi	r4,r4,23856
   203c4:	00278540 	call	27854 <puts>
	generate_sinusoid(SAMPLING_FREQ, BEEP_FREQUENCY, BEEP_AMPLITUDE, beep_sound);
   203c8:	e0bff617 	ldw	r2,-40(fp)
   203cc:	d8800015 	stw	r2,0(sp)
   203d0:	e0bff717 	ldw	r2,-36(fp)
   203d4:	d8800115 	stw	r2,4(sp)
   203d8:	e0bff817 	ldw	r2,-32(fp)
   203dc:	d8800215 	stw	r2,8(sp)
   203e0:	e1fff517 	ldw	r7,-44(fp)
   203e4:	01800044 	movi	r6,1
   203e8:	0150feb4 	movhi	r5,17402
   203ec:	012ee014 	movui	r4,48000
   203f0:	0020a1c0 	call	20a1c <generate_sinusoid>
	printf("Sinusoid created\n");
   203f4:	010000f4 	movhi	r4,3
   203f8:	21175a04 	addi	r4,r4,23912
   203fc:	00278540 	call	27854 <puts>

	printf("\n\nAllocating memory for recordings...  %d possible recordings of %d seconds each\n", RECORDING_MAX_NUMBER, RECORDING_TIME);
   20400:	01800104 	movi	r6,4
   20404:	014000c4 	movi	r5,3
   20408:	010000f4 	movhi	r4,3
   2040c:	21175f04 	addi	r4,r4,23932
   20410:	00277580 	call	27758 <printf>
	for (i=0; i<RECORDING_MAX_NUMBER; i++)
   20414:	e03f6d15 	stw	zero,-588(fp)
   20418:	00001506 	br	20470 <main+0x1dc>
		recording[i] = new_audio_file(RECORDING_TIME * SAMPLING_FREQ);
   2041c:	00800134 	movhi	r2,4
   20420:	10a77c04 	addi	r2,r2,-25104
   20424:	e0ff6d17 	ldw	r3,-588(fp)
   20428:	1806913a 	slli	r3,r3,4
   2042c:	10e1883a 	add	r16,r2,r3
   20430:	e0bffb04 	addi	r2,fp,-20
   20434:	014000f4 	movhi	r5,3
   20438:	297b8004 	addi	r5,r5,-4608
   2043c:	1009883a 	mov	r4,r2
   20440:	00209640 	call	20964 <new_audio_file>
   20444:	e0bffb17 	ldw	r2,-20(fp)
   20448:	80800015 	stw	r2,0(r16)
   2044c:	e0bffc17 	ldw	r2,-16(fp)
   20450:	80800115 	stw	r2,4(r16)
   20454:	e0bffd17 	ldw	r2,-12(fp)
   20458:	80800215 	stw	r2,8(r16)
   2045c:	e0bffe17 	ldw	r2,-8(fp)
   20460:	80800315 	stw	r2,12(r16)
	printf("\n\nGenerating sinusoid for beep sound. Please wait...\n");
	generate_sinusoid(SAMPLING_FREQ, BEEP_FREQUENCY, BEEP_AMPLITUDE, beep_sound);
	printf("Sinusoid created\n");

	printf("\n\nAllocating memory for recordings...  %d possible recordings of %d seconds each\n", RECORDING_MAX_NUMBER, RECORDING_TIME);
	for (i=0; i<RECORDING_MAX_NUMBER; i++)
   20464:	e0bf6d17 	ldw	r2,-588(fp)
   20468:	10800044 	addi	r2,r2,1
   2046c:	e0bf6d15 	stw	r2,-588(fp)
   20470:	e0bf6d17 	ldw	r2,-588(fp)
   20474:	108000f0 	cmpltui	r2,r2,3
   20478:	103fe81e 	bne	r2,zero,2041c <__alt_mem_SDRAM_controller+0xfc02041c>
		recording[i] = new_audio_file(RECORDING_TIME * SAMPLING_FREQ);
	printf("Memory allocated with success\n", RECORDING_MAX_NUMBER, RECORDING_TIME);
   2047c:	01800104 	movi	r6,4
   20480:	014000c4 	movi	r5,3
   20484:	010000f4 	movhi	r4,3
   20488:	21177404 	addi	r4,r4,24016
   2048c:	00277580 	call	27758 <printf>



	printf("\n\nMake a loud noise to start recording. Try snapping your fingers.\n");
   20490:	010000f4 	movhi	r4,3
   20494:	21177c04 	addi	r4,r4,24048
   20498:	00278540 	call	27854 <puts>
	while(1)
	{
		// reads the incoming FIFO from the audio CODEC (audio from the microphone)
		n_samples_in_FIFO = alt_up_audio_read_fifo_avail(audio_device, 0);				// checks how many elements are in the FIFO
   2049c:	000b883a 	mov	r5,zero
   204a0:	e13f7117 	ldw	r4,-572(fp)
   204a4:	0033d900 	call	33d90 <alt_up_audio_read_fifo_avail>
   204a8:	e0bf7315 	stw	r2,-564(fp)
		alt_up_audio_read_fifo(audio_device, recording_buffer, n_samples_in_FIFO, 0);	// reads the content of the FIFO
   204ac:	e0ff7317 	ldw	r3,-564(fp)
   204b0:	e0bf7504 	addi	r2,fp,-556
   204b4:	000f883a 	mov	r7,zero
   204b8:	180d883a 	mov	r6,r3
   204bc:	100b883a 	mov	r5,r2
   204c0:	e13f7117 	ldw	r4,-572(fp)
   204c4:	0033ff00 	call	33ff0 <alt_up_audio_read_fifo>

		sound_loudness = average_amplitude(recording_buffer, n_samples_in_FIFO);		// computes the sound loudness
   204c8:	e0ff7317 	ldw	r3,-564(fp)
   204cc:	e0bf7504 	addi	r2,fp,-556
   204d0:	180b883a 	mov	r5,r3
   204d4:	1009883a 	mov	r4,r2
   204d8:	0020e840 	call	20e84 <average_amplitude>
   204dc:	e0bf6e15 	stw	r2,-584(fp)
		show_amplitude_on_LEDS(sound_loudness);											// shows the amplitude on the LEDs
   204e0:	e13f6e17 	ldw	r4,-584(fp)
   204e4:	0020de80 	call	20de8 <show_amplitude_on_LEDS>
		show_state_on_7_segments();
   204e8:	002111c0 	call	2111c <show_state_on_7_segments>

		if (sound_loudness > LOUDNESS_THRESHOLD) {
   204ec:	014fc034 	movhi	r5,16128
   204f0:	e13f6e17 	ldw	r4,-584(fp)
   204f4:	00242a80 	call	242a8 <__gesf2>
   204f8:	00806b0e 	bge	zero,r2,206a8 <main+0x414>
			if(recording_index < RECORDING_MAX_NUMBER-1)
   204fc:	d0a00017 	ldw	r2,-32768(gp)
   20500:	10800088 	cmpgei	r2,r2,2
   20504:	1000041e 	bne	r2,zero,20518 <main+0x284>
				recording_index++;
   20508:	d0a00017 	ldw	r2,-32768(gp)
   2050c:	10800044 	addi	r2,r2,1
   20510:	d0a00015 	stw	r2,-32768(gp)
   20514:	00000106 	br	2051c <main+0x288>
			else
				recording_index = 0;
   20518:	d0200015 	stw	zero,-32768(gp)
			recording[recording_index].processed = false;
   2051c:	d0e00017 	ldw	r3,-32768(gp)
   20520:	00800134 	movhi	r2,4
   20524:	10a77c04 	addi	r2,r2,-25104
   20528:	1806913a 	slli	r3,r3,4
   2052c:	10c5883a 	add	r2,r2,r3
   20530:	10800304 	addi	r2,r2,12
   20534:	10000005 	stb	zero,0(r2)
			show_state_on_7_segments();
   20538:	002111c0 	call	2111c <show_state_on_7_segments>

			printf("Loud noise detected! Recording starting in:\n3...\n");
   2053c:	010000f4 	movhi	r4,3
   20540:	21178d04 	addi	r4,r4,24116
   20544:	00278540 	call	27854 <puts>
			play_file(beep_sound, audio_device);
   20548:	e0bf7117 	ldw	r2,-572(fp)
   2054c:	d8800015 	stw	r2,0(sp)
   20550:	e13ff517 	ldw	r4,-44(fp)
   20554:	e17ff617 	ldw	r5,-40(fp)
   20558:	e1bff717 	ldw	r6,-36(fp)
   2055c:	e1fff817 	ldw	r7,-32(fp)
   20560:	0020cc00 	call	20cc0 <play_file>
			usleep(250000);
   20564:	01000134 	movhi	r4,4
   20568:	21342404 	addi	r4,r4,-12144
   2056c:	00320700 	call	32070 <usleep>
			printf("2...\n");
   20570:	010000f4 	movhi	r4,3
   20574:	21179a04 	addi	r4,r4,24168
   20578:	00278540 	call	27854 <puts>
			play_file(beep_sound, audio_device);
   2057c:	e0bf7117 	ldw	r2,-572(fp)
   20580:	d8800015 	stw	r2,0(sp)
   20584:	e13ff517 	ldw	r4,-44(fp)
   20588:	e17ff617 	ldw	r5,-40(fp)
   2058c:	e1bff717 	ldw	r6,-36(fp)
   20590:	e1fff817 	ldw	r7,-32(fp)
   20594:	0020cc00 	call	20cc0 <play_file>
			usleep(250000);
   20598:	01000134 	movhi	r4,4
   2059c:	21342404 	addi	r4,r4,-12144
   205a0:	00320700 	call	32070 <usleep>
			printf("1...\n");
   205a4:	010000f4 	movhi	r4,3
   205a8:	21179c04 	addi	r4,r4,24176
   205ac:	00278540 	call	27854 <puts>
			play_file(beep_sound, audio_device);
   205b0:	e0bf7117 	ldw	r2,-572(fp)
   205b4:	d8800015 	stw	r2,0(sp)
   205b8:	e13ff517 	ldw	r4,-44(fp)
   205bc:	e17ff617 	ldw	r5,-40(fp)
   205c0:	e1bff717 	ldw	r6,-36(fp)
   205c4:	e1fff817 	ldw	r7,-32(fp)
   205c8:	0020cc00 	call	20cc0 <play_file>
			usleep(250000);
   205cc:	01000134 	movhi	r4,4
   205d0:	21342404 	addi	r4,r4,-12144
   205d4:	00320700 	call	32070 <usleep>


			printf("Recording audio %d...\n", recording_index + 1);
   205d8:	d0a00017 	ldw	r2,-32768(gp)
   205dc:	10800044 	addi	r2,r2,1
   205e0:	100b883a 	mov	r5,r2
   205e4:	010000f4 	movhi	r4,3
   205e8:	21179e04 	addi	r4,r4,24184
   205ec:	00277580 	call	27758 <printf>
			start_recording(recording[recording_index], audio_device);
   205f0:	d0e00017 	ldw	r3,-32768(gp)
   205f4:	00800134 	movhi	r2,4
   205f8:	10a77c04 	addi	r2,r2,-25104
   205fc:	1806913a 	slli	r3,r3,4
   20600:	10c5883a 	add	r2,r2,r3
   20604:	e0ff7117 	ldw	r3,-572(fp)
   20608:	d8c00015 	stw	r3,0(sp)
   2060c:	11000017 	ldw	r4,0(r2)
   20610:	11400117 	ldw	r5,4(r2)
   20614:	11800217 	ldw	r6,8(r2)
   20618:	11c00317 	ldw	r7,12(r2)
   2061c:	00207e00 	call	207e0 <start_recording>
			printf("Finished recording audio %d...\n", recording_index + 1);
   20620:	d0a00017 	ldw	r2,-32768(gp)
   20624:	10800044 	addi	r2,r2,1
   20628:	100b883a 	mov	r5,r2
   2062c:	010000f4 	movhi	r4,3
   20630:	2117a404 	addi	r4,r4,24208
   20634:	00277580 	call	27758 <printf>


			message[0] = (int)recording[recording_index].start_address;			// puts the address of the file containing the recording
   20638:	d0e00017 	ldw	r3,-32768(gp)
   2063c:	00800134 	movhi	r2,4
   20640:	10a77c04 	addi	r2,r2,-25104
   20644:	1806913a 	slli	r3,r3,4
   20648:	10c5883a 	add	r2,r2,r3
   2064c:	10800017 	ldw	r2,0(r2)
   20650:	e0bff915 	stw	r2,-28(fp)
			message[1] = (int)recording[recording_index].end_address;	// puts the length of the file
   20654:	d0e00017 	ldw	r3,-32768(gp)
   20658:	00800134 	movhi	r2,4
   2065c:	10a77c04 	addi	r2,r2,-25104
   20660:	1806913a 	slli	r3,r3,4
   20664:	10c5883a 	add	r2,r2,r3
   20668:	10800204 	addi	r2,r2,8
   2066c:	10800017 	ldw	r2,0(r2)
   20670:	e0bffa15 	stw	r2,-24(fp)
			printf("Sending file information:\tSTART ADDRESS: 0x%lx\tEND: 0x%lx \n", message[0], message[1]);
   20674:	e0bff917 	ldw	r2,-28(fp)
   20678:	e0fffa17 	ldw	r3,-24(fp)
   2067c:	180d883a 	mov	r6,r3
   20680:	100b883a 	mov	r5,r2
   20684:	010000f4 	movhi	r4,3
   20688:	2117ac04 	addi	r4,r4,24240
   2068c:	00277580 	call	27758 <printf>
			altera_avalon_mailbox_send (sender_mailbox, message, 0, ISR);	// sends the info through the mailbox
   20690:	e0bff904 	addi	r2,fp,-28
   20694:	000f883a 	mov	r7,zero
   20698:	000d883a 	mov	r6,zero
   2069c:	100b883a 	mov	r5,r2
   206a0:	e13f6f17 	ldw	r4,-580(fp)
   206a4:	00334a00 	call	334a0 <altera_avalon_mailbox_send>
		}

		buttons_state = IORD_ALTERA_AVALON_PIO_DATA(PIO_BUTTONS_BASE);
   206a8:	00800134 	movhi	r2,4
   206ac:	10840804 	addi	r2,r2,4128
   206b0:	10800037 	ldwio	r2,0(r2)
   206b4:	e0bf7405 	stb	r2,-560(fp)
		switch (buttons_state)
   206b8:	e0bf7407 	ldb	r2,-560(fp)
   206bc:	10c002e0 	cmpeqi	r3,r2,11
   206c0:	1800171e 	bne	r3,zero,20720 <main+0x48c>
   206c4:	10c00360 	cmpeqi	r3,r2,13
   206c8:	1800271e 	bne	r3,zero,20768 <main+0x4d4>
   206cc:	108001e0 	cmpeqi	r2,r2,7
   206d0:	1000011e 	bne	r2,zero,206d8 <main+0x444>
					printf("Playing recording 3...\n");
					play_file(recording[2], audio_device);
				}
				break;
			default:
				break;
   206d4:	00003b06 	br	207c4 <main+0x530>

		buttons_state = IORD_ALTERA_AVALON_PIO_DATA(PIO_BUTTONS_BASE);
		switch (buttons_state)
		{
			case 0b0111:
				if (recording[0].processed == true)
   206d8:	00800134 	movhi	r2,4
   206dc:	10a77c04 	addi	r2,r2,-25104
   206e0:	10800303 	ldbu	r2,12(r2)
   206e4:	10803fcc 	andi	r2,r2,255
   206e8:	10003126 	beq	r2,zero,207b0 <main+0x51c>
				{
					printf("Playing recording 1...\n");
   206ec:	010000f4 	movhi	r4,3
   206f0:	2117bb04 	addi	r4,r4,24300
   206f4:	00278540 	call	27854 <puts>
					play_file(recording[0], audio_device);
   206f8:	00800134 	movhi	r2,4
   206fc:	10a77c04 	addi	r2,r2,-25104
   20700:	e0ff7117 	ldw	r3,-572(fp)
   20704:	d8c00015 	stw	r3,0(sp)
   20708:	11000017 	ldw	r4,0(r2)
   2070c:	11400117 	ldw	r5,4(r2)
   20710:	11800217 	ldw	r6,8(r2)
   20714:	11c00317 	ldw	r7,12(r2)
   20718:	0020cc00 	call	20cc0 <play_file>
				}
				break;
   2071c:	00002406 	br	207b0 <main+0x51c>
			case 0b1011:
				if (recording[1].processed == true)
   20720:	00800134 	movhi	r2,4
   20724:	10a77c04 	addi	r2,r2,-25104
   20728:	10800703 	ldbu	r2,28(r2)
   2072c:	10803fcc 	andi	r2,r2,255
   20730:	10002126 	beq	r2,zero,207b8 <main+0x524>
				{
					printf("Playing recording 2...\n");
   20734:	010000f4 	movhi	r4,3
   20738:	2117c104 	addi	r4,r4,24324
   2073c:	00278540 	call	27854 <puts>
					play_file(recording[1], audio_device);
   20740:	00800134 	movhi	r2,4
   20744:	10a77c04 	addi	r2,r2,-25104
   20748:	e0ff7117 	ldw	r3,-572(fp)
   2074c:	d8c00015 	stw	r3,0(sp)
   20750:	11000417 	ldw	r4,16(r2)
   20754:	11400517 	ldw	r5,20(r2)
   20758:	11800617 	ldw	r6,24(r2)
   2075c:	11c00717 	ldw	r7,28(r2)
   20760:	0020cc00 	call	20cc0 <play_file>
				}
				break;
   20764:	00001406 	br	207b8 <main+0x524>
			case 0b1101:
				if (recording[2].processed == true)
   20768:	00800134 	movhi	r2,4
   2076c:	10a77c04 	addi	r2,r2,-25104
   20770:	10800b03 	ldbu	r2,44(r2)
   20774:	10803fcc 	andi	r2,r2,255
   20778:	10001126 	beq	r2,zero,207c0 <main+0x52c>
				{
					printf("Playing recording 3...\n");
   2077c:	010000f4 	movhi	r4,3
   20780:	2117c704 	addi	r4,r4,24348
   20784:	00278540 	call	27854 <puts>
					play_file(recording[2], audio_device);
   20788:	00800134 	movhi	r2,4
   2078c:	10a77c04 	addi	r2,r2,-25104
   20790:	e0ff7117 	ldw	r3,-572(fp)
   20794:	d8c00015 	stw	r3,0(sp)
   20798:	11000817 	ldw	r4,32(r2)
   2079c:	11400917 	ldw	r5,36(r2)
   207a0:	11800a17 	ldw	r6,40(r2)
   207a4:	11c00b17 	ldw	r7,44(r2)
   207a8:	0020cc00 	call	20cc0 <play_file>
				}
				break;
   207ac:	00000406 	br	207c0 <main+0x52c>
				if (recording[0].processed == true)
				{
					printf("Playing recording 1...\n");
					play_file(recording[0], audio_device);
				}
				break;
   207b0:	0001883a 	nop
   207b4:	003f3906 	br	2049c <__alt_mem_SDRAM_controller+0xfc02049c>
				if (recording[1].processed == true)
				{
					printf("Playing recording 2...\n");
					play_file(recording[1], audio_device);
				}
				break;
   207b8:	0001883a 	nop
   207bc:	003f3706 	br	2049c <__alt_mem_SDRAM_controller+0xfc02049c>
				if (recording[2].processed == true)
				{
					printf("Playing recording 3...\n");
					play_file(recording[2], audio_device);
				}
				break;
   207c0:	0001883a 	nop
			default:
				break;
		}
	}
   207c4:	003f3506 	br	2049c <__alt_mem_SDRAM_controller+0xfc02049c>
	return 0;
}
   207c8:	e6ffff04 	addi	sp,fp,-4
   207cc:	dfc00217 	ldw	ra,8(sp)
   207d0:	df000117 	ldw	fp,4(sp)
   207d4:	dc000017 	ldw	r16,0(sp)
   207d8:	dec00304 	addi	sp,sp,12
   207dc:	f800283a 	ret

000207e0 <start_recording>:



// records a sound from the microphone and stores it at location pointed by *file (it should be in the SDRAM)
void start_recording(AudioFile file, alt_up_audio_dev *audio_device)
{
   207e0:	deff7604 	addi	sp,sp,-552
   207e4:	dfc08915 	stw	ra,548(sp)
   207e8:	df008815 	stw	fp,544(sp)
   207ec:	dc008715 	stw	r16,540(sp)
   207f0:	df008804 	addi	fp,sp,544
   207f4:	e13ffb15 	stw	r4,-20(fp)
   207f8:	e17ffc15 	stw	r5,-16(fp)
   207fc:	e1bffd15 	stw	r6,-12(fp)
   20800:	e1fffe15 	stw	r7,-8(fp)
	unsigned int n_samples_in_FIFO = 0, buffer[RECORDING_BUFFER_SIZE], i;
   20804:	e03f7915 	stw	zero,-540(fp)
	float percentage;

	file.processed = false;
   20808:	e03ffe05 	stb	zero,-8(fp)
	file.file_pointer = file.start_address;
   2080c:	e0bffb17 	ldw	r2,-20(fp)
   20810:	e0bffc15 	stw	r2,-16(fp)

	while (file.file_pointer < file.end_address) {
   20814:	00004906 	br	2093c <start_recording+0x15c>
		n_samples_in_FIFO = alt_up_audio_read_fifo_avail(audio_device, 0);
   20818:	000b883a 	mov	r5,zero
   2081c:	e1000217 	ldw	r4,8(fp)
   20820:	0033d900 	call	33d90 <alt_up_audio_read_fifo_avail>
   20824:	e0bf7915 	stw	r2,-540(fp)
		alt_up_audio_read_fifo(audio_device, buffer, n_samples_in_FIFO, 0);		// reads data from the incoming FIFO (sound from the microphone)
   20828:	e0ff7917 	ldw	r3,-540(fp)
   2082c:	e0bf7b04 	addi	r2,fp,-532
   20830:	000f883a 	mov	r7,zero
   20834:	180d883a 	mov	r6,r3
   20838:	100b883a 	mov	r5,r2
   2083c:	e1000217 	ldw	r4,8(fp)
   20840:	0033ff00 	call	33ff0 <alt_up_audio_read_fifo>

		percentage = (float)(file.file_pointer - file.start_address)/(file.end_address - file.start_address);
   20844:	e0bffc17 	ldw	r2,-16(fp)
   20848:	1007883a 	mov	r3,r2
   2084c:	e0bffb17 	ldw	r2,-20(fp)
   20850:	1885c83a 	sub	r2,r3,r2
   20854:	1005d0ba 	srai	r2,r2,2
   20858:	1009883a 	mov	r4,r2
   2085c:	0024d7c0 	call	24d7c <__floatsisf>
   20860:	1021883a 	mov	r16,r2
   20864:	e0bffd17 	ldw	r2,-12(fp)
   20868:	1007883a 	mov	r3,r2
   2086c:	e0bffb17 	ldw	r2,-20(fp)
   20870:	1885c83a 	sub	r2,r3,r2
   20874:	1005d0ba 	srai	r2,r2,2
   20878:	1009883a 	mov	r4,r2
   2087c:	0024d7c0 	call	24d7c <__floatsisf>
   20880:	1007883a 	mov	r3,r2
   20884:	180b883a 	mov	r5,r3
   20888:	8009883a 	mov	r4,r16
   2088c:	0023e680 	call	23e68 <__divsf3>
   20890:	1007883a 	mov	r3,r2
   20894:	e0ff7a15 	stw	r3,-536(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(PIO_LEDS_BASE, (0x01 << (int)(10 * percentage))-1);
   20898:	01504834 	movhi	r5,16672
   2089c:	e13f7a17 	ldw	r4,-536(fp)
   208a0:	002442c0 	call	2442c <__mulsf3>
   208a4:	1007883a 	mov	r3,r2
   208a8:	1805883a 	mov	r2,r3
   208ac:	1009883a 	mov	r4,r2
   208b0:	0024d0c0 	call	24d0c <__fixsfsi>
   208b4:	1007883a 	mov	r3,r2
   208b8:	00800044 	movi	r2,1
   208bc:	10c4983a 	sll	r2,r2,r3
   208c0:	10ffffc4 	addi	r3,r2,-1
   208c4:	00800134 	movhi	r2,4
   208c8:	10840404 	addi	r2,r2,4112
   208cc:	10c00035 	stwio	r3,0(r2)
		for(i=0; i<n_samples_in_FIFO; i++)
   208d0:	e03f7815 	stw	zero,-544(fp)
   208d4:	00001006 	br	20918 <start_recording+0x138>
		{
			IOWR_32DIRECT(file.file_pointer, i*4, buffer[i]);
   208d8:	e0fffc17 	ldw	r3,-16(fp)
   208dc:	e0bf7817 	ldw	r2,-544(fp)
   208e0:	1085883a 	add	r2,r2,r2
   208e4:	1085883a 	add	r2,r2,r2
   208e8:	1887883a 	add	r3,r3,r2
   208ec:	e0bf7817 	ldw	r2,-544(fp)
   208f0:	1085883a 	add	r2,r2,r2
   208f4:	1085883a 	add	r2,r2,r2
   208f8:	e13f7804 	addi	r4,fp,-544
   208fc:	2085883a 	add	r2,r4,r2
   20900:	10800304 	addi	r2,r2,12
   20904:	10800017 	ldw	r2,0(r2)
   20908:	18800035 	stwio	r2,0(r3)
		n_samples_in_FIFO = alt_up_audio_read_fifo_avail(audio_device, 0);
		alt_up_audio_read_fifo(audio_device, buffer, n_samples_in_FIFO, 0);		// reads data from the incoming FIFO (sound from the microphone)

		percentage = (float)(file.file_pointer - file.start_address)/(file.end_address - file.start_address);
		IOWR_ALTERA_AVALON_PIO_DATA(PIO_LEDS_BASE, (0x01 << (int)(10 * percentage))-1);
		for(i=0; i<n_samples_in_FIFO; i++)
   2090c:	e0bf7817 	ldw	r2,-544(fp)
   20910:	10800044 	addi	r2,r2,1
   20914:	e0bf7815 	stw	r2,-544(fp)
   20918:	e0ff7817 	ldw	r3,-544(fp)
   2091c:	e0bf7917 	ldw	r2,-540(fp)
   20920:	18bfed36 	bltu	r3,r2,208d8 <__alt_mem_SDRAM_controller+0xfc0208d8>
		{
			IOWR_32DIRECT(file.file_pointer, i*4, buffer[i]);
		}
		file.file_pointer += n_samples_in_FIFO;
   20924:	e0fffc17 	ldw	r3,-16(fp)
   20928:	e0bf7917 	ldw	r2,-540(fp)
   2092c:	1085883a 	add	r2,r2,r2
   20930:	1085883a 	add	r2,r2,r2
   20934:	1885883a 	add	r2,r3,r2
   20938:	e0bffc15 	stw	r2,-16(fp)
	float percentage;

	file.processed = false;
	file.file_pointer = file.start_address;

	while (file.file_pointer < file.end_address) {
   2093c:	e0fffc17 	ldw	r3,-16(fp)
   20940:	e0bffd17 	ldw	r2,-12(fp)
   20944:	18bfb436 	bltu	r3,r2,20818 <__alt_mem_SDRAM_controller+0xfc020818>
		{
			IOWR_32DIRECT(file.file_pointer, i*4, buffer[i]);
		}
		file.file_pointer += n_samples_in_FIFO;
	}
}
   20948:	0001883a 	nop
   2094c:	e6ffff04 	addi	sp,fp,-4
   20950:	dfc00217 	ldw	ra,8(sp)
   20954:	df000117 	ldw	fp,4(sp)
   20958:	dc000017 	ldw	r16,0(sp)
   2095c:	dec00304 	addi	sp,sp,12
   20960:	f800283a 	ret

00020964 <new_audio_file>:




AudioFile new_audio_file(unsigned int length)
{
   20964:	defff804 	addi	sp,sp,-32
   20968:	dfc00715 	stw	ra,28(sp)
   2096c:	df000615 	stw	fp,24(sp)
   20970:	df000604 	addi	fp,sp,24
   20974:	e13ffe15 	stw	r4,-8(fp)
   20978:	e17fff15 	stw	r5,-4(fp)
	static unsigned int *first_available_address = BASE_ADDRESS;
	AudioFile file;

	file.start_address = first_available_address;
   2097c:	d0a00117 	ldw	r2,-32764(gp)
   20980:	e0bffa15 	stw	r2,-24(fp)
	file.file_pointer = first_available_address;
   20984:	d0a00117 	ldw	r2,-32764(gp)
   20988:	e0bffb15 	stw	r2,-20(fp)
	file.end_address = first_available_address + length;
   2098c:	d0e00117 	ldw	r3,-32764(gp)
   20990:	e0bfff17 	ldw	r2,-4(fp)
   20994:	1085883a 	add	r2,r2,r2
   20998:	1085883a 	add	r2,r2,r2
   2099c:	1885883a 	add	r2,r3,r2
   209a0:	e0bffc15 	stw	r2,-16(fp)
	file.processed = false;
   209a4:	e03ffd05 	stb	zero,-12(fp)

	if ((int)file.end_address  < SDRAM_CONTROLLER_BASE + SDRAM_CONTROLLER_SPAN)
   209a8:	e0bffc17 	ldw	r2,-16(fp)
   209ac:	1007883a 	mov	r3,r2
   209b0:	00820034 	movhi	r2,2048
   209b4:	1880040e 	bge	r3,r2,209c8 <new_audio_file+0x64>
	{
		first_available_address = file.end_address + 1;
   209b8:	e0bffc17 	ldw	r2,-16(fp)
   209bc:	10800104 	addi	r2,r2,4
   209c0:	d0a00115 	stw	r2,-32764(gp)
   209c4:	00000606 	br	209e0 <new_audio_file+0x7c>
	}
	else
	{
		printf("ERROR: not enough memory to allocate audio file!\n");
   209c8:	010000f4 	movhi	r4,3
   209cc:	2117cd04 	addi	r4,r4,24372
   209d0:	00278540 	call	27854 <puts>
		file.start_address = NULL;
   209d4:	e03ffa15 	stw	zero,-24(fp)
		file.file_pointer = NULL;
   209d8:	e03ffb15 	stw	zero,-20(fp)
		file.end_address = NULL;
   209dc:	e03ffc15 	stw	zero,-16(fp)
	}
	return file;
   209e0:	e0bffe17 	ldw	r2,-8(fp)
   209e4:	e0fffa17 	ldw	r3,-24(fp)
   209e8:	10c00015 	stw	r3,0(r2)
   209ec:	e0fffb17 	ldw	r3,-20(fp)
   209f0:	10c00115 	stw	r3,4(r2)
   209f4:	e0fffc17 	ldw	r3,-16(fp)
   209f8:	10c00215 	stw	r3,8(r2)
   209fc:	e0fffd17 	ldw	r3,-12(fp)
   20a00:	10c00315 	stw	r3,12(r2)
}
   20a04:	e0bffe17 	ldw	r2,-8(fp)
   20a08:	e037883a 	mov	sp,fp
   20a0c:	dfc00117 	ldw	ra,4(sp)
   20a10:	df000017 	ldw	fp,0(sp)
   20a14:	dec00204 	addi	sp,sp,8
   20a18:	f800283a 	ret

00020a1c <generate_sinusoid>:


// creates a sinusoidal waveform in the memory (at the location pointed by "unsigned int *file"), n_samples specifies the length
// of the file to create.
void generate_sinusoid(int sampling_freq, float freq, char amplitude, AudioFile file)
{
   20a1c:	defff104 	addi	sp,sp,-60
   20a20:	dfc00d15 	stw	ra,52(sp)
   20a24:	df000c15 	stw	fp,48(sp)
   20a28:	dc800b15 	stw	r18,44(sp)
   20a2c:	dc400a15 	stw	r17,40(sp)
   20a30:	dc000915 	stw	r16,36(sp)
   20a34:	df000c04 	addi	fp,sp,48
   20a38:	e13ffa15 	stw	r4,-24(fp)
   20a3c:	e17ffb15 	stw	r5,-20(fp)
   20a40:	3005883a 	mov	r2,r6
   20a44:	e1c00215 	stw	r7,8(fp)
   20a48:	e0bffc05 	stb	r2,-16(fp)
	int i, amplitude_factor, samples_in_period, n_samples;
	float phase_factor;
	unsigned int sample;

	n_samples = file.end_address - file.start_address;
   20a4c:	e0800417 	ldw	r2,16(fp)
   20a50:	1007883a 	mov	r3,r2
   20a54:	e0800217 	ldw	r2,8(fp)
   20a58:	1885c83a 	sub	r2,r3,r2
   20a5c:	1005d0ba 	srai	r2,r2,2
   20a60:	e0bff515 	stw	r2,-44(fp)

	phase_factor = 2 * M_PI * freq / sampling_freq;	// I break down the computation because it is too slow
   20a64:	e13ffb17 	ldw	r4,-20(fp)
   20a68:	00273fc0 	call	273fc <__extendsfdf2>
   20a6c:	1011883a 	mov	r8,r2
   20a70:	1813883a 	mov	r9,r3
   20a74:	01951134 	movhi	r6,21572
   20a78:	318b4604 	addi	r6,r6,11544
   20a7c:	01d00674 	movhi	r7,16409
   20a80:	39c87ec4 	addi	r7,r7,8699
   20a84:	4009883a 	mov	r4,r8
   20a88:	480b883a 	mov	r5,r9
   20a8c:	002628c0 	call	2628c <__muldf3>
   20a90:	1009883a 	mov	r4,r2
   20a94:	180b883a 	mov	r5,r3
   20a98:	2021883a 	mov	r16,r4
   20a9c:	2823883a 	mov	r17,r5
   20aa0:	e13ffa17 	ldw	r4,-24(fp)
   20aa4:	00273200 	call	27320 <__floatsidf>
   20aa8:	1009883a 	mov	r4,r2
   20aac:	180b883a 	mov	r5,r3
   20ab0:	200d883a 	mov	r6,r4
   20ab4:	280f883a 	mov	r7,r5
   20ab8:	8009883a 	mov	r4,r16
   20abc:	880b883a 	mov	r5,r17
   20ac0:	002574c0 	call	2574c <__divdf3>
   20ac4:	1009883a 	mov	r4,r2
   20ac8:	180b883a 	mov	r5,r3
   20acc:	2005883a 	mov	r2,r4
   20ad0:	2807883a 	mov	r3,r5
   20ad4:	1009883a 	mov	r4,r2
   20ad8:	180b883a 	mov	r5,r3
   20adc:	002750c0 	call	2750c <__truncdfsf2>
   20ae0:	1007883a 	mov	r3,r2
   20ae4:	e0fff615 	stw	r3,-40(fp)
	amplitude_factor = UINT_MAX*(float)amplitude/100.0;
   20ae8:	e0bffc07 	ldb	r2,-16(fp)
   20aec:	1009883a 	mov	r4,r2
   20af0:	0024d7c0 	call	24d7c <__floatsisf>
   20af4:	1007883a 	mov	r3,r2
   20af8:	0153e034 	movhi	r5,20352
   20afc:	1809883a 	mov	r4,r3
   20b00:	002442c0 	call	2442c <__mulsf3>
   20b04:	1007883a 	mov	r3,r2
   20b08:	1805883a 	mov	r2,r3
   20b0c:	1009883a 	mov	r4,r2
   20b10:	00273fc0 	call	273fc <__extendsfdf2>
   20b14:	1011883a 	mov	r8,r2
   20b18:	1813883a 	mov	r9,r3
   20b1c:	000d883a 	mov	r6,zero
   20b20:	01d01674 	movhi	r7,16473
   20b24:	4009883a 	mov	r4,r8
   20b28:	480b883a 	mov	r5,r9
   20b2c:	002574c0 	call	2574c <__divdf3>
   20b30:	1009883a 	mov	r4,r2
   20b34:	180b883a 	mov	r5,r3
   20b38:	2005883a 	mov	r2,r4
   20b3c:	2807883a 	mov	r3,r5
   20b40:	1009883a 	mov	r4,r2
   20b44:	180b883a 	mov	r5,r3
   20b48:	00272a00 	call	272a0 <__fixdfsi>
   20b4c:	e0bff715 	stw	r2,-36(fp)

	// generates first period of the wave and then copies it (to improve speed since sin() is very slow)
	samples_in_period = sampling_freq/freq;
   20b50:	e13ffa17 	ldw	r4,-24(fp)
   20b54:	0024d7c0 	call	24d7c <__floatsisf>
   20b58:	1007883a 	mov	r3,r2
   20b5c:	e17ffb17 	ldw	r5,-20(fp)
   20b60:	1809883a 	mov	r4,r3
   20b64:	0023e680 	call	23e68 <__divsf3>
   20b68:	1007883a 	mov	r3,r2
   20b6c:	1805883a 	mov	r2,r3
   20b70:	1009883a 	mov	r4,r2
   20b74:	0024d0c0 	call	24d0c <__fixsfsi>
   20b78:	e0bff815 	stw	r2,-32(fp)
	for (i=0; i<samples_in_period; i++)
   20b7c:	e03ff415 	stw	zero,-48(fp)
   20b80:	00002a06 	br	20c2c <generate_sinusoid+0x210>
	{
		file.start_address[i] = amplitude_factor *  sin( phase_factor * i );
   20b84:	e0c00217 	ldw	r3,8(fp)
   20b88:	e0bff417 	ldw	r2,-48(fp)
   20b8c:	1085883a 	add	r2,r2,r2
   20b90:	1085883a 	add	r2,r2,r2
   20b94:	18a5883a 	add	r18,r3,r2
   20b98:	e13ff717 	ldw	r4,-36(fp)
   20b9c:	00273200 	call	27320 <__floatsidf>
   20ba0:	1021883a 	mov	r16,r2
   20ba4:	1823883a 	mov	r17,r3
   20ba8:	e13ff417 	ldw	r4,-48(fp)
   20bac:	0024d7c0 	call	24d7c <__floatsisf>
   20bb0:	1007883a 	mov	r3,r2
   20bb4:	e17ff617 	ldw	r5,-40(fp)
   20bb8:	1809883a 	mov	r4,r3
   20bbc:	002442c0 	call	2442c <__mulsf3>
   20bc0:	1007883a 	mov	r3,r2
   20bc4:	1805883a 	mov	r2,r3
   20bc8:	1009883a 	mov	r4,r2
   20bcc:	00273fc0 	call	273fc <__extendsfdf2>
   20bd0:	100b883a 	mov	r5,r2
   20bd4:	180d883a 	mov	r6,r3
   20bd8:	2809883a 	mov	r4,r5
   20bdc:	300b883a 	mov	r5,r6
   20be0:	00212300 	call	21230 <sin>
   20be4:	1009883a 	mov	r4,r2
   20be8:	180b883a 	mov	r5,r3
   20bec:	200d883a 	mov	r6,r4
   20bf0:	280f883a 	mov	r7,r5
   20bf4:	8009883a 	mov	r4,r16
   20bf8:	880b883a 	mov	r5,r17
   20bfc:	002628c0 	call	2628c <__muldf3>
   20c00:	1009883a 	mov	r4,r2
   20c04:	180b883a 	mov	r5,r3
   20c08:	2005883a 	mov	r2,r4
   20c0c:	2807883a 	mov	r3,r5
   20c10:	1009883a 	mov	r4,r2
   20c14:	180b883a 	mov	r5,r3
   20c18:	00237780 	call	23778 <__fixunsdfsi>
   20c1c:	90800015 	stw	r2,0(r18)
	phase_factor = 2 * M_PI * freq / sampling_freq;	// I break down the computation because it is too slow
	amplitude_factor = UINT_MAX*(float)amplitude/100.0;

	// generates first period of the wave and then copies it (to improve speed since sin() is very slow)
	samples_in_period = sampling_freq/freq;
	for (i=0; i<samples_in_period; i++)
   20c20:	e0bff417 	ldw	r2,-48(fp)
   20c24:	10800044 	addi	r2,r2,1
   20c28:	e0bff415 	stw	r2,-48(fp)
   20c2c:	e0fff417 	ldw	r3,-48(fp)
   20c30:	e0bff817 	ldw	r2,-32(fp)
   20c34:	18bfd316 	blt	r3,r2,20b84 <__alt_mem_SDRAM_controller+0xfc020b84>
	{
		file.start_address[i] = amplitude_factor *  sin( phase_factor * i );
	}

	for(i=samples_in_period; i<n_samples; i++)	// copies it all over
   20c38:	e0bff817 	ldw	r2,-32(fp)
   20c3c:	e0bff415 	stw	r2,-48(fp)
   20c40:	00001306 	br	20c90 <generate_sinusoid+0x274>
	{
		sample = IORD_32DIRECT(file.start_address, (i - samples_in_period)*4);
   20c44:	e0c00217 	ldw	r3,8(fp)
   20c48:	e13ff417 	ldw	r4,-48(fp)
   20c4c:	e0bff817 	ldw	r2,-32(fp)
   20c50:	2085c83a 	sub	r2,r4,r2
   20c54:	1085883a 	add	r2,r2,r2
   20c58:	1085883a 	add	r2,r2,r2
   20c5c:	1885883a 	add	r2,r3,r2
   20c60:	10800037 	ldwio	r2,0(r2)
   20c64:	e0bff915 	stw	r2,-28(fp)
		IOWR_32DIRECT(file.start_address, i*4, sample);
   20c68:	e0c00217 	ldw	r3,8(fp)
   20c6c:	e0bff417 	ldw	r2,-48(fp)
   20c70:	1085883a 	add	r2,r2,r2
   20c74:	1085883a 	add	r2,r2,r2
   20c78:	1885883a 	add	r2,r3,r2
   20c7c:	e0fff917 	ldw	r3,-28(fp)
   20c80:	10c00035 	stwio	r3,0(r2)
	for (i=0; i<samples_in_period; i++)
	{
		file.start_address[i] = amplitude_factor *  sin( phase_factor * i );
	}

	for(i=samples_in_period; i<n_samples; i++)	// copies it all over
   20c84:	e0bff417 	ldw	r2,-48(fp)
   20c88:	10800044 	addi	r2,r2,1
   20c8c:	e0bff415 	stw	r2,-48(fp)
   20c90:	e0fff417 	ldw	r3,-48(fp)
   20c94:	e0bff517 	ldw	r2,-44(fp)
   20c98:	18bfea16 	blt	r3,r2,20c44 <__alt_mem_SDRAM_controller+0xfc020c44>
	{
		sample = IORD_32DIRECT(file.start_address, (i - samples_in_period)*4);
		IOWR_32DIRECT(file.start_address, i*4, sample);
	}
}
   20c9c:	0001883a 	nop
   20ca0:	e6fffd04 	addi	sp,fp,-12
   20ca4:	dfc00417 	ldw	ra,16(sp)
   20ca8:	df000317 	ldw	fp,12(sp)
   20cac:	dc800217 	ldw	r18,8(sp)
   20cb0:	dc400117 	ldw	r17,4(sp)
   20cb4:	dc000017 	ldw	r16,0(sp)
   20cb8:	dec00604 	addi	sp,sp,24
   20cbc:	f800283a 	ret

00020cc0 <play_file>:



// this function plays an audio file trough the output jack (green). To do so it needs to send bursts of data to the outgoing FIFO.
void play_file(AudioFile file, alt_up_audio_dev *audio_device)
{
   20cc0:	defff604 	addi	sp,sp,-40
   20cc4:	dfc00915 	stw	ra,36(sp)
   20cc8:	df000815 	stw	fp,32(sp)
   20ccc:	df000804 	addi	fp,sp,32
   20cd0:	e13ffc15 	stw	r4,-16(fp)
   20cd4:	e17ffd15 	stw	r5,-12(fp)
   20cd8:	e1bffe15 	stw	r6,-8(fp)
   20cdc:	e1ffff15 	stw	r7,-4(fp)
	unsigned int *file_pointer, i, file_size;
	const unsigned int BURST_LENGTH = 100;	// the outgoing FIFO is of 128 elements, if we write burst of 100 at the time there is no distortion (this is an empirical value)
   20ce0:	00801904 	movi	r2,100
   20ce4:	e0bff915 	stw	r2,-28(fp)

	file_size = file.end_address - file.start_address;
   20ce8:	e0bffe17 	ldw	r2,-8(fp)
   20cec:	1007883a 	mov	r3,r2
   20cf0:	e0bffc17 	ldw	r2,-16(fp)
   20cf4:	1885c83a 	sub	r2,r3,r2
   20cf8:	1005d0ba 	srai	r2,r2,2
   20cfc:	e0bffa15 	stw	r2,-24(fp)
	// sends the data, one burst at a time until the end of the file is reached
	for (i=0; i<file_size; i+=BURST_LENGTH)
   20d00:	e03ff815 	stw	zero,-32(fp)
   20d04:	00002f06 	br	20dc4 <play_file+0x104>
	{
		file_pointer = file.start_address + i;
   20d08:	e0fffc17 	ldw	r3,-16(fp)
   20d0c:	e0bff817 	ldw	r2,-32(fp)
   20d10:	1085883a 	add	r2,r2,r2
   20d14:	1085883a 	add	r2,r2,r2
   20d18:	1885883a 	add	r2,r3,r2
   20d1c:	e0bffb15 	stw	r2,-20(fp)
		if (file_size - i > BURST_LENGTH) {
   20d20:	e0fffa17 	ldw	r3,-24(fp)
   20d24:	e0bff817 	ldw	r2,-32(fp)
   20d28:	1885c83a 	sub	r2,r3,r2
   20d2c:	e0fff917 	ldw	r3,-28(fp)
   20d30:	18800b2e 	bgeu	r3,r2,20d60 <play_file+0xa0>
			alt_up_audio_play_r(audio_device, file_pointer, BURST_LENGTH);
   20d34:	e0bff917 	ldw	r2,-28(fp)
   20d38:	100d883a 	mov	r6,r2
   20d3c:	e17ffb17 	ldw	r5,-20(fp)
   20d40:	e1000217 	ldw	r4,8(fp)
   20d44:	0033f200 	call	33f20 <alt_up_audio_play_r>
			alt_up_audio_play_l(audio_device, file_pointer, BURST_LENGTH);
   20d48:	e0bff917 	ldw	r2,-28(fp)
   20d4c:	100d883a 	mov	r6,r2
   20d50:	e17ffb17 	ldw	r5,-20(fp)
   20d54:	e1000217 	ldw	r4,8(fp)
   20d58:	0033f880 	call	33f88 <alt_up_audio_play_l>
   20d5c:	00000e06 	br	20d98 <play_file+0xd8>
		} else {
			alt_up_audio_play_r(audio_device, file_pointer, file_size - i);
   20d60:	e0fffa17 	ldw	r3,-24(fp)
   20d64:	e0bff817 	ldw	r2,-32(fp)
   20d68:	1885c83a 	sub	r2,r3,r2
   20d6c:	100d883a 	mov	r6,r2
   20d70:	e17ffb17 	ldw	r5,-20(fp)
   20d74:	e1000217 	ldw	r4,8(fp)
   20d78:	0033f200 	call	33f20 <alt_up_audio_play_r>
			alt_up_audio_play_l(audio_device, file_pointer, file_size - i);
   20d7c:	e0fffa17 	ldw	r3,-24(fp)
   20d80:	e0bff817 	ldw	r2,-32(fp)
   20d84:	1885c83a 	sub	r2,r3,r2
   20d88:	100d883a 	mov	r6,r2
   20d8c:	e17ffb17 	ldw	r5,-20(fp)
   20d90:	e1000217 	ldw	r4,8(fp)
   20d94:	0033f880 	call	33f88 <alt_up_audio_play_l>
		}
		while(alt_up_audio_write_fifo_space(audio_device, 0)<BURST_LENGTH);	// waits for the FIFO to get empty
   20d98:	0001883a 	nop
   20d9c:	000b883a 	mov	r5,zero
   20da0:	e1000217 	ldw	r4,8(fp)
   20da4:	0033ec00 	call	33ec0 <alt_up_audio_write_fifo_space>
   20da8:	1007883a 	mov	r3,r2
   20dac:	e0bff917 	ldw	r2,-28(fp)
   20db0:	18bffa36 	bltu	r3,r2,20d9c <__alt_mem_SDRAM_controller+0xfc020d9c>
	unsigned int *file_pointer, i, file_size;
	const unsigned int BURST_LENGTH = 100;	// the outgoing FIFO is of 128 elements, if we write burst of 100 at the time there is no distortion (this is an empirical value)

	file_size = file.end_address - file.start_address;
	// sends the data, one burst at a time until the end of the file is reached
	for (i=0; i<file_size; i+=BURST_LENGTH)
   20db4:	e0fff817 	ldw	r3,-32(fp)
   20db8:	e0bff917 	ldw	r2,-28(fp)
   20dbc:	1885883a 	add	r2,r3,r2
   20dc0:	e0bff815 	stw	r2,-32(fp)
   20dc4:	e0fff817 	ldw	r3,-32(fp)
   20dc8:	e0bffa17 	ldw	r2,-24(fp)
   20dcc:	18bfce36 	bltu	r3,r2,20d08 <__alt_mem_SDRAM_controller+0xfc020d08>
			alt_up_audio_play_r(audio_device, file_pointer, file_size - i);
			alt_up_audio_play_l(audio_device, file_pointer, file_size - i);
		}
		while(alt_up_audio_write_fifo_space(audio_device, 0)<BURST_LENGTH);	// waits for the FIFO to get empty
	}
}
   20dd0:	0001883a 	nop
   20dd4:	e037883a 	mov	sp,fp
   20dd8:	dfc00117 	ldw	ra,4(sp)
   20ddc:	df000017 	ldw	fp,0(sp)
   20de0:	dec00204 	addi	sp,sp,8
   20de4:	f800283a 	ret

00020de8 <show_amplitude_on_LEDS>:


// outputs the amplitude on the LEDs
void show_amplitude_on_LEDS(float amplitude)
{
   20de8:	defffd04 	addi	sp,sp,-12
   20dec:	dfc00215 	stw	ra,8(sp)
   20df0:	df000115 	stw	fp,4(sp)
   20df4:	df000104 	addi	fp,sp,4
   20df8:	e13fff15 	stw	r4,-4(fp)
	amplitude = sqrt(amplitude);	// the way we perceive sound is not linear, this is why I take the square root of the amplitude
   20dfc:	e13fff17 	ldw	r4,-4(fp)
   20e00:	00273fc0 	call	273fc <__extendsfdf2>
   20e04:	100b883a 	mov	r5,r2
   20e08:	180d883a 	mov	r6,r3
   20e0c:	2809883a 	mov	r4,r5
   20e10:	300b883a 	mov	r5,r6
   20e14:	00213200 	call	21320 <sqrt>
   20e18:	100b883a 	mov	r5,r2
   20e1c:	180d883a 	mov	r6,r3
   20e20:	2809883a 	mov	r4,r5
   20e24:	300b883a 	mov	r5,r6
   20e28:	002750c0 	call	2750c <__truncdfsf2>
   20e2c:	1007883a 	mov	r3,r2
   20e30:	e0ffff15 	stw	r3,-4(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_LEDS_BASE, (0x01<<((int)(amplitude*PIO_LEDS_NUMBER)))-1);
   20e34:	01504834 	movhi	r5,16672
   20e38:	e13fff17 	ldw	r4,-4(fp)
   20e3c:	002442c0 	call	2442c <__mulsf3>
   20e40:	1007883a 	mov	r3,r2
   20e44:	1805883a 	mov	r2,r3
   20e48:	1009883a 	mov	r4,r2
   20e4c:	0024d0c0 	call	24d0c <__fixsfsi>
   20e50:	1007883a 	mov	r3,r2
   20e54:	00800044 	movi	r2,1
   20e58:	10c4983a 	sll	r2,r2,r3
   20e5c:	10ffffc4 	addi	r3,r2,-1
   20e60:	00800134 	movhi	r2,4
   20e64:	10840404 	addi	r2,r2,4112
   20e68:	10c00035 	stwio	r3,0(r2)
}
   20e6c:	0001883a 	nop
   20e70:	e037883a 	mov	sp,fp
   20e74:	dfc00117 	ldw	ra,4(sp)
   20e78:	df000017 	ldw	fp,0(sp)
   20e7c:	dec00204 	addi	sp,sp,8
   20e80:	f800283a 	ret

00020e84 <average_amplitude>:


// computes the average amplitude of an array of sound samples
float average_amplitude(int *data, int length)
{
   20e84:	defffa04 	addi	sp,sp,-24
   20e88:	dfc00515 	stw	ra,20(sp)
   20e8c:	df000415 	stw	fp,16(sp)
   20e90:	df000404 	addi	fp,sp,16
   20e94:	e13ffe15 	stw	r4,-8(fp)
   20e98:	e17fff15 	stw	r5,-4(fp)
	int i;
	float average_amplitude = 0;
   20e9c:	e03ffd15 	stw	zero,-12(fp)

	// computes the average
	for (i=0; i<length; i++)
   20ea0:	e03ffc15 	stw	zero,-16(fp)
   20ea4:	00002a06 	br	20f50 <average_amplitude+0xcc>
	{
		if (data[i] < 0)
   20ea8:	e0bffc17 	ldw	r2,-16(fp)
   20eac:	1085883a 	add	r2,r2,r2
   20eb0:	1085883a 	add	r2,r2,r2
   20eb4:	1007883a 	mov	r3,r2
   20eb8:	e0bffe17 	ldw	r2,-8(fp)
   20ebc:	10c5883a 	add	r2,r2,r3
   20ec0:	10800017 	ldw	r2,0(r2)
   20ec4:	1000100e 	bge	r2,zero,20f08 <average_amplitude+0x84>
			average_amplitude -= data[i];
   20ec8:	e0bffc17 	ldw	r2,-16(fp)
   20ecc:	1085883a 	add	r2,r2,r2
   20ed0:	1085883a 	add	r2,r2,r2
   20ed4:	1007883a 	mov	r3,r2
   20ed8:	e0bffe17 	ldw	r2,-8(fp)
   20edc:	10c5883a 	add	r2,r2,r3
   20ee0:	10800017 	ldw	r2,0(r2)
   20ee4:	1009883a 	mov	r4,r2
   20ee8:	0024d7c0 	call	24d7c <__floatsisf>
   20eec:	1007883a 	mov	r3,r2
   20ef0:	180b883a 	mov	r5,r3
   20ef4:	e13ffd17 	ldw	r4,-12(fp)
   20ef8:	00248280 	call	24828 <__subsf3>
   20efc:	1007883a 	mov	r3,r2
   20f00:	e0fffd15 	stw	r3,-12(fp)
   20f04:	00000f06 	br	20f44 <average_amplitude+0xc0>
		else
			average_amplitude += data[i];
   20f08:	e0bffc17 	ldw	r2,-16(fp)
   20f0c:	1085883a 	add	r2,r2,r2
   20f10:	1085883a 	add	r2,r2,r2
   20f14:	1007883a 	mov	r3,r2
   20f18:	e0bffe17 	ldw	r2,-8(fp)
   20f1c:	10c5883a 	add	r2,r2,r3
   20f20:	10800017 	ldw	r2,0(r2)
   20f24:	1009883a 	mov	r4,r2
   20f28:	0024d7c0 	call	24d7c <__floatsisf>
   20f2c:	1007883a 	mov	r3,r2
   20f30:	180b883a 	mov	r5,r3
   20f34:	e13ffd17 	ldw	r4,-12(fp)
   20f38:	00239a00 	call	239a0 <__addsf3>
   20f3c:	1007883a 	mov	r3,r2
   20f40:	e0fffd15 	stw	r3,-12(fp)
{
	int i;
	float average_amplitude = 0;

	// computes the average
	for (i=0; i<length; i++)
   20f44:	e0bffc17 	ldw	r2,-16(fp)
   20f48:	10800044 	addi	r2,r2,1
   20f4c:	e0bffc15 	stw	r2,-16(fp)
   20f50:	e0fffc17 	ldw	r3,-16(fp)
   20f54:	e0bfff17 	ldw	r2,-4(fp)
   20f58:	18bfd316 	blt	r3,r2,20ea8 <__alt_mem_SDRAM_controller+0xfc020ea8>
		else
			average_amplitude += data[i];
	}

	// normalizes to a range from 0 to 1
	average_amplitude /= INT_MAX;
   20f5c:	0153c034 	movhi	r5,20224
   20f60:	e13ffd17 	ldw	r4,-12(fp)
   20f64:	0023e680 	call	23e68 <__divsf3>
   20f68:	1007883a 	mov	r3,r2
   20f6c:	e0fffd15 	stw	r3,-12(fp)
	average_amplitude /= length;
   20f70:	e13fff17 	ldw	r4,-4(fp)
   20f74:	0024d7c0 	call	24d7c <__floatsisf>
   20f78:	1007883a 	mov	r3,r2
   20f7c:	180b883a 	mov	r5,r3
   20f80:	e13ffd17 	ldw	r4,-12(fp)
   20f84:	0023e680 	call	23e68 <__divsf3>
   20f88:	1007883a 	mov	r3,r2
   20f8c:	e0fffd15 	stw	r3,-12(fp)
	if (average_amplitude < 0)
   20f90:	000b883a 	mov	r5,zero
   20f94:	e13ffd17 	ldw	r4,-12(fp)
   20f98:	00243640 	call	24364 <__lesf2>
   20f9c:	1000030e 	bge	r2,zero,20fac <average_amplitude+0x128>
		average_amplitude *= -1;
   20fa0:	e0bffd17 	ldw	r2,-12(fp)
   20fa4:	10a0003c 	xorhi	r2,r2,32768
   20fa8:	e0bffd15 	stw	r2,-12(fp)

	return average_amplitude;
   20fac:	e0bffd17 	ldw	r2,-12(fp)
   20fb0:	1007883a 	mov	r3,r2
}
   20fb4:	1805883a 	mov	r2,r3
   20fb8:	e037883a 	mov	sp,fp
   20fbc:	dfc00117 	ldw	ra,4(sp)
   20fc0:	df000017 	ldw	fp,0(sp)
   20fc4:	dec00204 	addi	sp,sp,8
   20fc8:	f800283a 	ret

00020fcc <sender_mailbox_callback>:



void sender_mailbox_callback(void* report, int status) {
   20fcc:	defffc04 	addi	sp,sp,-16
   20fd0:	dfc00315 	stw	ra,12(sp)
   20fd4:	df000215 	stw	fp,8(sp)
   20fd8:	df000204 	addi	fp,sp,8
   20fdc:	e13ffe15 	stw	r4,-8(fp)
   20fe0:	e17fff15 	stw	r5,-4(fp)
	if (status) {
   20fe4:	e0bfff17 	ldw	r2,-4(fp)
   20fe8:	10000426 	beq	r2,zero,20ffc <sender_mailbox_callback+0x30>
		printf("Transfer done\n");
   20fec:	010000f4 	movhi	r4,3
   20ff0:	2117da04 	addi	r4,r4,24424
   20ff4:	00278540 	call	27854 <puts>
	} else {
		printf("error in transfer\n");
	}
}
   20ff8:	00000306 	br	21008 <sender_mailbox_callback+0x3c>

void sender_mailbox_callback(void* report, int status) {
	if (status) {
		printf("Transfer done\n");
	} else {
		printf("error in transfer\n");
   20ffc:	010000f4 	movhi	r4,3
   21000:	2117de04 	addi	r4,r4,24440
   21004:	00278540 	call	27854 <puts>
	}
}
   21008:	0001883a 	nop
   2100c:	e037883a 	mov	sp,fp
   21010:	dfc00117 	ldw	ra,4(sp)
   21014:	df000017 	ldw	fp,0(sp)
   21018:	dec00204 	addi	sp,sp,8
   2101c:	f800283a 	ret

00021020 <receiver_mailbox_callback>:



void receiver_mailbox_callback(void* message){
   21020:	defffb04 	addi	sp,sp,-20
   21024:	dfc00415 	stw	ra,16(sp)
   21028:	df000315 	stw	fp,12(sp)
   2102c:	df000304 	addi	fp,sp,12
   21030:	e13fff15 	stw	r4,-4(fp)
	int i;
	alt_u32* data = (alt_u32*)message;	// cast from void* to alt_u32*
   21034:	e0bfff17 	ldw	r2,-4(fp)
   21038:	e0bffe15 	stw	r2,-8(fp)

	//IORD_ALTERA_AVALON_MAILBOX_CMD(MAILBOX_TO_SOUND_ACQUISITION_BASE);
	if (message != NULL) {
   2103c:	e0bfff17 	ldw	r2,-4(fp)
   21040:	10002d26 	beq	r2,zero,210f8 <receiver_mailbox_callback+0xd8>
		for (i=0; i<RECORDING_MAX_NUMBER; i++)
   21044:	e03ffd15 	stw	zero,-12(fp)
   21048:	00000c06 	br	2107c <receiver_mailbox_callback+0x5c>
			if (recording[i].start_address ==  (unsigned int*)data[0])
   2104c:	00800134 	movhi	r2,4
   21050:	10a77c04 	addi	r2,r2,-25104
   21054:	e0fffd17 	ldw	r3,-12(fp)
   21058:	1806913a 	slli	r3,r3,4
   2105c:	10c5883a 	add	r2,r2,r3
   21060:	10800017 	ldw	r2,0(r2)
   21064:	e0fffe17 	ldw	r3,-8(fp)
   21068:	18c00017 	ldw	r3,0(r3)
   2106c:	10c00726 	beq	r2,r3,2108c <receiver_mailbox_callback+0x6c>
	int i;
	alt_u32* data = (alt_u32*)message;	// cast from void* to alt_u32*

	//IORD_ALTERA_AVALON_MAILBOX_CMD(MAILBOX_TO_SOUND_ACQUISITION_BASE);
	if (message != NULL) {
		for (i=0; i<RECORDING_MAX_NUMBER; i++)
   21070:	e0bffd17 	ldw	r2,-12(fp)
   21074:	10800044 	addi	r2,r2,1
   21078:	e0bffd15 	stw	r2,-12(fp)
   2107c:	e0bffd17 	ldw	r2,-12(fp)
   21080:	108000d0 	cmplti	r2,r2,3
   21084:	103ff11e 	bne	r2,zero,2104c <__alt_mem_SDRAM_controller+0xfc02104c>
   21088:	00000106 	br	21090 <receiver_mailbox_callback+0x70>
			if (recording[i].start_address ==  (unsigned int*)data[0])
				break;
   2108c:	0001883a 	nop
		if (i >= RECORDING_MAX_NUMBER)
   21090:	e0bffd17 	ldw	r2,-12(fp)
   21094:	108000d0 	cmplti	r2,r2,3
   21098:	1000041e 	bne	r2,zero,210ac <receiver_mailbox_callback+0x8c>
			printf("Error receiving file information from other processor\n");
   2109c:	010000f4 	movhi	r4,3
   210a0:	2117e304 	addi	r4,r4,24460
   210a4:	00278540 	call	27854 <puts>
   210a8:	00000806 	br	210cc <receiver_mailbox_callback+0xac>
		else
			recording[i].processed = true;
   210ac:	00800134 	movhi	r2,4
   210b0:	10a77c04 	addi	r2,r2,-25104
   210b4:	e0fffd17 	ldw	r3,-12(fp)
   210b8:	1806913a 	slli	r3,r3,4
   210bc:	10c5883a 	add	r2,r2,r3
   210c0:	10800304 	addi	r2,r2,12
   210c4:	00c00044 	movi	r3,1
   210c8:	10c00005 	stb	r3,0(r2)

		printf("Received processed file information: START ADDRESS 0x%lx \t END: 0x%lx \n\n", data[0], data[1]);
   210cc:	e0bffe17 	ldw	r2,-8(fp)
   210d0:	10c00017 	ldw	r3,0(r2)
   210d4:	e0bffe17 	ldw	r2,-8(fp)
   210d8:	10800104 	addi	r2,r2,4
   210dc:	10800017 	ldw	r2,0(r2)
   210e0:	100d883a 	mov	r6,r2
   210e4:	180b883a 	mov	r5,r3
   210e8:	010000f4 	movhi	r4,3
   210ec:	2117f104 	addi	r4,r4,24516
   210f0:	00277580 	call	27758 <printf>
	} else {
		printf("Incomplete receive\n");
	}
}
   210f4:	00000306 	br	21104 <receiver_mailbox_callback+0xe4>
		else
			recording[i].processed = true;

		printf("Received processed file information: START ADDRESS 0x%lx \t END: 0x%lx \n\n", data[0], data[1]);
	} else {
		printf("Incomplete receive\n");
   210f8:	010000f4 	movhi	r4,3
   210fc:	21180404 	addi	r4,r4,24592
   21100:	00278540 	call	27854 <puts>
	}
}
   21104:	0001883a 	nop
   21108:	e037883a 	mov	sp,fp
   2110c:	dfc00117 	ldw	ra,4(sp)
   21110:	df000017 	ldw	fp,0(sp)
   21114:	dec00204 	addi	sp,sp,8
   21118:	f800283a 	ret

0002111c <show_state_on_7_segments>:


void show_state_on_7_segments()
{
   2111c:	defffe04 	addi	sp,sp,-8
   21120:	df000115 	stw	fp,4(sp)
   21124:	df000104 	addi	fp,sp,4
	unsigned int output = 0xFFFFFFFF;
   21128:	00bfffc4 	movi	r2,-1
   2112c:	e0bfff15 	stw	r2,-4(fp)

	if (recording_index == 0)
   21130:	d0a00017 	ldw	r2,-32768(gp)
   21134:	1000061e 	bne	r2,zero,21150 <show_state_on_7_segments+0x34>
		output = output & 0b1111111111111111111111111001;
   21138:	e0ffff17 	ldw	r3,-4(fp)
   2113c:	00840034 	movhi	r2,4096
   21140:	10bffe44 	addi	r2,r2,-7
   21144:	1884703a 	and	r2,r3,r2
   21148:	e0bfff15 	stw	r2,-4(fp)
   2114c:	00001106 	br	21194 <show_state_on_7_segments+0x78>
	else if (recording_index == 1)
   21150:	d0a00017 	ldw	r2,-32768(gp)
   21154:	10800058 	cmpnei	r2,r2,1
   21158:	1000061e 	bne	r2,zero,21174 <show_state_on_7_segments+0x58>
		output = output & 0b1111111111111111111110100100;
   2115c:	e0ffff17 	ldw	r3,-4(fp)
   21160:	00840034 	movhi	r2,4096
   21164:	10bfe904 	addi	r2,r2,-92
   21168:	1884703a 	and	r2,r3,r2
   2116c:	e0bfff15 	stw	r2,-4(fp)
   21170:	00000806 	br	21194 <show_state_on_7_segments+0x78>
	else if (recording_index == 2)
   21174:	d0a00017 	ldw	r2,-32768(gp)
   21178:	10800098 	cmpnei	r2,r2,2
   2117c:	1000051e 	bne	r2,zero,21194 <show_state_on_7_segments+0x78>
		output = output & 0b1111111111111111111110110000;
   21180:	e0ffff17 	ldw	r3,-4(fp)
   21184:	00840034 	movhi	r2,4096
   21188:	10bfec04 	addi	r2,r2,-80
   2118c:	1884703a 	and	r2,r3,r2
   21190:	e0bfff15 	stw	r2,-4(fp)

	if (recording[0].processed)
   21194:	00800134 	movhi	r2,4
   21198:	10a77c04 	addi	r2,r2,-25104
   2119c:	10800303 	ldbu	r2,12(r2)
   211a0:	10803fcc 	andi	r2,r2,255
   211a4:	10000526 	beq	r2,zero,211bc <show_state_on_7_segments+0xa0>
		output = output & 0b1000000111111111111111111111;
   211a8:	e0ffff17 	ldw	r3,-4(fp)
   211ac:	00820834 	movhi	r2,2080
   211b0:	10bfffc4 	addi	r2,r2,-1
   211b4:	1884703a 	and	r2,r3,r2
   211b8:	e0bfff15 	stw	r2,-4(fp)
	if (recording[1].processed)
   211bc:	00800134 	movhi	r2,4
   211c0:	10a77c04 	addi	r2,r2,-25104
   211c4:	10800703 	ldbu	r2,28(r2)
   211c8:	10803fcc 	andi	r2,r2,255
   211cc:	10000526 	beq	r2,zero,211e4 <show_state_on_7_segments+0xc8>
		output = output & 0b1111111100000011111111111111;
   211d0:	e0ffff17 	ldw	r3,-4(fp)
   211d4:	0083fc34 	movhi	r2,4080
   211d8:	108fffc4 	addi	r2,r2,16383
   211dc:	1884703a 	and	r2,r3,r2
   211e0:	e0bfff15 	stw	r2,-4(fp)
	if (recording[2].processed)
   211e4:	00800134 	movhi	r2,4
   211e8:	10a77c04 	addi	r2,r2,-25104
   211ec:	10800b03 	ldbu	r2,44(r2)
   211f0:	10803fcc 	andi	r2,r2,255
   211f4:	10000526 	beq	r2,zero,2120c <show_state_on_7_segments+0xf0>
		output = output & 0b1111111111111110000001111111;
   211f8:	e0ffff17 	ldw	r3,-4(fp)
   211fc:	00840034 	movhi	r2,4096
   21200:	10b81fc4 	addi	r2,r2,-8065
   21204:	1884703a 	and	r2,r3,r2
   21208:	e0bfff15 	stw	r2,-4(fp)

	IOWR_ALTERA_AVALON_PIO_DATA(PIO_7_SEGMENTS_BASE, output);
   2120c:	e0ffff17 	ldw	r3,-4(fp)
   21210:	00800134 	movhi	r2,4
   21214:	10840004 	addi	r2,r2,4096
   21218:	10c00035 	stwio	r3,0(r2)
}
   2121c:	0001883a 	nop
   21220:	e037883a 	mov	sp,fp
   21224:	df000017 	ldw	fp,0(sp)
   21228:	dec00104 	addi	sp,sp,4
   2122c:	f800283a 	ret

00021230 <sin>:
   21230:	00a00034 	movhi	r2,32768
   21234:	defffa04 	addi	sp,sp,-24
   21238:	10bfffc4 	addi	r2,r2,-1
   2123c:	00cffa74 	movhi	r3,16361
   21240:	dfc00515 	stw	ra,20(sp)
   21244:	2884703a 	and	r2,r5,r2
   21248:	18c87ec4 	addi	r3,r3,8699
   2124c:	1880180e 	bge	r3,r2,212b0 <sin+0x80>
   21250:	00dffc34 	movhi	r3,32752
   21254:	18ffffc4 	addi	r3,r3,-1
   21258:	1880060e 	bge	r3,r2,21274 <sin+0x44>
   2125c:	280f883a 	mov	r7,r5
   21260:	200d883a 	mov	r6,r4
   21264:	00269a40 	call	269a4 <__subdf3>
   21268:	dfc00517 	ldw	ra,20(sp)
   2126c:	dec00604 	addi	sp,sp,24
   21270:	f800283a 	ret
   21274:	d9800104 	addi	r6,sp,4
   21278:	00214500 	call	21450 <__ieee754_rem_pio2>
   2127c:	108000cc 	andi	r2,r2,3
   21280:	00c00044 	movi	r3,1
   21284:	10c01926 	beq	r2,r3,212ec <sin+0xbc>
   21288:	01000084 	movi	r4,2
   2128c:	11000f26 	beq	r2,r4,212cc <sin+0x9c>
   21290:	10001c26 	beq	r2,zero,21304 <sin+0xd4>
   21294:	d9800317 	ldw	r6,12(sp)
   21298:	d9c00417 	ldw	r7,16(sp)
   2129c:	d9000117 	ldw	r4,4(sp)
   212a0:	d9400217 	ldw	r5,8(sp)
   212a4:	0021e440 	call	21e44 <__kernel_cos>
   212a8:	18e0003c 	xorhi	r3,r3,32768
   212ac:	003fee06 	br	21268 <__alt_mem_SDRAM_controller+0xfc021268>
   212b0:	d8000015 	stw	zero,0(sp)
   212b4:	000d883a 	mov	r6,zero
   212b8:	000f883a 	mov	r7,zero
   212bc:	00230780 	call	23078 <__kernel_sin>
   212c0:	dfc00517 	ldw	ra,20(sp)
   212c4:	dec00604 	addi	sp,sp,24
   212c8:	f800283a 	ret
   212cc:	d9800317 	ldw	r6,12(sp)
   212d0:	d9c00417 	ldw	r7,16(sp)
   212d4:	d9000117 	ldw	r4,4(sp)
   212d8:	d9400217 	ldw	r5,8(sp)
   212dc:	d8c00015 	stw	r3,0(sp)
   212e0:	00230780 	call	23078 <__kernel_sin>
   212e4:	18e0003c 	xorhi	r3,r3,32768
   212e8:	003fdf06 	br	21268 <__alt_mem_SDRAM_controller+0xfc021268>
   212ec:	d9800317 	ldw	r6,12(sp)
   212f0:	d9c00417 	ldw	r7,16(sp)
   212f4:	d9000117 	ldw	r4,4(sp)
   212f8:	d9400217 	ldw	r5,8(sp)
   212fc:	0021e440 	call	21e44 <__kernel_cos>
   21300:	003fd906 	br	21268 <__alt_mem_SDRAM_controller+0xfc021268>
   21304:	d9800317 	ldw	r6,12(sp)
   21308:	d9c00417 	ldw	r7,16(sp)
   2130c:	d9000117 	ldw	r4,4(sp)
   21310:	d9400217 	ldw	r5,8(sp)
   21314:	d8c00015 	stw	r3,0(sp)
   21318:	00230780 	call	23078 <__kernel_sin>
   2131c:	003fd206 	br	21268 <__alt_mem_SDRAM_controller+0xfc021268>

00021320 <sqrt>:
   21320:	defff104 	addi	sp,sp,-60
   21324:	dd000d15 	stw	r20,52(sp)
   21328:	05000134 	movhi	r20,4
   2132c:	dcc00c15 	stw	r19,48(sp)
   21330:	dc800b15 	stw	r18,44(sp)
   21334:	dc400a15 	stw	r17,40(sp)
   21338:	dc000915 	stw	r16,36(sp)
   2133c:	dfc00e15 	stw	ra,56(sp)
   21340:	a5204d04 	addi	r20,r20,-32460
   21344:	2027883a 	mov	r19,r4
   21348:	2825883a 	mov	r18,r5
   2134c:	0021bbc0 	call	21bbc <__ieee754_sqrt>
   21350:	1821883a 	mov	r16,r3
   21354:	a0c00017 	ldw	r3,0(r20)
   21358:	1023883a 	mov	r17,r2
   2135c:	00bfffc4 	movi	r2,-1
   21360:	18800a26 	beq	r3,r2,2138c <sqrt+0x6c>
   21364:	9809883a 	mov	r4,r19
   21368:	900b883a 	mov	r5,r18
   2136c:	00235440 	call	23544 <__fpclassifyd>
   21370:	10000626 	beq	r2,zero,2138c <sqrt+0x6c>
   21374:	000d883a 	mov	r6,zero
   21378:	000f883a 	mov	r7,zero
   2137c:	9809883a 	mov	r4,r19
   21380:	900b883a 	mov	r5,r18
   21384:	00261980 	call	26198 <__ledf2>
   21388:	10000a16 	blt	r2,zero,213b4 <sqrt+0x94>
   2138c:	8805883a 	mov	r2,r17
   21390:	8007883a 	mov	r3,r16
   21394:	dfc00e17 	ldw	ra,56(sp)
   21398:	dd000d17 	ldw	r20,52(sp)
   2139c:	dcc00c17 	ldw	r19,48(sp)
   213a0:	dc800b17 	ldw	r18,44(sp)
   213a4:	dc400a17 	ldw	r17,40(sp)
   213a8:	dc000917 	ldw	r16,36(sp)
   213ac:	dec00f04 	addi	sp,sp,60
   213b0:	f800283a 	ret
   213b4:	00800044 	movi	r2,1
   213b8:	d8800015 	stw	r2,0(sp)
   213bc:	a4000017 	ldw	r16,0(r20)
   213c0:	008000f4 	movhi	r2,3
   213c4:	10980904 	addi	r2,r2,24612
   213c8:	d8800115 	stw	r2,4(sp)
   213cc:	d8000815 	stw	zero,32(sp)
   213d0:	dcc00415 	stw	r19,16(sp)
   213d4:	dc800515 	stw	r18,20(sp)
   213d8:	dcc00215 	stw	r19,8(sp)
   213dc:	dc800315 	stw	r18,12(sp)
   213e0:	80000a1e 	bne	r16,zero,2140c <sqrt+0xec>
   213e4:	d8000615 	stw	zero,24(sp)
   213e8:	d8000715 	stw	zero,28(sp)
   213ec:	d809883a 	mov	r4,sp
   213f0:	00235b80 	call	235b8 <matherr>
   213f4:	10000e26 	beq	r2,zero,21430 <sqrt+0x110>
   213f8:	d8800817 	ldw	r2,32(sp)
   213fc:	1000101e 	bne	r2,zero,21440 <sqrt+0x120>
   21400:	d8800617 	ldw	r2,24(sp)
   21404:	d8c00717 	ldw	r3,28(sp)
   21408:	003fe206 	br	21394 <__alt_mem_SDRAM_controller+0xfc021394>
   2140c:	000d883a 	mov	r6,zero
   21410:	000f883a 	mov	r7,zero
   21414:	0009883a 	mov	r4,zero
   21418:	000b883a 	mov	r5,zero
   2141c:	002574c0 	call	2574c <__divdf3>
   21420:	d8800615 	stw	r2,24(sp)
   21424:	d8c00715 	stw	r3,28(sp)
   21428:	00800084 	movi	r2,2
   2142c:	80bfef1e 	bne	r16,r2,213ec <__alt_mem_SDRAM_controller+0xfc0213ec>
   21430:	00277180 	call	27718 <__errno>
   21434:	00c00844 	movi	r3,33
   21438:	10c00015 	stw	r3,0(r2)
   2143c:	003fee06 	br	213f8 <__alt_mem_SDRAM_controller+0xfc0213f8>
   21440:	00277180 	call	27718 <__errno>
   21444:	d8c00817 	ldw	r3,32(sp)
   21448:	10c00015 	stw	r3,0(r2)
   2144c:	003fec06 	br	21400 <__alt_mem_SDRAM_controller+0xfc021400>

00021450 <__ieee754_rem_pio2>:
   21450:	02200034 	movhi	r8,32768
   21454:	deffea04 	addi	sp,sp,-88
   21458:	423fffc4 	addi	r8,r8,-1
   2145c:	00cffa74 	movhi	r3,16361
   21460:	ddc01315 	stw	r23,76(sp)
   21464:	dc400d15 	stw	r17,52(sp)
   21468:	dfc01515 	stw	ra,84(sp)
   2146c:	df001415 	stw	fp,80(sp)
   21470:	dd801215 	stw	r22,72(sp)
   21474:	dd401115 	stw	r21,68(sp)
   21478:	dd001015 	stw	r20,64(sp)
   2147c:	dcc00f15 	stw	r19,60(sp)
   21480:	dc800e15 	stw	r18,56(sp)
   21484:	dc000c15 	stw	r16,48(sp)
   21488:	2a2e703a 	and	r23,r5,r8
   2148c:	18c87ec4 	addi	r3,r3,8699
   21490:	2823883a 	mov	r17,r5
   21494:	1dc0790e 	bge	r3,r23,2167c <__ieee754_rem_pio2+0x22c>
   21498:	009000f4 	movhi	r2,16387
   2149c:	10b65ec4 	addi	r2,r2,-9861
   214a0:	3021883a 	mov	r16,r6
   214a4:	2027883a 	mov	r19,r4
   214a8:	15c02316 	blt	r2,r23,21538 <__ieee754_rem_pio2+0xe8>
   214ac:	01cffe74 	movhi	r7,16377
   214b0:	39c87ec4 	addi	r7,r7,8699
   214b4:	01951034 	movhi	r6,21568
   214b8:	01417a0e 	bge	zero,r5,21aa4 <__ieee754_rem_pio2+0x654>
   214bc:	00269a40 	call	269a4 <__subdf3>
   214c0:	1025883a 	mov	r18,r2
   214c4:	008ffe74 	movhi	r2,16377
   214c8:	10887ec4 	addi	r2,r2,8699
   214cc:	1823883a 	mov	r17,r3
   214d0:	b8808426 	beq	r23,r2,216e4 <__ieee754_rem_pio2+0x294>
   214d4:	018698b4 	movhi	r6,6754
   214d8:	01cf7474 	movhi	r7,15825
   214dc:	3198cc44 	addi	r6,r6,25393
   214e0:	39ed1844 	addi	r7,r7,-19359
   214e4:	9009883a 	mov	r4,r18
   214e8:	180b883a 	mov	r5,r3
   214ec:	00269a40 	call	269a4 <__subdf3>
   214f0:	100d883a 	mov	r6,r2
   214f4:	180f883a 	mov	r7,r3
   214f8:	9009883a 	mov	r4,r18
   214fc:	880b883a 	mov	r5,r17
   21500:	80800015 	stw	r2,0(r16)
   21504:	80c00115 	stw	r3,4(r16)
   21508:	00269a40 	call	269a4 <__subdf3>
   2150c:	018698b4 	movhi	r6,6754
   21510:	01cf7474 	movhi	r7,15825
   21514:	3198cc44 	addi	r6,r6,25393
   21518:	39ed1844 	addi	r7,r7,-19359
   2151c:	1009883a 	mov	r4,r2
   21520:	180b883a 	mov	r5,r3
   21524:	00269a40 	call	269a4 <__subdf3>
   21528:	80800215 	stw	r2,8(r16)
   2152c:	80c00315 	stw	r3,12(r16)
   21530:	00800044 	movi	r2,1
   21534:	00005606 	br	21690 <__ieee754_rem_pio2+0x240>
   21538:	00904e74 	movhi	r2,16697
   2153c:	10887ec4 	addi	r2,r2,8699
   21540:	15c0830e 	bge	r2,r23,21750 <__ieee754_rem_pio2+0x300>
   21544:	009ffc34 	movhi	r2,32752
   21548:	10bfffc4 	addi	r2,r2,-1
   2154c:	15c05c16 	blt	r2,r23,216c0 <__ieee754_rem_pio2+0x270>
   21550:	b829d53a 	srai	r20,r23,20
   21554:	a53efa84 	addi	r20,r20,-1046
   21558:	a024953a 	slli	r18,r20,20
   2155c:	bca5c83a 	sub	r18,r23,r18
   21560:	900b883a 	mov	r5,r18
   21564:	00272a00 	call	272a0 <__fixdfsi>
   21568:	1009883a 	mov	r4,r2
   2156c:	00273200 	call	27320 <__floatsidf>
   21570:	9809883a 	mov	r4,r19
   21574:	900b883a 	mov	r5,r18
   21578:	100d883a 	mov	r6,r2
   2157c:	180f883a 	mov	r7,r3
   21580:	d8800215 	stw	r2,8(sp)
   21584:	d8c00315 	stw	r3,12(sp)
   21588:	00269a40 	call	269a4 <__subdf3>
   2158c:	000d883a 	mov	r6,zero
   21590:	01d05c34 	movhi	r7,16752
   21594:	1009883a 	mov	r4,r2
   21598:	180b883a 	mov	r5,r3
   2159c:	002628c0 	call	2628c <__muldf3>
   215a0:	180b883a 	mov	r5,r3
   215a4:	1009883a 	mov	r4,r2
   215a8:	182b883a 	mov	r21,r3
   215ac:	102d883a 	mov	r22,r2
   215b0:	00272a00 	call	272a0 <__fixdfsi>
   215b4:	1009883a 	mov	r4,r2
   215b8:	00273200 	call	27320 <__floatsidf>
   215bc:	100d883a 	mov	r6,r2
   215c0:	180f883a 	mov	r7,r3
   215c4:	b009883a 	mov	r4,r22
   215c8:	a80b883a 	mov	r5,r21
   215cc:	1027883a 	mov	r19,r2
   215d0:	1825883a 	mov	r18,r3
   215d4:	d8800415 	stw	r2,16(sp)
   215d8:	d8c00515 	stw	r3,20(sp)
   215dc:	00269a40 	call	269a4 <__subdf3>
   215e0:	000d883a 	mov	r6,zero
   215e4:	01d05c34 	movhi	r7,16752
   215e8:	1009883a 	mov	r4,r2
   215ec:	180b883a 	mov	r5,r3
   215f0:	002628c0 	call	2628c <__muldf3>
   215f4:	000d883a 	mov	r6,zero
   215f8:	000f883a 	mov	r7,zero
   215fc:	1009883a 	mov	r4,r2
   21600:	180b883a 	mov	r5,r3
   21604:	d8800615 	stw	r2,24(sp)
   21608:	d8c00715 	stw	r3,28(sp)
   2160c:	00260340 	call	26034 <__eqdf2>
   21610:	1001431e 	bne	r2,zero,21b20 <__ieee754_rem_pio2+0x6d0>
   21614:	000f883a 	mov	r7,zero
   21618:	000d883a 	mov	r6,zero
   2161c:	9809883a 	mov	r4,r19
   21620:	900b883a 	mov	r5,r18
   21624:	00260340 	call	26034 <__eqdf2>
   21628:	100f003a 	cmpeq	r7,r2,zero
   2162c:	00800084 	movi	r2,2
   21630:	11cfc83a 	sub	r7,r2,r7
   21634:	00800084 	movi	r2,2
   21638:	d8800015 	stw	r2,0(sp)
   2163c:	008000f4 	movhi	r2,3
   21640:	10982b04 	addi	r2,r2,24748
   21644:	d8800115 	stw	r2,4(sp)
   21648:	a00d883a 	mov	r6,r20
   2164c:	800b883a 	mov	r5,r16
   21650:	d9000204 	addi	r4,sp,8
   21654:	00222e80 	call	222e8 <__kernel_rem_pio2>
   21658:	88000d0e 	bge	r17,zero,21690 <__ieee754_rem_pio2+0x240>
   2165c:	81000117 	ldw	r4,4(r16)
   21660:	80c00317 	ldw	r3,12(r16)
   21664:	0085c83a 	sub	r2,zero,r2
   21668:	2120003c 	xorhi	r4,r4,32768
   2166c:	18e0003c 	xorhi	r3,r3,32768
   21670:	81000115 	stw	r4,4(r16)
   21674:	80c00315 	stw	r3,12(r16)
   21678:	00000506 	br	21690 <__ieee754_rem_pio2+0x240>
   2167c:	31000015 	stw	r4,0(r6)
   21680:	31400115 	stw	r5,4(r6)
   21684:	30000215 	stw	zero,8(r6)
   21688:	30000315 	stw	zero,12(r6)
   2168c:	0005883a 	mov	r2,zero
   21690:	dfc01517 	ldw	ra,84(sp)
   21694:	df001417 	ldw	fp,80(sp)
   21698:	ddc01317 	ldw	r23,76(sp)
   2169c:	dd801217 	ldw	r22,72(sp)
   216a0:	dd401117 	ldw	r21,68(sp)
   216a4:	dd001017 	ldw	r20,64(sp)
   216a8:	dcc00f17 	ldw	r19,60(sp)
   216ac:	dc800e17 	ldw	r18,56(sp)
   216b0:	dc400d17 	ldw	r17,52(sp)
   216b4:	dc000c17 	ldw	r16,48(sp)
   216b8:	dec01604 	addi	sp,sp,88
   216bc:	f800283a 	ret
   216c0:	200d883a 	mov	r6,r4
   216c4:	280f883a 	mov	r7,r5
   216c8:	00269a40 	call	269a4 <__subdf3>
   216cc:	80800215 	stw	r2,8(r16)
   216d0:	80800015 	stw	r2,0(r16)
   216d4:	80c00315 	stw	r3,12(r16)
   216d8:	80c00115 	stw	r3,4(r16)
   216dc:	0005883a 	mov	r2,zero
   216e0:	003feb06 	br	21690 <__alt_mem_SDRAM_controller+0xfc021690>
   216e4:	01cf7474 	movhi	r7,15825
   216e8:	9009883a 	mov	r4,r18
   216ec:	39ed1844 	addi	r7,r7,-19359
   216f0:	01869834 	movhi	r6,6752
   216f4:	180b883a 	mov	r5,r3
   216f8:	00269a40 	call	269a4 <__subdf3>
   216fc:	018b80f4 	movhi	r6,11779
   21700:	01cee8f4 	movhi	r7,15267
   21704:	319c1cc4 	addi	r6,r6,28787
   21708:	39c66284 	addi	r7,r7,6538
   2170c:	1009883a 	mov	r4,r2
   21710:	180b883a 	mov	r5,r3
   21714:	1025883a 	mov	r18,r2
   21718:	1823883a 	mov	r17,r3
   2171c:	00269a40 	call	269a4 <__subdf3>
   21720:	100d883a 	mov	r6,r2
   21724:	180f883a 	mov	r7,r3
   21728:	9009883a 	mov	r4,r18
   2172c:	880b883a 	mov	r5,r17
   21730:	80800015 	stw	r2,0(r16)
   21734:	80c00115 	stw	r3,4(r16)
   21738:	00269a40 	call	269a4 <__subdf3>
   2173c:	018b80f4 	movhi	r6,11779
   21740:	01cee8f4 	movhi	r7,15267
   21744:	319c1cc4 	addi	r6,r6,28787
   21748:	39c66284 	addi	r7,r7,6538
   2174c:	003f7306 	br	2151c <__alt_mem_SDRAM_controller+0xfc02151c>
   21750:	00233440 	call	23344 <fabs>
   21754:	019b72b4 	movhi	r6,28106
   21758:	01cff934 	movhi	r7,16356
   2175c:	31b220c4 	addi	r6,r6,-14205
   21760:	39d7cc04 	addi	r7,r7,24368
   21764:	1009883a 	mov	r4,r2
   21768:	180b883a 	mov	r5,r3
   2176c:	102d883a 	mov	r22,r2
   21770:	182b883a 	mov	r21,r3
   21774:	002628c0 	call	2628c <__muldf3>
   21778:	000d883a 	mov	r6,zero
   2177c:	01cff834 	movhi	r7,16352
   21780:	1009883a 	mov	r4,r2
   21784:	180b883a 	mov	r5,r3
   21788:	0024ea00 	call	24ea0 <__adddf3>
   2178c:	180b883a 	mov	r5,r3
   21790:	1009883a 	mov	r4,r2
   21794:	00272a00 	call	272a0 <__fixdfsi>
   21798:	1009883a 	mov	r4,r2
   2179c:	1025883a 	mov	r18,r2
   217a0:	00273200 	call	27320 <__floatsidf>
   217a4:	01cffe74 	movhi	r7,16377
   217a8:	39c87ec4 	addi	r7,r7,8699
   217ac:	01951034 	movhi	r6,21568
   217b0:	1009883a 	mov	r4,r2
   217b4:	180b883a 	mov	r5,r3
   217b8:	1029883a 	mov	r20,r2
   217bc:	1827883a 	mov	r19,r3
   217c0:	002628c0 	call	2628c <__muldf3>
   217c4:	b009883a 	mov	r4,r22
   217c8:	a80b883a 	mov	r5,r21
   217cc:	100d883a 	mov	r6,r2
   217d0:	180f883a 	mov	r7,r3
   217d4:	00269a40 	call	269a4 <__subdf3>
   217d8:	018698b4 	movhi	r6,6754
   217dc:	01cf7474 	movhi	r7,15825
   217e0:	a009883a 	mov	r4,r20
   217e4:	3198cc44 	addi	r6,r6,25393
   217e8:	39ed1844 	addi	r7,r7,-19359
   217ec:	980b883a 	mov	r5,r19
   217f0:	1039883a 	mov	fp,r2
   217f4:	d8c00815 	stw	r3,32(sp)
   217f8:	002628c0 	call	2628c <__muldf3>
   217fc:	010007c4 	movi	r4,31
   21800:	e017883a 	mov	r11,fp
   21804:	da800817 	ldw	r10,32(sp)
   21808:	102d883a 	mov	r22,r2
   2180c:	182b883a 	mov	r21,r3
   21810:	24802816 	blt	r4,r18,218b4 <__ieee754_rem_pio2+0x464>
   21814:	913fffc4 	addi	r4,r18,-1
   21818:	2109883a 	add	r4,r4,r4
   2181c:	014000f4 	movhi	r5,3
   21820:	2109883a 	add	r4,r4,r4
   21824:	29580b04 	addi	r5,r5,24620
   21828:	2909883a 	add	r4,r5,r4
   2182c:	21000017 	ldw	r4,0(r4)
   21830:	b9002026 	beq	r23,r4,218b4 <__ieee754_rem_pio2+0x464>
   21834:	100d883a 	mov	r6,r2
   21838:	180f883a 	mov	r7,r3
   2183c:	e009883a 	mov	r4,fp
   21840:	500b883a 	mov	r5,r10
   21844:	da800b15 	stw	r10,44(sp)
   21848:	df000a15 	stw	fp,40(sp)
   2184c:	00269a40 	call	269a4 <__subdf3>
   21850:	da800b17 	ldw	r10,44(sp)
   21854:	dac00a17 	ldw	r11,40(sp)
   21858:	1019883a 	mov	r12,r2
   2185c:	1813883a 	mov	r9,r3
   21860:	80800015 	stw	r2,0(r16)
   21864:	80c00115 	stw	r3,4(r16)
   21868:	600d883a 	mov	r6,r12
   2186c:	480f883a 	mov	r7,r9
   21870:	5809883a 	mov	r4,r11
   21874:	500b883a 	mov	r5,r10
   21878:	da400b15 	stw	r9,44(sp)
   2187c:	db000a15 	stw	r12,40(sp)
   21880:	00269a40 	call	269a4 <__subdf3>
   21884:	b00d883a 	mov	r6,r22
   21888:	a80f883a 	mov	r7,r21
   2188c:	1009883a 	mov	r4,r2
   21890:	180b883a 	mov	r5,r3
   21894:	00269a40 	call	269a4 <__subdf3>
   21898:	80800215 	stw	r2,8(r16)
   2189c:	80c00315 	stw	r3,12(r16)
   218a0:	da400b17 	ldw	r9,44(sp)
   218a4:	db000a17 	ldw	r12,40(sp)
   218a8:	88009f16 	blt	r17,zero,21b28 <__ieee754_rem_pio2+0x6d8>
   218ac:	9005883a 	mov	r2,r18
   218b0:	003f7706 	br	21690 <__alt_mem_SDRAM_controller+0xfc021690>
   218b4:	d9400817 	ldw	r5,32(sp)
   218b8:	100d883a 	mov	r6,r2
   218bc:	180f883a 	mov	r7,r3
   218c0:	e009883a 	mov	r4,fp
   218c4:	da800b15 	stw	r10,44(sp)
   218c8:	dac00a15 	stw	r11,40(sp)
   218cc:	00269a40 	call	269a4 <__subdf3>
   218d0:	1019883a 	mov	r12,r2
   218d4:	1804d53a 	srli	r2,r3,20
   218d8:	b811d53a 	srai	r8,r23,20
   218dc:	1813883a 	mov	r9,r3
   218e0:	1081ffcc 	andi	r2,r2,2047
   218e4:	80c00115 	stw	r3,4(r16)
   218e8:	83000015 	stw	r12,0(r16)
   218ec:	4085c83a 	sub	r2,r8,r2
   218f0:	00c00404 	movi	r3,16
   218f4:	da800b17 	ldw	r10,44(sp)
   218f8:	dac00a17 	ldw	r11,40(sp)
   218fc:	18bfda0e 	bge	r3,r2,21868 <__alt_mem_SDRAM_controller+0xfc021868>
   21900:	01cf7474 	movhi	r7,15825
   21904:	39ed1844 	addi	r7,r7,-19359
   21908:	01869834 	movhi	r6,6752
   2190c:	a009883a 	mov	r4,r20
   21910:	980b883a 	mov	r5,r19
   21914:	da000a15 	stw	r8,40(sp)
   21918:	002628c0 	call	2628c <__muldf3>
   2191c:	d9400817 	ldw	r5,32(sp)
   21920:	100d883a 	mov	r6,r2
   21924:	180f883a 	mov	r7,r3
   21928:	e009883a 	mov	r4,fp
   2192c:	102d883a 	mov	r22,r2
   21930:	182b883a 	mov	r21,r3
   21934:	00269a40 	call	269a4 <__subdf3>
   21938:	d9400817 	ldw	r5,32(sp)
   2193c:	100d883a 	mov	r6,r2
   21940:	180f883a 	mov	r7,r3
   21944:	e009883a 	mov	r4,fp
   21948:	182f883a 	mov	r23,r3
   2194c:	d8800915 	stw	r2,36(sp)
   21950:	00269a40 	call	269a4 <__subdf3>
   21954:	b00d883a 	mov	r6,r22
   21958:	a80f883a 	mov	r7,r21
   2195c:	1009883a 	mov	r4,r2
   21960:	180b883a 	mov	r5,r3
   21964:	00269a40 	call	269a4 <__subdf3>
   21968:	018b80f4 	movhi	r6,11779
   2196c:	01cee8f4 	movhi	r7,15267
   21970:	319c1cc4 	addi	r6,r6,28787
   21974:	39c66284 	addi	r7,r7,6538
   21978:	a009883a 	mov	r4,r20
   2197c:	980b883a 	mov	r5,r19
   21980:	102d883a 	mov	r22,r2
   21984:	182b883a 	mov	r21,r3
   21988:	002628c0 	call	2628c <__muldf3>
   2198c:	b00d883a 	mov	r6,r22
   21990:	a80f883a 	mov	r7,r21
   21994:	1009883a 	mov	r4,r2
   21998:	180b883a 	mov	r5,r3
   2199c:	00269a40 	call	269a4 <__subdf3>
   219a0:	d9000917 	ldw	r4,36(sp)
   219a4:	100d883a 	mov	r6,r2
   219a8:	180f883a 	mov	r7,r3
   219ac:	b80b883a 	mov	r5,r23
   219b0:	102d883a 	mov	r22,r2
   219b4:	182b883a 	mov	r21,r3
   219b8:	00269a40 	call	269a4 <__subdf3>
   219bc:	1019883a 	mov	r12,r2
   219c0:	1804d53a 	srli	r2,r3,20
   219c4:	da000a17 	ldw	r8,40(sp)
   219c8:	83000015 	stw	r12,0(r16)
   219cc:	1081ffcc 	andi	r2,r2,2047
   219d0:	4091c83a 	sub	r8,r8,r2
   219d4:	80c00115 	stw	r3,4(r16)
   219d8:	00800c44 	movi	r2,49
   219dc:	1813883a 	mov	r9,r3
   219e0:	1200730e 	bge	r2,r8,21bb0 <__ieee754_rem_pio2+0x760>
   219e4:	01cee8f4 	movhi	r7,15267
   219e8:	39c66284 	addi	r7,r7,6538
   219ec:	018b8034 	movhi	r6,11776
   219f0:	a009883a 	mov	r4,r20
   219f4:	980b883a 	mov	r5,r19
   219f8:	002628c0 	call	2628c <__muldf3>
   219fc:	d9000917 	ldw	r4,36(sp)
   21a00:	100d883a 	mov	r6,r2
   21a04:	180f883a 	mov	r7,r3
   21a08:	b80b883a 	mov	r5,r23
   21a0c:	102d883a 	mov	r22,r2
   21a10:	182b883a 	mov	r21,r3
   21a14:	00269a40 	call	269a4 <__subdf3>
   21a18:	d9000917 	ldw	r4,36(sp)
   21a1c:	100d883a 	mov	r6,r2
   21a20:	180f883a 	mov	r7,r3
   21a24:	b80b883a 	mov	r5,r23
   21a28:	d8c00b15 	stw	r3,44(sp)
   21a2c:	d8800a15 	stw	r2,40(sp)
   21a30:	00269a40 	call	269a4 <__subdf3>
   21a34:	b00d883a 	mov	r6,r22
   21a38:	a80f883a 	mov	r7,r21
   21a3c:	1009883a 	mov	r4,r2
   21a40:	180b883a 	mov	r5,r3
   21a44:	00269a40 	call	269a4 <__subdf3>
   21a48:	01894834 	movhi	r6,9504
   21a4c:	01ce5f34 	movhi	r7,14716
   21a50:	31927044 	addi	r6,r6,18881
   21a54:	39e0e684 	addi	r7,r7,-31846
   21a58:	a009883a 	mov	r4,r20
   21a5c:	980b883a 	mov	r5,r19
   21a60:	102d883a 	mov	r22,r2
   21a64:	182b883a 	mov	r21,r3
   21a68:	002628c0 	call	2628c <__muldf3>
   21a6c:	b00d883a 	mov	r6,r22
   21a70:	a80f883a 	mov	r7,r21
   21a74:	1009883a 	mov	r4,r2
   21a78:	180b883a 	mov	r5,r3
   21a7c:	00269a40 	call	269a4 <__subdf3>
   21a80:	dac00a17 	ldw	r11,40(sp)
   21a84:	da800b17 	ldw	r10,44(sp)
   21a88:	102d883a 	mov	r22,r2
   21a8c:	182b883a 	mov	r21,r3
   21a90:	100d883a 	mov	r6,r2
   21a94:	180f883a 	mov	r7,r3
   21a98:	5809883a 	mov	r4,r11
   21a9c:	500b883a 	mov	r5,r10
   21aa0:	003f6a06 	br	2184c <__alt_mem_SDRAM_controller+0xfc02184c>
   21aa4:	0024ea00 	call	24ea0 <__adddf3>
   21aa8:	1025883a 	mov	r18,r2
   21aac:	008ffe74 	movhi	r2,16377
   21ab0:	10887ec4 	addi	r2,r2,8699
   21ab4:	1823883a 	mov	r17,r3
   21ab8:	b8802226 	beq	r23,r2,21b44 <__ieee754_rem_pio2+0x6f4>
   21abc:	018698b4 	movhi	r6,6754
   21ac0:	01cf7474 	movhi	r7,15825
   21ac4:	3198cc44 	addi	r6,r6,25393
   21ac8:	39ed1844 	addi	r7,r7,-19359
   21acc:	9009883a 	mov	r4,r18
   21ad0:	180b883a 	mov	r5,r3
   21ad4:	0024ea00 	call	24ea0 <__adddf3>
   21ad8:	100d883a 	mov	r6,r2
   21adc:	180f883a 	mov	r7,r3
   21ae0:	9009883a 	mov	r4,r18
   21ae4:	880b883a 	mov	r5,r17
   21ae8:	80800015 	stw	r2,0(r16)
   21aec:	80c00115 	stw	r3,4(r16)
   21af0:	00269a40 	call	269a4 <__subdf3>
   21af4:	018698b4 	movhi	r6,6754
   21af8:	01cf7474 	movhi	r7,15825
   21afc:	3198cc44 	addi	r6,r6,25393
   21b00:	39ed1844 	addi	r7,r7,-19359
   21b04:	1009883a 	mov	r4,r2
   21b08:	180b883a 	mov	r5,r3
   21b0c:	0024ea00 	call	24ea0 <__adddf3>
   21b10:	80800215 	stw	r2,8(r16)
   21b14:	80c00315 	stw	r3,12(r16)
   21b18:	00bfffc4 	movi	r2,-1
   21b1c:	003edc06 	br	21690 <__alt_mem_SDRAM_controller+0xfc021690>
   21b20:	01c000c4 	movi	r7,3
   21b24:	003ec306 	br	21634 <__alt_mem_SDRAM_controller+0xfc021634>
   21b28:	4a60003c 	xorhi	r9,r9,32768
   21b2c:	18e0003c 	xorhi	r3,r3,32768
   21b30:	83000015 	stw	r12,0(r16)
   21b34:	82400115 	stw	r9,4(r16)
   21b38:	80c00315 	stw	r3,12(r16)
   21b3c:	0485c83a 	sub	r2,zero,r18
   21b40:	003ed306 	br	21690 <__alt_mem_SDRAM_controller+0xfc021690>
   21b44:	01cf7474 	movhi	r7,15825
   21b48:	9009883a 	mov	r4,r18
   21b4c:	39ed1844 	addi	r7,r7,-19359
   21b50:	01869834 	movhi	r6,6752
   21b54:	180b883a 	mov	r5,r3
   21b58:	0024ea00 	call	24ea0 <__adddf3>
   21b5c:	018b80f4 	movhi	r6,11779
   21b60:	01cee8f4 	movhi	r7,15267
   21b64:	319c1cc4 	addi	r6,r6,28787
   21b68:	39c66284 	addi	r7,r7,6538
   21b6c:	1009883a 	mov	r4,r2
   21b70:	180b883a 	mov	r5,r3
   21b74:	1025883a 	mov	r18,r2
   21b78:	1823883a 	mov	r17,r3
   21b7c:	0024ea00 	call	24ea0 <__adddf3>
   21b80:	100d883a 	mov	r6,r2
   21b84:	180f883a 	mov	r7,r3
   21b88:	9009883a 	mov	r4,r18
   21b8c:	880b883a 	mov	r5,r17
   21b90:	80800015 	stw	r2,0(r16)
   21b94:	80c00115 	stw	r3,4(r16)
   21b98:	00269a40 	call	269a4 <__subdf3>
   21b9c:	018b80f4 	movhi	r6,11779
   21ba0:	01cee8f4 	movhi	r7,15267
   21ba4:	319c1cc4 	addi	r6,r6,28787
   21ba8:	39c66284 	addi	r7,r7,6538
   21bac:	003fd506 	br	21b04 <__alt_mem_SDRAM_controller+0xfc021b04>
   21bb0:	dac00917 	ldw	r11,36(sp)
   21bb4:	b815883a 	mov	r10,r23
   21bb8:	003f2b06 	br	21868 <__alt_mem_SDRAM_controller+0xfc021868>

00021bbc <__ieee754_sqrt>:
   21bbc:	defffd04 	addi	sp,sp,-12
   21bc0:	dc400115 	stw	r17,4(sp)
   21bc4:	dc000015 	stw	r16,0(sp)
   21bc8:	dfc00215 	stw	ra,8(sp)
   21bcc:	28dffc2c 	andhi	r3,r5,32752
   21bd0:	009ffc34 	movhi	r2,32752
   21bd4:	2821883a 	mov	r16,r5
   21bd8:	2023883a 	mov	r17,r4
   21bdc:	200d883a 	mov	r6,r4
   21be0:	18807b26 	beq	r3,r2,21dd0 <__ieee754_sqrt+0x214>
   21be4:	01405f0e 	bge	zero,r5,21d64 <__ieee754_sqrt+0x1a8>
   21be8:	2815d53a 	srai	r10,r5,20
   21bec:	50006a26 	beq	r10,zero,21d98 <__ieee754_sqrt+0x1dc>
   21bf0:	00c00434 	movhi	r3,16
   21bf4:	52bf0044 	addi	r10,r10,-1023
   21bf8:	18ffffc4 	addi	r3,r3,-1
   21bfc:	80c6703a 	and	r3,r16,r3
   21c00:	5080004c 	andi	r2,r10,1
   21c04:	18c00434 	orhi	r3,r3,16
   21c08:	1000511e 	bne	r2,zero,21d50 <__ieee754_sqrt+0x194>
   21c0c:	3004d7fa 	srli	r2,r6,31
   21c10:	5015d07a 	srai	r10,r10,1
   21c14:	18c7883a 	add	r3,r3,r3
   21c18:	10c5883a 	add	r2,r2,r3
   21c1c:	01400584 	movi	r5,22
   21c20:	3187883a 	add	r3,r6,r6
   21c24:	0013883a 	mov	r9,zero
   21c28:	000f883a 	mov	r7,zero
   21c2c:	01000834 	movhi	r4,32
   21c30:	390d883a 	add	r6,r7,r4
   21c34:	1810d7fa 	srli	r8,r3,31
   21c38:	297fffc4 	addi	r5,r5,-1
   21c3c:	11800316 	blt	r2,r6,21c4c <__ieee754_sqrt+0x90>
   21c40:	1185c83a 	sub	r2,r2,r6
   21c44:	310f883a 	add	r7,r6,r4
   21c48:	4913883a 	add	r9,r9,r4
   21c4c:	1085883a 	add	r2,r2,r2
   21c50:	4085883a 	add	r2,r8,r2
   21c54:	18c7883a 	add	r3,r3,r3
   21c58:	2008d07a 	srli	r4,r4,1
   21c5c:	283ff41e 	bne	r5,zero,21c30 <__alt_mem_SDRAM_controller+0xfc021c30>
   21c60:	01200034 	movhi	r4,32768
   21c64:	01800804 	movi	r6,32
   21c68:	0011883a 	mov	r8,zero
   21c6c:	0019883a 	mov	r12,zero
   21c70:	201b883a 	mov	r13,r4
   21c74:	00000806 	br	21c98 <__ieee754_sqrt+0xdc>
   21c78:	38801726 	beq	r7,r2,21cd8 <__ieee754_sqrt+0x11c>
   21c7c:	180ad7fa 	srli	r5,r3,31
   21c80:	1085883a 	add	r2,r2,r2
   21c84:	31bfffc4 	addi	r6,r6,-1
   21c88:	2885883a 	add	r2,r5,r2
   21c8c:	18c7883a 	add	r3,r3,r3
   21c90:	2008d07a 	srli	r4,r4,1
   21c94:	30001726 	beq	r6,zero,21cf4 <__ieee754_sqrt+0x138>
   21c98:	230b883a 	add	r5,r4,r12
   21c9c:	38bff60e 	bge	r7,r2,21c78 <__alt_mem_SDRAM_controller+0xfc021c78>
   21ca0:	2ae0002c 	andhi	r11,r5,32768
   21ca4:	2919883a 	add	r12,r5,r4
   21ca8:	5b400826 	beq	r11,r13,21ccc <__ieee754_sqrt+0x110>
   21cac:	3817883a 	mov	r11,r7
   21cb0:	11c5c83a 	sub	r2,r2,r7
   21cb4:	1940012e 	bgeu	r3,r5,21cbc <__ieee754_sqrt+0x100>
   21cb8:	10bfffc4 	addi	r2,r2,-1
   21cbc:	1947c83a 	sub	r3,r3,r5
   21cc0:	4111883a 	add	r8,r8,r4
   21cc4:	580f883a 	mov	r7,r11
   21cc8:	003fec06 	br	21c7c <__alt_mem_SDRAM_controller+0xfc021c7c>
   21ccc:	603ff716 	blt	r12,zero,21cac <__alt_mem_SDRAM_controller+0xfc021cac>
   21cd0:	3ac00044 	addi	r11,r7,1
   21cd4:	003ff606 	br	21cb0 <__alt_mem_SDRAM_controller+0xfc021cb0>
   21cd8:	19401936 	bltu	r3,r5,21d40 <__ieee754_sqrt+0x184>
   21cdc:	2ae0002c 	andhi	r11,r5,32768
   21ce0:	2919883a 	add	r12,r5,r4
   21ce4:	5b404526 	beq	r11,r13,21dfc <__ieee754_sqrt+0x240>
   21ce8:	1017883a 	mov	r11,r2
   21cec:	0005883a 	mov	r2,zero
   21cf0:	003ff206 	br	21cbc <__alt_mem_SDRAM_controller+0xfc021cbc>
   21cf4:	10c4b03a 	or	r2,r2,r3
   21cf8:	10000426 	beq	r2,zero,21d0c <__ieee754_sqrt+0x150>
   21cfc:	00bfffc4 	movi	r2,-1
   21d00:	40804026 	beq	r8,r2,21e04 <__ieee754_sqrt+0x248>
   21d04:	4080004c 	andi	r2,r8,1
   21d08:	4091883a 	add	r8,r8,r2
   21d0c:	4004d07a 	srli	r2,r8,1
   21d10:	4807d07a 	srai	r3,r9,1
   21d14:	010ff834 	movhi	r4,16352
   21d18:	4a40004c 	andi	r9,r9,1
   21d1c:	1909883a 	add	r4,r3,r4
   21d20:	4800091e 	bne	r9,zero,21d48 <__ieee754_sqrt+0x18c>
   21d24:	5006953a 	slli	r3,r10,20
   21d28:	1907883a 	add	r3,r3,r4
   21d2c:	dfc00217 	ldw	ra,8(sp)
   21d30:	dc400117 	ldw	r17,4(sp)
   21d34:	dc000017 	ldw	r16,0(sp)
   21d38:	dec00304 	addi	sp,sp,12
   21d3c:	f800283a 	ret
   21d40:	3805883a 	mov	r2,r7
   21d44:	003fcd06 	br	21c7c <__alt_mem_SDRAM_controller+0xfc021c7c>
   21d48:	10a00034 	orhi	r2,r2,32768
   21d4c:	003ff506 	br	21d24 <__alt_mem_SDRAM_controller+0xfc021d24>
   21d50:	3004d7fa 	srli	r2,r6,31
   21d54:	18c7883a 	add	r3,r3,r3
   21d58:	318d883a 	add	r6,r6,r6
   21d5c:	10c7883a 	add	r3,r2,r3
   21d60:	003faa06 	br	21c0c <__alt_mem_SDRAM_controller+0xfc021c0c>
   21d64:	00a00034 	movhi	r2,32768
   21d68:	10bfffc4 	addi	r2,r2,-1
   21d6c:	2884703a 	and	r2,r5,r2
   21d70:	1104b03a 	or	r2,r2,r4
   21d74:	10001e26 	beq	r2,zero,21df0 <__ieee754_sqrt+0x234>
   21d78:	2800291e 	bne	r5,zero,21e20 <__ieee754_sqrt+0x264>
   21d7c:	0015883a 	mov	r10,zero
   21d80:	3020d2fa 	srli	r16,r6,11
   21d84:	52bffac4 	addi	r10,r10,-21
   21d88:	300c957a 	slli	r6,r6,21
   21d8c:	803ffc26 	beq	r16,zero,21d80 <__alt_mem_SDRAM_controller+0xfc021d80>
   21d90:	8080042c 	andhi	r2,r16,16
   21d94:	10001e1e 	bne	r2,zero,21e10 <__ieee754_sqrt+0x254>
   21d98:	0005883a 	mov	r2,zero
   21d9c:	00000106 	br	21da4 <__ieee754_sqrt+0x1e8>
   21da0:	1805883a 	mov	r2,r3
   21da4:	8421883a 	add	r16,r16,r16
   21da8:	8100042c 	andhi	r4,r16,16
   21dac:	10c00044 	addi	r3,r2,1
   21db0:	203ffb26 	beq	r4,zero,21da0 <__alt_mem_SDRAM_controller+0xfc021da0>
   21db4:	01000804 	movi	r4,32
   21db8:	20c9c83a 	sub	r4,r4,r3
   21dbc:	3108d83a 	srl	r4,r6,r4
   21dc0:	5095c83a 	sub	r10,r10,r2
   21dc4:	30cc983a 	sll	r6,r6,r3
   21dc8:	2420b03a 	or	r16,r4,r16
   21dcc:	003f8806 	br	21bf0 <__alt_mem_SDRAM_controller+0xfc021bf0>
   21dd0:	280f883a 	mov	r7,r5
   21dd4:	002628c0 	call	2628c <__muldf3>
   21dd8:	880d883a 	mov	r6,r17
   21ddc:	800f883a 	mov	r7,r16
   21de0:	1009883a 	mov	r4,r2
   21de4:	180b883a 	mov	r5,r3
   21de8:	0024ea00 	call	24ea0 <__adddf3>
   21dec:	003fcf06 	br	21d2c <__alt_mem_SDRAM_controller+0xfc021d2c>
   21df0:	2005883a 	mov	r2,r4
   21df4:	2807883a 	mov	r3,r5
   21df8:	003fcc06 	br	21d2c <__alt_mem_SDRAM_controller+0xfc021d2c>
   21dfc:	603fba16 	blt	r12,zero,21ce8 <__alt_mem_SDRAM_controller+0xfc021ce8>
   21e00:	003fb306 	br	21cd0 <__alt_mem_SDRAM_controller+0xfc021cd0>
   21e04:	4a400044 	addi	r9,r9,1
   21e08:	0005883a 	mov	r2,zero
   21e0c:	003fc006 	br	21d10 <__alt_mem_SDRAM_controller+0xfc021d10>
   21e10:	01000804 	movi	r4,32
   21e14:	00bfffc4 	movi	r2,-1
   21e18:	0007883a 	mov	r3,zero
   21e1c:	003fe706 	br	21dbc <__alt_mem_SDRAM_controller+0xfc021dbc>
   21e20:	200d883a 	mov	r6,r4
   21e24:	280f883a 	mov	r7,r5
   21e28:	00269a40 	call	269a4 <__subdf3>
   21e2c:	100d883a 	mov	r6,r2
   21e30:	180f883a 	mov	r7,r3
   21e34:	1009883a 	mov	r4,r2
   21e38:	180b883a 	mov	r5,r3
   21e3c:	002574c0 	call	2574c <__divdf3>
   21e40:	003fba06 	br	21d2c <__alt_mem_SDRAM_controller+0xfc021d2c>

00021e44 <__kernel_cos>:
   21e44:	defff304 	addi	sp,sp,-52
   21e48:	dc000315 	stw	r16,12(sp)
   21e4c:	04200034 	movhi	r16,32768
   21e50:	843fffc4 	addi	r16,r16,-1
   21e54:	008f9034 	movhi	r2,15936
   21e58:	df000b15 	stw	fp,44(sp)
   21e5c:	ddc00a15 	stw	r23,40(sp)
   21e60:	dd800915 	stw	r22,36(sp)
   21e64:	dcc00615 	stw	r19,24(sp)
   21e68:	dfc00c15 	stw	ra,48(sp)
   21e6c:	dd400815 	stw	r21,32(sp)
   21e70:	dd000715 	stw	r20,28(sp)
   21e74:	dc800515 	stw	r18,20(sp)
   21e78:	dc400415 	stw	r17,16(sp)
   21e7c:	2c20703a 	and	r16,r5,r16
   21e80:	10bfffc4 	addi	r2,r2,-1
   21e84:	2827883a 	mov	r19,r5
   21e88:	202d883a 	mov	r22,r4
   21e8c:	302f883a 	mov	r23,r6
   21e90:	3839883a 	mov	fp,r7
   21e94:	14007516 	blt	r2,r16,2206c <__kernel_cos+0x228>
   21e98:	00272a00 	call	272a0 <__fixdfsi>
   21e9c:	10010f26 	beq	r2,zero,222dc <__kernel_cos+0x498>
   21ea0:	b00d883a 	mov	r6,r22
   21ea4:	980f883a 	mov	r7,r19
   21ea8:	b009883a 	mov	r4,r22
   21eac:	980b883a 	mov	r5,r19
   21eb0:	002628c0 	call	2628c <__muldf3>
   21eb4:	01afa234 	movhi	r6,48776
   21eb8:	01ef6a74 	movhi	r7,48553
   21ebc:	318e3504 	addi	r6,r6,14548
   21ec0:	39feba44 	addi	r7,r7,-1303
   21ec4:	1009883a 	mov	r4,r2
   21ec8:	180b883a 	mov	r5,r3
   21ecc:	102b883a 	mov	r21,r2
   21ed0:	1829883a 	mov	r20,r3
   21ed4:	002628c0 	call	2628c <__muldf3>
   21ed8:	01af6d74 	movhi	r6,48565
   21edc:	01cf88b4 	movhi	r7,15906
   21ee0:	31ac7104 	addi	r6,r6,-20028
   21ee4:	39fba784 	addi	r7,r7,-4450
   21ee8:	1009883a 	mov	r4,r2
   21eec:	180b883a 	mov	r5,r3
   21ef0:	0024ea00 	call	24ea0 <__adddf3>
   21ef4:	a80d883a 	mov	r6,r21
   21ef8:	a00f883a 	mov	r7,r20
   21efc:	1009883a 	mov	r4,r2
   21f00:	180b883a 	mov	r5,r3
   21f04:	002628c0 	call	2628c <__muldf3>
   21f08:	01a02734 	movhi	r6,32924
   21f0c:	01cfa4b4 	movhi	r7,16018
   21f10:	3194ab44 	addi	r6,r6,21165
   21f14:	39df93c4 	addi	r7,r7,32335
   21f18:	1009883a 	mov	r4,r2
   21f1c:	180b883a 	mov	r5,r3
   21f20:	00269a40 	call	269a4 <__subdf3>
   21f24:	a80d883a 	mov	r6,r21
   21f28:	a00f883a 	mov	r7,r20
   21f2c:	1009883a 	mov	r4,r2
   21f30:	180b883a 	mov	r5,r3
   21f34:	002628c0 	call	2628c <__muldf3>
   21f38:	018672f4 	movhi	r6,6603
   21f3c:	01cfbeb4 	movhi	r7,16122
   21f40:	31856404 	addi	r6,r6,5520
   21f44:	39c06804 	addi	r7,r7,416
   21f48:	1009883a 	mov	r4,r2
   21f4c:	180b883a 	mov	r5,r3
   21f50:	0024ea00 	call	24ea0 <__adddf3>
   21f54:	a80d883a 	mov	r6,r21
   21f58:	a00f883a 	mov	r7,r20
   21f5c:	1009883a 	mov	r4,r2
   21f60:	180b883a 	mov	r5,r3
   21f64:	002628c0 	call	2628c <__muldf3>
   21f68:	0185b074 	movhi	r6,5825
   21f6c:	01cfd5f4 	movhi	r7,16215
   21f70:	31945dc4 	addi	r6,r6,20855
   21f74:	39f05b04 	addi	r7,r7,-16020
   21f78:	1009883a 	mov	r4,r2
   21f7c:	180b883a 	mov	r5,r3
   21f80:	00269a40 	call	269a4 <__subdf3>
   21f84:	a80d883a 	mov	r6,r21
   21f88:	a00f883a 	mov	r7,r20
   21f8c:	1009883a 	mov	r4,r2
   21f90:	180b883a 	mov	r5,r3
   21f94:	002628c0 	call	2628c <__muldf3>
   21f98:	01955574 	movhi	r6,21845
   21f9c:	01cfe974 	movhi	r7,16293
   21fa0:	31955304 	addi	r6,r6,21836
   21fa4:	39d55544 	addi	r7,r7,21845
   21fa8:	1009883a 	mov	r4,r2
   21fac:	180b883a 	mov	r5,r3
   21fb0:	0024ea00 	call	24ea0 <__adddf3>
   21fb4:	a80d883a 	mov	r6,r21
   21fb8:	a00f883a 	mov	r7,r20
   21fbc:	1009883a 	mov	r4,r2
   21fc0:	180b883a 	mov	r5,r3
   21fc4:	002628c0 	call	2628c <__muldf3>
   21fc8:	1017883a 	mov	r11,r2
   21fcc:	1815883a 	mov	r10,r3
   21fd0:	a809883a 	mov	r4,r21
   21fd4:	a00b883a 	mov	r5,r20
   21fd8:	000d883a 	mov	r6,zero
   21fdc:	01cff834 	movhi	r7,16352
   21fe0:	da800215 	stw	r10,8(sp)
   21fe4:	dac00115 	stw	r11,4(sp)
   21fe8:	002628c0 	call	2628c <__muldf3>
   21fec:	dac00117 	ldw	r11,4(sp)
   21ff0:	da800217 	ldw	r10,8(sp)
   21ff4:	a809883a 	mov	r4,r21
   21ff8:	580d883a 	mov	r6,r11
   21ffc:	500f883a 	mov	r7,r10
   22000:	a00b883a 	mov	r5,r20
   22004:	1023883a 	mov	r17,r2
   22008:	1821883a 	mov	r16,r3
   2200c:	002628c0 	call	2628c <__muldf3>
   22010:	b80d883a 	mov	r6,r23
   22014:	e00f883a 	mov	r7,fp
   22018:	b009883a 	mov	r4,r22
   2201c:	980b883a 	mov	r5,r19
   22020:	1029883a 	mov	r20,r2
   22024:	1825883a 	mov	r18,r3
   22028:	002628c0 	call	2628c <__muldf3>
   2202c:	a009883a 	mov	r4,r20
   22030:	900b883a 	mov	r5,r18
   22034:	100d883a 	mov	r6,r2
   22038:	180f883a 	mov	r7,r3
   2203c:	00269a40 	call	269a4 <__subdf3>
   22040:	8809883a 	mov	r4,r17
   22044:	800b883a 	mov	r5,r16
   22048:	100d883a 	mov	r6,r2
   2204c:	180f883a 	mov	r7,r3
   22050:	00269a40 	call	269a4 <__subdf3>
   22054:	100d883a 	mov	r6,r2
   22058:	180f883a 	mov	r7,r3
   2205c:	0009883a 	mov	r4,zero
   22060:	014ffc34 	movhi	r5,16368
   22064:	00269a40 	call	269a4 <__subdf3>
   22068:	00008b06 	br	22298 <__kernel_cos+0x454>
   2206c:	200d883a 	mov	r6,r4
   22070:	280f883a 	mov	r7,r5
   22074:	002628c0 	call	2628c <__muldf3>
   22078:	01afa234 	movhi	r6,48776
   2207c:	01ef6a74 	movhi	r7,48553
   22080:	318e3504 	addi	r6,r6,14548
   22084:	39feba44 	addi	r7,r7,-1303
   22088:	1009883a 	mov	r4,r2
   2208c:	180b883a 	mov	r5,r3
   22090:	1025883a 	mov	r18,r2
   22094:	1823883a 	mov	r17,r3
   22098:	002628c0 	call	2628c <__muldf3>
   2209c:	01af6d74 	movhi	r6,48565
   220a0:	01cf88b4 	movhi	r7,15906
   220a4:	31ac7104 	addi	r6,r6,-20028
   220a8:	39fba784 	addi	r7,r7,-4450
   220ac:	1009883a 	mov	r4,r2
   220b0:	180b883a 	mov	r5,r3
   220b4:	0024ea00 	call	24ea0 <__adddf3>
   220b8:	900d883a 	mov	r6,r18
   220bc:	880f883a 	mov	r7,r17
   220c0:	1009883a 	mov	r4,r2
   220c4:	180b883a 	mov	r5,r3
   220c8:	002628c0 	call	2628c <__muldf3>
   220cc:	01a02734 	movhi	r6,32924
   220d0:	01cfa4b4 	movhi	r7,16018
   220d4:	3194ab44 	addi	r6,r6,21165
   220d8:	39df93c4 	addi	r7,r7,32335
   220dc:	1009883a 	mov	r4,r2
   220e0:	180b883a 	mov	r5,r3
   220e4:	00269a40 	call	269a4 <__subdf3>
   220e8:	900d883a 	mov	r6,r18
   220ec:	880f883a 	mov	r7,r17
   220f0:	1009883a 	mov	r4,r2
   220f4:	180b883a 	mov	r5,r3
   220f8:	002628c0 	call	2628c <__muldf3>
   220fc:	018672f4 	movhi	r6,6603
   22100:	01cfbeb4 	movhi	r7,16122
   22104:	31856404 	addi	r6,r6,5520
   22108:	39c06804 	addi	r7,r7,416
   2210c:	1009883a 	mov	r4,r2
   22110:	180b883a 	mov	r5,r3
   22114:	0024ea00 	call	24ea0 <__adddf3>
   22118:	900d883a 	mov	r6,r18
   2211c:	880f883a 	mov	r7,r17
   22120:	1009883a 	mov	r4,r2
   22124:	180b883a 	mov	r5,r3
   22128:	002628c0 	call	2628c <__muldf3>
   2212c:	0185b074 	movhi	r6,5825
   22130:	01cfd5f4 	movhi	r7,16215
   22134:	31945dc4 	addi	r6,r6,20855
   22138:	39f05b04 	addi	r7,r7,-16020
   2213c:	1009883a 	mov	r4,r2
   22140:	180b883a 	mov	r5,r3
   22144:	00269a40 	call	269a4 <__subdf3>
   22148:	900d883a 	mov	r6,r18
   2214c:	880f883a 	mov	r7,r17
   22150:	1009883a 	mov	r4,r2
   22154:	180b883a 	mov	r5,r3
   22158:	002628c0 	call	2628c <__muldf3>
   2215c:	01955574 	movhi	r6,21845
   22160:	01cfe974 	movhi	r7,16293
   22164:	31955304 	addi	r6,r6,21836
   22168:	39d55544 	addi	r7,r7,21845
   2216c:	1009883a 	mov	r4,r2
   22170:	180b883a 	mov	r5,r3
   22174:	0024ea00 	call	24ea0 <__adddf3>
   22178:	900d883a 	mov	r6,r18
   2217c:	880f883a 	mov	r7,r17
   22180:	1009883a 	mov	r4,r2
   22184:	180b883a 	mov	r5,r3
   22188:	002628c0 	call	2628c <__muldf3>
   2218c:	1013883a 	mov	r9,r2
   22190:	1017883a 	mov	r11,r2
   22194:	008ff4f4 	movhi	r2,16339
   22198:	108ccc84 	addi	r2,r2,13106
   2219c:	1811883a 	mov	r8,r3
   221a0:	902b883a 	mov	r21,r18
   221a4:	8829883a 	mov	r20,r17
   221a8:	1815883a 	mov	r10,r3
   221ac:	143f880e 	bge	r2,r16,21fd0 <__alt_mem_SDRAM_controller+0xfc021fd0>
   221b0:	008ffa74 	movhi	r2,16361
   221b4:	14004416 	blt	r2,r16,222c8 <__kernel_cos+0x484>
   221b8:	00bff834 	movhi	r2,65504
   221bc:	80a1883a 	add	r16,r16,r2
   221c0:	000d883a 	mov	r6,zero
   221c4:	800f883a 	mov	r7,r16
   221c8:	0009883a 	mov	r4,zero
   221cc:	014ffc34 	movhi	r5,16368
   221d0:	da400115 	stw	r9,4(sp)
   221d4:	d8c00215 	stw	r3,8(sp)
   221d8:	00269a40 	call	269a4 <__subdf3>
   221dc:	da000217 	ldw	r8,8(sp)
   221e0:	da400117 	ldw	r9,4(sp)
   221e4:	102b883a 	mov	r21,r2
   221e8:	d8c00015 	stw	r3,0(sp)
   221ec:	9009883a 	mov	r4,r18
   221f0:	880b883a 	mov	r5,r17
   221f4:	000d883a 	mov	r6,zero
   221f8:	01cff834 	movhi	r7,16352
   221fc:	da000215 	stw	r8,8(sp)
   22200:	da400115 	stw	r9,4(sp)
   22204:	002628c0 	call	2628c <__muldf3>
   22208:	800f883a 	mov	r7,r16
   2220c:	000d883a 	mov	r6,zero
   22210:	1009883a 	mov	r4,r2
   22214:	180b883a 	mov	r5,r3
   22218:	00269a40 	call	269a4 <__subdf3>
   2221c:	da400117 	ldw	r9,4(sp)
   22220:	da000217 	ldw	r8,8(sp)
   22224:	9009883a 	mov	r4,r18
   22228:	480d883a 	mov	r6,r9
   2222c:	400f883a 	mov	r7,r8
   22230:	880b883a 	mov	r5,r17
   22234:	1029883a 	mov	r20,r2
   22238:	1821883a 	mov	r16,r3
   2223c:	002628c0 	call	2628c <__muldf3>
   22240:	b80d883a 	mov	r6,r23
   22244:	e00f883a 	mov	r7,fp
   22248:	b009883a 	mov	r4,r22
   2224c:	980b883a 	mov	r5,r19
   22250:	1025883a 	mov	r18,r2
   22254:	1823883a 	mov	r17,r3
   22258:	002628c0 	call	2628c <__muldf3>
   2225c:	100d883a 	mov	r6,r2
   22260:	180f883a 	mov	r7,r3
   22264:	9009883a 	mov	r4,r18
   22268:	880b883a 	mov	r5,r17
   2226c:	00269a40 	call	269a4 <__subdf3>
   22270:	100d883a 	mov	r6,r2
   22274:	180f883a 	mov	r7,r3
   22278:	a009883a 	mov	r4,r20
   2227c:	800b883a 	mov	r5,r16
   22280:	00269a40 	call	269a4 <__subdf3>
   22284:	d9400017 	ldw	r5,0(sp)
   22288:	100d883a 	mov	r6,r2
   2228c:	180f883a 	mov	r7,r3
   22290:	a809883a 	mov	r4,r21
   22294:	00269a40 	call	269a4 <__subdf3>
   22298:	dfc00c17 	ldw	ra,48(sp)
   2229c:	df000b17 	ldw	fp,44(sp)
   222a0:	ddc00a17 	ldw	r23,40(sp)
   222a4:	dd800917 	ldw	r22,36(sp)
   222a8:	dd400817 	ldw	r21,32(sp)
   222ac:	dd000717 	ldw	r20,28(sp)
   222b0:	dcc00617 	ldw	r19,24(sp)
   222b4:	dc800517 	ldw	r18,20(sp)
   222b8:	dc400417 	ldw	r17,16(sp)
   222bc:	dc000317 	ldw	r16,12(sp)
   222c0:	dec00d04 	addi	sp,sp,52
   222c4:	f800283a 	ret
   222c8:	008ff9f4 	movhi	r2,16359
   222cc:	002b883a 	mov	r21,zero
   222d0:	d8800015 	stw	r2,0(sp)
   222d4:	040ff4b4 	movhi	r16,16338
   222d8:	003fc406 	br	221ec <__alt_mem_SDRAM_controller+0xfc0221ec>
   222dc:	0005883a 	mov	r2,zero
   222e0:	00cffc34 	movhi	r3,16368
   222e4:	003fec06 	br	22298 <__alt_mem_SDRAM_controller+0xfc022298>

000222e8 <__kernel_rem_pio2>:
   222e8:	deff5a04 	addi	sp,sp,-664
   222ec:	da00a617 	ldw	r8,664(sp)
   222f0:	00c000f4 	movhi	r3,3
   222f4:	18d87d04 	addi	r3,r3,25076
   222f8:	4205883a 	add	r2,r8,r8
   222fc:	1085883a 	add	r2,r2,r2
   22300:	1885883a 	add	r2,r3,r2
   22304:	d9008e15 	stw	r4,568(sp)
   22308:	d9408f15 	stw	r5,572(sp)
   2230c:	313fff44 	addi	r4,r6,-3
   22310:	01400604 	movi	r5,24
   22314:	dd80a215 	stw	r22,648(sp)
   22318:	dc009c15 	stw	r16,624(sp)
   2231c:	dfc0a515 	stw	ra,660(sp)
   22320:	df00a415 	stw	fp,656(sp)
   22324:	ddc0a315 	stw	r23,652(sp)
   22328:	dd40a115 	stw	r21,644(sp)
   2232c:	dd00a015 	stw	r20,640(sp)
   22330:	dcc09f15 	stw	r19,636(sp)
   22334:	dc809e15 	stw	r18,632(sp)
   22338:	dc409d15 	stw	r17,628(sp)
   2233c:	3021883a 	mov	r16,r6
   22340:	d9c09315 	stw	r7,588(sp)
   22344:	15800017 	ldw	r22,0(r2)
   22348:	00237ec0 	call	237ec <__divsi3>
   2234c:	da009317 	ldw	r8,588(sp)
   22350:	d8809215 	stw	r2,584(sp)
   22354:	423fffc4 	addi	r8,r8,-1
   22358:	da008d15 	stw	r8,564(sp)
   2235c:	10033b16 	blt	r2,zero,2304c <__kernel_rem_pio2+0xd64>
   22360:	da009217 	ldw	r8,584(sp)
   22364:	d9009217 	ldw	r4,584(sp)
   22368:	42000044 	addi	r8,r8,1
   2236c:	40fffa24 	muli	r3,r8,-24
   22370:	da009515 	stw	r8,596(sp)
   22374:	da008d17 	ldw	r8,564(sp)
   22378:	1c07883a 	add	r3,r3,r16
   2237c:	d8c09015 	stw	r3,576(sp)
   22380:	b205883a 	add	r2,r22,r8
   22384:	2223c83a 	sub	r17,r4,r8
   22388:	10001016 	blt	r2,zero,223cc <__kernel_rem_pio2+0xe4>
   2238c:	da00a717 	ldw	r8,668(sp)
   22390:	8c65883a 	add	r18,r17,r17
   22394:	94a5883a 	add	r18,r18,r18
   22398:	1445883a 	add	r2,r2,r17
   2239c:	dcc05004 	addi	r19,sp,320
   223a0:	44a5883a 	add	r18,r8,r18
   223a4:	14000044 	addi	r16,r2,1
   223a8:	88015316 	blt	r17,zero,228f8 <__kernel_rem_pio2+0x610>
   223ac:	91000017 	ldw	r4,0(r18)
   223b0:	00273200 	call	27320 <__floatsidf>
   223b4:	98800015 	stw	r2,0(r19)
   223b8:	98c00115 	stw	r3,4(r19)
   223bc:	8c400044 	addi	r17,r17,1
   223c0:	9cc00204 	addi	r19,r19,8
   223c4:	94800104 	addi	r18,r18,4
   223c8:	8c3ff71e 	bne	r17,r16,223a8 <__alt_mem_SDRAM_controller+0xfc0223a8>
   223cc:	b0002816 	blt	r22,zero,22470 <__kernel_rem_pio2+0x188>
   223d0:	da008d17 	ldw	r8,564(sp)
   223d4:	b4c00044 	addi	r19,r22,1
   223d8:	982690fa 	slli	r19,r19,3
   223dc:	402490fa 	slli	r18,r8,3
   223e0:	da008e17 	ldw	r8,568(sp)
   223e4:	d8805004 	addi	r2,sp,320
   223e8:	94000204 	addi	r16,r18,8
   223ec:	d823883a 	mov	r17,sp
   223f0:	14a5883a 	add	r18,r2,r18
   223f4:	dcef883a 	add	r23,sp,r19
   223f8:	4421883a 	add	r16,r8,r16
   223fc:	dd809115 	stw	r22,580(sp)
   22400:	4039883a 	mov	fp,r8
   22404:	da008d17 	ldw	r8,564(sp)
   22408:	40016016 	blt	r8,zero,2298c <__kernel_rem_pio2+0x6a4>
   2240c:	e027883a 	mov	r19,fp
   22410:	9029883a 	mov	r20,r18
   22414:	002d883a 	mov	r22,zero
   22418:	002b883a 	mov	r21,zero
   2241c:	a1800017 	ldw	r6,0(r20)
   22420:	a1c00117 	ldw	r7,4(r20)
   22424:	99000017 	ldw	r4,0(r19)
   22428:	99400117 	ldw	r5,4(r19)
   2242c:	9cc00204 	addi	r19,r19,8
   22430:	a53ffe04 	addi	r20,r20,-8
   22434:	002628c0 	call	2628c <__muldf3>
   22438:	b009883a 	mov	r4,r22
   2243c:	a80b883a 	mov	r5,r21
   22440:	100d883a 	mov	r6,r2
   22444:	180f883a 	mov	r7,r3
   22448:	0024ea00 	call	24ea0 <__adddf3>
   2244c:	102d883a 	mov	r22,r2
   22450:	182b883a 	mov	r21,r3
   22454:	9c3ff11e 	bne	r19,r16,2241c <__alt_mem_SDRAM_controller+0xfc02241c>
   22458:	8d800015 	stw	r22,0(r17)
   2245c:	8d400115 	stw	r21,4(r17)
   22460:	8c400204 	addi	r17,r17,8
   22464:	94800204 	addi	r18,r18,8
   22468:	8dffe61e 	bne	r17,r23,22404 <__alt_mem_SDRAM_controller+0xfc022404>
   2246c:	dd809117 	ldw	r22,580(sp)
   22470:	00d00034 	movhi	r3,16384
   22474:	da009317 	ldw	r8,588(sp)
   22478:	18ffff84 	addi	r3,r3,-2
   2247c:	b0c7883a 	add	r3,r22,r3
   22480:	18c7883a 	add	r3,r3,r3
   22484:	402090fa 	slli	r16,r8,3
   22488:	18c7883a 	add	r3,r3,r3
   2248c:	da007804 	addi	r8,sp,480
   22490:	40d1883a 	add	r8,r8,r3
   22494:	b0bfffc4 	addi	r2,r22,-1
   22498:	da009615 	stw	r8,600(sp)
   2249c:	da008e17 	ldw	r8,568(sp)
   224a0:	1085883a 	add	r2,r2,r2
   224a4:	1085883a 	add	r2,r2,r2
   224a8:	19000104 	addi	r4,r3,4
   224ac:	d885883a 	add	r2,sp,r2
   224b0:	4421883a 	add	r16,r8,r16
   224b4:	da007804 	addi	r8,sp,480
   224b8:	4111883a 	add	r8,r8,r4
   224bc:	10807804 	addi	r2,r2,480
   224c0:	da009715 	stw	r8,604(sp)
   224c4:	b025883a 	mov	r18,r22
   224c8:	d8809815 	stw	r2,608(sp)
   224cc:	dd809415 	stw	r22,592(sp)
   224d0:	900490fa 	slli	r2,r18,3
   224d4:	d885883a 	add	r2,sp,r2
   224d8:	17000017 	ldw	fp,0(r2)
   224dc:	15400117 	ldw	r21,4(r2)
   224e0:	04802b0e 	bge	zero,r18,22590 <__kernel_rem_pio2+0x2a8>
   224e4:	00880034 	movhi	r2,8192
   224e8:	10bfffc4 	addi	r2,r2,-1
   224ec:	90a9883a 	add	r20,r18,r2
   224f0:	a02890fa 	slli	r20,r20,3
   224f4:	dc407804 	addi	r17,sp,480
   224f8:	dcfffe04 	addi	r19,sp,-8
   224fc:	dd29883a 	add	r20,sp,r20
   22500:	000d883a 	mov	r6,zero
   22504:	01cf9c34 	movhi	r7,15984
   22508:	e009883a 	mov	r4,fp
   2250c:	a80b883a 	mov	r5,r21
   22510:	002628c0 	call	2628c <__muldf3>
   22514:	180b883a 	mov	r5,r3
   22518:	1009883a 	mov	r4,r2
   2251c:	00272a00 	call	272a0 <__fixdfsi>
   22520:	1009883a 	mov	r4,r2
   22524:	00273200 	call	27320 <__floatsidf>
   22528:	000d883a 	mov	r6,zero
   2252c:	01d05c34 	movhi	r7,16752
   22530:	1009883a 	mov	r4,r2
   22534:	180b883a 	mov	r5,r3
   22538:	102f883a 	mov	r23,r2
   2253c:	182d883a 	mov	r22,r3
   22540:	002628c0 	call	2628c <__muldf3>
   22544:	100d883a 	mov	r6,r2
   22548:	180f883a 	mov	r7,r3
   2254c:	e009883a 	mov	r4,fp
   22550:	a80b883a 	mov	r5,r21
   22554:	00269a40 	call	269a4 <__subdf3>
   22558:	180b883a 	mov	r5,r3
   2255c:	1009883a 	mov	r4,r2
   22560:	00272a00 	call	272a0 <__fixdfsi>
   22564:	a1800017 	ldw	r6,0(r20)
   22568:	a1c00117 	ldw	r7,4(r20)
   2256c:	88800015 	stw	r2,0(r17)
   22570:	b809883a 	mov	r4,r23
   22574:	b00b883a 	mov	r5,r22
   22578:	0024ea00 	call	24ea0 <__adddf3>
   2257c:	a53ffe04 	addi	r20,r20,-8
   22580:	1039883a 	mov	fp,r2
   22584:	182b883a 	mov	r21,r3
   22588:	8c400104 	addi	r17,r17,4
   2258c:	a4ffdc1e 	bne	r20,r19,22500 <__alt_mem_SDRAM_controller+0xfc022500>
   22590:	d9809017 	ldw	r6,576(sp)
   22594:	a80b883a 	mov	r5,r21
   22598:	e009883a 	mov	r4,fp
   2259c:	00235c00 	call	235c0 <scalbn>
   225a0:	000d883a 	mov	r6,zero
   225a4:	01cff034 	movhi	r7,16320
   225a8:	1009883a 	mov	r4,r2
   225ac:	180b883a 	mov	r5,r3
   225b0:	1027883a 	mov	r19,r2
   225b4:	1823883a 	mov	r17,r3
   225b8:	002628c0 	call	2628c <__muldf3>
   225bc:	1009883a 	mov	r4,r2
   225c0:	180b883a 	mov	r5,r3
   225c4:	00233580 	call	23358 <floor>
   225c8:	000d883a 	mov	r6,zero
   225cc:	01d00834 	movhi	r7,16416
   225d0:	1009883a 	mov	r4,r2
   225d4:	180b883a 	mov	r5,r3
   225d8:	002628c0 	call	2628c <__muldf3>
   225dc:	100d883a 	mov	r6,r2
   225e0:	180f883a 	mov	r7,r3
   225e4:	9809883a 	mov	r4,r19
   225e8:	880b883a 	mov	r5,r17
   225ec:	00269a40 	call	269a4 <__subdf3>
   225f0:	180b883a 	mov	r5,r3
   225f4:	1009883a 	mov	r4,r2
   225f8:	1827883a 	mov	r19,r3
   225fc:	1029883a 	mov	r20,r2
   22600:	00272a00 	call	272a0 <__fixdfsi>
   22604:	1009883a 	mov	r4,r2
   22608:	1023883a 	mov	r17,r2
   2260c:	00273200 	call	27320 <__floatsidf>
   22610:	a009883a 	mov	r4,r20
   22614:	100d883a 	mov	r6,r2
   22618:	180f883a 	mov	r7,r3
   2261c:	980b883a 	mov	r5,r19
   22620:	00269a40 	call	269a4 <__subdf3>
   22624:	d9009017 	ldw	r4,576(sp)
   22628:	1013883a 	mov	r9,r2
   2262c:	102b883a 	mov	r21,r2
   22630:	1811883a 	mov	r8,r3
   22634:	0100b30e 	bge	zero,r4,22904 <__kernel_rem_pio2+0x61c>
   22638:	90bfffc4 	addi	r2,r18,-1
   2263c:	1085883a 	add	r2,r2,r2
   22640:	1085883a 	add	r2,r2,r2
   22644:	d885883a 	add	r2,sp,r2
   22648:	10807804 	addi	r2,r2,480
   2264c:	d9809017 	ldw	r6,576(sp)
   22650:	11400017 	ldw	r5,0(r2)
   22654:	01000604 	movi	r4,24
   22658:	2189c83a 	sub	r4,r4,r6
   2265c:	290dd83a 	sra	r6,r5,r4
   22660:	d9c09017 	ldw	r7,576(sp)
   22664:	04c005c4 	movi	r19,23
   22668:	3108983a 	sll	r4,r6,r4
   2266c:	99e7c83a 	sub	r19,r19,r7
   22670:	89a3883a 	add	r17,r17,r6
   22674:	2909c83a 	sub	r4,r5,r4
   22678:	24e7d83a 	sra	r19,r4,r19
   2267c:	11000015 	stw	r4,0(r2)
   22680:	04c02a0e 	bge	zero,r19,2272c <__kernel_rem_pio2+0x444>
   22684:	8c400044 	addi	r17,r17,1
   22688:	0481570e 	bge	zero,r18,22be8 <__kernel_rem_pio2+0x900>
   2268c:	02804034 	movhi	r10,256
   22690:	52bfffc4 	addi	r10,r10,-1
   22694:	d8807804 	addi	r2,sp,480
   22698:	000b883a 	mov	r5,zero
   2269c:	0029883a 	mov	r20,zero
   226a0:	01c04034 	movhi	r7,256
   226a4:	00000706 	br	226c4 <__kernel_rem_pio2+0x3dc>
   226a8:	390dc83a 	sub	r6,r7,r4
   226ac:	20000226 	beq	r4,zero,226b8 <__kernel_rem_pio2+0x3d0>
   226b0:	11800015 	stw	r6,0(r2)
   226b4:	05000044 	movi	r20,1
   226b8:	29400044 	addi	r5,r5,1
   226bc:	10800104 	addi	r2,r2,4
   226c0:	2c80080e 	bge	r5,r18,226e4 <__kernel_rem_pio2+0x3fc>
   226c4:	11000017 	ldw	r4,0(r2)
   226c8:	a03ff726 	beq	r20,zero,226a8 <__alt_mem_SDRAM_controller+0xfc0226a8>
   226cc:	5109c83a 	sub	r4,r10,r4
   226d0:	11000015 	stw	r4,0(r2)
   226d4:	29400044 	addi	r5,r5,1
   226d8:	05000044 	movi	r20,1
   226dc:	10800104 	addi	r2,r2,4
   226e0:	2cbff816 	blt	r5,r18,226c4 <__alt_mem_SDRAM_controller+0xfc0226c4>
   226e4:	d9009017 	ldw	r4,576(sp)
   226e8:	01000e0e 	bge	zero,r4,22724 <__kernel_rem_pio2+0x43c>
   226ec:	00800044 	movi	r2,1
   226f0:	20808d26 	beq	r4,r2,22928 <__kernel_rem_pio2+0x640>
   226f4:	00800084 	movi	r2,2
   226f8:	20800a1e 	bne	r4,r2,22724 <__kernel_rem_pio2+0x43c>
   226fc:	90bfffc4 	addi	r2,r18,-1
   22700:	1085883a 	add	r2,r2,r2
   22704:	1085883a 	add	r2,r2,r2
   22708:	d885883a 	add	r2,sp,r2
   2270c:	10807804 	addi	r2,r2,480
   22710:	11400017 	ldw	r5,0(r2)
   22714:	01001034 	movhi	r4,64
   22718:	213fffc4 	addi	r4,r4,-1
   2271c:	2908703a 	and	r4,r5,r4
   22720:	11000015 	stw	r4,0(r2)
   22724:	00800084 	movi	r2,2
   22728:	98805d26 	beq	r19,r2,228a0 <__kernel_rem_pio2+0x5b8>
   2272c:	400b883a 	mov	r5,r8
   22730:	000d883a 	mov	r6,zero
   22734:	000f883a 	mov	r7,zero
   22738:	a809883a 	mov	r4,r21
   2273c:	da009b15 	stw	r8,620(sp)
   22740:	00260340 	call	26034 <__eqdf2>
   22744:	da009b17 	ldw	r8,620(sp)
   22748:	10012b1e 	bne	r2,zero,22bf8 <__kernel_rem_pio2+0x910>
   2274c:	da009417 	ldw	r8,592(sp)
   22750:	917fffc4 	addi	r5,r18,-1
   22754:	2a000e16 	blt	r5,r8,22790 <__kernel_rem_pio2+0x4a8>
   22758:	00900034 	movhi	r2,16384
   2275c:	10bfffc4 	addi	r2,r2,-1
   22760:	9085883a 	add	r2,r18,r2
   22764:	1085883a 	add	r2,r2,r2
   22768:	d9809717 	ldw	r6,604(sp)
   2276c:	1085883a 	add	r2,r2,r2
   22770:	d9007804 	addi	r4,sp,480
   22774:	0007883a 	mov	r3,zero
   22778:	2085883a 	add	r2,r4,r2
   2277c:	11000017 	ldw	r4,0(r2)
   22780:	10bfff04 	addi	r2,r2,-4
   22784:	1906b03a 	or	r3,r3,r4
   22788:	11bffc1e 	bne	r2,r6,2277c <__alt_mem_SDRAM_controller+0xfc02277c>
   2278c:	1800821e 	bne	r3,zero,22998 <__kernel_rem_pio2+0x6b0>
   22790:	da009817 	ldw	r8,608(sp)
   22794:	40800017 	ldw	r2,0(r8)
   22798:	1001151e 	bne	r2,zero,22bf0 <__kernel_rem_pio2+0x908>
   2279c:	d8809617 	ldw	r2,600(sp)
   227a0:	05000044 	movi	r20,1
   227a4:	10bfff04 	addi	r2,r2,-4
   227a8:	10c00117 	ldw	r3,4(r2)
   227ac:	a5000044 	addi	r20,r20,1
   227b0:	183ffc26 	beq	r3,zero,227a4 <__alt_mem_SDRAM_controller+0xfc0227a4>
   227b4:	9529883a 	add	r20,r18,r20
   227b8:	90800044 	addi	r2,r18,1
   227bc:	dd009115 	stw	r20,580(sp)
   227c0:	a0803216 	blt	r20,r2,2288c <__kernel_rem_pio2+0x5a4>
   227c4:	da009317 	ldw	r8,588(sp)
   227c8:	d8c09117 	ldw	r3,580(sp)
   227cc:	44a3883a 	add	r17,r8,r18
   227d0:	da009217 	ldw	r8,584(sp)
   227d4:	882290fa 	slli	r17,r17,3
   227d8:	40a5883a 	add	r18,r8,r2
   227dc:	da009517 	ldw	r8,596(sp)
   227e0:	100490fa 	slli	r2,r2,3
   227e4:	94a5883a 	add	r18,r18,r18
   227e8:	40eb883a 	add	r21,r8,r3
   227ec:	da00a717 	ldw	r8,668(sp)
   227f0:	ad6b883a 	add	r21,r21,r21
   227f4:	94a5883a 	add	r18,r18,r18
   227f8:	ad6b883a 	add	r21,r21,r21
   227fc:	d8c05004 	addi	r3,sp,320
   22800:	44a5883a 	add	r18,r8,r18
   22804:	1c63883a 	add	r17,r3,r17
   22808:	d8a7883a 	add	r19,sp,r2
   2280c:	456b883a 	add	r21,r8,r21
   22810:	91000017 	ldw	r4,0(r18)
   22814:	00273200 	call	27320 <__floatsidf>
   22818:	da008d17 	ldw	r8,564(sp)
   2281c:	88800015 	stw	r2,0(r17)
   22820:	88c00115 	stw	r3,4(r17)
   22824:	40001b16 	blt	r8,zero,22894 <__kernel_rem_pio2+0x5ac>
   22828:	dd008e17 	ldw	r20,568(sp)
   2282c:	882d883a 	mov	r22,r17
   22830:	002f883a 	mov	r23,zero
   22834:	0039883a 	mov	fp,zero
   22838:	b1800017 	ldw	r6,0(r22)
   2283c:	b1c00117 	ldw	r7,4(r22)
   22840:	a1000017 	ldw	r4,0(r20)
   22844:	a1400117 	ldw	r5,4(r20)
   22848:	a5000204 	addi	r20,r20,8
   2284c:	b5bffe04 	addi	r22,r22,-8
   22850:	002628c0 	call	2628c <__muldf3>
   22854:	b809883a 	mov	r4,r23
   22858:	e00b883a 	mov	r5,fp
   2285c:	100d883a 	mov	r6,r2
   22860:	180f883a 	mov	r7,r3
   22864:	0024ea00 	call	24ea0 <__adddf3>
   22868:	102f883a 	mov	r23,r2
   2286c:	1839883a 	mov	fp,r3
   22870:	a43ff11e 	bne	r20,r16,22838 <__alt_mem_SDRAM_controller+0xfc022838>
   22874:	9dc00015 	stw	r23,0(r19)
   22878:	9f000115 	stw	fp,4(r19)
   2287c:	94800104 	addi	r18,r18,4
   22880:	8c400204 	addi	r17,r17,8
   22884:	9cc00204 	addi	r19,r19,8
   22888:	957fe11e 	bne	r18,r21,22810 <__alt_mem_SDRAM_controller+0xfc022810>
   2288c:	dc809117 	ldw	r18,580(sp)
   22890:	003f0f06 	br	224d0 <__alt_mem_SDRAM_controller+0xfc0224d0>
   22894:	002f883a 	mov	r23,zero
   22898:	0039883a 	mov	fp,zero
   2289c:	003ff506 	br	22874 <__alt_mem_SDRAM_controller+0xfc022874>
   228a0:	480d883a 	mov	r6,r9
   228a4:	180f883a 	mov	r7,r3
   228a8:	0009883a 	mov	r4,zero
   228ac:	014ffc34 	movhi	r5,16368
   228b0:	00269a40 	call	269a4 <__subdf3>
   228b4:	102b883a 	mov	r21,r2
   228b8:	1811883a 	mov	r8,r3
   228bc:	a03f9b26 	beq	r20,zero,2272c <__alt_mem_SDRAM_controller+0xfc02272c>
   228c0:	d9809017 	ldw	r6,576(sp)
   228c4:	0009883a 	mov	r4,zero
   228c8:	014ffc34 	movhi	r5,16368
   228cc:	d8c09b15 	stw	r3,620(sp)
   228d0:	00235c00 	call	235c0 <scalbn>
   228d4:	da009b17 	ldw	r8,620(sp)
   228d8:	a809883a 	mov	r4,r21
   228dc:	100d883a 	mov	r6,r2
   228e0:	400b883a 	mov	r5,r8
   228e4:	180f883a 	mov	r7,r3
   228e8:	00269a40 	call	269a4 <__subdf3>
   228ec:	102b883a 	mov	r21,r2
   228f0:	1811883a 	mov	r8,r3
   228f4:	003f8d06 	br	2272c <__alt_mem_SDRAM_controller+0xfc02272c>
   228f8:	0005883a 	mov	r2,zero
   228fc:	0007883a 	mov	r3,zero
   22900:	003eac06 	br	223b4 <__alt_mem_SDRAM_controller+0xfc0223b4>
   22904:	d8809017 	ldw	r2,576(sp)
   22908:	1000121e 	bne	r2,zero,22954 <__kernel_rem_pio2+0x66c>
   2290c:	90bfffc4 	addi	r2,r18,-1
   22910:	1085883a 	add	r2,r2,r2
   22914:	1085883a 	add	r2,r2,r2
   22918:	d885883a 	add	r2,sp,r2
   2291c:	14c07817 	ldw	r19,480(r2)
   22920:	9827d5fa 	srai	r19,r19,23
   22924:	003f5606 	br	22680 <__alt_mem_SDRAM_controller+0xfc022680>
   22928:	90bfffc4 	addi	r2,r18,-1
   2292c:	1085883a 	add	r2,r2,r2
   22930:	1085883a 	add	r2,r2,r2
   22934:	d885883a 	add	r2,sp,r2
   22938:	10807804 	addi	r2,r2,480
   2293c:	11000017 	ldw	r4,0(r2)
   22940:	01402034 	movhi	r5,128
   22944:	297fffc4 	addi	r5,r5,-1
   22948:	2148703a 	and	r4,r4,r5
   2294c:	11000015 	stw	r4,0(r2)
   22950:	003f7406 	br	22724 <__alt_mem_SDRAM_controller+0xfc022724>
   22954:	4809883a 	mov	r4,r9
   22958:	180b883a 	mov	r5,r3
   2295c:	000d883a 	mov	r6,zero
   22960:	01cff834 	movhi	r7,16352
   22964:	d8c09a15 	stw	r3,616(sp)
   22968:	d8c09b15 	stw	r3,620(sp)
   2296c:	da409915 	stw	r9,612(sp)
   22970:	00260bc0 	call	260bc <__gedf2>
   22974:	d8c09a17 	ldw	r3,616(sp)
   22978:	da009b17 	ldw	r8,620(sp)
   2297c:	da409917 	ldw	r9,612(sp)
   22980:	1000920e 	bge	r2,zero,22bcc <__kernel_rem_pio2+0x8e4>
   22984:	0027883a 	mov	r19,zero
   22988:	003f6806 	br	2272c <__alt_mem_SDRAM_controller+0xfc02272c>
   2298c:	002d883a 	mov	r22,zero
   22990:	002b883a 	mov	r21,zero
   22994:	003eb006 	br	22458 <__alt_mem_SDRAM_controller+0xfc022458>
   22998:	2945883a 	add	r2,r5,r5
   2299c:	da009017 	ldw	r8,576(sp)
   229a0:	1085883a 	add	r2,r2,r2
   229a4:	d885883a 	add	r2,sp,r2
   229a8:	10807817 	ldw	r2,480(r2)
   229ac:	423ffa04 	addi	r8,r8,-24
   229b0:	dc409115 	stw	r17,580(sp)
   229b4:	dcc08d15 	stw	r19,564(sp)
   229b8:	da009015 	stw	r8,576(sp)
   229bc:	dd809417 	ldw	r22,592(sp)
   229c0:	2823883a 	mov	r17,r5
   229c4:	10000e1e 	bne	r2,zero,22a00 <__kernel_rem_pio2+0x718>
   229c8:	00900034 	movhi	r2,16384
   229cc:	10bfffc4 	addi	r2,r2,-1
   229d0:	2885883a 	add	r2,r5,r2
   229d4:	1085883a 	add	r2,r2,r2
   229d8:	d8c07804 	addi	r3,sp,480
   229dc:	1085883a 	add	r2,r2,r2
   229e0:	1885883a 	add	r2,r3,r2
   229e4:	4007883a 	mov	r3,r8
   229e8:	10bfff04 	addi	r2,r2,-4
   229ec:	11000117 	ldw	r4,4(r2)
   229f0:	8c7fffc4 	addi	r17,r17,-1
   229f4:	18fffa04 	addi	r3,r3,-24
   229f8:	203ffb26 	beq	r4,zero,229e8 <__alt_mem_SDRAM_controller+0xfc0229e8>
   229fc:	d8c09015 	stw	r3,576(sp)
   22a00:	d9809017 	ldw	r6,576(sp)
   22a04:	0009883a 	mov	r4,zero
   22a08:	014ffc34 	movhi	r5,16368
   22a0c:	00235c00 	call	235c0 <scalbn>
   22a10:	1029883a 	mov	r20,r2
   22a14:	182b883a 	mov	r21,r3
   22a18:	88018416 	blt	r17,zero,2302c <__kernel_rem_pio2+0xd44>
   22a1c:	881090fa 	slli	r8,r17,3
   22a20:	d8c07804 	addi	r3,sp,480
   22a24:	da008e15 	stw	r8,568(sp)
   22a28:	d8808e17 	ldw	r2,568(sp)
   22a2c:	8c51883a 	add	r8,r17,r17
   22a30:	4211883a 	add	r8,r8,r8
   22a34:	d8a1883a 	add	r16,sp,r2
   22a38:	1a25883a 	add	r18,r3,r8
   22a3c:	da3ffe04 	addi	r8,sp,-8
   22a40:	da008c15 	stw	r8,560(sp)
   22a44:	8039883a 	mov	fp,r16
   22a48:	91000017 	ldw	r4,0(r18)
   22a4c:	e73ffe04 	addi	fp,fp,-8
   22a50:	94bfff04 	addi	r18,r18,-4
   22a54:	00273200 	call	27320 <__floatsidf>
   22a58:	a00d883a 	mov	r6,r20
   22a5c:	a80f883a 	mov	r7,r21
   22a60:	1009883a 	mov	r4,r2
   22a64:	180b883a 	mov	r5,r3
   22a68:	002628c0 	call	2628c <__muldf3>
   22a6c:	a009883a 	mov	r4,r20
   22a70:	a80b883a 	mov	r5,r21
   22a74:	e0800215 	stw	r2,8(fp)
   22a78:	e0c00315 	stw	r3,12(fp)
   22a7c:	000d883a 	mov	r6,zero
   22a80:	01cf9c34 	movhi	r7,15984
   22a84:	002628c0 	call	2628c <__muldf3>
   22a88:	da008c17 	ldw	r8,560(sp)
   22a8c:	1029883a 	mov	r20,r2
   22a90:	182b883a 	mov	r21,r3
   22a94:	e23fec1e 	bne	fp,r8,22a48 <__alt_mem_SDRAM_controller+0xfc022a48>
   22a98:	0029883a 	mov	r20,zero
   22a9c:	b0004f16 	blt	r22,zero,22bdc <__kernel_rem_pio2+0x8f4>
   22aa0:	054000f4 	movhi	r21,3
   22aa4:	014ffe74 	movhi	r5,16377
   22aa8:	ad586f04 	addi	r21,r21,25020
   22aac:	8027883a 	mov	r19,r16
   22ab0:	01100034 	movhi	r4,16384
   22ab4:	29487ec4 	addi	r5,r5,8699
   22ab8:	0039883a 	mov	fp,zero
   22abc:	002f883a 	mov	r23,zero
   22ac0:	0025883a 	mov	r18,zero
   22ac4:	00000506 	br	22adc <__kernel_rem_pio2+0x7f4>
   22ac8:	9cc00204 	addi	r19,r19,8
   22acc:	a4800f16 	blt	r20,r18,22b0c <__kernel_rem_pio2+0x824>
   22ad0:	a9000017 	ldw	r4,0(r21)
   22ad4:	a9400117 	ldw	r5,4(r21)
   22ad8:	ad400204 	addi	r21,r21,8
   22adc:	99800017 	ldw	r6,0(r19)
   22ae0:	99c00117 	ldw	r7,4(r19)
   22ae4:	94800044 	addi	r18,r18,1
   22ae8:	002628c0 	call	2628c <__muldf3>
   22aec:	e009883a 	mov	r4,fp
   22af0:	b80b883a 	mov	r5,r23
   22af4:	100d883a 	mov	r6,r2
   22af8:	180f883a 	mov	r7,r3
   22afc:	0024ea00 	call	24ea0 <__adddf3>
   22b00:	1039883a 	mov	fp,r2
   22b04:	182f883a 	mov	r23,r3
   22b08:	b4bfef0e 	bge	r22,r18,22ac8 <__alt_mem_SDRAM_controller+0xfc022ac8>
   22b0c:	a00490fa 	slli	r2,r20,3
   22b10:	da008c17 	ldw	r8,560(sp)
   22b14:	843ffe04 	addi	r16,r16,-8
   22b18:	d885883a 	add	r2,sp,r2
   22b1c:	10802804 	addi	r2,r2,160
   22b20:	17000015 	stw	fp,0(r2)
   22b24:	15c00115 	stw	r23,4(r2)
   22b28:	a5000044 	addi	r20,r20,1
   22b2c:	823fdb1e 	bne	r16,r8,22a9c <__alt_mem_SDRAM_controller+0xfc022a9c>
   22b30:	da00a617 	ldw	r8,664(sp)
   22b34:	00800084 	movi	r2,2
   22b38:	12006616 	blt	r2,r8,22cd4 <__kernel_rem_pio2+0x9ec>
   22b3c:	0200de16 	blt	zero,r8,22eb8 <__kernel_rem_pio2+0xbd0>
   22b40:	4000141e 	bne	r8,zero,22b94 <__kernel_rem_pio2+0x8ac>
   22b44:	da008e17 	ldw	r8,568(sp)
   22b48:	d8802804 	addi	r2,sp,160
   22b4c:	0007883a 	mov	r3,zero
   22b50:	1225883a 	add	r18,r2,r8
   22b54:	043fffc4 	movi	r16,-1
   22b58:	0005883a 	mov	r2,zero
   22b5c:	91800017 	ldw	r6,0(r18)
   22b60:	91c00117 	ldw	r7,4(r18)
   22b64:	1009883a 	mov	r4,r2
   22b68:	180b883a 	mov	r5,r3
   22b6c:	8c7fffc4 	addi	r17,r17,-1
   22b70:	0024ea00 	call	24ea0 <__adddf3>
   22b74:	94bffe04 	addi	r18,r18,-8
   22b78:	8c3ff81e 	bne	r17,r16,22b5c <__alt_mem_SDRAM_controller+0xfc022b5c>
   22b7c:	da008d17 	ldw	r8,564(sp)
   22b80:	40000126 	beq	r8,zero,22b88 <__kernel_rem_pio2+0x8a0>
   22b84:	18e0003c 	xorhi	r3,r3,32768
   22b88:	da008f17 	ldw	r8,572(sp)
   22b8c:	40800015 	stw	r2,0(r8)
   22b90:	40c00115 	stw	r3,4(r8)
   22b94:	da009117 	ldw	r8,580(sp)
   22b98:	408001cc 	andi	r2,r8,7
   22b9c:	dfc0a517 	ldw	ra,660(sp)
   22ba0:	df00a417 	ldw	fp,656(sp)
   22ba4:	ddc0a317 	ldw	r23,652(sp)
   22ba8:	dd80a217 	ldw	r22,648(sp)
   22bac:	dd40a117 	ldw	r21,644(sp)
   22bb0:	dd00a017 	ldw	r20,640(sp)
   22bb4:	dcc09f17 	ldw	r19,636(sp)
   22bb8:	dc809e17 	ldw	r18,632(sp)
   22bbc:	dc409d17 	ldw	r17,628(sp)
   22bc0:	dc009c17 	ldw	r16,624(sp)
   22bc4:	dec0a604 	addi	sp,sp,664
   22bc8:	f800283a 	ret
   22bcc:	8c400044 	addi	r17,r17,1
   22bd0:	04810d0e 	bge	zero,r18,23008 <__kernel_rem_pio2+0xd20>
   22bd4:	04c00084 	movi	r19,2
   22bd8:	003eac06 	br	2268c <__alt_mem_SDRAM_controller+0xfc02268c>
   22bdc:	0039883a 	mov	fp,zero
   22be0:	002f883a 	mov	r23,zero
   22be4:	003fc906 	br	22b0c <__alt_mem_SDRAM_controller+0xfc022b0c>
   22be8:	0029883a 	mov	r20,zero
   22bec:	003ebd06 	br	226e4 <__alt_mem_SDRAM_controller+0xfc0226e4>
   22bf0:	05000044 	movi	r20,1
   22bf4:	003eef06 	br	227b4 <__alt_mem_SDRAM_controller+0xfc0227b4>
   22bf8:	4029883a 	mov	r20,r8
   22bfc:	da009017 	ldw	r8,576(sp)
   22c00:	a809883a 	mov	r4,r21
   22c04:	a00b883a 	mov	r5,r20
   22c08:	020dc83a 	sub	r6,zero,r8
   22c0c:	dc409115 	stw	r17,580(sp)
   22c10:	dd809417 	ldw	r22,592(sp)
   22c14:	dcc08d15 	stw	r19,564(sp)
   22c18:	00235c00 	call	235c0 <scalbn>
   22c1c:	000d883a 	mov	r6,zero
   22c20:	01d05c34 	movhi	r7,16752
   22c24:	1009883a 	mov	r4,r2
   22c28:	180b883a 	mov	r5,r3
   22c2c:	102b883a 	mov	r21,r2
   22c30:	1823883a 	mov	r17,r3
   22c34:	00260bc0 	call	260bc <__gedf2>
   22c38:	1000e916 	blt	r2,zero,22fe0 <__kernel_rem_pio2+0xcf8>
   22c3c:	000d883a 	mov	r6,zero
   22c40:	01cf9c34 	movhi	r7,15984
   22c44:	880b883a 	mov	r5,r17
   22c48:	a809883a 	mov	r4,r21
   22c4c:	002628c0 	call	2628c <__muldf3>
   22c50:	180b883a 	mov	r5,r3
   22c54:	1009883a 	mov	r4,r2
   22c58:	00272a00 	call	272a0 <__fixdfsi>
   22c5c:	1029883a 	mov	r20,r2
   22c60:	9485883a 	add	r2,r18,r18
   22c64:	1085883a 	add	r2,r2,r2
   22c68:	a009883a 	mov	r4,r20
   22c6c:	d8a1883a 	add	r16,sp,r2
   22c70:	00273200 	call	27320 <__floatsidf>
   22c74:	000d883a 	mov	r6,zero
   22c78:	01d05c34 	movhi	r7,16752
   22c7c:	1009883a 	mov	r4,r2
   22c80:	180b883a 	mov	r5,r3
   22c84:	002628c0 	call	2628c <__muldf3>
   22c88:	880b883a 	mov	r5,r17
   22c8c:	100d883a 	mov	r6,r2
   22c90:	180f883a 	mov	r7,r3
   22c94:	a809883a 	mov	r4,r21
   22c98:	00269a40 	call	269a4 <__subdf3>
   22c9c:	180b883a 	mov	r5,r3
   22ca0:	1009883a 	mov	r4,r2
   22ca4:	00272a00 	call	272a0 <__fixdfsi>
   22ca8:	da009017 	ldw	r8,576(sp)
   22cac:	94400044 	addi	r17,r18,1
   22cb0:	8c47883a 	add	r3,r17,r17
   22cb4:	84007804 	addi	r16,r16,480
   22cb8:	18c7883a 	add	r3,r3,r3
   22cbc:	80800015 	stw	r2,0(r16)
   22cc0:	d8c7883a 	add	r3,sp,r3
   22cc4:	42000604 	addi	r8,r8,24
   22cc8:	da009015 	stw	r8,576(sp)
   22ccc:	1d007815 	stw	r20,480(r3)
   22cd0:	003f4b06 	br	22a00 <__alt_mem_SDRAM_controller+0xfc022a00>
   22cd4:	da00a617 	ldw	r8,664(sp)
   22cd8:	008000c4 	movi	r2,3
   22cdc:	40bfad1e 	bne	r8,r2,22b94 <__alt_mem_SDRAM_controller+0xfc022b94>
   22ce0:	0440bc0e 	bge	zero,r17,22fd4 <__kernel_rem_pio2+0xcec>
   22ce4:	da008e17 	ldw	r8,568(sp)
   22ce8:	882090fa 	slli	r16,r17,3
   22cec:	dd402804 	addi	r21,sp,160
   22cf0:	da05883a 	add	r2,sp,r8
   22cf4:	10802804 	addi	r2,r2,160
   22cf8:	15c00017 	ldw	r23,0(r2)
   22cfc:	15800117 	ldw	r22,4(r2)
   22d00:	8029883a 	mov	r20,r16
   22d04:	843ffe04 	addi	r16,r16,-8
   22d08:	ac21883a 	add	r16,r21,r16
   22d0c:	ad29883a 	add	r20,r21,r20
   22d10:	dac02604 	addi	r11,sp,152
   22d14:	8811883a 	mov	r8,r17
   22d18:	84400017 	ldw	r17,0(r16)
   22d1c:	87000117 	ldw	fp,4(r16)
   22d20:	b80d883a 	mov	r6,r23
   22d24:	b00f883a 	mov	r7,r22
   22d28:	8809883a 	mov	r4,r17
   22d2c:	e00b883a 	mov	r5,fp
   22d30:	da009b15 	stw	r8,620(sp)
   22d34:	dac09915 	stw	r11,612(sp)
   22d38:	0024ea00 	call	24ea0 <__adddf3>
   22d3c:	100d883a 	mov	r6,r2
   22d40:	180f883a 	mov	r7,r3
   22d44:	8809883a 	mov	r4,r17
   22d48:	e00b883a 	mov	r5,fp
   22d4c:	1027883a 	mov	r19,r2
   22d50:	1825883a 	mov	r18,r3
   22d54:	00269a40 	call	269a4 <__subdf3>
   22d58:	b80d883a 	mov	r6,r23
   22d5c:	b00f883a 	mov	r7,r22
   22d60:	1009883a 	mov	r4,r2
   22d64:	180b883a 	mov	r5,r3
   22d68:	0024ea00 	call	24ea0 <__adddf3>
   22d6c:	dac09917 	ldw	r11,612(sp)
   22d70:	a0800015 	stw	r2,0(r20)
   22d74:	a0c00115 	stw	r3,4(r20)
   22d78:	84c00015 	stw	r19,0(r16)
   22d7c:	84800115 	stw	r18,4(r16)
   22d80:	843ffe04 	addi	r16,r16,-8
   22d84:	a53ffe04 	addi	r20,r20,-8
   22d88:	982f883a 	mov	r23,r19
   22d8c:	902d883a 	mov	r22,r18
   22d90:	da009b17 	ldw	r8,620(sp)
   22d94:	5c3fe01e 	bne	r11,r16,22d18 <__alt_mem_SDRAM_controller+0xfc022d18>
   22d98:	00800044 	movi	r2,1
   22d9c:	12008d0e 	bge	r2,r8,22fd4 <__kernel_rem_pio2+0xcec>
   22da0:	402090fa 	slli	r16,r8,3
   22da4:	da008e17 	ldw	r8,568(sp)
   22da8:	8023883a 	mov	r17,r16
   22dac:	da05883a 	add	r2,sp,r8
   22db0:	10802804 	addi	r2,r2,160
   22db4:	15800017 	ldw	r22,0(r2)
   22db8:	15000117 	ldw	r20,4(r2)
   22dbc:	ac63883a 	add	r17,r21,r17
   22dc0:	843ffe04 	addi	r16,r16,-8
   22dc4:	ac21883a 	add	r16,r21,r16
   22dc8:	8825883a 	mov	r18,r17
   22dcc:	8811883a 	mov	r8,r17
   22dd0:	84400017 	ldw	r17,0(r16)
   22dd4:	87000117 	ldw	fp,4(r16)
   22dd8:	b009883a 	mov	r4,r22
   22ddc:	a00b883a 	mov	r5,r20
   22de0:	880d883a 	mov	r6,r17
   22de4:	e00f883a 	mov	r7,fp
   22de8:	da009b15 	stw	r8,620(sp)
   22dec:	0024ea00 	call	24ea0 <__adddf3>
   22df0:	100d883a 	mov	r6,r2
   22df4:	180f883a 	mov	r7,r3
   22df8:	8809883a 	mov	r4,r17
   22dfc:	e00b883a 	mov	r5,fp
   22e00:	102f883a 	mov	r23,r2
   22e04:	1827883a 	mov	r19,r3
   22e08:	00269a40 	call	269a4 <__subdf3>
   22e0c:	b00d883a 	mov	r6,r22
   22e10:	a00f883a 	mov	r7,r20
   22e14:	1009883a 	mov	r4,r2
   22e18:	180b883a 	mov	r5,r3
   22e1c:	0024ea00 	call	24ea0 <__adddf3>
   22e20:	90800015 	stw	r2,0(r18)
   22e24:	90c00115 	stw	r3,4(r18)
   22e28:	85c00015 	stw	r23,0(r16)
   22e2c:	84c00115 	stw	r19,4(r16)
   22e30:	843ffe04 	addi	r16,r16,-8
   22e34:	94bffe04 	addi	r18,r18,-8
   22e38:	b82d883a 	mov	r22,r23
   22e3c:	9829883a 	mov	r20,r19
   22e40:	da009b17 	ldw	r8,620(sp)
   22e44:	ac3fe21e 	bne	r21,r16,22dd0 <__alt_mem_SDRAM_controller+0xfc022dd0>
   22e48:	4023883a 	mov	r17,r8
   22e4c:	dc002a04 	addi	r16,sp,168
   22e50:	0005883a 	mov	r2,zero
   22e54:	0007883a 	mov	r3,zero
   22e58:	89800017 	ldw	r6,0(r17)
   22e5c:	89c00117 	ldw	r7,4(r17)
   22e60:	1009883a 	mov	r4,r2
   22e64:	8c7ffe04 	addi	r17,r17,-8
   22e68:	180b883a 	mov	r5,r3
   22e6c:	0024ea00 	call	24ea0 <__adddf3>
   22e70:	847ff91e 	bne	r16,r17,22e58 <__alt_mem_SDRAM_controller+0xfc022e58>
   22e74:	da008d17 	ldw	r8,564(sp)
   22e78:	40004726 	beq	r8,zero,22f98 <__kernel_rem_pio2+0xcb0>
   22e7c:	d9002b17 	ldw	r4,172(sp)
   22e80:	d9402917 	ldw	r5,164(sp)
   22e84:	d9802a17 	ldw	r6,168(sp)
   22e88:	da008f17 	ldw	r8,572(sp)
   22e8c:	d9c02817 	ldw	r7,160(sp)
   22e90:	2960003c 	xorhi	r5,r5,32768
   22e94:	2120003c 	xorhi	r4,r4,32768
   22e98:	18e0003c 	xorhi	r3,r3,32768
   22e9c:	41c00015 	stw	r7,0(r8)
   22ea0:	41400115 	stw	r5,4(r8)
   22ea4:	41800215 	stw	r6,8(r8)
   22ea8:	41000315 	stw	r4,12(r8)
   22eac:	40800415 	stw	r2,16(r8)
   22eb0:	40c00515 	stw	r3,20(r8)
   22eb4:	003f3706 	br	22b94 <__alt_mem_SDRAM_controller+0xfc022b94>
   22eb8:	da008e17 	ldw	r8,568(sp)
   22ebc:	d8802804 	addi	r2,sp,160
   22ec0:	dc002604 	addi	r16,sp,152
   22ec4:	1225883a 	add	r18,r2,r8
   22ec8:	0007883a 	mov	r3,zero
   22ecc:	0005883a 	mov	r2,zero
   22ed0:	91800017 	ldw	r6,0(r18)
   22ed4:	91c00117 	ldw	r7,4(r18)
   22ed8:	1009883a 	mov	r4,r2
   22edc:	94bffe04 	addi	r18,r18,-8
   22ee0:	180b883a 	mov	r5,r3
   22ee4:	0024ea00 	call	24ea0 <__adddf3>
   22ee8:	943ff91e 	bne	r18,r16,22ed0 <__alt_mem_SDRAM_controller+0xfc022ed0>
   22eec:	da008d17 	ldw	r8,564(sp)
   22ef0:	d9002817 	ldw	r4,160(sp)
   22ef4:	d9402917 	ldw	r5,164(sp)
   22ef8:	40001a26 	beq	r8,zero,22f64 <__kernel_rem_pio2+0xc7c>
   22efc:	da008f17 	ldw	r8,572(sp)
   22f00:	19a0003c 	xorhi	r6,r3,32768
   22f04:	180f883a 	mov	r7,r3
   22f08:	41800115 	stw	r6,4(r8)
   22f0c:	40800015 	stw	r2,0(r8)
   22f10:	100d883a 	mov	r6,r2
   22f14:	00269a40 	call	269a4 <__subdf3>
   22f18:	04400c0e 	bge	zero,r17,22f4c <__kernel_rem_pio2+0xc64>
   22f1c:	dc002a04 	addi	r16,sp,168
   22f20:	04800044 	movi	r18,1
   22f24:	81800017 	ldw	r6,0(r16)
   22f28:	81c00117 	ldw	r7,4(r16)
   22f2c:	1009883a 	mov	r4,r2
   22f30:	180b883a 	mov	r5,r3
   22f34:	94800044 	addi	r18,r18,1
   22f38:	0024ea00 	call	24ea0 <__adddf3>
   22f3c:	84000204 	addi	r16,r16,8
   22f40:	8cbff80e 	bge	r17,r18,22f24 <__alt_mem_SDRAM_controller+0xfc022f24>
   22f44:	da008d17 	ldw	r8,564(sp)
   22f48:	40004226 	beq	r8,zero,23054 <__kernel_rem_pio2+0xd6c>
   22f4c:	da008f17 	ldw	r8,572(sp)
   22f50:	1009883a 	mov	r4,r2
   22f54:	18a0003c 	xorhi	r2,r3,32768
   22f58:	41000215 	stw	r4,8(r8)
   22f5c:	40800315 	stw	r2,12(r8)
   22f60:	003f0c06 	br	22b94 <__alt_mem_SDRAM_controller+0xfc022b94>
   22f64:	da008f17 	ldw	r8,572(sp)
   22f68:	100d883a 	mov	r6,r2
   22f6c:	180f883a 	mov	r7,r3
   22f70:	40800015 	stw	r2,0(r8)
   22f74:	40c00115 	stw	r3,4(r8)
   22f78:	00269a40 	call	269a4 <__subdf3>
   22f7c:	047fe716 	blt	zero,r17,22f1c <__alt_mem_SDRAM_controller+0xfc022f1c>
   22f80:	da008f17 	ldw	r8,572(sp)
   22f84:	1009883a 	mov	r4,r2
   22f88:	1805883a 	mov	r2,r3
   22f8c:	41000215 	stw	r4,8(r8)
   22f90:	40800315 	stw	r2,12(r8)
   22f94:	003eff06 	br	22b94 <__alt_mem_SDRAM_controller+0xfc022b94>
   22f98:	da008f17 	ldw	r8,572(sp)
   22f9c:	d9802817 	ldw	r6,160(sp)
   22fa0:	d9402a17 	ldw	r5,168(sp)
   22fa4:	d9002b17 	ldw	r4,172(sp)
   22fa8:	41800015 	stw	r6,0(r8)
   22fac:	d9802917 	ldw	r6,164(sp)
   22fb0:	41400215 	stw	r5,8(r8)
   22fb4:	41000315 	stw	r4,12(r8)
   22fb8:	41800115 	stw	r6,4(r8)
   22fbc:	40800415 	stw	r2,16(r8)
   22fc0:	40c00515 	stw	r3,20(r8)
   22fc4:	003ef306 	br	22b94 <__alt_mem_SDRAM_controller+0xfc022b94>
   22fc8:	da00a617 	ldw	r8,664(sp)
   22fcc:	008000c4 	movi	r2,3
   22fd0:	40bef01e 	bne	r8,r2,22b94 <__alt_mem_SDRAM_controller+0xfc022b94>
   22fd4:	0005883a 	mov	r2,zero
   22fd8:	0007883a 	mov	r3,zero
   22fdc:	003fa506 	br	22e74 <__alt_mem_SDRAM_controller+0xfc022e74>
   22fe0:	9485883a 	add	r2,r18,r18
   22fe4:	1085883a 	add	r2,r2,r2
   22fe8:	d8a1883a 	add	r16,sp,r2
   22fec:	880b883a 	mov	r5,r17
   22ff0:	a809883a 	mov	r4,r21
   22ff4:	84007804 	addi	r16,r16,480
   22ff8:	00272a00 	call	272a0 <__fixdfsi>
   22ffc:	80800015 	stw	r2,0(r16)
   23000:	9023883a 	mov	r17,r18
   23004:	003e7e06 	br	22a00 <__alt_mem_SDRAM_controller+0xfc022a00>
   23008:	a80d883a 	mov	r6,r21
   2300c:	400f883a 	mov	r7,r8
   23010:	0009883a 	mov	r4,zero
   23014:	014ffc34 	movhi	r5,16368
   23018:	00269a40 	call	269a4 <__subdf3>
   2301c:	102b883a 	mov	r21,r2
   23020:	1811883a 	mov	r8,r3
   23024:	04c00084 	movi	r19,2
   23028:	003dc006 	br	2272c <__alt_mem_SDRAM_controller+0xfc02272c>
   2302c:	da00a617 	ldw	r8,664(sp)
   23030:	00800084 	movi	r2,2
   23034:	123fe416 	blt	r2,r8,22fc8 <__alt_mem_SDRAM_controller+0xfc022fc8>
   23038:	02000c16 	blt	zero,r8,2306c <__kernel_rem_pio2+0xd84>
   2303c:	403ed51e 	bne	r8,zero,22b94 <__alt_mem_SDRAM_controller+0xfc022b94>
   23040:	0005883a 	mov	r2,zero
   23044:	0007883a 	mov	r3,zero
   23048:	003ecc06 	br	22b7c <__alt_mem_SDRAM_controller+0xfc022b7c>
   2304c:	d8009215 	stw	zero,584(sp)
   23050:	003cc306 	br	22360 <__alt_mem_SDRAM_controller+0xfc022360>
   23054:	da008f17 	ldw	r8,572(sp)
   23058:	1009883a 	mov	r4,r2
   2305c:	1805883a 	mov	r2,r3
   23060:	41000215 	stw	r4,8(r8)
   23064:	40800315 	stw	r2,12(r8)
   23068:	003eca06 	br	22b94 <__alt_mem_SDRAM_controller+0xfc022b94>
   2306c:	0005883a 	mov	r2,zero
   23070:	0007883a 	mov	r3,zero
   23074:	003f9d06 	br	22eec <__alt_mem_SDRAM_controller+0xfc022eec>

00023078 <__kernel_sin>:
   23078:	00a00034 	movhi	r2,32768
   2307c:	defff404 	addi	sp,sp,-48
   23080:	10bfffc4 	addi	r2,r2,-1
   23084:	00cf9034 	movhi	r3,15936
   23088:	ddc00915 	stw	r23,36(sp)
   2308c:	dd800815 	stw	r22,32(sp)
   23090:	dc400315 	stw	r17,12(sp)
   23094:	dc000215 	stw	r16,8(sp)
   23098:	dfc00b15 	stw	ra,44(sp)
   2309c:	df000a15 	stw	fp,40(sp)
   230a0:	dd400715 	stw	r21,28(sp)
   230a4:	dd000615 	stw	r20,24(sp)
   230a8:	dcc00515 	stw	r19,20(sp)
   230ac:	dc800415 	stw	r18,16(sp)
   230b0:	2884703a 	and	r2,r5,r2
   230b4:	18ffffc4 	addi	r3,r3,-1
   230b8:	2821883a 	mov	r16,r5
   230bc:	2023883a 	mov	r17,r4
   230c0:	302f883a 	mov	r23,r6
   230c4:	382d883a 	mov	r22,r7
   230c8:	18800216 	blt	r3,r2,230d4 <__kernel_sin+0x5c>
   230cc:	00272a00 	call	272a0 <__fixdfsi>
   230d0:	10009926 	beq	r2,zero,23338 <__kernel_sin+0x2c0>
   230d4:	880d883a 	mov	r6,r17
   230d8:	800f883a 	mov	r7,r16
   230dc:	8809883a 	mov	r4,r17
   230e0:	800b883a 	mov	r5,r16
   230e4:	002628c0 	call	2628c <__muldf3>
   230e8:	100d883a 	mov	r6,r2
   230ec:	180f883a 	mov	r7,r3
   230f0:	8809883a 	mov	r4,r17
   230f4:	800b883a 	mov	r5,r16
   230f8:	1027883a 	mov	r19,r2
   230fc:	1825883a 	mov	r18,r3
   23100:	002628c0 	call	2628c <__muldf3>
   23104:	0196b434 	movhi	r6,23248
   23108:	01cf79b4 	movhi	r7,15846
   2310c:	31b55f04 	addi	r6,r6,-10884
   23110:	39f64e84 	addi	r7,r7,-9926
   23114:	9809883a 	mov	r4,r19
   23118:	900b883a 	mov	r5,r18
   2311c:	102b883a 	mov	r21,r2
   23120:	1829883a 	mov	r20,r3
   23124:	002628c0 	call	2628c <__muldf3>
   23128:	01a28b34 	movhi	r6,35372
   2312c:	01cf96f4 	movhi	r7,15963
   23130:	31a73ac4 	addi	r6,r6,-25365
   23134:	39f97984 	addi	r7,r7,-6682
   23138:	1009883a 	mov	r4,r2
   2313c:	180b883a 	mov	r5,r3
   23140:	00269a40 	call	269a4 <__subdf3>
   23144:	980d883a 	mov	r6,r19
   23148:	900f883a 	mov	r7,r18
   2314c:	1009883a 	mov	r4,r2
   23150:	180b883a 	mov	r5,r3
   23154:	002628c0 	call	2628c <__muldf3>
   23158:	0195ecb4 	movhi	r6,22450
   2315c:	01cfb1f4 	movhi	r7,16071
   23160:	31bf9f44 	addi	r6,r6,-387
   23164:	39c778c4 	addi	r7,r7,7651
   23168:	1009883a 	mov	r4,r2
   2316c:	180b883a 	mov	r5,r3
   23170:	0024ea00 	call	24ea0 <__adddf3>
   23174:	980d883a 	mov	r6,r19
   23178:	900f883a 	mov	r7,r18
   2317c:	1009883a 	mov	r4,r2
   23180:	180b883a 	mov	r5,r3
   23184:	002628c0 	call	2628c <__muldf3>
   23188:	01867074 	movhi	r6,6593
   2318c:	01cfcab4 	movhi	r7,16170
   23190:	31987544 	addi	r6,r6,25045
   23194:	39c06804 	addi	r7,r7,416
   23198:	1009883a 	mov	r4,r2
   2319c:	180b883a 	mov	r5,r3
   231a0:	00269a40 	call	269a4 <__subdf3>
   231a4:	980d883a 	mov	r6,r19
   231a8:	900f883a 	mov	r7,r18
   231ac:	1009883a 	mov	r4,r2
   231b0:	180b883a 	mov	r5,r3
   231b4:	002628c0 	call	2628c <__muldf3>
   231b8:	01844474 	movhi	r6,4369
   231bc:	01cfe074 	movhi	r7,16257
   231c0:	31be2984 	addi	r6,r6,-1882
   231c4:	39c44444 	addi	r7,r7,4369
   231c8:	1009883a 	mov	r4,r2
   231cc:	180b883a 	mov	r5,r3
   231d0:	0024ea00 	call	24ea0 <__adddf3>
   231d4:	1011883a 	mov	r8,r2
   231d8:	d8800c17 	ldw	r2,48(sp)
   231dc:	1839883a 	mov	fp,r3
   231e0:	10003e26 	beq	r2,zero,232dc <__kernel_sin+0x264>
   231e4:	000d883a 	mov	r6,zero
   231e8:	01cff834 	movhi	r7,16352
   231ec:	b809883a 	mov	r4,r23
   231f0:	b00b883a 	mov	r5,r22
   231f4:	da000015 	stw	r8,0(sp)
   231f8:	002628c0 	call	2628c <__muldf3>
   231fc:	da000017 	ldw	r8,0(sp)
   23200:	e00f883a 	mov	r7,fp
   23204:	a809883a 	mov	r4,r21
   23208:	400d883a 	mov	r6,r8
   2320c:	a00b883a 	mov	r5,r20
   23210:	d8c00115 	stw	r3,4(sp)
   23214:	d8800015 	stw	r2,0(sp)
   23218:	002628c0 	call	2628c <__muldf3>
   2321c:	da800017 	ldw	r10,0(sp)
   23220:	da400117 	ldw	r9,4(sp)
   23224:	100d883a 	mov	r6,r2
   23228:	5009883a 	mov	r4,r10
   2322c:	480b883a 	mov	r5,r9
   23230:	180f883a 	mov	r7,r3
   23234:	00269a40 	call	269a4 <__subdf3>
   23238:	980d883a 	mov	r6,r19
   2323c:	900f883a 	mov	r7,r18
   23240:	1009883a 	mov	r4,r2
   23244:	180b883a 	mov	r5,r3
   23248:	002628c0 	call	2628c <__muldf3>
   2324c:	b80d883a 	mov	r6,r23
   23250:	b00f883a 	mov	r7,r22
   23254:	1009883a 	mov	r4,r2
   23258:	180b883a 	mov	r5,r3
   2325c:	00269a40 	call	269a4 <__subdf3>
   23260:	01955574 	movhi	r6,21845
   23264:	01cff174 	movhi	r7,16325
   23268:	31955244 	addi	r6,r6,21833
   2326c:	39d55544 	addi	r7,r7,21845
   23270:	a809883a 	mov	r4,r21
   23274:	a00b883a 	mov	r5,r20
   23278:	1027883a 	mov	r19,r2
   2327c:	1825883a 	mov	r18,r3
   23280:	002628c0 	call	2628c <__muldf3>
   23284:	100d883a 	mov	r6,r2
   23288:	180f883a 	mov	r7,r3
   2328c:	9809883a 	mov	r4,r19
   23290:	900b883a 	mov	r5,r18
   23294:	0024ea00 	call	24ea0 <__adddf3>
   23298:	100d883a 	mov	r6,r2
   2329c:	180f883a 	mov	r7,r3
   232a0:	8809883a 	mov	r4,r17
   232a4:	800b883a 	mov	r5,r16
   232a8:	00269a40 	call	269a4 <__subdf3>
   232ac:	dfc00b17 	ldw	ra,44(sp)
   232b0:	df000a17 	ldw	fp,40(sp)
   232b4:	ddc00917 	ldw	r23,36(sp)
   232b8:	dd800817 	ldw	r22,32(sp)
   232bc:	dd400717 	ldw	r21,28(sp)
   232c0:	dd000617 	ldw	r20,24(sp)
   232c4:	dcc00517 	ldw	r19,20(sp)
   232c8:	dc800417 	ldw	r18,16(sp)
   232cc:	dc400317 	ldw	r17,12(sp)
   232d0:	dc000217 	ldw	r16,8(sp)
   232d4:	dec00c04 	addi	sp,sp,48
   232d8:	f800283a 	ret
   232dc:	400d883a 	mov	r6,r8
   232e0:	9809883a 	mov	r4,r19
   232e4:	900b883a 	mov	r5,r18
   232e8:	180f883a 	mov	r7,r3
   232ec:	002628c0 	call	2628c <__muldf3>
   232f0:	01955574 	movhi	r6,21845
   232f4:	01cff174 	movhi	r7,16325
   232f8:	31955244 	addi	r6,r6,21833
   232fc:	39d55544 	addi	r7,r7,21845
   23300:	1009883a 	mov	r4,r2
   23304:	180b883a 	mov	r5,r3
   23308:	00269a40 	call	269a4 <__subdf3>
   2330c:	a80d883a 	mov	r6,r21
   23310:	a00f883a 	mov	r7,r20
   23314:	1009883a 	mov	r4,r2
   23318:	180b883a 	mov	r5,r3
   2331c:	002628c0 	call	2628c <__muldf3>
   23320:	880d883a 	mov	r6,r17
   23324:	800f883a 	mov	r7,r16
   23328:	1009883a 	mov	r4,r2
   2332c:	180b883a 	mov	r5,r3
   23330:	0024ea00 	call	24ea0 <__adddf3>
   23334:	003fdd06 	br	232ac <__alt_mem_SDRAM_controller+0xfc0232ac>
   23338:	8805883a 	mov	r2,r17
   2333c:	8007883a 	mov	r3,r16
   23340:	003fda06 	br	232ac <__alt_mem_SDRAM_controller+0xfc0232ac>

00023344 <fabs>:
   23344:	00e00034 	movhi	r3,32768
   23348:	18ffffc4 	addi	r3,r3,-1
   2334c:	2005883a 	mov	r2,r4
   23350:	28c6703a 	and	r3,r5,r3
   23354:	f800283a 	ret

00023358 <floor>:
   23358:	2811d53a 	srai	r8,r5,20
   2335c:	defffa04 	addi	sp,sp,-24
   23360:	dcc00315 	stw	r19,12(sp)
   23364:	4201ffcc 	andi	r8,r8,2047
   23368:	dc800215 	stw	r18,8(sp)
   2336c:	dc400115 	stw	r17,4(sp)
   23370:	dc000015 	stw	r16,0(sp)
   23374:	dfc00515 	stw	ra,20(sp)
   23378:	dd000415 	stw	r20,16(sp)
   2337c:	44bf0044 	addi	r18,r8,-1023
   23380:	018004c4 	movi	r6,19
   23384:	2821883a 	mov	r16,r5
   23388:	2005883a 	mov	r2,r4
   2338c:	280f883a 	mov	r7,r5
   23390:	2827883a 	mov	r19,r5
   23394:	2023883a 	mov	r17,r4
   23398:	34801916 	blt	r6,r18,23400 <floor+0xa8>
   2339c:	90003c16 	blt	r18,zero,23490 <floor+0x138>
   233a0:	05000434 	movhi	r20,16
   233a4:	a53fffc4 	addi	r20,r20,-1
   233a8:	a4a9d83a 	sra	r20,r20,r18
   233ac:	2d0c703a 	and	r6,r5,r20
   233b0:	310cb03a 	or	r6,r6,r4
   233b4:	30001626 	beq	r6,zero,23410 <floor+0xb8>
   233b8:	01a20034 	movhi	r6,34816
   233bc:	01df8e34 	movhi	r7,32312
   233c0:	319d6704 	addi	r6,r6,30108
   233c4:	39f90f04 	addi	r7,r7,-7108
   233c8:	0024ea00 	call	24ea0 <__adddf3>
   233cc:	000d883a 	mov	r6,zero
   233d0:	000f883a 	mov	r7,zero
   233d4:	1009883a 	mov	r4,r2
   233d8:	180b883a 	mov	r5,r3
   233dc:	00260bc0 	call	260bc <__gedf2>
   233e0:	0080040e 	bge	zero,r2,233f4 <floor+0x9c>
   233e4:	80003c16 	blt	r16,zero,234d8 <floor+0x180>
   233e8:	0520303a 	nor	r16,zero,r20
   233ec:	84e0703a 	and	r16,r16,r19
   233f0:	0023883a 	mov	r17,zero
   233f4:	8805883a 	mov	r2,r17
   233f8:	8007883a 	mov	r3,r16
   233fc:	00000506 	br	23414 <floor+0xbc>
   23400:	01800cc4 	movi	r6,51
   23404:	34800b0e 	bge	r6,r18,23434 <floor+0xdc>
   23408:	01810004 	movi	r6,1024
   2340c:	91802f26 	beq	r18,r6,234cc <floor+0x174>
   23410:	3807883a 	mov	r3,r7
   23414:	dfc00517 	ldw	ra,20(sp)
   23418:	dd000417 	ldw	r20,16(sp)
   2341c:	dcc00317 	ldw	r19,12(sp)
   23420:	dc800217 	ldw	r18,8(sp)
   23424:	dc400117 	ldw	r17,4(sp)
   23428:	dc000017 	ldw	r16,0(sp)
   2342c:	dec00604 	addi	sp,sp,24
   23430:	f800283a 	ret
   23434:	423efb44 	addi	r8,r8,-1043
   23438:	053fffc4 	movi	r20,-1
   2343c:	a228d83a 	srl	r20,r20,r8
   23440:	250c703a 	and	r6,r4,r20
   23444:	303ff226 	beq	r6,zero,23410 <__alt_mem_SDRAM_controller+0xfc023410>
   23448:	01a20034 	movhi	r6,34816
   2344c:	01df8e34 	movhi	r7,32312
   23450:	319d6704 	addi	r6,r6,30108
   23454:	39f90f04 	addi	r7,r7,-7108
   23458:	0024ea00 	call	24ea0 <__adddf3>
   2345c:	000d883a 	mov	r6,zero
   23460:	000f883a 	mov	r7,zero
   23464:	1009883a 	mov	r4,r2
   23468:	180b883a 	mov	r5,r3
   2346c:	00260bc0 	call	260bc <__gedf2>
   23470:	00bfe00e 	bge	zero,r2,233f4 <__alt_mem_SDRAM_controller+0xfc0233f4>
   23474:	80001c16 	blt	r16,zero,234e8 <floor+0x190>
   23478:	0510303a 	nor	r8,zero,r20
   2347c:	9821883a 	mov	r16,r19
   23480:	8a22703a 	and	r17,r17,r8
   23484:	8805883a 	mov	r2,r17
   23488:	8007883a 	mov	r3,r16
   2348c:	003fe106 	br	23414 <__alt_mem_SDRAM_controller+0xfc023414>
   23490:	01a20034 	movhi	r6,34816
   23494:	01df8e34 	movhi	r7,32312
   23498:	319d6704 	addi	r6,r6,30108
   2349c:	39f90f04 	addi	r7,r7,-7108
   234a0:	0024ea00 	call	24ea0 <__adddf3>
   234a4:	000d883a 	mov	r6,zero
   234a8:	000f883a 	mov	r7,zero
   234ac:	1009883a 	mov	r4,r2
   234b0:	180b883a 	mov	r5,r3
   234b4:	00260bc0 	call	260bc <__gedf2>
   234b8:	00bfce0e 	bge	zero,r2,233f4 <__alt_mem_SDRAM_controller+0xfc0233f4>
   234bc:	80001516 	blt	r16,zero,23514 <floor+0x1bc>
   234c0:	0023883a 	mov	r17,zero
   234c4:	0021883a 	mov	r16,zero
   234c8:	003fca06 	br	233f4 <__alt_mem_SDRAM_controller+0xfc0233f4>
   234cc:	200d883a 	mov	r6,r4
   234d0:	0024ea00 	call	24ea0 <__adddf3>
   234d4:	003fcf06 	br	23414 <__alt_mem_SDRAM_controller+0xfc023414>
   234d8:	00800434 	movhi	r2,16
   234dc:	14a5d83a 	sra	r18,r2,r18
   234e0:	84a7883a 	add	r19,r16,r18
   234e4:	003fc006 	br	233e8 <__alt_mem_SDRAM_controller+0xfc0233e8>
   234e8:	00800504 	movi	r2,20
   234ec:	90801326 	beq	r18,r2,2353c <floor+0x1e4>
   234f0:	00800d04 	movi	r2,52
   234f4:	14a5c83a 	sub	r18,r2,r18
   234f8:	00800044 	movi	r2,1
   234fc:	1484983a 	sll	r2,r2,r18
   23500:	1445883a 	add	r2,r2,r17
   23504:	14400b2e 	bgeu	r2,r17,23534 <floor+0x1dc>
   23508:	84c00044 	addi	r19,r16,1
   2350c:	1023883a 	mov	r17,r2
   23510:	003fd906 	br	23478 <__alt_mem_SDRAM_controller+0xfc023478>
   23514:	00a00034 	movhi	r2,32768
   23518:	10bfffc4 	addi	r2,r2,-1
   2351c:	8084703a 	and	r2,r16,r2
   23520:	1462b03a 	or	r17,r2,r17
   23524:	883fb326 	beq	r17,zero,233f4 <__alt_mem_SDRAM_controller+0xfc0233f4>
   23528:	0023883a 	mov	r17,zero
   2352c:	042ffc34 	movhi	r16,49136
   23530:	003fb006 	br	233f4 <__alt_mem_SDRAM_controller+0xfc0233f4>
   23534:	1023883a 	mov	r17,r2
   23538:	003fcf06 	br	23478 <__alt_mem_SDRAM_controller+0xfc023478>
   2353c:	84c00044 	addi	r19,r16,1
   23540:	003fcd06 	br	23478 <__alt_mem_SDRAM_controller+0xfc023478>

00023544 <__fpclassifyd>:
   23544:	00a00034 	movhi	r2,32768
   23548:	10bfffc4 	addi	r2,r2,-1
   2354c:	2884703a 	and	r2,r5,r2
   23550:	10000726 	beq	r2,zero,23570 <__fpclassifyd+0x2c>
   23554:	00fffc34 	movhi	r3,65520
   23558:	019ff834 	movhi	r6,32736
   2355c:	28c7883a 	add	r3,r5,r3
   23560:	31bfffc4 	addi	r6,r6,-1
   23564:	30c00536 	bltu	r6,r3,2357c <__fpclassifyd+0x38>
   23568:	00800104 	movi	r2,4
   2356c:	f800283a 	ret
   23570:	2000021e 	bne	r4,zero,2357c <__fpclassifyd+0x38>
   23574:	00800084 	movi	r2,2
   23578:	f800283a 	ret
   2357c:	00dffc34 	movhi	r3,32752
   23580:	019ff834 	movhi	r6,32736
   23584:	28cb883a 	add	r5,r5,r3
   23588:	31bfffc4 	addi	r6,r6,-1
   2358c:	317ff62e 	bgeu	r6,r5,23568 <__alt_mem_SDRAM_controller+0xfc023568>
   23590:	01400434 	movhi	r5,16
   23594:	297fffc4 	addi	r5,r5,-1
   23598:	28800236 	bltu	r5,r2,235a4 <__fpclassifyd+0x60>
   2359c:	008000c4 	movi	r2,3
   235a0:	f800283a 	ret
   235a4:	10c00226 	beq	r2,r3,235b0 <__fpclassifyd+0x6c>
   235a8:	0005883a 	mov	r2,zero
   235ac:	f800283a 	ret
   235b0:	2005003a 	cmpeq	r2,r4,zero
   235b4:	f800283a 	ret

000235b8 <matherr>:
   235b8:	0005883a 	mov	r2,zero
   235bc:	f800283a 	ret

000235c0 <scalbn>:
   235c0:	2a1ffc2c 	andhi	r8,r5,32752
   235c4:	4011d53a 	srai	r8,r8,20
   235c8:	defffe04 	addi	sp,sp,-8
   235cc:	dc000015 	stw	r16,0(sp)
   235d0:	dfc00115 	stw	ra,4(sp)
   235d4:	280f883a 	mov	r7,r5
   235d8:	2015883a 	mov	r10,r4
   235dc:	3021883a 	mov	r16,r6
   235e0:	40001e1e 	bne	r8,zero,2365c <scalbn+0x9c>
   235e4:	00a00034 	movhi	r2,32768
   235e8:	10bfffc4 	addi	r2,r2,-1
   235ec:	2884703a 	and	r2,r5,r2
   235f0:	1104b03a 	or	r2,r2,r4
   235f4:	10002226 	beq	r2,zero,23680 <scalbn+0xc0>
   235f8:	01d0d434 	movhi	r7,17232
   235fc:	000d883a 	mov	r6,zero
   23600:	002628c0 	call	2628c <__muldf3>
   23604:	013ffff4 	movhi	r4,65535
   23608:	210f2c04 	addi	r4,r4,15536
   2360c:	1015883a 	mov	r10,r2
   23610:	180f883a 	mov	r7,r3
   23614:	81002a16 	blt	r16,r4,236c0 <scalbn+0x100>
   23618:	191ffc2c 	andhi	r4,r3,32752
   2361c:	2009d53a 	srai	r4,r4,20
   23620:	223ff284 	addi	r8,r4,-54
   23624:	8211883a 	add	r8,r16,r8
   23628:	0081ff84 	movi	r2,2046
   2362c:	12002f16 	blt	r2,r8,236ec <scalbn+0x12c>
   23630:	0200190e 	bge	zero,r8,23698 <scalbn+0xd8>
   23634:	4010953a 	slli	r8,r8,20
   23638:	01600434 	movhi	r5,32784
   2363c:	297fffc4 	addi	r5,r5,-1
   23640:	194e703a 	and	r7,r3,r5
   23644:	5005883a 	mov	r2,r10
   23648:	3a06b03a 	or	r3,r7,r8
   2364c:	dfc00117 	ldw	ra,4(sp)
   23650:	dc000017 	ldw	r16,0(sp)
   23654:	dec00204 	addi	sp,sp,8
   23658:	f800283a 	ret
   2365c:	0081ffc4 	movi	r2,2047
   23660:	2807883a 	mov	r3,r5
   23664:	40bfef1e 	bne	r8,r2,23624 <__alt_mem_SDRAM_controller+0xfc023624>
   23668:	200d883a 	mov	r6,r4
   2366c:	0024ea00 	call	24ea0 <__adddf3>
   23670:	dfc00117 	ldw	ra,4(sp)
   23674:	dc000017 	ldw	r16,0(sp)
   23678:	dec00204 	addi	sp,sp,8
   2367c:	f800283a 	ret
   23680:	2005883a 	mov	r2,r4
   23684:	2807883a 	mov	r3,r5
   23688:	dfc00117 	ldw	ra,4(sp)
   2368c:	dc000017 	ldw	r16,0(sp)
   23690:	dec00204 	addi	sp,sp,8
   23694:	f800283a 	ret
   23698:	00bff2c4 	movi	r2,-53
   2369c:	4080240e 	bge	r8,r2,23730 <scalbn+0x170>
   236a0:	00b0d414 	movui	r2,50000
   236a4:	14001116 	blt	r2,r16,236ec <scalbn+0x12c>
   236a8:	0130be74 	movhi	r4,49913
   236ac:	01406974 	movhi	r5,421
   236b0:	213cd644 	addi	r4,r4,-3239
   236b4:	295b87c4 	addi	r5,r5,28191
   236b8:	500d883a 	mov	r6,r10
   236bc:	002375c0 	call	2375c <copysign>
   236c0:	01b0be74 	movhi	r6,49913
   236c4:	01c06974 	movhi	r7,421
   236c8:	31bcd644 	addi	r6,r6,-3239
   236cc:	39db87c4 	addi	r7,r7,28191
   236d0:	1009883a 	mov	r4,r2
   236d4:	180b883a 	mov	r5,r3
   236d8:	002628c0 	call	2628c <__muldf3>
   236dc:	dfc00117 	ldw	ra,4(sp)
   236e0:	dc000017 	ldw	r16,0(sp)
   236e4:	dec00204 	addi	sp,sp,8
   236e8:	f800283a 	ret
   236ec:	01220034 	movhi	r4,34816
   236f0:	015f8e34 	movhi	r5,32312
   236f4:	500d883a 	mov	r6,r10
   236f8:	211d6704 	addi	r4,r4,30108
   236fc:	29790f04 	addi	r5,r5,-7108
   23700:	002375c0 	call	2375c <copysign>
   23704:	01a20034 	movhi	r6,34816
   23708:	01df8e34 	movhi	r7,32312
   2370c:	319d6704 	addi	r6,r6,30108
   23710:	39f90f04 	addi	r7,r7,-7108
   23714:	1009883a 	mov	r4,r2
   23718:	180b883a 	mov	r5,r3
   2371c:	002628c0 	call	2628c <__muldf3>
   23720:	dfc00117 	ldw	ra,4(sp)
   23724:	dc000017 	ldw	r16,0(sp)
   23728:	dec00204 	addi	sp,sp,8
   2372c:	f800283a 	ret
   23730:	42000d84 	addi	r8,r8,54
   23734:	4012953a 	slli	r9,r8,20
   23738:	01e00434 	movhi	r7,32784
   2373c:	39ffffc4 	addi	r7,r7,-1
   23740:	19ca703a 	and	r5,r3,r7
   23744:	000d883a 	mov	r6,zero
   23748:	01cf2434 	movhi	r7,15504
   2374c:	5009883a 	mov	r4,r10
   23750:	494ab03a 	or	r5,r9,r5
   23754:	002628c0 	call	2628c <__muldf3>
   23758:	003fbc06 	br	2364c <__alt_mem_SDRAM_controller+0xfc02364c>

0002375c <copysign>:
   2375c:	2005883a 	mov	r2,r4
   23760:	01200034 	movhi	r4,32768
   23764:	213fffc4 	addi	r4,r4,-1
   23768:	38e0002c 	andhi	r3,r7,32768
   2376c:	290a703a 	and	r5,r5,r4
   23770:	28c6b03a 	or	r3,r5,r3
   23774:	f800283a 	ret

00023778 <__fixunsdfsi>:
   23778:	defffd04 	addi	sp,sp,-12
   2377c:	000d883a 	mov	r6,zero
   23780:	01d07834 	movhi	r7,16864
   23784:	dc400115 	stw	r17,4(sp)
   23788:	dc000015 	stw	r16,0(sp)
   2378c:	dfc00215 	stw	ra,8(sp)
   23790:	2023883a 	mov	r17,r4
   23794:	2821883a 	mov	r16,r5
   23798:	00260bc0 	call	260bc <__gedf2>
   2379c:	1000080e 	bge	r2,zero,237c0 <__fixunsdfsi+0x48>
   237a0:	8809883a 	mov	r4,r17
   237a4:	800b883a 	mov	r5,r16
   237a8:	00272a00 	call	272a0 <__fixdfsi>
   237ac:	dfc00217 	ldw	ra,8(sp)
   237b0:	dc400117 	ldw	r17,4(sp)
   237b4:	dc000017 	ldw	r16,0(sp)
   237b8:	dec00304 	addi	sp,sp,12
   237bc:	f800283a 	ret
   237c0:	000d883a 	mov	r6,zero
   237c4:	01d07834 	movhi	r7,16864
   237c8:	8809883a 	mov	r4,r17
   237cc:	800b883a 	mov	r5,r16
   237d0:	00269a40 	call	269a4 <__subdf3>
   237d4:	180b883a 	mov	r5,r3
   237d8:	1009883a 	mov	r4,r2
   237dc:	00272a00 	call	272a0 <__fixdfsi>
   237e0:	00e00034 	movhi	r3,32768
   237e4:	10c5883a 	add	r2,r2,r3
   237e8:	003ff006 	br	237ac <__alt_mem_SDRAM_controller+0xfc0237ac>

000237ec <__divsi3>:
   237ec:	20001b16 	blt	r4,zero,2385c <__divsi3+0x70>
   237f0:	000f883a 	mov	r7,zero
   237f4:	28001616 	blt	r5,zero,23850 <__divsi3+0x64>
   237f8:	200d883a 	mov	r6,r4
   237fc:	29001a2e 	bgeu	r5,r4,23868 <__divsi3+0x7c>
   23800:	00800804 	movi	r2,32
   23804:	00c00044 	movi	r3,1
   23808:	00000106 	br	23810 <__divsi3+0x24>
   2380c:	10000d26 	beq	r2,zero,23844 <__divsi3+0x58>
   23810:	294b883a 	add	r5,r5,r5
   23814:	10bfffc4 	addi	r2,r2,-1
   23818:	18c7883a 	add	r3,r3,r3
   2381c:	293ffb36 	bltu	r5,r4,2380c <__alt_mem_SDRAM_controller+0xfc02380c>
   23820:	0005883a 	mov	r2,zero
   23824:	18000726 	beq	r3,zero,23844 <__divsi3+0x58>
   23828:	0005883a 	mov	r2,zero
   2382c:	31400236 	bltu	r6,r5,23838 <__divsi3+0x4c>
   23830:	314dc83a 	sub	r6,r6,r5
   23834:	10c4b03a 	or	r2,r2,r3
   23838:	1806d07a 	srli	r3,r3,1
   2383c:	280ad07a 	srli	r5,r5,1
   23840:	183ffa1e 	bne	r3,zero,2382c <__alt_mem_SDRAM_controller+0xfc02382c>
   23844:	38000126 	beq	r7,zero,2384c <__divsi3+0x60>
   23848:	0085c83a 	sub	r2,zero,r2
   2384c:	f800283a 	ret
   23850:	014bc83a 	sub	r5,zero,r5
   23854:	39c0005c 	xori	r7,r7,1
   23858:	003fe706 	br	237f8 <__alt_mem_SDRAM_controller+0xfc0237f8>
   2385c:	0109c83a 	sub	r4,zero,r4
   23860:	01c00044 	movi	r7,1
   23864:	003fe306 	br	237f4 <__alt_mem_SDRAM_controller+0xfc0237f4>
   23868:	00c00044 	movi	r3,1
   2386c:	003fee06 	br	23828 <__alt_mem_SDRAM_controller+0xfc023828>

00023870 <__modsi3>:
   23870:	20001716 	blt	r4,zero,238d0 <__modsi3+0x60>
   23874:	000f883a 	mov	r7,zero
   23878:	2005883a 	mov	r2,r4
   2387c:	28001216 	blt	r5,zero,238c8 <__modsi3+0x58>
   23880:	2900162e 	bgeu	r5,r4,238dc <__modsi3+0x6c>
   23884:	01800804 	movi	r6,32
   23888:	00c00044 	movi	r3,1
   2388c:	00000106 	br	23894 <__modsi3+0x24>
   23890:	30000a26 	beq	r6,zero,238bc <__modsi3+0x4c>
   23894:	294b883a 	add	r5,r5,r5
   23898:	31bfffc4 	addi	r6,r6,-1
   2389c:	18c7883a 	add	r3,r3,r3
   238a0:	293ffb36 	bltu	r5,r4,23890 <__alt_mem_SDRAM_controller+0xfc023890>
   238a4:	18000526 	beq	r3,zero,238bc <__modsi3+0x4c>
   238a8:	1806d07a 	srli	r3,r3,1
   238ac:	11400136 	bltu	r2,r5,238b4 <__modsi3+0x44>
   238b0:	1145c83a 	sub	r2,r2,r5
   238b4:	280ad07a 	srli	r5,r5,1
   238b8:	183ffb1e 	bne	r3,zero,238a8 <__alt_mem_SDRAM_controller+0xfc0238a8>
   238bc:	38000126 	beq	r7,zero,238c4 <__modsi3+0x54>
   238c0:	0085c83a 	sub	r2,zero,r2
   238c4:	f800283a 	ret
   238c8:	014bc83a 	sub	r5,zero,r5
   238cc:	003fec06 	br	23880 <__alt_mem_SDRAM_controller+0xfc023880>
   238d0:	0109c83a 	sub	r4,zero,r4
   238d4:	01c00044 	movi	r7,1
   238d8:	003fe706 	br	23878 <__alt_mem_SDRAM_controller+0xfc023878>
   238dc:	00c00044 	movi	r3,1
   238e0:	003ff106 	br	238a8 <__alt_mem_SDRAM_controller+0xfc0238a8>

000238e4 <__udivsi3>:
   238e4:	200d883a 	mov	r6,r4
   238e8:	2900152e 	bgeu	r5,r4,23940 <__udivsi3+0x5c>
   238ec:	28001416 	blt	r5,zero,23940 <__udivsi3+0x5c>
   238f0:	00800804 	movi	r2,32
   238f4:	00c00044 	movi	r3,1
   238f8:	00000206 	br	23904 <__udivsi3+0x20>
   238fc:	10000e26 	beq	r2,zero,23938 <__udivsi3+0x54>
   23900:	28000516 	blt	r5,zero,23918 <__udivsi3+0x34>
   23904:	294b883a 	add	r5,r5,r5
   23908:	10bfffc4 	addi	r2,r2,-1
   2390c:	18c7883a 	add	r3,r3,r3
   23910:	293ffa36 	bltu	r5,r4,238fc <__alt_mem_SDRAM_controller+0xfc0238fc>
   23914:	18000826 	beq	r3,zero,23938 <__udivsi3+0x54>
   23918:	0005883a 	mov	r2,zero
   2391c:	31400236 	bltu	r6,r5,23928 <__udivsi3+0x44>
   23920:	314dc83a 	sub	r6,r6,r5
   23924:	10c4b03a 	or	r2,r2,r3
   23928:	1806d07a 	srli	r3,r3,1
   2392c:	280ad07a 	srli	r5,r5,1
   23930:	183ffa1e 	bne	r3,zero,2391c <__alt_mem_SDRAM_controller+0xfc02391c>
   23934:	f800283a 	ret
   23938:	0005883a 	mov	r2,zero
   2393c:	f800283a 	ret
   23940:	00c00044 	movi	r3,1
   23944:	003ff406 	br	23918 <__alt_mem_SDRAM_controller+0xfc023918>

00023948 <__umodsi3>:
   23948:	2005883a 	mov	r2,r4
   2394c:	2900122e 	bgeu	r5,r4,23998 <__umodsi3+0x50>
   23950:	28001116 	blt	r5,zero,23998 <__umodsi3+0x50>
   23954:	01800804 	movi	r6,32
   23958:	00c00044 	movi	r3,1
   2395c:	00000206 	br	23968 <__umodsi3+0x20>
   23960:	30000c26 	beq	r6,zero,23994 <__umodsi3+0x4c>
   23964:	28000516 	blt	r5,zero,2397c <__umodsi3+0x34>
   23968:	294b883a 	add	r5,r5,r5
   2396c:	31bfffc4 	addi	r6,r6,-1
   23970:	18c7883a 	add	r3,r3,r3
   23974:	293ffa36 	bltu	r5,r4,23960 <__alt_mem_SDRAM_controller+0xfc023960>
   23978:	18000626 	beq	r3,zero,23994 <__umodsi3+0x4c>
   2397c:	1806d07a 	srli	r3,r3,1
   23980:	11400136 	bltu	r2,r5,23988 <__umodsi3+0x40>
   23984:	1145c83a 	sub	r2,r2,r5
   23988:	280ad07a 	srli	r5,r5,1
   2398c:	183ffb1e 	bne	r3,zero,2397c <__alt_mem_SDRAM_controller+0xfc02397c>
   23990:	f800283a 	ret
   23994:	f800283a 	ret
   23998:	00c00044 	movi	r3,1
   2399c:	003ff706 	br	2397c <__alt_mem_SDRAM_controller+0xfc02397c>

000239a0 <__addsf3>:
   239a0:	defffc04 	addi	sp,sp,-16
   239a4:	2004d7fa 	srli	r2,r4,31
   239a8:	280cd5fa 	srli	r6,r5,23
   239ac:	dc000015 	stw	r16,0(sp)
   239b0:	00c02034 	movhi	r3,128
   239b4:	2020d5fa 	srli	r16,r4,23
   239b8:	280ed7fa 	srli	r7,r5,31
   239bc:	18ffffc4 	addi	r3,r3,-1
   239c0:	dc400115 	stw	r17,4(sp)
   239c4:	1908703a 	and	r4,r3,r4
   239c8:	194a703a 	and	r5,r3,r5
   239cc:	dfc00315 	stw	ra,12(sp)
   239d0:	dc800215 	stw	r18,8(sp)
   239d4:	14403fcc 	andi	r17,r2,255
   239d8:	84003fcc 	andi	r16,r16,255
   239dc:	200890fa 	slli	r4,r4,3
   239e0:	31803fcc 	andi	r6,r6,255
   239e4:	280a90fa 	slli	r5,r5,3
   239e8:	89c05026 	beq	r17,r7,23b2c <__addsf3+0x18c>
   239ec:	8185c83a 	sub	r2,r16,r6
   239f0:	00807a0e 	bge	zero,r2,23bdc <__addsf3+0x23c>
   239f4:	30001e1e 	bne	r6,zero,23a70 <__addsf3+0xd0>
   239f8:	28006d1e 	bne	r5,zero,23bb0 <__addsf3+0x210>
   239fc:	208001cc 	andi	r2,r4,7
   23a00:	10000426 	beq	r2,zero,23a14 <__addsf3+0x74>
   23a04:	208003cc 	andi	r2,r4,15
   23a08:	00c00104 	movi	r3,4
   23a0c:	10c00126 	beq	r2,r3,23a14 <__addsf3+0x74>
   23a10:	20c9883a 	add	r4,r4,r3
   23a14:	2081002c 	andhi	r2,r4,1024
   23a18:	10003926 	beq	r2,zero,23b00 <__addsf3+0x160>
   23a1c:	84000044 	addi	r16,r16,1
   23a20:	00803fc4 	movi	r2,255
   23a24:	80807826 	beq	r16,r2,23c08 <__addsf3+0x268>
   23a28:	200891ba 	slli	r4,r4,6
   23a2c:	8805883a 	mov	r2,r17
   23a30:	2008d27a 	srli	r4,r4,9
   23a34:	84003fcc 	andi	r16,r16,255
   23a38:	800695fa 	slli	r3,r16,23
   23a3c:	10803fcc 	andi	r2,r2,255
   23a40:	04002034 	movhi	r16,128
   23a44:	843fffc4 	addi	r16,r16,-1
   23a48:	100497fa 	slli	r2,r2,31
   23a4c:	2408703a 	and	r4,r4,r16
   23a50:	20e0b03a 	or	r16,r4,r3
   23a54:	8084b03a 	or	r2,r16,r2
   23a58:	dfc00317 	ldw	ra,12(sp)
   23a5c:	dc800217 	ldw	r18,8(sp)
   23a60:	dc400117 	ldw	r17,4(sp)
   23a64:	dc000017 	ldw	r16,0(sp)
   23a68:	dec00404 	addi	sp,sp,16
   23a6c:	f800283a 	ret
   23a70:	00c03fc4 	movi	r3,255
   23a74:	80ffe126 	beq	r16,r3,239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23a78:	29410034 	orhi	r5,r5,1024
   23a7c:	00c006c4 	movi	r3,27
   23a80:	18807516 	blt	r3,r2,23c58 <__addsf3+0x2b8>
   23a84:	00c00804 	movi	r3,32
   23a88:	1887c83a 	sub	r3,r3,r2
   23a8c:	28c6983a 	sll	r3,r5,r3
   23a90:	288ad83a 	srl	r5,r5,r2
   23a94:	1804c03a 	cmpne	r2,r3,zero
   23a98:	288ab03a 	or	r5,r5,r2
   23a9c:	2149c83a 	sub	r4,r4,r5
   23aa0:	2081002c 	andhi	r2,r4,1024
   23aa4:	10001426 	beq	r2,zero,23af8 <__addsf3+0x158>
   23aa8:	04810034 	movhi	r18,1024
   23aac:	94bfffc4 	addi	r18,r18,-1
   23ab0:	24a4703a 	and	r18,r4,r18
   23ab4:	9009883a 	mov	r4,r18
   23ab8:	00276b40 	call	276b4 <__clzsi2>
   23abc:	10bffec4 	addi	r2,r2,-5
   23ac0:	90a4983a 	sll	r18,r18,r2
   23ac4:	14005416 	blt	r2,r16,23c18 <__addsf3+0x278>
   23ac8:	1405c83a 	sub	r2,r2,r16
   23acc:	11000044 	addi	r4,r2,1
   23ad0:	00800804 	movi	r2,32
   23ad4:	1105c83a 	sub	r2,r2,r4
   23ad8:	9084983a 	sll	r2,r18,r2
   23adc:	9124d83a 	srl	r18,r18,r4
   23ae0:	0021883a 	mov	r16,zero
   23ae4:	1008c03a 	cmpne	r4,r2,zero
   23ae8:	9108b03a 	or	r4,r18,r4
   23aec:	003fc306 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23af0:	1000db26 	beq	r2,zero,23e60 <__addsf3+0x4c0>
   23af4:	1009883a 	mov	r4,r2
   23af8:	208001cc 	andi	r2,r4,7
   23afc:	103fc11e 	bne	r2,zero,23a04 <__alt_mem_SDRAM_controller+0xfc023a04>
   23b00:	2006d0fa 	srli	r3,r4,3
   23b04:	01003fc4 	movi	r4,255
   23b08:	8805883a 	mov	r2,r17
   23b0c:	8100241e 	bne	r16,r4,23ba0 <__addsf3+0x200>
   23b10:	18006e26 	beq	r3,zero,23ccc <__addsf3+0x32c>
   23b14:	19001034 	orhi	r4,r3,64
   23b18:	00c02034 	movhi	r3,128
   23b1c:	18ffffc4 	addi	r3,r3,-1
   23b20:	043fffc4 	movi	r16,-1
   23b24:	20c8703a 	and	r4,r4,r3
   23b28:	003fc206 	br	23a34 <__alt_mem_SDRAM_controller+0xfc023a34>
   23b2c:	8187c83a 	sub	r3,r16,r6
   23b30:	00c03e0e 	bge	zero,r3,23c2c <__addsf3+0x28c>
   23b34:	30002326 	beq	r6,zero,23bc4 <__addsf3+0x224>
   23b38:	01803fc4 	movi	r6,255
   23b3c:	81bfaf26 	beq	r16,r6,239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23b40:	29410034 	orhi	r5,r5,1024
   23b44:	018006c4 	movi	r6,27
   23b48:	30c07416 	blt	r6,r3,23d1c <__addsf3+0x37c>
   23b4c:	01800804 	movi	r6,32
   23b50:	30cdc83a 	sub	r6,r6,r3
   23b54:	298c983a 	sll	r6,r5,r6
   23b58:	28cad83a 	srl	r5,r5,r3
   23b5c:	3006c03a 	cmpne	r3,r6,zero
   23b60:	28cab03a 	or	r5,r5,r3
   23b64:	2149883a 	add	r4,r4,r5
   23b68:	20c1002c 	andhi	r3,r4,1024
   23b6c:	183fe226 	beq	r3,zero,23af8 <__alt_mem_SDRAM_controller+0xfc023af8>
   23b70:	84000044 	addi	r16,r16,1
   23b74:	00c03fc4 	movi	r3,255
   23b78:	80c05426 	beq	r16,r3,23ccc <__addsf3+0x32c>
   23b7c:	00bf0034 	movhi	r2,64512
   23b80:	10bfffc4 	addi	r2,r2,-1
   23b84:	20c0004c 	andi	r3,r4,1
   23b88:	2088703a 	and	r4,r4,r2
   23b8c:	2008d07a 	srli	r4,r4,1
   23b90:	20c8b03a 	or	r4,r4,r3
   23b94:	003f9906 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23b98:	0007883a 	mov	r3,zero
   23b9c:	0005883a 	mov	r2,zero
   23ba0:	01002034 	movhi	r4,128
   23ba4:	213fffc4 	addi	r4,r4,-1
   23ba8:	1908703a 	and	r4,r3,r4
   23bac:	003fa106 	br	23a34 <__alt_mem_SDRAM_controller+0xfc023a34>
   23bb0:	10bfffc4 	addi	r2,r2,-1
   23bb4:	103fb926 	beq	r2,zero,23a9c <__alt_mem_SDRAM_controller+0xfc023a9c>
   23bb8:	00c03fc4 	movi	r3,255
   23bbc:	80ffaf1e 	bne	r16,r3,23a7c <__alt_mem_SDRAM_controller+0xfc023a7c>
   23bc0:	003f8e06 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23bc4:	283f8d26 	beq	r5,zero,239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23bc8:	18ffffc4 	addi	r3,r3,-1
   23bcc:	183fe526 	beq	r3,zero,23b64 <__alt_mem_SDRAM_controller+0xfc023b64>
   23bd0:	01803fc4 	movi	r6,255
   23bd4:	81bfdb1e 	bne	r16,r6,23b44 <__alt_mem_SDRAM_controller+0xfc023b44>
   23bd8:	003f8806 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23bdc:	1000201e 	bne	r2,zero,23c60 <__addsf3+0x2c0>
   23be0:	80800044 	addi	r2,r16,1
   23be4:	10803fcc 	andi	r2,r2,255
   23be8:	01800044 	movi	r6,1
   23bec:	3080450e 	bge	r6,r2,23d04 <__addsf3+0x364>
   23bf0:	2165c83a 	sub	r18,r4,r5
   23bf4:	90c1002c 	andhi	r3,r18,1024
   23bf8:	18002b26 	beq	r3,zero,23ca8 <__addsf3+0x308>
   23bfc:	2925c83a 	sub	r18,r5,r4
   23c00:	3823883a 	mov	r17,r7
   23c04:	003fab06 	br	23ab4 <__alt_mem_SDRAM_controller+0xfc023ab4>
   23c08:	8805883a 	mov	r2,r17
   23c0c:	043fffc4 	movi	r16,-1
   23c10:	0009883a 	mov	r4,zero
   23c14:	003f8706 	br	23a34 <__alt_mem_SDRAM_controller+0xfc023a34>
   23c18:	013f0034 	movhi	r4,64512
   23c1c:	213fffc4 	addi	r4,r4,-1
   23c20:	80a1c83a 	sub	r16,r16,r2
   23c24:	9108703a 	and	r4,r18,r4
   23c28:	003f7406 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23c2c:	1800411e 	bne	r3,zero,23d34 <__addsf3+0x394>
   23c30:	80c00044 	addi	r3,r16,1
   23c34:	19c03fcc 	andi	r7,r3,255
   23c38:	01800044 	movi	r6,1
   23c3c:	31c0260e 	bge	r6,r7,23cd8 <__addsf3+0x338>
   23c40:	01803fc4 	movi	r6,255
   23c44:	19802126 	beq	r3,r6,23ccc <__addsf3+0x32c>
   23c48:	2149883a 	add	r4,r4,r5
   23c4c:	2008d07a 	srli	r4,r4,1
   23c50:	1821883a 	mov	r16,r3
   23c54:	003f6906 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23c58:	01400044 	movi	r5,1
   23c5c:	003f8f06 	br	23a9c <__alt_mem_SDRAM_controller+0xfc023a9c>
   23c60:	8000151e 	bne	r16,zero,23cb8 <__addsf3+0x318>
   23c64:	20002f26 	beq	r4,zero,23d24 <__addsf3+0x384>
   23c68:	0084303a 	nor	r2,zero,r2
   23c6c:	10000a26 	beq	r2,zero,23c98 <__addsf3+0x2f8>
   23c70:	00c03fc4 	movi	r3,255
   23c74:	30c02b26 	beq	r6,r3,23d24 <__addsf3+0x384>
   23c78:	00c006c4 	movi	r3,27
   23c7c:	18806d16 	blt	r3,r2,23e34 <__addsf3+0x494>
   23c80:	00c00804 	movi	r3,32
   23c84:	1887c83a 	sub	r3,r3,r2
   23c88:	20c6983a 	sll	r3,r4,r3
   23c8c:	2084d83a 	srl	r2,r4,r2
   23c90:	1808c03a 	cmpne	r4,r3,zero
   23c94:	1108b03a 	or	r4,r2,r4
   23c98:	2909c83a 	sub	r4,r5,r4
   23c9c:	3021883a 	mov	r16,r6
   23ca0:	3823883a 	mov	r17,r7
   23ca4:	003f7e06 	br	23aa0 <__alt_mem_SDRAM_controller+0xfc023aa0>
   23ca8:	903f821e 	bne	r18,zero,23ab4 <__alt_mem_SDRAM_controller+0xfc023ab4>
   23cac:	0005883a 	mov	r2,zero
   23cb0:	0021883a 	mov	r16,zero
   23cb4:	003fba06 	br	23ba0 <__alt_mem_SDRAM_controller+0xfc023ba0>
   23cb8:	00c03fc4 	movi	r3,255
   23cbc:	30c01926 	beq	r6,r3,23d24 <__addsf3+0x384>
   23cc0:	0085c83a 	sub	r2,zero,r2
   23cc4:	21010034 	orhi	r4,r4,1024
   23cc8:	003feb06 	br	23c78 <__alt_mem_SDRAM_controller+0xfc023c78>
   23ccc:	043fffc4 	movi	r16,-1
   23cd0:	0009883a 	mov	r4,zero
   23cd4:	003f5706 	br	23a34 <__alt_mem_SDRAM_controller+0xfc023a34>
   23cd8:	80004a1e 	bne	r16,zero,23e04 <__addsf3+0x464>
   23cdc:	20005926 	beq	r4,zero,23e44 <__addsf3+0x4a4>
   23ce0:	283f4626 	beq	r5,zero,239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23ce4:	2149883a 	add	r4,r4,r5
   23ce8:	2081002c 	andhi	r2,r4,1024
   23cec:	103f8226 	beq	r2,zero,23af8 <__alt_mem_SDRAM_controller+0xfc023af8>
   23cf0:	00bf0034 	movhi	r2,64512
   23cf4:	10bfffc4 	addi	r2,r2,-1
   23cf8:	3021883a 	mov	r16,r6
   23cfc:	2088703a 	and	r4,r4,r2
   23d00:	003f3e06 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23d04:	8000121e 	bne	r16,zero,23d50 <__addsf3+0x3b0>
   23d08:	2000261e 	bne	r4,zero,23da4 <__addsf3+0x404>
   23d0c:	283fa226 	beq	r5,zero,23b98 <__alt_mem_SDRAM_controller+0xfc023b98>
   23d10:	2809883a 	mov	r4,r5
   23d14:	3823883a 	mov	r17,r7
   23d18:	003f3806 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23d1c:	01400044 	movi	r5,1
   23d20:	003f9006 	br	23b64 <__alt_mem_SDRAM_controller+0xfc023b64>
   23d24:	2809883a 	mov	r4,r5
   23d28:	3021883a 	mov	r16,r6
   23d2c:	3823883a 	mov	r17,r7
   23d30:	003f3206 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23d34:	80000c1e 	bne	r16,zero,23d68 <__addsf3+0x3c8>
   23d38:	20002f26 	beq	r4,zero,23df8 <__addsf3+0x458>
   23d3c:	00c6303a 	nor	r3,zero,r3
   23d40:	18002b1e 	bne	r3,zero,23df0 <__addsf3+0x450>
   23d44:	2149883a 	add	r4,r4,r5
   23d48:	3021883a 	mov	r16,r6
   23d4c:	003f8606 	br	23b68 <__alt_mem_SDRAM_controller+0xfc023b68>
   23d50:	20001b1e 	bne	r4,zero,23dc0 <__addsf3+0x420>
   23d54:	28003926 	beq	r5,zero,23e3c <__addsf3+0x49c>
   23d58:	2809883a 	mov	r4,r5
   23d5c:	3823883a 	mov	r17,r7
   23d60:	04003fc4 	movi	r16,255
   23d64:	003f2506 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23d68:	01c03fc4 	movi	r7,255
   23d6c:	31c02226 	beq	r6,r7,23df8 <__addsf3+0x458>
   23d70:	00c7c83a 	sub	r3,zero,r3
   23d74:	21010034 	orhi	r4,r4,1024
   23d78:	01c006c4 	movi	r7,27
   23d7c:	38c03616 	blt	r7,r3,23e58 <__addsf3+0x4b8>
   23d80:	01c00804 	movi	r7,32
   23d84:	38cfc83a 	sub	r7,r7,r3
   23d88:	21ce983a 	sll	r7,r4,r7
   23d8c:	20c6d83a 	srl	r3,r4,r3
   23d90:	3808c03a 	cmpne	r4,r7,zero
   23d94:	1906b03a 	or	r3,r3,r4
   23d98:	1949883a 	add	r4,r3,r5
   23d9c:	3021883a 	mov	r16,r6
   23da0:	003f7106 	br	23b68 <__alt_mem_SDRAM_controller+0xfc023b68>
   23da4:	283f1526 	beq	r5,zero,239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23da8:	2145c83a 	sub	r2,r4,r5
   23dac:	10c1002c 	andhi	r3,r2,1024
   23db0:	183f4f26 	beq	r3,zero,23af0 <__alt_mem_SDRAM_controller+0xfc023af0>
   23db4:	2909c83a 	sub	r4,r5,r4
   23db8:	3823883a 	mov	r17,r7
   23dbc:	003f0f06 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23dc0:	28001a26 	beq	r5,zero,23e2c <__addsf3+0x48c>
   23dc4:	2008d0fa 	srli	r4,r4,3
   23dc8:	2080102c 	andhi	r2,r4,64
   23dcc:	10000526 	beq	r2,zero,23de4 <__addsf3+0x444>
   23dd0:	280ad0fa 	srli	r5,r5,3
   23dd4:	2880102c 	andhi	r2,r5,64
   23dd8:	1000021e 	bne	r2,zero,23de4 <__addsf3+0x444>
   23ddc:	2809883a 	mov	r4,r5
   23de0:	3823883a 	mov	r17,r7
   23de4:	200890fa 	slli	r4,r4,3
   23de8:	04003fc4 	movi	r16,255
   23dec:	003f0306 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23df0:	01c03fc4 	movi	r7,255
   23df4:	31ffe01e 	bne	r6,r7,23d78 <__alt_mem_SDRAM_controller+0xfc023d78>
   23df8:	2809883a 	mov	r4,r5
   23dfc:	3021883a 	mov	r16,r6
   23e00:	003efe06 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23e04:	20001126 	beq	r4,zero,23e4c <__addsf3+0x4ac>
   23e08:	28000826 	beq	r5,zero,23e2c <__addsf3+0x48c>
   23e0c:	2008d0fa 	srli	r4,r4,3
   23e10:	2080102c 	andhi	r2,r4,64
   23e14:	103ff326 	beq	r2,zero,23de4 <__alt_mem_SDRAM_controller+0xfc023de4>
   23e18:	280ad0fa 	srli	r5,r5,3
   23e1c:	2880102c 	andhi	r2,r5,64
   23e20:	103ff01e 	bne	r2,zero,23de4 <__alt_mem_SDRAM_controller+0xfc023de4>
   23e24:	2809883a 	mov	r4,r5
   23e28:	003fee06 	br	23de4 <__alt_mem_SDRAM_controller+0xfc023de4>
   23e2c:	04003fc4 	movi	r16,255
   23e30:	003ef206 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23e34:	01000044 	movi	r4,1
   23e38:	003f9706 	br	23c98 <__alt_mem_SDRAM_controller+0xfc023c98>
   23e3c:	0005883a 	mov	r2,zero
   23e40:	003f3406 	br	23b14 <__alt_mem_SDRAM_controller+0xfc023b14>
   23e44:	2809883a 	mov	r4,r5
   23e48:	003eec06 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23e4c:	2809883a 	mov	r4,r5
   23e50:	04003fc4 	movi	r16,255
   23e54:	003ee906 	br	239fc <__alt_mem_SDRAM_controller+0xfc0239fc>
   23e58:	00c00044 	movi	r3,1
   23e5c:	003fce06 	br	23d98 <__alt_mem_SDRAM_controller+0xfc023d98>
   23e60:	0005883a 	mov	r2,zero
   23e64:	003f4e06 	br	23ba0 <__alt_mem_SDRAM_controller+0xfc023ba0>

00023e68 <__divsf3>:
   23e68:	defff504 	addi	sp,sp,-44
   23e6c:	200cd5fa 	srli	r6,r4,23
   23e70:	dcc00415 	stw	r19,16(sp)
   23e74:	2026d7fa 	srli	r19,r4,31
   23e78:	00c02034 	movhi	r3,128
   23e7c:	dd800715 	stw	r22,28(sp)
   23e80:	dd000515 	stw	r20,20(sp)
   23e84:	dc800315 	stw	r18,12(sp)
   23e88:	18ffffc4 	addi	r3,r3,-1
   23e8c:	dfc00a15 	stw	ra,40(sp)
   23e90:	df000915 	stw	fp,36(sp)
   23e94:	ddc00815 	stw	r23,32(sp)
   23e98:	dd400615 	stw	r21,24(sp)
   23e9c:	dc400215 	stw	r17,8(sp)
   23ea0:	dc000115 	stw	r16,4(sp)
   23ea4:	35003fcc 	andi	r20,r6,255
   23ea8:	1924703a 	and	r18,r3,r4
   23eac:	9d803fcc 	andi	r22,r19,255
   23eb0:	a0005226 	beq	r20,zero,23ffc <__divsf3+0x194>
   23eb4:	00803fc4 	movi	r2,255
   23eb8:	a0802e26 	beq	r20,r2,23f74 <__divsf3+0x10c>
   23ebc:	91002034 	orhi	r4,r18,128
   23ec0:	202490fa 	slli	r18,r4,3
   23ec4:	a53fe044 	addi	r20,r20,-127
   23ec8:	0021883a 	mov	r16,zero
   23ecc:	002f883a 	mov	r23,zero
   23ed0:	280cd5fa 	srli	r6,r5,23
   23ed4:	282ad7fa 	srli	r21,r5,31
   23ed8:	00c02034 	movhi	r3,128
   23edc:	18ffffc4 	addi	r3,r3,-1
   23ee0:	31803fcc 	andi	r6,r6,255
   23ee4:	1962703a 	and	r17,r3,r5
   23ee8:	af003fcc 	andi	fp,r21,255
   23eec:	30004a26 	beq	r6,zero,24018 <__divsf3+0x1b0>
   23ef0:	00803fc4 	movi	r2,255
   23ef4:	30804526 	beq	r6,r2,2400c <__divsf3+0x1a4>
   23ef8:	89402034 	orhi	r5,r17,128
   23efc:	282290fa 	slli	r17,r5,3
   23f00:	31bfe044 	addi	r6,r6,-127
   23f04:	000b883a 	mov	r5,zero
   23f08:	2c20b03a 	or	r16,r5,r16
   23f0c:	802090ba 	slli	r16,r16,2
   23f10:	008000b4 	movhi	r2,2
   23f14:	108fcd04 	addi	r2,r2,16180
   23f18:	80a1883a 	add	r16,r16,r2
   23f1c:	81000017 	ldw	r4,0(r16)
   23f20:	9d46f03a 	xor	r3,r19,r21
   23f24:	180f883a 	mov	r7,r3
   23f28:	18803fcc 	andi	r2,r3,255
   23f2c:	a18dc83a 	sub	r6,r20,r6
   23f30:	2000683a 	jmp	r4
   23f34:	00024118 	cmpnei	zero,zero,2308
   23f38:	00023f9c 	xori	zero,zero,2302
   23f3c:	0002410c 	andi	zero,zero,2308
   23f40:	00023f88 	cmpgei	zero,zero,2302
   23f44:	0002410c 	andi	zero,zero,2308
   23f48:	000240e4 	muli	zero,zero,2307
   23f4c:	0002410c 	andi	zero,zero,2308
   23f50:	00023f88 	cmpgei	zero,zero,2302
   23f54:	00023f9c 	xori	zero,zero,2302
   23f58:	00023f9c 	xori	zero,zero,2302
   23f5c:	000240e4 	muli	zero,zero,2307
   23f60:	00023f88 	cmpgei	zero,zero,2302
   23f64:	000241f8 	rdprs	zero,zero,2311
   23f68:	000241f8 	rdprs	zero,zero,2311
   23f6c:	000241f8 	rdprs	zero,zero,2311
   23f70:	000241ac 	andhi	zero,zero,2310
   23f74:	9000581e 	bne	r18,zero,240d8 <__divsf3+0x270>
   23f78:	04000204 	movi	r16,8
   23f7c:	05c00084 	movi	r23,2
   23f80:	003fd306 	br	23ed0 <__alt_mem_SDRAM_controller+0xfc023ed0>
   23f84:	0023883a 	mov	r17,zero
   23f88:	e02d883a 	mov	r22,fp
   23f8c:	282f883a 	mov	r23,r5
   23f90:	00800084 	movi	r2,2
   23f94:	b8808f1e 	bne	r23,r2,241d4 <__divsf3+0x36c>
   23f98:	b005883a 	mov	r2,r22
   23f9c:	11c0004c 	andi	r7,r2,1
   23fa0:	013fffc4 	movi	r4,-1
   23fa4:	000d883a 	mov	r6,zero
   23fa8:	21003fcc 	andi	r4,r4,255
   23fac:	200895fa 	slli	r4,r4,23
   23fb0:	38803fcc 	andi	r2,r7,255
   23fb4:	00c02034 	movhi	r3,128
   23fb8:	100497fa 	slli	r2,r2,31
   23fbc:	18ffffc4 	addi	r3,r3,-1
   23fc0:	30c6703a 	and	r3,r6,r3
   23fc4:	1906b03a 	or	r3,r3,r4
   23fc8:	1884b03a 	or	r2,r3,r2
   23fcc:	dfc00a17 	ldw	ra,40(sp)
   23fd0:	df000917 	ldw	fp,36(sp)
   23fd4:	ddc00817 	ldw	r23,32(sp)
   23fd8:	dd800717 	ldw	r22,28(sp)
   23fdc:	dd400617 	ldw	r21,24(sp)
   23fe0:	dd000517 	ldw	r20,20(sp)
   23fe4:	dcc00417 	ldw	r19,16(sp)
   23fe8:	dc800317 	ldw	r18,12(sp)
   23fec:	dc400217 	ldw	r17,8(sp)
   23ff0:	dc000117 	ldw	r16,4(sp)
   23ff4:	dec00b04 	addi	sp,sp,44
   23ff8:	f800283a 	ret
   23ffc:	90002b1e 	bne	r18,zero,240ac <__divsf3+0x244>
   24000:	04000104 	movi	r16,4
   24004:	05c00044 	movi	r23,1
   24008:	003fb106 	br	23ed0 <__alt_mem_SDRAM_controller+0xfc023ed0>
   2400c:	8800251e 	bne	r17,zero,240a4 <__divsf3+0x23c>
   24010:	01400084 	movi	r5,2
   24014:	00000206 	br	24020 <__divsf3+0x1b8>
   24018:	88001a1e 	bne	r17,zero,24084 <__divsf3+0x21c>
   2401c:	01400044 	movi	r5,1
   24020:	8160b03a 	or	r16,r16,r5
   24024:	802090ba 	slli	r16,r16,2
   24028:	00c000b4 	movhi	r3,2
   2402c:	18d01104 	addi	r3,r3,16452
   24030:	80e1883a 	add	r16,r16,r3
   24034:	80c00017 	ldw	r3,0(r16)
   24038:	9d44f03a 	xor	r2,r19,r21
   2403c:	a18dc83a 	sub	r6,r20,r6
   24040:	1800683a 	jmp	r3
   24044:	00023f9c 	xori	zero,zero,2302
   24048:	00023f9c 	xori	zero,zero,2302
   2404c:	000241e8 	cmpgeui	zero,zero,2311
   24050:	00023f84 	movi	zero,2302
   24054:	000241e8 	cmpgeui	zero,zero,2311
   24058:	000240e4 	muli	zero,zero,2307
   2405c:	000241e8 	cmpgeui	zero,zero,2311
   24060:	00023f84 	movi	zero,2302
   24064:	00023f9c 	xori	zero,zero,2302
   24068:	00023f9c 	xori	zero,zero,2302
   2406c:	000240e4 	muli	zero,zero,2307
   24070:	00023f84 	movi	zero,2302
   24074:	000241f8 	rdprs	zero,zero,2311
   24078:	000241f8 	rdprs	zero,zero,2311
   2407c:	000241f8 	rdprs	zero,zero,2311
   24080:	00024210 	cmplti	zero,zero,2312
   24084:	8809883a 	mov	r4,r17
   24088:	00276b40 	call	276b4 <__clzsi2>
   2408c:	10fffec4 	addi	r3,r2,-5
   24090:	10801d84 	addi	r2,r2,118
   24094:	88e2983a 	sll	r17,r17,r3
   24098:	008dc83a 	sub	r6,zero,r2
   2409c:	000b883a 	mov	r5,zero
   240a0:	003f9906 	br	23f08 <__alt_mem_SDRAM_controller+0xfc023f08>
   240a4:	014000c4 	movi	r5,3
   240a8:	003f9706 	br	23f08 <__alt_mem_SDRAM_controller+0xfc023f08>
   240ac:	9009883a 	mov	r4,r18
   240b0:	d9400015 	stw	r5,0(sp)
   240b4:	00276b40 	call	276b4 <__clzsi2>
   240b8:	10fffec4 	addi	r3,r2,-5
   240bc:	11801d84 	addi	r6,r2,118
   240c0:	90e4983a 	sll	r18,r18,r3
   240c4:	01a9c83a 	sub	r20,zero,r6
   240c8:	0021883a 	mov	r16,zero
   240cc:	002f883a 	mov	r23,zero
   240d0:	d9400017 	ldw	r5,0(sp)
   240d4:	003f7e06 	br	23ed0 <__alt_mem_SDRAM_controller+0xfc023ed0>
   240d8:	04000304 	movi	r16,12
   240dc:	05c000c4 	movi	r23,3
   240e0:	003f7b06 	br	23ed0 <__alt_mem_SDRAM_controller+0xfc023ed0>
   240e4:	01802034 	movhi	r6,128
   240e8:	000f883a 	mov	r7,zero
   240ec:	31bfffc4 	addi	r6,r6,-1
   240f0:	013fffc4 	movi	r4,-1
   240f4:	003fac06 	br	23fa8 <__alt_mem_SDRAM_controller+0xfc023fa8>
   240f8:	01400044 	movi	r5,1
   240fc:	2909c83a 	sub	r4,r5,r4
   24100:	00c006c4 	movi	r3,27
   24104:	19004b0e 	bge	r3,r4,24234 <__divsf3+0x3cc>
   24108:	114e703a 	and	r7,r2,r5
   2410c:	0009883a 	mov	r4,zero
   24110:	000d883a 	mov	r6,zero
   24114:	003fa406 	br	23fa8 <__alt_mem_SDRAM_controller+0xfc023fa8>
   24118:	9006917a 	slli	r3,r18,5
   2411c:	8822917a 	slli	r17,r17,5
   24120:	1c40372e 	bgeu	r3,r17,24200 <__divsf3+0x398>
   24124:	31bfffc4 	addi	r6,r6,-1
   24128:	010006c4 	movi	r4,27
   2412c:	000b883a 	mov	r5,zero
   24130:	180f883a 	mov	r7,r3
   24134:	294b883a 	add	r5,r5,r5
   24138:	18c7883a 	add	r3,r3,r3
   2413c:	38000116 	blt	r7,zero,24144 <__divsf3+0x2dc>
   24140:	1c400236 	bltu	r3,r17,2414c <__divsf3+0x2e4>
   24144:	1c47c83a 	sub	r3,r3,r17
   24148:	29400054 	ori	r5,r5,1
   2414c:	213fffc4 	addi	r4,r4,-1
   24150:	203ff71e 	bne	r4,zero,24130 <__alt_mem_SDRAM_controller+0xfc024130>
   24154:	1806c03a 	cmpne	r3,r3,zero
   24158:	1962b03a 	or	r17,r3,r5
   2415c:	31001fc4 	addi	r4,r6,127
   24160:	013fe50e 	bge	zero,r4,240f8 <__alt_mem_SDRAM_controller+0xfc0240f8>
   24164:	88c001cc 	andi	r3,r17,7
   24168:	18000426 	beq	r3,zero,2417c <__divsf3+0x314>
   2416c:	88c003cc 	andi	r3,r17,15
   24170:	01400104 	movi	r5,4
   24174:	19400126 	beq	r3,r5,2417c <__divsf3+0x314>
   24178:	8963883a 	add	r17,r17,r5
   2417c:	88c2002c 	andhi	r3,r17,2048
   24180:	18000426 	beq	r3,zero,24194 <__divsf3+0x32c>
   24184:	00fe0034 	movhi	r3,63488
   24188:	18ffffc4 	addi	r3,r3,-1
   2418c:	31002004 	addi	r4,r6,128
   24190:	88e2703a 	and	r17,r17,r3
   24194:	00c03f84 	movi	r3,254
   24198:	193f8016 	blt	r3,r4,23f9c <__alt_mem_SDRAM_controller+0xfc023f9c>
   2419c:	880c91ba 	slli	r6,r17,6
   241a0:	11c0004c 	andi	r7,r2,1
   241a4:	300cd27a 	srli	r6,r6,9
   241a8:	003f7f06 	br	23fa8 <__alt_mem_SDRAM_controller+0xfc023fa8>
   241ac:	9080102c 	andhi	r2,r18,64
   241b0:	10000226 	beq	r2,zero,241bc <__divsf3+0x354>
   241b4:	8880102c 	andhi	r2,r17,64
   241b8:	10001826 	beq	r2,zero,2421c <__divsf3+0x3b4>
   241bc:	00802034 	movhi	r2,128
   241c0:	91801034 	orhi	r6,r18,64
   241c4:	10bfffc4 	addi	r2,r2,-1
   241c8:	980f883a 	mov	r7,r19
   241cc:	308c703a 	and	r6,r6,r2
   241d0:	003fc706 	br	240f0 <__alt_mem_SDRAM_controller+0xfc0240f0>
   241d4:	008000c4 	movi	r2,3
   241d8:	b8802d26 	beq	r23,r2,24290 <__divsf3+0x428>
   241dc:	00c00044 	movi	r3,1
   241e0:	b005883a 	mov	r2,r22
   241e4:	b8ffdd1e 	bne	r23,r3,2415c <__alt_mem_SDRAM_controller+0xfc02415c>
   241e8:	11c0004c 	andi	r7,r2,1
   241ec:	0009883a 	mov	r4,zero
   241f0:	000d883a 	mov	r6,zero
   241f4:	003f6c06 	br	23fa8 <__alt_mem_SDRAM_controller+0xfc023fa8>
   241f8:	9023883a 	mov	r17,r18
   241fc:	003f6406 	br	23f90 <__alt_mem_SDRAM_controller+0xfc023f90>
   24200:	1c47c83a 	sub	r3,r3,r17
   24204:	01000684 	movi	r4,26
   24208:	01400044 	movi	r5,1
   2420c:	003fc806 	br	24130 <__alt_mem_SDRAM_controller+0xfc024130>
   24210:	9080102c 	andhi	r2,r18,64
   24214:	103fe926 	beq	r2,zero,241bc <__alt_mem_SDRAM_controller+0xfc0241bc>
   24218:	0023883a 	mov	r17,zero
   2421c:	00802034 	movhi	r2,128
   24220:	89801034 	orhi	r6,r17,64
   24224:	10bfffc4 	addi	r2,r2,-1
   24228:	a80f883a 	mov	r7,r21
   2422c:	308c703a 	and	r6,r6,r2
   24230:	003faf06 	br	240f0 <__alt_mem_SDRAM_controller+0xfc0240f0>
   24234:	01c00804 	movi	r7,32
   24238:	390fc83a 	sub	r7,r7,r4
   2423c:	89ce983a 	sll	r7,r17,r7
   24240:	890ad83a 	srl	r5,r17,r4
   24244:	380ec03a 	cmpne	r7,r7,zero
   24248:	29cab03a 	or	r5,r5,r7
   2424c:	28c001cc 	andi	r3,r5,7
   24250:	18000426 	beq	r3,zero,24264 <__divsf3+0x3fc>
   24254:	28c003cc 	andi	r3,r5,15
   24258:	01000104 	movi	r4,4
   2425c:	19000126 	beq	r3,r4,24264 <__divsf3+0x3fc>
   24260:	290b883a 	add	r5,r5,r4
   24264:	28c1002c 	andhi	r3,r5,1024
   24268:	18000426 	beq	r3,zero,2427c <__divsf3+0x414>
   2426c:	11c0004c 	andi	r7,r2,1
   24270:	01000044 	movi	r4,1
   24274:	000d883a 	mov	r6,zero
   24278:	003f4b06 	br	23fa8 <__alt_mem_SDRAM_controller+0xfc023fa8>
   2427c:	280a91ba 	slli	r5,r5,6
   24280:	11c0004c 	andi	r7,r2,1
   24284:	0009883a 	mov	r4,zero
   24288:	280cd27a 	srli	r6,r5,9
   2428c:	003f4606 	br	23fa8 <__alt_mem_SDRAM_controller+0xfc023fa8>
   24290:	00802034 	movhi	r2,128
   24294:	89801034 	orhi	r6,r17,64
   24298:	10bfffc4 	addi	r2,r2,-1
   2429c:	b00f883a 	mov	r7,r22
   242a0:	308c703a 	and	r6,r6,r2
   242a4:	003f9206 	br	240f0 <__alt_mem_SDRAM_controller+0xfc0240f0>

000242a8 <__gesf2>:
   242a8:	2004d5fa 	srli	r2,r4,23
   242ac:	2806d5fa 	srli	r3,r5,23
   242b0:	01802034 	movhi	r6,128
   242b4:	31bfffc4 	addi	r6,r6,-1
   242b8:	10803fcc 	andi	r2,r2,255
   242bc:	01c03fc4 	movi	r7,255
   242c0:	3110703a 	and	r8,r6,r4
   242c4:	18c03fcc 	andi	r3,r3,255
   242c8:	314c703a 	and	r6,r6,r5
   242cc:	2008d7fa 	srli	r4,r4,31
   242d0:	280ad7fa 	srli	r5,r5,31
   242d4:	11c01926 	beq	r2,r7,2433c <__gesf2+0x94>
   242d8:	01c03fc4 	movi	r7,255
   242dc:	19c00f26 	beq	r3,r7,2431c <__gesf2+0x74>
   242e0:	1000061e 	bne	r2,zero,242fc <__gesf2+0x54>
   242e4:	400f003a 	cmpeq	r7,r8,zero
   242e8:	1800071e 	bne	r3,zero,24308 <__gesf2+0x60>
   242ec:	3000061e 	bne	r6,zero,24308 <__gesf2+0x60>
   242f0:	0005883a 	mov	r2,zero
   242f4:	40000e1e 	bne	r8,zero,24330 <__gesf2+0x88>
   242f8:	f800283a 	ret
   242fc:	18000a1e 	bne	r3,zero,24328 <__gesf2+0x80>
   24300:	30000b26 	beq	r6,zero,24330 <__gesf2+0x88>
   24304:	000f883a 	mov	r7,zero
   24308:	29403fcc 	andi	r5,r5,255
   2430c:	38000726 	beq	r7,zero,2432c <__gesf2+0x84>
   24310:	28000826 	beq	r5,zero,24334 <__gesf2+0x8c>
   24314:	00800044 	movi	r2,1
   24318:	f800283a 	ret
   2431c:	303ff026 	beq	r6,zero,242e0 <__alt_mem_SDRAM_controller+0xfc0242e0>
   24320:	00bfff84 	movi	r2,-2
   24324:	f800283a 	ret
   24328:	29403fcc 	andi	r5,r5,255
   2432c:	21400526 	beq	r4,r5,24344 <__gesf2+0x9c>
   24330:	203ff826 	beq	r4,zero,24314 <__alt_mem_SDRAM_controller+0xfc024314>
   24334:	00bfffc4 	movi	r2,-1
   24338:	f800283a 	ret
   2433c:	403fe626 	beq	r8,zero,242d8 <__alt_mem_SDRAM_controller+0xfc0242d8>
   24340:	003ff706 	br	24320 <__alt_mem_SDRAM_controller+0xfc024320>
   24344:	18bffa16 	blt	r3,r2,24330 <__alt_mem_SDRAM_controller+0xfc024330>
   24348:	10c00216 	blt	r2,r3,24354 <__gesf2+0xac>
   2434c:	323ff836 	bltu	r6,r8,24330 <__alt_mem_SDRAM_controller+0xfc024330>
   24350:	4180022e 	bgeu	r8,r6,2435c <__gesf2+0xb4>
   24354:	203fef1e 	bne	r4,zero,24314 <__alt_mem_SDRAM_controller+0xfc024314>
   24358:	003ff606 	br	24334 <__alt_mem_SDRAM_controller+0xfc024334>
   2435c:	0005883a 	mov	r2,zero
   24360:	f800283a 	ret

00024364 <__lesf2>:
   24364:	2004d5fa 	srli	r2,r4,23
   24368:	280cd5fa 	srli	r6,r5,23
   2436c:	00c02034 	movhi	r3,128
   24370:	18ffffc4 	addi	r3,r3,-1
   24374:	10803fcc 	andi	r2,r2,255
   24378:	01c03fc4 	movi	r7,255
   2437c:	1910703a 	and	r8,r3,r4
   24380:	31803fcc 	andi	r6,r6,255
   24384:	1946703a 	and	r3,r3,r5
   24388:	2008d7fa 	srli	r4,r4,31
   2438c:	280ad7fa 	srli	r5,r5,31
   24390:	11c01b26 	beq	r2,r7,24400 <__lesf2+0x9c>
   24394:	01c03fc4 	movi	r7,255
   24398:	31c01126 	beq	r6,r7,243e0 <__lesf2+0x7c>
   2439c:	1000071e 	bne	r2,zero,243bc <__lesf2+0x58>
   243a0:	400f003a 	cmpeq	r7,r8,zero
   243a4:	21003fcc 	andi	r4,r4,255
   243a8:	3000081e 	bne	r6,zero,243cc <__lesf2+0x68>
   243ac:	1800071e 	bne	r3,zero,243cc <__lesf2+0x68>
   243b0:	0005883a 	mov	r2,zero
   243b4:	40000f1e 	bne	r8,zero,243f4 <__lesf2+0x90>
   243b8:	f800283a 	ret
   243bc:	21003fcc 	andi	r4,r4,255
   243c0:	30000a1e 	bne	r6,zero,243ec <__lesf2+0x88>
   243c4:	18000b26 	beq	r3,zero,243f4 <__lesf2+0x90>
   243c8:	000f883a 	mov	r7,zero
   243cc:	29403fcc 	andi	r5,r5,255
   243d0:	38000726 	beq	r7,zero,243f0 <__lesf2+0x8c>
   243d4:	28000826 	beq	r5,zero,243f8 <__lesf2+0x94>
   243d8:	00800044 	movi	r2,1
   243dc:	f800283a 	ret
   243e0:	183fee26 	beq	r3,zero,2439c <__alt_mem_SDRAM_controller+0xfc02439c>
   243e4:	00800084 	movi	r2,2
   243e8:	f800283a 	ret
   243ec:	29403fcc 	andi	r5,r5,255
   243f0:	21400626 	beq	r4,r5,2440c <__lesf2+0xa8>
   243f4:	203ff826 	beq	r4,zero,243d8 <__alt_mem_SDRAM_controller+0xfc0243d8>
   243f8:	00bfffc4 	movi	r2,-1
   243fc:	f800283a 	ret
   24400:	403fe426 	beq	r8,zero,24394 <__alt_mem_SDRAM_controller+0xfc024394>
   24404:	00800084 	movi	r2,2
   24408:	f800283a 	ret
   2440c:	30bff916 	blt	r6,r2,243f4 <__alt_mem_SDRAM_controller+0xfc0243f4>
   24410:	11800216 	blt	r2,r6,2441c <__lesf2+0xb8>
   24414:	1a3ff736 	bltu	r3,r8,243f4 <__alt_mem_SDRAM_controller+0xfc0243f4>
   24418:	40c0022e 	bgeu	r8,r3,24424 <__lesf2+0xc0>
   2441c:	203fee1e 	bne	r4,zero,243d8 <__alt_mem_SDRAM_controller+0xfc0243d8>
   24420:	003ff506 	br	243f8 <__alt_mem_SDRAM_controller+0xfc0243f8>
   24424:	0005883a 	mov	r2,zero
   24428:	f800283a 	ret

0002442c <__mulsf3>:
   2442c:	defff504 	addi	sp,sp,-44
   24430:	dc000115 	stw	r16,4(sp)
   24434:	2020d5fa 	srli	r16,r4,23
   24438:	dd400615 	stw	r21,24(sp)
   2443c:	202ad7fa 	srli	r21,r4,31
   24440:	dc800315 	stw	r18,12(sp)
   24444:	04802034 	movhi	r18,128
   24448:	df000915 	stw	fp,36(sp)
   2444c:	dd000515 	stw	r20,20(sp)
   24450:	94bfffc4 	addi	r18,r18,-1
   24454:	dfc00a15 	stw	ra,40(sp)
   24458:	ddc00815 	stw	r23,32(sp)
   2445c:	dd800715 	stw	r22,28(sp)
   24460:	dcc00415 	stw	r19,16(sp)
   24464:	dc400215 	stw	r17,8(sp)
   24468:	84003fcc 	andi	r16,r16,255
   2446c:	9124703a 	and	r18,r18,r4
   24470:	a829883a 	mov	r20,r21
   24474:	af003fcc 	andi	fp,r21,255
   24478:	80005426 	beq	r16,zero,245cc <__mulsf3+0x1a0>
   2447c:	00803fc4 	movi	r2,255
   24480:	80802f26 	beq	r16,r2,24540 <__mulsf3+0x114>
   24484:	91002034 	orhi	r4,r18,128
   24488:	202490fa 	slli	r18,r4,3
   2448c:	843fe044 	addi	r16,r16,-127
   24490:	0023883a 	mov	r17,zero
   24494:	002f883a 	mov	r23,zero
   24498:	2804d5fa 	srli	r2,r5,23
   2449c:	282cd7fa 	srli	r22,r5,31
   244a0:	01002034 	movhi	r4,128
   244a4:	213fffc4 	addi	r4,r4,-1
   244a8:	10803fcc 	andi	r2,r2,255
   244ac:	2166703a 	and	r19,r4,r5
   244b0:	b1803fcc 	andi	r6,r22,255
   244b4:	10004c26 	beq	r2,zero,245e8 <__mulsf3+0x1bc>
   244b8:	00c03fc4 	movi	r3,255
   244bc:	10c04726 	beq	r2,r3,245dc <__mulsf3+0x1b0>
   244c0:	99002034 	orhi	r4,r19,128
   244c4:	202690fa 	slli	r19,r4,3
   244c8:	10bfe044 	addi	r2,r2,-127
   244cc:	0007883a 	mov	r3,zero
   244d0:	80a1883a 	add	r16,r16,r2
   244d4:	010003c4 	movi	r4,15
   244d8:	1c44b03a 	or	r2,r3,r17
   244dc:	b56af03a 	xor	r21,r22,r21
   244e0:	81c00044 	addi	r7,r16,1
   244e4:	20806b36 	bltu	r4,r2,24694 <__mulsf3+0x268>
   244e8:	100490ba 	slli	r2,r2,2
   244ec:	010000b4 	movhi	r4,2
   244f0:	21114004 	addi	r4,r4,17664
   244f4:	1105883a 	add	r2,r2,r4
   244f8:	10800017 	ldw	r2,0(r2)
   244fc:	1000683a 	jmp	r2
   24500:	00024694 	movui	zero,2330
   24504:	00024554 	movui	zero,2325
   24508:	00024554 	movui	zero,2325
   2450c:	00024550 	cmplti	zero,zero,2325
   24510:	00024678 	rdprs	zero,zero,2329
   24514:	00024678 	rdprs	zero,zero,2329
   24518:	00024664 	muli	zero,zero,2329
   2451c:	00024550 	cmplti	zero,zero,2325
   24520:	00024678 	rdprs	zero,zero,2329
   24524:	00024664 	muli	zero,zero,2329
   24528:	00024678 	rdprs	zero,zero,2329
   2452c:	00024550 	cmplti	zero,zero,2325
   24530:	00024684 	movi	zero,2330
   24534:	00024684 	movi	zero,2330
   24538:	00024684 	movi	zero,2330
   2453c:	00024760 	cmpeqi	zero,zero,2333
   24540:	90003b1e 	bne	r18,zero,24630 <__mulsf3+0x204>
   24544:	04400204 	movi	r17,8
   24548:	05c00084 	movi	r23,2
   2454c:	003fd206 	br	24498 <__alt_mem_SDRAM_controller+0xfc024498>
   24550:	302b883a 	mov	r21,r6
   24554:	00800084 	movi	r2,2
   24558:	18802626 	beq	r3,r2,245f4 <__mulsf3+0x1c8>
   2455c:	008000c4 	movi	r2,3
   24560:	1880ab26 	beq	r3,r2,24810 <__mulsf3+0x3e4>
   24564:	00800044 	movi	r2,1
   24568:	1880a21e 	bne	r3,r2,247f4 <__mulsf3+0x3c8>
   2456c:	a829883a 	mov	r20,r21
   24570:	0007883a 	mov	r3,zero
   24574:	0009883a 	mov	r4,zero
   24578:	18803fcc 	andi	r2,r3,255
   2457c:	100695fa 	slli	r3,r2,23
   24580:	a0803fcc 	andi	r2,r20,255
   24584:	100a97fa 	slli	r5,r2,31
   24588:	00802034 	movhi	r2,128
   2458c:	10bfffc4 	addi	r2,r2,-1
   24590:	2084703a 	and	r2,r4,r2
   24594:	10c4b03a 	or	r2,r2,r3
   24598:	1144b03a 	or	r2,r2,r5
   2459c:	dfc00a17 	ldw	ra,40(sp)
   245a0:	df000917 	ldw	fp,36(sp)
   245a4:	ddc00817 	ldw	r23,32(sp)
   245a8:	dd800717 	ldw	r22,28(sp)
   245ac:	dd400617 	ldw	r21,24(sp)
   245b0:	dd000517 	ldw	r20,20(sp)
   245b4:	dcc00417 	ldw	r19,16(sp)
   245b8:	dc800317 	ldw	r18,12(sp)
   245bc:	dc400217 	ldw	r17,8(sp)
   245c0:	dc000117 	ldw	r16,4(sp)
   245c4:	dec00b04 	addi	sp,sp,44
   245c8:	f800283a 	ret
   245cc:	90000d1e 	bne	r18,zero,24604 <__mulsf3+0x1d8>
   245d0:	04400104 	movi	r17,4
   245d4:	05c00044 	movi	r23,1
   245d8:	003faf06 	br	24498 <__alt_mem_SDRAM_controller+0xfc024498>
   245dc:	9806c03a 	cmpne	r3,r19,zero
   245e0:	18c00084 	addi	r3,r3,2
   245e4:	003fba06 	br	244d0 <__alt_mem_SDRAM_controller+0xfc0244d0>
   245e8:	9800141e 	bne	r19,zero,2463c <__mulsf3+0x210>
   245ec:	00c00044 	movi	r3,1
   245f0:	003fb706 	br	244d0 <__alt_mem_SDRAM_controller+0xfc0244d0>
   245f4:	a829883a 	mov	r20,r21
   245f8:	00ffffc4 	movi	r3,-1
   245fc:	0009883a 	mov	r4,zero
   24600:	003fdd06 	br	24578 <__alt_mem_SDRAM_controller+0xfc024578>
   24604:	9009883a 	mov	r4,r18
   24608:	d9400015 	stw	r5,0(sp)
   2460c:	00276b40 	call	276b4 <__clzsi2>
   24610:	10fffec4 	addi	r3,r2,-5
   24614:	10801d84 	addi	r2,r2,118
   24618:	90e4983a 	sll	r18,r18,r3
   2461c:	00a1c83a 	sub	r16,zero,r2
   24620:	0023883a 	mov	r17,zero
   24624:	002f883a 	mov	r23,zero
   24628:	d9400017 	ldw	r5,0(sp)
   2462c:	003f9a06 	br	24498 <__alt_mem_SDRAM_controller+0xfc024498>
   24630:	04400304 	movi	r17,12
   24634:	05c000c4 	movi	r23,3
   24638:	003f9706 	br	24498 <__alt_mem_SDRAM_controller+0xfc024498>
   2463c:	9809883a 	mov	r4,r19
   24640:	d9800015 	stw	r6,0(sp)
   24644:	00276b40 	call	276b4 <__clzsi2>
   24648:	10fffec4 	addi	r3,r2,-5
   2464c:	10801d84 	addi	r2,r2,118
   24650:	98e6983a 	sll	r19,r19,r3
   24654:	0085c83a 	sub	r2,zero,r2
   24658:	0007883a 	mov	r3,zero
   2465c:	d9800017 	ldw	r6,0(sp)
   24660:	003f9b06 	br	244d0 <__alt_mem_SDRAM_controller+0xfc0244d0>
   24664:	01002034 	movhi	r4,128
   24668:	0029883a 	mov	r20,zero
   2466c:	213fffc4 	addi	r4,r4,-1
   24670:	00ffffc4 	movi	r3,-1
   24674:	003fc006 	br	24578 <__alt_mem_SDRAM_controller+0xfc024578>
   24678:	9027883a 	mov	r19,r18
   2467c:	b807883a 	mov	r3,r23
   24680:	003fb406 	br	24554 <__alt_mem_SDRAM_controller+0xfc024554>
   24684:	9027883a 	mov	r19,r18
   24688:	e02b883a 	mov	r21,fp
   2468c:	b807883a 	mov	r3,r23
   24690:	003fb006 	br	24554 <__alt_mem_SDRAM_controller+0xfc024554>
   24694:	9004d43a 	srli	r2,r18,16
   24698:	9810d43a 	srli	r8,r19,16
   2469c:	94bfffcc 	andi	r18,r18,65535
   246a0:	993fffcc 	andi	r4,r19,65535
   246a4:	910d383a 	mul	r6,r18,r4
   246a8:	20a7383a 	mul	r19,r4,r2
   246ac:	9225383a 	mul	r18,r18,r8
   246b0:	3006d43a 	srli	r3,r6,16
   246b4:	1211383a 	mul	r8,r2,r8
   246b8:	94e5883a 	add	r18,r18,r19
   246bc:	1c87883a 	add	r3,r3,r18
   246c0:	1cc0022e 	bgeu	r3,r19,246cc <__mulsf3+0x2a0>
   246c4:	00800074 	movhi	r2,1
   246c8:	4091883a 	add	r8,r8,r2
   246cc:	1804943a 	slli	r2,r3,16
   246d0:	31bfffcc 	andi	r6,r6,65535
   246d4:	1806d43a 	srli	r3,r3,16
   246d8:	1185883a 	add	r2,r2,r6
   246dc:	102691ba 	slli	r19,r2,6
   246e0:	1a07883a 	add	r3,r3,r8
   246e4:	1004d6ba 	srli	r2,r2,26
   246e8:	180891ba 	slli	r4,r3,6
   246ec:	9826c03a 	cmpne	r19,r19,zero
   246f0:	9884b03a 	or	r2,r19,r2
   246f4:	1126b03a 	or	r19,r2,r4
   246f8:	9882002c 	andhi	r2,r19,2048
   246fc:	10000426 	beq	r2,zero,24710 <__mulsf3+0x2e4>
   24700:	9804d07a 	srli	r2,r19,1
   24704:	9900004c 	andi	r4,r19,1
   24708:	3821883a 	mov	r16,r7
   2470c:	1126b03a 	or	r19,r2,r4
   24710:	80c01fc4 	addi	r3,r16,127
   24714:	00c0210e 	bge	zero,r3,2479c <__mulsf3+0x370>
   24718:	988001cc 	andi	r2,r19,7
   2471c:	10000426 	beq	r2,zero,24730 <__mulsf3+0x304>
   24720:	988003cc 	andi	r2,r19,15
   24724:	01000104 	movi	r4,4
   24728:	11000126 	beq	r2,r4,24730 <__mulsf3+0x304>
   2472c:	9927883a 	add	r19,r19,r4
   24730:	9882002c 	andhi	r2,r19,2048
   24734:	10000426 	beq	r2,zero,24748 <__mulsf3+0x31c>
   24738:	00be0034 	movhi	r2,63488
   2473c:	10bfffc4 	addi	r2,r2,-1
   24740:	80c02004 	addi	r3,r16,128
   24744:	98a6703a 	and	r19,r19,r2
   24748:	00803f84 	movi	r2,254
   2474c:	10ffa916 	blt	r2,r3,245f4 <__alt_mem_SDRAM_controller+0xfc0245f4>
   24750:	980891ba 	slli	r4,r19,6
   24754:	a829883a 	mov	r20,r21
   24758:	2008d27a 	srli	r4,r4,9
   2475c:	003f8606 	br	24578 <__alt_mem_SDRAM_controller+0xfc024578>
   24760:	9080102c 	andhi	r2,r18,64
   24764:	10000826 	beq	r2,zero,24788 <__mulsf3+0x35c>
   24768:	9880102c 	andhi	r2,r19,64
   2476c:	1000061e 	bne	r2,zero,24788 <__mulsf3+0x35c>
   24770:	00802034 	movhi	r2,128
   24774:	99001034 	orhi	r4,r19,64
   24778:	10bfffc4 	addi	r2,r2,-1
   2477c:	b029883a 	mov	r20,r22
   24780:	2088703a 	and	r4,r4,r2
   24784:	003fba06 	br	24670 <__alt_mem_SDRAM_controller+0xfc024670>
   24788:	00802034 	movhi	r2,128
   2478c:	91001034 	orhi	r4,r18,64
   24790:	10bfffc4 	addi	r2,r2,-1
   24794:	2088703a 	and	r4,r4,r2
   24798:	003fb506 	br	24670 <__alt_mem_SDRAM_controller+0xfc024670>
   2479c:	00800044 	movi	r2,1
   247a0:	10c7c83a 	sub	r3,r2,r3
   247a4:	008006c4 	movi	r2,27
   247a8:	10ff7016 	blt	r2,r3,2456c <__alt_mem_SDRAM_controller+0xfc02456c>
   247ac:	00800804 	movi	r2,32
   247b0:	10c5c83a 	sub	r2,r2,r3
   247b4:	9884983a 	sll	r2,r19,r2
   247b8:	98c6d83a 	srl	r3,r19,r3
   247bc:	1004c03a 	cmpne	r2,r2,zero
   247c0:	1884b03a 	or	r2,r3,r2
   247c4:	10c001cc 	andi	r3,r2,7
   247c8:	18000426 	beq	r3,zero,247dc <__mulsf3+0x3b0>
   247cc:	10c003cc 	andi	r3,r2,15
   247d0:	01000104 	movi	r4,4
   247d4:	19000126 	beq	r3,r4,247dc <__mulsf3+0x3b0>
   247d8:	1105883a 	add	r2,r2,r4
   247dc:	10c1002c 	andhi	r3,r2,1024
   247e0:	18000626 	beq	r3,zero,247fc <__mulsf3+0x3d0>
   247e4:	a829883a 	mov	r20,r21
   247e8:	00c00044 	movi	r3,1
   247ec:	0009883a 	mov	r4,zero
   247f0:	003f6106 	br	24578 <__alt_mem_SDRAM_controller+0xfc024578>
   247f4:	3821883a 	mov	r16,r7
   247f8:	003fc506 	br	24710 <__alt_mem_SDRAM_controller+0xfc024710>
   247fc:	100491ba 	slli	r2,r2,6
   24800:	a829883a 	mov	r20,r21
   24804:	0007883a 	mov	r3,zero
   24808:	1008d27a 	srli	r4,r2,9
   2480c:	003f5a06 	br	24578 <__alt_mem_SDRAM_controller+0xfc024578>
   24810:	00802034 	movhi	r2,128
   24814:	99001034 	orhi	r4,r19,64
   24818:	10bfffc4 	addi	r2,r2,-1
   2481c:	a829883a 	mov	r20,r21
   24820:	2088703a 	and	r4,r4,r2
   24824:	003f9206 	br	24670 <__alt_mem_SDRAM_controller+0xfc024670>

00024828 <__subsf3>:
   24828:	defffc04 	addi	sp,sp,-16
   2482c:	280cd5fa 	srli	r6,r5,23
   24830:	dc000015 	stw	r16,0(sp)
   24834:	01c02034 	movhi	r7,128
   24838:	2020d5fa 	srli	r16,r4,23
   2483c:	39ffffc4 	addi	r7,r7,-1
   24840:	3906703a 	and	r3,r7,r4
   24844:	dc400115 	stw	r17,4(sp)
   24848:	394e703a 	and	r7,r7,r5
   2484c:	2022d7fa 	srli	r17,r4,31
   24850:	dfc00315 	stw	ra,12(sp)
   24854:	dc800215 	stw	r18,8(sp)
   24858:	31803fcc 	andi	r6,r6,255
   2485c:	01003fc4 	movi	r4,255
   24860:	84003fcc 	andi	r16,r16,255
   24864:	180690fa 	slli	r3,r3,3
   24868:	2804d7fa 	srli	r2,r5,31
   2486c:	380e90fa 	slli	r7,r7,3
   24870:	31006d26 	beq	r6,r4,24a28 <__subsf3+0x200>
   24874:	1080005c 	xori	r2,r2,1
   24878:	8189c83a 	sub	r4,r16,r6
   2487c:	14404f26 	beq	r2,r17,249bc <__subsf3+0x194>
   24880:	0100770e 	bge	zero,r4,24a60 <__subsf3+0x238>
   24884:	30001e1e 	bne	r6,zero,24900 <__subsf3+0xd8>
   24888:	38006a1e 	bne	r7,zero,24a34 <__subsf3+0x20c>
   2488c:	188001cc 	andi	r2,r3,7
   24890:	10000426 	beq	r2,zero,248a4 <__subsf3+0x7c>
   24894:	188003cc 	andi	r2,r3,15
   24898:	01000104 	movi	r4,4
   2489c:	11000126 	beq	r2,r4,248a4 <__subsf3+0x7c>
   248a0:	1907883a 	add	r3,r3,r4
   248a4:	1881002c 	andhi	r2,r3,1024
   248a8:	10003926 	beq	r2,zero,24990 <__subsf3+0x168>
   248ac:	84000044 	addi	r16,r16,1
   248b0:	00803fc4 	movi	r2,255
   248b4:	80807526 	beq	r16,r2,24a8c <__subsf3+0x264>
   248b8:	180691ba 	slli	r3,r3,6
   248bc:	8880004c 	andi	r2,r17,1
   248c0:	180ad27a 	srli	r5,r3,9
   248c4:	84003fcc 	andi	r16,r16,255
   248c8:	800695fa 	slli	r3,r16,23
   248cc:	10803fcc 	andi	r2,r2,255
   248d0:	01002034 	movhi	r4,128
   248d4:	213fffc4 	addi	r4,r4,-1
   248d8:	100497fa 	slli	r2,r2,31
   248dc:	2920703a 	and	r16,r5,r4
   248e0:	80e0b03a 	or	r16,r16,r3
   248e4:	8084b03a 	or	r2,r16,r2
   248e8:	dfc00317 	ldw	ra,12(sp)
   248ec:	dc800217 	ldw	r18,8(sp)
   248f0:	dc400117 	ldw	r17,4(sp)
   248f4:	dc000017 	ldw	r16,0(sp)
   248f8:	dec00404 	addi	sp,sp,16
   248fc:	f800283a 	ret
   24900:	00803fc4 	movi	r2,255
   24904:	80bfe126 	beq	r16,r2,2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24908:	39c10034 	orhi	r7,r7,1024
   2490c:	008006c4 	movi	r2,27
   24910:	11007416 	blt	r2,r4,24ae4 <__subsf3+0x2bc>
   24914:	00800804 	movi	r2,32
   24918:	1105c83a 	sub	r2,r2,r4
   2491c:	3884983a 	sll	r2,r7,r2
   24920:	390ed83a 	srl	r7,r7,r4
   24924:	1008c03a 	cmpne	r4,r2,zero
   24928:	390eb03a 	or	r7,r7,r4
   2492c:	19c7c83a 	sub	r3,r3,r7
   24930:	1881002c 	andhi	r2,r3,1024
   24934:	10001426 	beq	r2,zero,24988 <__subsf3+0x160>
   24938:	04810034 	movhi	r18,1024
   2493c:	94bfffc4 	addi	r18,r18,-1
   24940:	1ca4703a 	and	r18,r3,r18
   24944:	9009883a 	mov	r4,r18
   24948:	00276b40 	call	276b4 <__clzsi2>
   2494c:	10bffec4 	addi	r2,r2,-5
   24950:	90a4983a 	sll	r18,r18,r2
   24954:	14005116 	blt	r2,r16,24a9c <__subsf3+0x274>
   24958:	1405c83a 	sub	r2,r2,r16
   2495c:	10c00044 	addi	r3,r2,1
   24960:	00800804 	movi	r2,32
   24964:	10c5c83a 	sub	r2,r2,r3
   24968:	9084983a 	sll	r2,r18,r2
   2496c:	90e4d83a 	srl	r18,r18,r3
   24970:	0021883a 	mov	r16,zero
   24974:	1006c03a 	cmpne	r3,r2,zero
   24978:	90c6b03a 	or	r3,r18,r3
   2497c:	003fc306 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24980:	2000e026 	beq	r4,zero,24d04 <__subsf3+0x4dc>
   24984:	2007883a 	mov	r3,r4
   24988:	188001cc 	andi	r2,r3,7
   2498c:	103fc11e 	bne	r2,zero,24894 <__alt_mem_SDRAM_controller+0xfc024894>
   24990:	180ad0fa 	srli	r5,r3,3
   24994:	00c03fc4 	movi	r3,255
   24998:	8880004c 	andi	r2,r17,1
   2499c:	80c0031e 	bne	r16,r3,249ac <__subsf3+0x184>
   249a0:	28006d26 	beq	r5,zero,24b58 <__subsf3+0x330>
   249a4:	29401034 	orhi	r5,r5,64
   249a8:	043fffc4 	movi	r16,-1
   249ac:	00c02034 	movhi	r3,128
   249b0:	18ffffc4 	addi	r3,r3,-1
   249b4:	28ca703a 	and	r5,r5,r3
   249b8:	003fc206 	br	248c4 <__alt_mem_SDRAM_controller+0xfc0248c4>
   249bc:	01003c0e 	bge	zero,r4,24ab0 <__subsf3+0x288>
   249c0:	30002126 	beq	r6,zero,24a48 <__subsf3+0x220>
   249c4:	01403fc4 	movi	r5,255
   249c8:	817fb026 	beq	r16,r5,2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   249cc:	39c10034 	orhi	r7,r7,1024
   249d0:	014006c4 	movi	r5,27
   249d4:	29007416 	blt	r5,r4,24ba8 <__subsf3+0x380>
   249d8:	01400804 	movi	r5,32
   249dc:	290bc83a 	sub	r5,r5,r4
   249e0:	394a983a 	sll	r5,r7,r5
   249e4:	390ed83a 	srl	r7,r7,r4
   249e8:	2808c03a 	cmpne	r4,r5,zero
   249ec:	390eb03a 	or	r7,r7,r4
   249f0:	19c7883a 	add	r3,r3,r7
   249f4:	1901002c 	andhi	r4,r3,1024
   249f8:	20003826 	beq	r4,zero,24adc <__subsf3+0x2b4>
   249fc:	84000044 	addi	r16,r16,1
   24a00:	01003fc4 	movi	r4,255
   24a04:	81005426 	beq	r16,r4,24b58 <__subsf3+0x330>
   24a08:	1023883a 	mov	r17,r2
   24a0c:	00bf0034 	movhi	r2,64512
   24a10:	10bfffc4 	addi	r2,r2,-1
   24a14:	1900004c 	andi	r4,r3,1
   24a18:	1886703a 	and	r3,r3,r2
   24a1c:	1806d07a 	srli	r3,r3,1
   24a20:	1906b03a 	or	r3,r3,r4
   24a24:	003f9906 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24a28:	383f9226 	beq	r7,zero,24874 <__alt_mem_SDRAM_controller+0xfc024874>
   24a2c:	10803fcc 	andi	r2,r2,255
   24a30:	003f9106 	br	24878 <__alt_mem_SDRAM_controller+0xfc024878>
   24a34:	213fffc4 	addi	r4,r4,-1
   24a38:	203fbc26 	beq	r4,zero,2492c <__alt_mem_SDRAM_controller+0xfc02492c>
   24a3c:	00803fc4 	movi	r2,255
   24a40:	80bfb21e 	bne	r16,r2,2490c <__alt_mem_SDRAM_controller+0xfc02490c>
   24a44:	003f9106 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24a48:	383f9026 	beq	r7,zero,2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24a4c:	213fffc4 	addi	r4,r4,-1
   24a50:	203fe726 	beq	r4,zero,249f0 <__alt_mem_SDRAM_controller+0xfc0249f0>
   24a54:	01403fc4 	movi	r5,255
   24a58:	817fdd1e 	bne	r16,r5,249d0 <__alt_mem_SDRAM_controller+0xfc0249d0>
   24a5c:	003f8b06 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24a60:	2000221e 	bne	r4,zero,24aec <__subsf3+0x2c4>
   24a64:	81000044 	addi	r4,r16,1
   24a68:	21003fcc 	andi	r4,r4,255
   24a6c:	01400044 	movi	r5,1
   24a70:	2900470e 	bge	r5,r4,24b90 <__subsf3+0x368>
   24a74:	19e5c83a 	sub	r18,r3,r7
   24a78:	9141002c 	andhi	r5,r18,1024
   24a7c:	28002d26 	beq	r5,zero,24b34 <__subsf3+0x30c>
   24a80:	38e5c83a 	sub	r18,r7,r3
   24a84:	1023883a 	mov	r17,r2
   24a88:	003fae06 	br	24944 <__alt_mem_SDRAM_controller+0xfc024944>
   24a8c:	8880004c 	andi	r2,r17,1
   24a90:	043fffc4 	movi	r16,-1
   24a94:	000b883a 	mov	r5,zero
   24a98:	003f8a06 	br	248c4 <__alt_mem_SDRAM_controller+0xfc0248c4>
   24a9c:	00ff0034 	movhi	r3,64512
   24aa0:	18ffffc4 	addi	r3,r3,-1
   24aa4:	80a1c83a 	sub	r16,r16,r2
   24aa8:	90c6703a 	and	r3,r18,r3
   24aac:	003f7706 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24ab0:	2000431e 	bne	r4,zero,24bc0 <__subsf3+0x398>
   24ab4:	81000044 	addi	r4,r16,1
   24ab8:	21803fcc 	andi	r6,r4,255
   24abc:	01400044 	movi	r5,1
   24ac0:	2980280e 	bge	r5,r6,24b64 <__subsf3+0x33c>
   24ac4:	01403fc4 	movi	r5,255
   24ac8:	21402326 	beq	r4,r5,24b58 <__subsf3+0x330>
   24acc:	19c7883a 	add	r3,r3,r7
   24ad0:	1806d07a 	srli	r3,r3,1
   24ad4:	2021883a 	mov	r16,r4
   24ad8:	003f6c06 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24adc:	1023883a 	mov	r17,r2
   24ae0:	003fa906 	br	24988 <__alt_mem_SDRAM_controller+0xfc024988>
   24ae4:	01c00044 	movi	r7,1
   24ae8:	003f9006 	br	2492c <__alt_mem_SDRAM_controller+0xfc02492c>
   24aec:	8000151e 	bne	r16,zero,24b44 <__subsf3+0x31c>
   24af0:	18002f26 	beq	r3,zero,24bb0 <__subsf3+0x388>
   24af4:	0108303a 	nor	r4,zero,r4
   24af8:	20000a26 	beq	r4,zero,24b24 <__subsf3+0x2fc>
   24afc:	01403fc4 	movi	r5,255
   24b00:	31402b26 	beq	r6,r5,24bb0 <__subsf3+0x388>
   24b04:	014006c4 	movi	r5,27
   24b08:	29006e16 	blt	r5,r4,24cc4 <__subsf3+0x49c>
   24b0c:	01400804 	movi	r5,32
   24b10:	290bc83a 	sub	r5,r5,r4
   24b14:	194a983a 	sll	r5,r3,r5
   24b18:	1908d83a 	srl	r4,r3,r4
   24b1c:	2806c03a 	cmpne	r3,r5,zero
   24b20:	20c6b03a 	or	r3,r4,r3
   24b24:	38c7c83a 	sub	r3,r7,r3
   24b28:	3021883a 	mov	r16,r6
   24b2c:	1023883a 	mov	r17,r2
   24b30:	003f7f06 	br	24930 <__alt_mem_SDRAM_controller+0xfc024930>
   24b34:	903f831e 	bne	r18,zero,24944 <__alt_mem_SDRAM_controller+0xfc024944>
   24b38:	0005883a 	mov	r2,zero
   24b3c:	0021883a 	mov	r16,zero
   24b40:	003f9a06 	br	249ac <__alt_mem_SDRAM_controller+0xfc0249ac>
   24b44:	01403fc4 	movi	r5,255
   24b48:	31401926 	beq	r6,r5,24bb0 <__subsf3+0x388>
   24b4c:	0109c83a 	sub	r4,zero,r4
   24b50:	18c10034 	orhi	r3,r3,1024
   24b54:	003feb06 	br	24b04 <__alt_mem_SDRAM_controller+0xfc024b04>
   24b58:	043fffc4 	movi	r16,-1
   24b5c:	000b883a 	mov	r5,zero
   24b60:	003f5806 	br	248c4 <__alt_mem_SDRAM_controller+0xfc0248c4>
   24b64:	8000481e 	bne	r16,zero,24c88 <__subsf3+0x460>
   24b68:	18006226 	beq	r3,zero,24cf4 <__subsf3+0x4cc>
   24b6c:	383f4726 	beq	r7,zero,2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24b70:	19c7883a 	add	r3,r3,r7
   24b74:	1881002c 	andhi	r2,r3,1024
   24b78:	103f8326 	beq	r2,zero,24988 <__alt_mem_SDRAM_controller+0xfc024988>
   24b7c:	00bf0034 	movhi	r2,64512
   24b80:	10bfffc4 	addi	r2,r2,-1
   24b84:	2821883a 	mov	r16,r5
   24b88:	1886703a 	and	r3,r3,r2
   24b8c:	003f3f06 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24b90:	80001c1e 	bne	r16,zero,24c04 <__subsf3+0x3dc>
   24b94:	1800261e 	bne	r3,zero,24c30 <__subsf3+0x408>
   24b98:	38004c26 	beq	r7,zero,24ccc <__subsf3+0x4a4>
   24b9c:	3807883a 	mov	r3,r7
   24ba0:	1023883a 	mov	r17,r2
   24ba4:	003f3906 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24ba8:	01c00044 	movi	r7,1
   24bac:	003f9006 	br	249f0 <__alt_mem_SDRAM_controller+0xfc0249f0>
   24bb0:	3807883a 	mov	r3,r7
   24bb4:	3021883a 	mov	r16,r6
   24bb8:	1023883a 	mov	r17,r2
   24bbc:	003f3306 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24bc0:	8000161e 	bne	r16,zero,24c1c <__subsf3+0x3f4>
   24bc4:	18002d26 	beq	r3,zero,24c7c <__subsf3+0x454>
   24bc8:	0108303a 	nor	r4,zero,r4
   24bcc:	20000a26 	beq	r4,zero,24bf8 <__subsf3+0x3d0>
   24bd0:	01403fc4 	movi	r5,255
   24bd4:	31402926 	beq	r6,r5,24c7c <__subsf3+0x454>
   24bd8:	014006c4 	movi	r5,27
   24bdc:	29004716 	blt	r5,r4,24cfc <__subsf3+0x4d4>
   24be0:	01400804 	movi	r5,32
   24be4:	290bc83a 	sub	r5,r5,r4
   24be8:	194a983a 	sll	r5,r3,r5
   24bec:	1908d83a 	srl	r4,r3,r4
   24bf0:	2806c03a 	cmpne	r3,r5,zero
   24bf4:	20c6b03a 	or	r3,r4,r3
   24bf8:	19c7883a 	add	r3,r3,r7
   24bfc:	3021883a 	mov	r16,r6
   24c00:	003f7c06 	br	249f4 <__alt_mem_SDRAM_controller+0xfc0249f4>
   24c04:	1800111e 	bne	r3,zero,24c4c <__subsf3+0x424>
   24c08:	38003326 	beq	r7,zero,24cd8 <__subsf3+0x4b0>
   24c0c:	3807883a 	mov	r3,r7
   24c10:	1023883a 	mov	r17,r2
   24c14:	04003fc4 	movi	r16,255
   24c18:	003f1c06 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24c1c:	01403fc4 	movi	r5,255
   24c20:	31401626 	beq	r6,r5,24c7c <__subsf3+0x454>
   24c24:	0109c83a 	sub	r4,zero,r4
   24c28:	18c10034 	orhi	r3,r3,1024
   24c2c:	003fea06 	br	24bd8 <__alt_mem_SDRAM_controller+0xfc024bd8>
   24c30:	383f1626 	beq	r7,zero,2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24c34:	19c9c83a 	sub	r4,r3,r7
   24c38:	2141002c 	andhi	r5,r4,1024
   24c3c:	283f5026 	beq	r5,zero,24980 <__alt_mem_SDRAM_controller+0xfc024980>
   24c40:	38c7c83a 	sub	r3,r7,r3
   24c44:	1023883a 	mov	r17,r2
   24c48:	003f1006 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24c4c:	38001b26 	beq	r7,zero,24cbc <__subsf3+0x494>
   24c50:	1806d0fa 	srli	r3,r3,3
   24c54:	1900102c 	andhi	r4,r3,64
   24c58:	20000526 	beq	r4,zero,24c70 <__subsf3+0x448>
   24c5c:	380ed0fa 	srli	r7,r7,3
   24c60:	3900102c 	andhi	r4,r7,64
   24c64:	2000021e 	bne	r4,zero,24c70 <__subsf3+0x448>
   24c68:	3807883a 	mov	r3,r7
   24c6c:	1023883a 	mov	r17,r2
   24c70:	180690fa 	slli	r3,r3,3
   24c74:	04003fc4 	movi	r16,255
   24c78:	003f0406 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24c7c:	3807883a 	mov	r3,r7
   24c80:	3021883a 	mov	r16,r6
   24c84:	003f0106 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24c88:	18001726 	beq	r3,zero,24ce8 <__subsf3+0x4c0>
   24c8c:	38000b26 	beq	r7,zero,24cbc <__subsf3+0x494>
   24c90:	1806d0fa 	srli	r3,r3,3
   24c94:	1900102c 	andhi	r4,r3,64
   24c98:	20000426 	beq	r4,zero,24cac <__subsf3+0x484>
   24c9c:	380ed0fa 	srli	r7,r7,3
   24ca0:	3900102c 	andhi	r4,r7,64
   24ca4:	2000011e 	bne	r4,zero,24cac <__subsf3+0x484>
   24ca8:	3807883a 	mov	r3,r7
   24cac:	180690fa 	slli	r3,r3,3
   24cb0:	1023883a 	mov	r17,r2
   24cb4:	04003fc4 	movi	r16,255
   24cb8:	003ef406 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24cbc:	04003fc4 	movi	r16,255
   24cc0:	003ef206 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24cc4:	00c00044 	movi	r3,1
   24cc8:	003f9606 	br	24b24 <__alt_mem_SDRAM_controller+0xfc024b24>
   24ccc:	000b883a 	mov	r5,zero
   24cd0:	0005883a 	mov	r2,zero
   24cd4:	003f3506 	br	249ac <__alt_mem_SDRAM_controller+0xfc0249ac>
   24cd8:	01402034 	movhi	r5,128
   24cdc:	297fffc4 	addi	r5,r5,-1
   24ce0:	0005883a 	mov	r2,zero
   24ce4:	003f2f06 	br	249a4 <__alt_mem_SDRAM_controller+0xfc0249a4>
   24ce8:	3807883a 	mov	r3,r7
   24cec:	04003fc4 	movi	r16,255
   24cf0:	003ee606 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24cf4:	3807883a 	mov	r3,r7
   24cf8:	003ee406 	br	2488c <__alt_mem_SDRAM_controller+0xfc02488c>
   24cfc:	00c00044 	movi	r3,1
   24d00:	003fbd06 	br	24bf8 <__alt_mem_SDRAM_controller+0xfc024bf8>
   24d04:	0005883a 	mov	r2,zero
   24d08:	003f2806 	br	249ac <__alt_mem_SDRAM_controller+0xfc0249ac>

00024d0c <__fixsfsi>:
   24d0c:	200ad5fa 	srli	r5,r4,23
   24d10:	00c02034 	movhi	r3,128
   24d14:	18ffffc4 	addi	r3,r3,-1
   24d18:	29403fcc 	andi	r5,r5,255
   24d1c:	00801f84 	movi	r2,126
   24d20:	1906703a 	and	r3,r3,r4
   24d24:	2008d7fa 	srli	r4,r4,31
   24d28:	11400e0e 	bge	r2,r5,24d64 <__fixsfsi+0x58>
   24d2c:	00802744 	movi	r2,157
   24d30:	11400816 	blt	r2,r5,24d54 <__fixsfsi+0x48>
   24d34:	00802544 	movi	r2,149
   24d38:	18c02034 	orhi	r3,r3,128
   24d3c:	11400b0e 	bge	r2,r5,24d6c <__fixsfsi+0x60>
   24d40:	28bfda84 	addi	r2,r5,-150
   24d44:	1884983a 	sll	r2,r3,r2
   24d48:	20000726 	beq	r4,zero,24d68 <__fixsfsi+0x5c>
   24d4c:	0085c83a 	sub	r2,zero,r2
   24d50:	f800283a 	ret
   24d54:	00a00034 	movhi	r2,32768
   24d58:	10bfffc4 	addi	r2,r2,-1
   24d5c:	2085883a 	add	r2,r4,r2
   24d60:	f800283a 	ret
   24d64:	0005883a 	mov	r2,zero
   24d68:	f800283a 	ret
   24d6c:	00802584 	movi	r2,150
   24d70:	1145c83a 	sub	r2,r2,r5
   24d74:	1884d83a 	srl	r2,r3,r2
   24d78:	003ff306 	br	24d48 <__alt_mem_SDRAM_controller+0xfc024d48>

00024d7c <__floatsisf>:
   24d7c:	defffd04 	addi	sp,sp,-12
   24d80:	dfc00215 	stw	ra,8(sp)
   24d84:	dc400115 	stw	r17,4(sp)
   24d88:	dc000015 	stw	r16,0(sp)
   24d8c:	20003526 	beq	r4,zero,24e64 <__floatsisf+0xe8>
   24d90:	2021883a 	mov	r16,r4
   24d94:	2022d7fa 	srli	r17,r4,31
   24d98:	20003616 	blt	r4,zero,24e74 <__floatsisf+0xf8>
   24d9c:	8009883a 	mov	r4,r16
   24da0:	00276b40 	call	276b4 <__clzsi2>
   24da4:	00c02784 	movi	r3,158
   24da8:	1887c83a 	sub	r3,r3,r2
   24dac:	01002584 	movi	r4,150
   24db0:	20c01416 	blt	r4,r3,24e04 <__floatsisf+0x88>
   24db4:	20c9c83a 	sub	r4,r4,r3
   24db8:	8120983a 	sll	r16,r16,r4
   24dbc:	00802034 	movhi	r2,128
   24dc0:	10bfffc4 	addi	r2,r2,-1
   24dc4:	8809883a 	mov	r4,r17
   24dc8:	80a0703a 	and	r16,r16,r2
   24dcc:	18803fcc 	andi	r2,r3,255
   24dd0:	100695fa 	slli	r3,r2,23
   24dd4:	20803fcc 	andi	r2,r4,255
   24dd8:	100897fa 	slli	r4,r2,31
   24ddc:	00802034 	movhi	r2,128
   24de0:	10bfffc4 	addi	r2,r2,-1
   24de4:	8084703a 	and	r2,r16,r2
   24de8:	10c4b03a 	or	r2,r2,r3
   24dec:	1104b03a 	or	r2,r2,r4
   24df0:	dfc00217 	ldw	ra,8(sp)
   24df4:	dc400117 	ldw	r17,4(sp)
   24df8:	dc000017 	ldw	r16,0(sp)
   24dfc:	dec00304 	addi	sp,sp,12
   24e00:	f800283a 	ret
   24e04:	01002644 	movi	r4,153
   24e08:	20c01c16 	blt	r4,r3,24e7c <__floatsisf+0x100>
   24e0c:	20c9c83a 	sub	r4,r4,r3
   24e10:	8120983a 	sll	r16,r16,r4
   24e14:	013f0034 	movhi	r4,64512
   24e18:	213fffc4 	addi	r4,r4,-1
   24e1c:	814001cc 	andi	r5,r16,7
   24e20:	8108703a 	and	r4,r16,r4
   24e24:	28000426 	beq	r5,zero,24e38 <__floatsisf+0xbc>
   24e28:	840003cc 	andi	r16,r16,15
   24e2c:	01400104 	movi	r5,4
   24e30:	81400126 	beq	r16,r5,24e38 <__floatsisf+0xbc>
   24e34:	2149883a 	add	r4,r4,r5
   24e38:	2141002c 	andhi	r5,r4,1024
   24e3c:	28000526 	beq	r5,zero,24e54 <__floatsisf+0xd8>
   24e40:	00c027c4 	movi	r3,159
   24e44:	1887c83a 	sub	r3,r3,r2
   24e48:	00bf0034 	movhi	r2,64512
   24e4c:	10bfffc4 	addi	r2,r2,-1
   24e50:	2088703a 	and	r4,r4,r2
   24e54:	202091ba 	slli	r16,r4,6
   24e58:	8809883a 	mov	r4,r17
   24e5c:	8020d27a 	srli	r16,r16,9
   24e60:	003fda06 	br	24dcc <__alt_mem_SDRAM_controller+0xfc024dcc>
   24e64:	0009883a 	mov	r4,zero
   24e68:	0007883a 	mov	r3,zero
   24e6c:	0021883a 	mov	r16,zero
   24e70:	003fd606 	br	24dcc <__alt_mem_SDRAM_controller+0xfc024dcc>
   24e74:	0121c83a 	sub	r16,zero,r4
   24e78:	003fc806 	br	24d9c <__alt_mem_SDRAM_controller+0xfc024d9c>
   24e7c:	01002e44 	movi	r4,185
   24e80:	20c9c83a 	sub	r4,r4,r3
   24e84:	01400144 	movi	r5,5
   24e88:	8108983a 	sll	r4,r16,r4
   24e8c:	288bc83a 	sub	r5,r5,r2
   24e90:	8160d83a 	srl	r16,r16,r5
   24e94:	2008c03a 	cmpne	r4,r4,zero
   24e98:	8120b03a 	or	r16,r16,r4
   24e9c:	003fdd06 	br	24e14 <__alt_mem_SDRAM_controller+0xfc024e14>

00024ea0 <__adddf3>:
   24ea0:	02c00434 	movhi	r11,16
   24ea4:	5affffc4 	addi	r11,r11,-1
   24ea8:	2806d7fa 	srli	r3,r5,31
   24eac:	2ad4703a 	and	r10,r5,r11
   24eb0:	3ad2703a 	and	r9,r7,r11
   24eb4:	3804d53a 	srli	r2,r7,20
   24eb8:	3018d77a 	srli	r12,r6,29
   24ebc:	280ad53a 	srli	r5,r5,20
   24ec0:	501490fa 	slli	r10,r10,3
   24ec4:	2010d77a 	srli	r8,r4,29
   24ec8:	481290fa 	slli	r9,r9,3
   24ecc:	380ed7fa 	srli	r7,r7,31
   24ed0:	defffb04 	addi	sp,sp,-20
   24ed4:	dc800215 	stw	r18,8(sp)
   24ed8:	dc400115 	stw	r17,4(sp)
   24edc:	dc000015 	stw	r16,0(sp)
   24ee0:	dfc00415 	stw	ra,16(sp)
   24ee4:	dcc00315 	stw	r19,12(sp)
   24ee8:	1c803fcc 	andi	r18,r3,255
   24eec:	2c01ffcc 	andi	r16,r5,2047
   24ef0:	5210b03a 	or	r8,r10,r8
   24ef4:	202290fa 	slli	r17,r4,3
   24ef8:	1081ffcc 	andi	r2,r2,2047
   24efc:	4b12b03a 	or	r9,r9,r12
   24f00:	300c90fa 	slli	r6,r6,3
   24f04:	91c07526 	beq	r18,r7,250dc <__adddf3+0x23c>
   24f08:	8087c83a 	sub	r3,r16,r2
   24f0c:	00c0ab0e 	bge	zero,r3,251bc <__adddf3+0x31c>
   24f10:	10002a1e 	bne	r2,zero,24fbc <__adddf3+0x11c>
   24f14:	4984b03a 	or	r2,r9,r6
   24f18:	1000961e 	bne	r2,zero,25174 <__adddf3+0x2d4>
   24f1c:	888001cc 	andi	r2,r17,7
   24f20:	10000726 	beq	r2,zero,24f40 <__adddf3+0xa0>
   24f24:	888003cc 	andi	r2,r17,15
   24f28:	00c00104 	movi	r3,4
   24f2c:	10c00426 	beq	r2,r3,24f40 <__adddf3+0xa0>
   24f30:	88c7883a 	add	r3,r17,r3
   24f34:	1c63803a 	cmpltu	r17,r3,r17
   24f38:	4451883a 	add	r8,r8,r17
   24f3c:	1823883a 	mov	r17,r3
   24f40:	4080202c 	andhi	r2,r8,128
   24f44:	10005926 	beq	r2,zero,250ac <__adddf3+0x20c>
   24f48:	84000044 	addi	r16,r16,1
   24f4c:	0081ffc4 	movi	r2,2047
   24f50:	8080ba26 	beq	r16,r2,2523c <__adddf3+0x39c>
   24f54:	00bfe034 	movhi	r2,65408
   24f58:	10bfffc4 	addi	r2,r2,-1
   24f5c:	4090703a 	and	r8,r8,r2
   24f60:	4004977a 	slli	r2,r8,29
   24f64:	4010927a 	slli	r8,r8,9
   24f68:	8822d0fa 	srli	r17,r17,3
   24f6c:	8401ffcc 	andi	r16,r16,2047
   24f70:	4010d33a 	srli	r8,r8,12
   24f74:	9007883a 	mov	r3,r18
   24f78:	1444b03a 	or	r2,r2,r17
   24f7c:	8401ffcc 	andi	r16,r16,2047
   24f80:	8020953a 	slli	r16,r16,20
   24f84:	18c03fcc 	andi	r3,r3,255
   24f88:	01000434 	movhi	r4,16
   24f8c:	213fffc4 	addi	r4,r4,-1
   24f90:	180697fa 	slli	r3,r3,31
   24f94:	4110703a 	and	r8,r8,r4
   24f98:	4410b03a 	or	r8,r8,r16
   24f9c:	40c6b03a 	or	r3,r8,r3
   24fa0:	dfc00417 	ldw	ra,16(sp)
   24fa4:	dcc00317 	ldw	r19,12(sp)
   24fa8:	dc800217 	ldw	r18,8(sp)
   24fac:	dc400117 	ldw	r17,4(sp)
   24fb0:	dc000017 	ldw	r16,0(sp)
   24fb4:	dec00504 	addi	sp,sp,20
   24fb8:	f800283a 	ret
   24fbc:	0081ffc4 	movi	r2,2047
   24fc0:	80bfd626 	beq	r16,r2,24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   24fc4:	4a402034 	orhi	r9,r9,128
   24fc8:	00800e04 	movi	r2,56
   24fcc:	10c09f16 	blt	r2,r3,2524c <__adddf3+0x3ac>
   24fd0:	008007c4 	movi	r2,31
   24fd4:	10c0c216 	blt	r2,r3,252e0 <__adddf3+0x440>
   24fd8:	00800804 	movi	r2,32
   24fdc:	10c5c83a 	sub	r2,r2,r3
   24fe0:	488a983a 	sll	r5,r9,r2
   24fe4:	30c8d83a 	srl	r4,r6,r3
   24fe8:	3084983a 	sll	r2,r6,r2
   24fec:	48c6d83a 	srl	r3,r9,r3
   24ff0:	290cb03a 	or	r6,r5,r4
   24ff4:	1004c03a 	cmpne	r2,r2,zero
   24ff8:	308cb03a 	or	r6,r6,r2
   24ffc:	898dc83a 	sub	r6,r17,r6
   25000:	89a3803a 	cmpltu	r17,r17,r6
   25004:	40d1c83a 	sub	r8,r8,r3
   25008:	4451c83a 	sub	r8,r8,r17
   2500c:	3023883a 	mov	r17,r6
   25010:	4080202c 	andhi	r2,r8,128
   25014:	10002326 	beq	r2,zero,250a4 <__adddf3+0x204>
   25018:	04c02034 	movhi	r19,128
   2501c:	9cffffc4 	addi	r19,r19,-1
   25020:	44e6703a 	and	r19,r8,r19
   25024:	98007626 	beq	r19,zero,25200 <__adddf3+0x360>
   25028:	9809883a 	mov	r4,r19
   2502c:	00276b40 	call	276b4 <__clzsi2>
   25030:	10fffe04 	addi	r3,r2,-8
   25034:	010007c4 	movi	r4,31
   25038:	20c07716 	blt	r4,r3,25218 <__adddf3+0x378>
   2503c:	00800804 	movi	r2,32
   25040:	10c5c83a 	sub	r2,r2,r3
   25044:	8884d83a 	srl	r2,r17,r2
   25048:	98d0983a 	sll	r8,r19,r3
   2504c:	88e2983a 	sll	r17,r17,r3
   25050:	1204b03a 	or	r2,r2,r8
   25054:	1c007416 	blt	r3,r16,25228 <__adddf3+0x388>
   25058:	1c21c83a 	sub	r16,r3,r16
   2505c:	82000044 	addi	r8,r16,1
   25060:	00c007c4 	movi	r3,31
   25064:	1a009116 	blt	r3,r8,252ac <__adddf3+0x40c>
   25068:	00c00804 	movi	r3,32
   2506c:	1a07c83a 	sub	r3,r3,r8
   25070:	8a08d83a 	srl	r4,r17,r8
   25074:	88e2983a 	sll	r17,r17,r3
   25078:	10c6983a 	sll	r3,r2,r3
   2507c:	1210d83a 	srl	r8,r2,r8
   25080:	8804c03a 	cmpne	r2,r17,zero
   25084:	1906b03a 	or	r3,r3,r4
   25088:	18a2b03a 	or	r17,r3,r2
   2508c:	0021883a 	mov	r16,zero
   25090:	003fa206 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25094:	1890b03a 	or	r8,r3,r2
   25098:	40017d26 	beq	r8,zero,25690 <__adddf3+0x7f0>
   2509c:	1011883a 	mov	r8,r2
   250a0:	1823883a 	mov	r17,r3
   250a4:	888001cc 	andi	r2,r17,7
   250a8:	103f9e1e 	bne	r2,zero,24f24 <__alt_mem_SDRAM_controller+0xfc024f24>
   250ac:	4004977a 	slli	r2,r8,29
   250b0:	8822d0fa 	srli	r17,r17,3
   250b4:	4010d0fa 	srli	r8,r8,3
   250b8:	9007883a 	mov	r3,r18
   250bc:	1444b03a 	or	r2,r2,r17
   250c0:	0101ffc4 	movi	r4,2047
   250c4:	81002426 	beq	r16,r4,25158 <__adddf3+0x2b8>
   250c8:	8120703a 	and	r16,r16,r4
   250cc:	01000434 	movhi	r4,16
   250d0:	213fffc4 	addi	r4,r4,-1
   250d4:	4110703a 	and	r8,r8,r4
   250d8:	003fa806 	br	24f7c <__alt_mem_SDRAM_controller+0xfc024f7c>
   250dc:	8089c83a 	sub	r4,r16,r2
   250e0:	01005e0e 	bge	zero,r4,2525c <__adddf3+0x3bc>
   250e4:	10002b26 	beq	r2,zero,25194 <__adddf3+0x2f4>
   250e8:	0081ffc4 	movi	r2,2047
   250ec:	80bf8b26 	beq	r16,r2,24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   250f0:	4a402034 	orhi	r9,r9,128
   250f4:	00800e04 	movi	r2,56
   250f8:	1100a40e 	bge	r2,r4,2538c <__adddf3+0x4ec>
   250fc:	498cb03a 	or	r6,r9,r6
   25100:	300ac03a 	cmpne	r5,r6,zero
   25104:	0013883a 	mov	r9,zero
   25108:	2c4b883a 	add	r5,r5,r17
   2510c:	2c63803a 	cmpltu	r17,r5,r17
   25110:	4a11883a 	add	r8,r9,r8
   25114:	8a11883a 	add	r8,r17,r8
   25118:	2823883a 	mov	r17,r5
   2511c:	4080202c 	andhi	r2,r8,128
   25120:	103fe026 	beq	r2,zero,250a4 <__alt_mem_SDRAM_controller+0xfc0250a4>
   25124:	84000044 	addi	r16,r16,1
   25128:	0081ffc4 	movi	r2,2047
   2512c:	8080d226 	beq	r16,r2,25478 <__adddf3+0x5d8>
   25130:	00bfe034 	movhi	r2,65408
   25134:	10bfffc4 	addi	r2,r2,-1
   25138:	4090703a 	and	r8,r8,r2
   2513c:	880ad07a 	srli	r5,r17,1
   25140:	400897fa 	slli	r4,r8,31
   25144:	88c0004c 	andi	r3,r17,1
   25148:	28e2b03a 	or	r17,r5,r3
   2514c:	4010d07a 	srli	r8,r8,1
   25150:	2462b03a 	or	r17,r4,r17
   25154:	003f7106 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25158:	4088b03a 	or	r4,r8,r2
   2515c:	20014526 	beq	r4,zero,25674 <__adddf3+0x7d4>
   25160:	01000434 	movhi	r4,16
   25164:	42000234 	orhi	r8,r8,8
   25168:	213fffc4 	addi	r4,r4,-1
   2516c:	4110703a 	and	r8,r8,r4
   25170:	003f8206 	br	24f7c <__alt_mem_SDRAM_controller+0xfc024f7c>
   25174:	18ffffc4 	addi	r3,r3,-1
   25178:	1800491e 	bne	r3,zero,252a0 <__adddf3+0x400>
   2517c:	898bc83a 	sub	r5,r17,r6
   25180:	8963803a 	cmpltu	r17,r17,r5
   25184:	4251c83a 	sub	r8,r8,r9
   25188:	4451c83a 	sub	r8,r8,r17
   2518c:	2823883a 	mov	r17,r5
   25190:	003f9f06 	br	25010 <__alt_mem_SDRAM_controller+0xfc025010>
   25194:	4984b03a 	or	r2,r9,r6
   25198:	103f6026 	beq	r2,zero,24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   2519c:	213fffc4 	addi	r4,r4,-1
   251a0:	2000931e 	bne	r4,zero,253f0 <__adddf3+0x550>
   251a4:	898d883a 	add	r6,r17,r6
   251a8:	3463803a 	cmpltu	r17,r6,r17
   251ac:	4251883a 	add	r8,r8,r9
   251b0:	8a11883a 	add	r8,r17,r8
   251b4:	3023883a 	mov	r17,r6
   251b8:	003fd806 	br	2511c <__alt_mem_SDRAM_controller+0xfc02511c>
   251bc:	1800541e 	bne	r3,zero,25310 <__adddf3+0x470>
   251c0:	80800044 	addi	r2,r16,1
   251c4:	1081ffcc 	andi	r2,r2,2047
   251c8:	00c00044 	movi	r3,1
   251cc:	1880a00e 	bge	r3,r2,25450 <__adddf3+0x5b0>
   251d0:	8989c83a 	sub	r4,r17,r6
   251d4:	8905803a 	cmpltu	r2,r17,r4
   251d8:	4267c83a 	sub	r19,r8,r9
   251dc:	98a7c83a 	sub	r19,r19,r2
   251e0:	9880202c 	andhi	r2,r19,128
   251e4:	10006326 	beq	r2,zero,25374 <__adddf3+0x4d4>
   251e8:	3463c83a 	sub	r17,r6,r17
   251ec:	4a07c83a 	sub	r3,r9,r8
   251f0:	344d803a 	cmpltu	r6,r6,r17
   251f4:	19a7c83a 	sub	r19,r3,r6
   251f8:	3825883a 	mov	r18,r7
   251fc:	983f8a1e 	bne	r19,zero,25028 <__alt_mem_SDRAM_controller+0xfc025028>
   25200:	8809883a 	mov	r4,r17
   25204:	00276b40 	call	276b4 <__clzsi2>
   25208:	10800804 	addi	r2,r2,32
   2520c:	10fffe04 	addi	r3,r2,-8
   25210:	010007c4 	movi	r4,31
   25214:	20ff890e 	bge	r4,r3,2503c <__alt_mem_SDRAM_controller+0xfc02503c>
   25218:	10bff604 	addi	r2,r2,-40
   2521c:	8884983a 	sll	r2,r17,r2
   25220:	0023883a 	mov	r17,zero
   25224:	1c3f8c0e 	bge	r3,r16,25058 <__alt_mem_SDRAM_controller+0xfc025058>
   25228:	023fe034 	movhi	r8,65408
   2522c:	423fffc4 	addi	r8,r8,-1
   25230:	80e1c83a 	sub	r16,r16,r3
   25234:	1210703a 	and	r8,r2,r8
   25238:	003f3806 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   2523c:	9007883a 	mov	r3,r18
   25240:	0011883a 	mov	r8,zero
   25244:	0005883a 	mov	r2,zero
   25248:	003f4c06 	br	24f7c <__alt_mem_SDRAM_controller+0xfc024f7c>
   2524c:	498cb03a 	or	r6,r9,r6
   25250:	300cc03a 	cmpne	r6,r6,zero
   25254:	0007883a 	mov	r3,zero
   25258:	003f6806 	br	24ffc <__alt_mem_SDRAM_controller+0xfc024ffc>
   2525c:	20009c1e 	bne	r4,zero,254d0 <__adddf3+0x630>
   25260:	80800044 	addi	r2,r16,1
   25264:	1141ffcc 	andi	r5,r2,2047
   25268:	01000044 	movi	r4,1
   2526c:	2140670e 	bge	r4,r5,2540c <__adddf3+0x56c>
   25270:	0101ffc4 	movi	r4,2047
   25274:	11007f26 	beq	r2,r4,25474 <__adddf3+0x5d4>
   25278:	898d883a 	add	r6,r17,r6
   2527c:	4247883a 	add	r3,r8,r9
   25280:	3451803a 	cmpltu	r8,r6,r17
   25284:	40d1883a 	add	r8,r8,r3
   25288:	402297fa 	slli	r17,r8,31
   2528c:	300cd07a 	srli	r6,r6,1
   25290:	4010d07a 	srli	r8,r8,1
   25294:	1021883a 	mov	r16,r2
   25298:	89a2b03a 	or	r17,r17,r6
   2529c:	003f1f06 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   252a0:	0081ffc4 	movi	r2,2047
   252a4:	80bf481e 	bne	r16,r2,24fc8 <__alt_mem_SDRAM_controller+0xfc024fc8>
   252a8:	003f1c06 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   252ac:	843ff844 	addi	r16,r16,-31
   252b0:	01000804 	movi	r4,32
   252b4:	1406d83a 	srl	r3,r2,r16
   252b8:	41005026 	beq	r8,r4,253fc <__adddf3+0x55c>
   252bc:	01001004 	movi	r4,64
   252c0:	2211c83a 	sub	r8,r4,r8
   252c4:	1204983a 	sll	r2,r2,r8
   252c8:	88a2b03a 	or	r17,r17,r2
   252cc:	8822c03a 	cmpne	r17,r17,zero
   252d0:	1c62b03a 	or	r17,r3,r17
   252d4:	0011883a 	mov	r8,zero
   252d8:	0021883a 	mov	r16,zero
   252dc:	003f7106 	br	250a4 <__alt_mem_SDRAM_controller+0xfc0250a4>
   252e0:	193ff804 	addi	r4,r3,-32
   252e4:	00800804 	movi	r2,32
   252e8:	4908d83a 	srl	r4,r9,r4
   252ec:	18804526 	beq	r3,r2,25404 <__adddf3+0x564>
   252f0:	00801004 	movi	r2,64
   252f4:	10c5c83a 	sub	r2,r2,r3
   252f8:	4886983a 	sll	r3,r9,r2
   252fc:	198cb03a 	or	r6,r3,r6
   25300:	300cc03a 	cmpne	r6,r6,zero
   25304:	218cb03a 	or	r6,r4,r6
   25308:	0007883a 	mov	r3,zero
   2530c:	003f3b06 	br	24ffc <__alt_mem_SDRAM_controller+0xfc024ffc>
   25310:	80002a26 	beq	r16,zero,253bc <__adddf3+0x51c>
   25314:	0101ffc4 	movi	r4,2047
   25318:	11006826 	beq	r2,r4,254bc <__adddf3+0x61c>
   2531c:	00c7c83a 	sub	r3,zero,r3
   25320:	42002034 	orhi	r8,r8,128
   25324:	01000e04 	movi	r4,56
   25328:	20c07c16 	blt	r4,r3,2551c <__adddf3+0x67c>
   2532c:	010007c4 	movi	r4,31
   25330:	20c0da16 	blt	r4,r3,2569c <__adddf3+0x7fc>
   25334:	01000804 	movi	r4,32
   25338:	20c9c83a 	sub	r4,r4,r3
   2533c:	4114983a 	sll	r10,r8,r4
   25340:	88cad83a 	srl	r5,r17,r3
   25344:	8908983a 	sll	r4,r17,r4
   25348:	40c6d83a 	srl	r3,r8,r3
   2534c:	5162b03a 	or	r17,r10,r5
   25350:	2008c03a 	cmpne	r4,r4,zero
   25354:	8922b03a 	or	r17,r17,r4
   25358:	3463c83a 	sub	r17,r6,r17
   2535c:	48c7c83a 	sub	r3,r9,r3
   25360:	344d803a 	cmpltu	r6,r6,r17
   25364:	1991c83a 	sub	r8,r3,r6
   25368:	1021883a 	mov	r16,r2
   2536c:	3825883a 	mov	r18,r7
   25370:	003f2706 	br	25010 <__alt_mem_SDRAM_controller+0xfc025010>
   25374:	24d0b03a 	or	r8,r4,r19
   25378:	40001b1e 	bne	r8,zero,253e8 <__adddf3+0x548>
   2537c:	0005883a 	mov	r2,zero
   25380:	0007883a 	mov	r3,zero
   25384:	0021883a 	mov	r16,zero
   25388:	003f4d06 	br	250c0 <__alt_mem_SDRAM_controller+0xfc0250c0>
   2538c:	008007c4 	movi	r2,31
   25390:	11003c16 	blt	r2,r4,25484 <__adddf3+0x5e4>
   25394:	00800804 	movi	r2,32
   25398:	1105c83a 	sub	r2,r2,r4
   2539c:	488e983a 	sll	r7,r9,r2
   253a0:	310ad83a 	srl	r5,r6,r4
   253a4:	3084983a 	sll	r2,r6,r2
   253a8:	4912d83a 	srl	r9,r9,r4
   253ac:	394ab03a 	or	r5,r7,r5
   253b0:	1004c03a 	cmpne	r2,r2,zero
   253b4:	288ab03a 	or	r5,r5,r2
   253b8:	003f5306 	br	25108 <__alt_mem_SDRAM_controller+0xfc025108>
   253bc:	4448b03a 	or	r4,r8,r17
   253c0:	20003e26 	beq	r4,zero,254bc <__adddf3+0x61c>
   253c4:	00c6303a 	nor	r3,zero,r3
   253c8:	18003a1e 	bne	r3,zero,254b4 <__adddf3+0x614>
   253cc:	3463c83a 	sub	r17,r6,r17
   253d0:	4a07c83a 	sub	r3,r9,r8
   253d4:	344d803a 	cmpltu	r6,r6,r17
   253d8:	1991c83a 	sub	r8,r3,r6
   253dc:	1021883a 	mov	r16,r2
   253e0:	3825883a 	mov	r18,r7
   253e4:	003f0a06 	br	25010 <__alt_mem_SDRAM_controller+0xfc025010>
   253e8:	2023883a 	mov	r17,r4
   253ec:	003f0d06 	br	25024 <__alt_mem_SDRAM_controller+0xfc025024>
   253f0:	0081ffc4 	movi	r2,2047
   253f4:	80bf3f1e 	bne	r16,r2,250f4 <__alt_mem_SDRAM_controller+0xfc0250f4>
   253f8:	003ec806 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   253fc:	0005883a 	mov	r2,zero
   25400:	003fb106 	br	252c8 <__alt_mem_SDRAM_controller+0xfc0252c8>
   25404:	0007883a 	mov	r3,zero
   25408:	003fbc06 	br	252fc <__alt_mem_SDRAM_controller+0xfc0252fc>
   2540c:	4444b03a 	or	r2,r8,r17
   25410:	8000871e 	bne	r16,zero,25630 <__adddf3+0x790>
   25414:	1000ba26 	beq	r2,zero,25700 <__adddf3+0x860>
   25418:	4984b03a 	or	r2,r9,r6
   2541c:	103ebf26 	beq	r2,zero,24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25420:	8985883a 	add	r2,r17,r6
   25424:	4247883a 	add	r3,r8,r9
   25428:	1451803a 	cmpltu	r8,r2,r17
   2542c:	40d1883a 	add	r8,r8,r3
   25430:	40c0202c 	andhi	r3,r8,128
   25434:	1023883a 	mov	r17,r2
   25438:	183f1a26 	beq	r3,zero,250a4 <__alt_mem_SDRAM_controller+0xfc0250a4>
   2543c:	00bfe034 	movhi	r2,65408
   25440:	10bfffc4 	addi	r2,r2,-1
   25444:	2021883a 	mov	r16,r4
   25448:	4090703a 	and	r8,r8,r2
   2544c:	003eb306 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25450:	4444b03a 	or	r2,r8,r17
   25454:	8000291e 	bne	r16,zero,254fc <__adddf3+0x65c>
   25458:	10004b1e 	bne	r2,zero,25588 <__adddf3+0x6e8>
   2545c:	4990b03a 	or	r8,r9,r6
   25460:	40008b26 	beq	r8,zero,25690 <__adddf3+0x7f0>
   25464:	4811883a 	mov	r8,r9
   25468:	3023883a 	mov	r17,r6
   2546c:	3825883a 	mov	r18,r7
   25470:	003eaa06 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25474:	1021883a 	mov	r16,r2
   25478:	0011883a 	mov	r8,zero
   2547c:	0005883a 	mov	r2,zero
   25480:	003f0f06 	br	250c0 <__alt_mem_SDRAM_controller+0xfc0250c0>
   25484:	217ff804 	addi	r5,r4,-32
   25488:	00800804 	movi	r2,32
   2548c:	494ad83a 	srl	r5,r9,r5
   25490:	20807d26 	beq	r4,r2,25688 <__adddf3+0x7e8>
   25494:	00801004 	movi	r2,64
   25498:	1109c83a 	sub	r4,r2,r4
   2549c:	4912983a 	sll	r9,r9,r4
   254a0:	498cb03a 	or	r6,r9,r6
   254a4:	300cc03a 	cmpne	r6,r6,zero
   254a8:	298ab03a 	or	r5,r5,r6
   254ac:	0013883a 	mov	r9,zero
   254b0:	003f1506 	br	25108 <__alt_mem_SDRAM_controller+0xfc025108>
   254b4:	0101ffc4 	movi	r4,2047
   254b8:	113f9a1e 	bne	r2,r4,25324 <__alt_mem_SDRAM_controller+0xfc025324>
   254bc:	4811883a 	mov	r8,r9
   254c0:	3023883a 	mov	r17,r6
   254c4:	1021883a 	mov	r16,r2
   254c8:	3825883a 	mov	r18,r7
   254cc:	003e9306 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   254d0:	8000161e 	bne	r16,zero,2552c <__adddf3+0x68c>
   254d4:	444ab03a 	or	r5,r8,r17
   254d8:	28005126 	beq	r5,zero,25620 <__adddf3+0x780>
   254dc:	0108303a 	nor	r4,zero,r4
   254e0:	20004d1e 	bne	r4,zero,25618 <__adddf3+0x778>
   254e4:	89a3883a 	add	r17,r17,r6
   254e8:	4253883a 	add	r9,r8,r9
   254ec:	898d803a 	cmpltu	r6,r17,r6
   254f0:	3251883a 	add	r8,r6,r9
   254f4:	1021883a 	mov	r16,r2
   254f8:	003f0806 	br	2511c <__alt_mem_SDRAM_controller+0xfc02511c>
   254fc:	1000301e 	bne	r2,zero,255c0 <__adddf3+0x720>
   25500:	4984b03a 	or	r2,r9,r6
   25504:	10007126 	beq	r2,zero,256cc <__adddf3+0x82c>
   25508:	4811883a 	mov	r8,r9
   2550c:	3023883a 	mov	r17,r6
   25510:	3825883a 	mov	r18,r7
   25514:	0401ffc4 	movi	r16,2047
   25518:	003e8006 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   2551c:	4462b03a 	or	r17,r8,r17
   25520:	8822c03a 	cmpne	r17,r17,zero
   25524:	0007883a 	mov	r3,zero
   25528:	003f8b06 	br	25358 <__alt_mem_SDRAM_controller+0xfc025358>
   2552c:	0141ffc4 	movi	r5,2047
   25530:	11403b26 	beq	r2,r5,25620 <__adddf3+0x780>
   25534:	0109c83a 	sub	r4,zero,r4
   25538:	42002034 	orhi	r8,r8,128
   2553c:	01400e04 	movi	r5,56
   25540:	29006716 	blt	r5,r4,256e0 <__adddf3+0x840>
   25544:	014007c4 	movi	r5,31
   25548:	29007016 	blt	r5,r4,2570c <__adddf3+0x86c>
   2554c:	01400804 	movi	r5,32
   25550:	290bc83a 	sub	r5,r5,r4
   25554:	4154983a 	sll	r10,r8,r5
   25558:	890ed83a 	srl	r7,r17,r4
   2555c:	894a983a 	sll	r5,r17,r5
   25560:	4108d83a 	srl	r4,r8,r4
   25564:	51e2b03a 	or	r17,r10,r7
   25568:	280ac03a 	cmpne	r5,r5,zero
   2556c:	8962b03a 	or	r17,r17,r5
   25570:	89a3883a 	add	r17,r17,r6
   25574:	2253883a 	add	r9,r4,r9
   25578:	898d803a 	cmpltu	r6,r17,r6
   2557c:	3251883a 	add	r8,r6,r9
   25580:	1021883a 	mov	r16,r2
   25584:	003ee506 	br	2511c <__alt_mem_SDRAM_controller+0xfc02511c>
   25588:	4984b03a 	or	r2,r9,r6
   2558c:	103e6326 	beq	r2,zero,24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25590:	8987c83a 	sub	r3,r17,r6
   25594:	88c9803a 	cmpltu	r4,r17,r3
   25598:	4245c83a 	sub	r2,r8,r9
   2559c:	1105c83a 	sub	r2,r2,r4
   255a0:	1100202c 	andhi	r4,r2,128
   255a4:	203ebb26 	beq	r4,zero,25094 <__alt_mem_SDRAM_controller+0xfc025094>
   255a8:	3463c83a 	sub	r17,r6,r17
   255ac:	4a07c83a 	sub	r3,r9,r8
   255b0:	344d803a 	cmpltu	r6,r6,r17
   255b4:	1991c83a 	sub	r8,r3,r6
   255b8:	3825883a 	mov	r18,r7
   255bc:	003e5706 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   255c0:	4984b03a 	or	r2,r9,r6
   255c4:	10002e26 	beq	r2,zero,25680 <__adddf3+0x7e0>
   255c8:	4004d0fa 	srli	r2,r8,3
   255cc:	8822d0fa 	srli	r17,r17,3
   255d0:	4010977a 	slli	r8,r8,29
   255d4:	10c0022c 	andhi	r3,r2,8
   255d8:	4462b03a 	or	r17,r8,r17
   255dc:	18000826 	beq	r3,zero,25600 <__adddf3+0x760>
   255e0:	4808d0fa 	srli	r4,r9,3
   255e4:	20c0022c 	andhi	r3,r4,8
   255e8:	1800051e 	bne	r3,zero,25600 <__adddf3+0x760>
   255ec:	300cd0fa 	srli	r6,r6,3
   255f0:	4806977a 	slli	r3,r9,29
   255f4:	2005883a 	mov	r2,r4
   255f8:	3825883a 	mov	r18,r7
   255fc:	19a2b03a 	or	r17,r3,r6
   25600:	8810d77a 	srli	r8,r17,29
   25604:	100490fa 	slli	r2,r2,3
   25608:	882290fa 	slli	r17,r17,3
   2560c:	0401ffc4 	movi	r16,2047
   25610:	4090b03a 	or	r8,r8,r2
   25614:	003e4106 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25618:	0141ffc4 	movi	r5,2047
   2561c:	117fc71e 	bne	r2,r5,2553c <__alt_mem_SDRAM_controller+0xfc02553c>
   25620:	4811883a 	mov	r8,r9
   25624:	3023883a 	mov	r17,r6
   25628:	1021883a 	mov	r16,r2
   2562c:	003e3b06 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25630:	10002f26 	beq	r2,zero,256f0 <__adddf3+0x850>
   25634:	4984b03a 	or	r2,r9,r6
   25638:	10001126 	beq	r2,zero,25680 <__adddf3+0x7e0>
   2563c:	4004d0fa 	srli	r2,r8,3
   25640:	8822d0fa 	srli	r17,r17,3
   25644:	4010977a 	slli	r8,r8,29
   25648:	10c0022c 	andhi	r3,r2,8
   2564c:	4462b03a 	or	r17,r8,r17
   25650:	183feb26 	beq	r3,zero,25600 <__alt_mem_SDRAM_controller+0xfc025600>
   25654:	4808d0fa 	srli	r4,r9,3
   25658:	20c0022c 	andhi	r3,r4,8
   2565c:	183fe81e 	bne	r3,zero,25600 <__alt_mem_SDRAM_controller+0xfc025600>
   25660:	300cd0fa 	srli	r6,r6,3
   25664:	4806977a 	slli	r3,r9,29
   25668:	2005883a 	mov	r2,r4
   2566c:	19a2b03a 	or	r17,r3,r6
   25670:	003fe306 	br	25600 <__alt_mem_SDRAM_controller+0xfc025600>
   25674:	0011883a 	mov	r8,zero
   25678:	0005883a 	mov	r2,zero
   2567c:	003e3f06 	br	24f7c <__alt_mem_SDRAM_controller+0xfc024f7c>
   25680:	0401ffc4 	movi	r16,2047
   25684:	003e2506 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25688:	0013883a 	mov	r9,zero
   2568c:	003f8406 	br	254a0 <__alt_mem_SDRAM_controller+0xfc0254a0>
   25690:	0005883a 	mov	r2,zero
   25694:	0007883a 	mov	r3,zero
   25698:	003e8906 	br	250c0 <__alt_mem_SDRAM_controller+0xfc0250c0>
   2569c:	197ff804 	addi	r5,r3,-32
   256a0:	01000804 	movi	r4,32
   256a4:	414ad83a 	srl	r5,r8,r5
   256a8:	19002426 	beq	r3,r4,2573c <__adddf3+0x89c>
   256ac:	01001004 	movi	r4,64
   256b0:	20c7c83a 	sub	r3,r4,r3
   256b4:	40c6983a 	sll	r3,r8,r3
   256b8:	1c46b03a 	or	r3,r3,r17
   256bc:	1806c03a 	cmpne	r3,r3,zero
   256c0:	28e2b03a 	or	r17,r5,r3
   256c4:	0007883a 	mov	r3,zero
   256c8:	003f2306 	br	25358 <__alt_mem_SDRAM_controller+0xfc025358>
   256cc:	0007883a 	mov	r3,zero
   256d0:	5811883a 	mov	r8,r11
   256d4:	00bfffc4 	movi	r2,-1
   256d8:	0401ffc4 	movi	r16,2047
   256dc:	003e7806 	br	250c0 <__alt_mem_SDRAM_controller+0xfc0250c0>
   256e0:	4462b03a 	or	r17,r8,r17
   256e4:	8822c03a 	cmpne	r17,r17,zero
   256e8:	0009883a 	mov	r4,zero
   256ec:	003fa006 	br	25570 <__alt_mem_SDRAM_controller+0xfc025570>
   256f0:	4811883a 	mov	r8,r9
   256f4:	3023883a 	mov	r17,r6
   256f8:	0401ffc4 	movi	r16,2047
   256fc:	003e0706 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   25700:	4811883a 	mov	r8,r9
   25704:	3023883a 	mov	r17,r6
   25708:	003e0406 	br	24f1c <__alt_mem_SDRAM_controller+0xfc024f1c>
   2570c:	21fff804 	addi	r7,r4,-32
   25710:	01400804 	movi	r5,32
   25714:	41ced83a 	srl	r7,r8,r7
   25718:	21400a26 	beq	r4,r5,25744 <__adddf3+0x8a4>
   2571c:	01401004 	movi	r5,64
   25720:	2909c83a 	sub	r4,r5,r4
   25724:	4108983a 	sll	r4,r8,r4
   25728:	2448b03a 	or	r4,r4,r17
   2572c:	2008c03a 	cmpne	r4,r4,zero
   25730:	3922b03a 	or	r17,r7,r4
   25734:	0009883a 	mov	r4,zero
   25738:	003f8d06 	br	25570 <__alt_mem_SDRAM_controller+0xfc025570>
   2573c:	0007883a 	mov	r3,zero
   25740:	003fdd06 	br	256b8 <__alt_mem_SDRAM_controller+0xfc0256b8>
   25744:	0009883a 	mov	r4,zero
   25748:	003ff706 	br	25728 <__alt_mem_SDRAM_controller+0xfc025728>

0002574c <__divdf3>:
   2574c:	defff204 	addi	sp,sp,-56
   25750:	dd400915 	stw	r21,36(sp)
   25754:	282ad53a 	srli	r21,r5,20
   25758:	dd000815 	stw	r20,32(sp)
   2575c:	2828d7fa 	srli	r20,r5,31
   25760:	dc000415 	stw	r16,16(sp)
   25764:	04000434 	movhi	r16,16
   25768:	df000c15 	stw	fp,48(sp)
   2576c:	843fffc4 	addi	r16,r16,-1
   25770:	dfc00d15 	stw	ra,52(sp)
   25774:	ddc00b15 	stw	r23,44(sp)
   25778:	dd800a15 	stw	r22,40(sp)
   2577c:	dcc00715 	stw	r19,28(sp)
   25780:	dc800615 	stw	r18,24(sp)
   25784:	dc400515 	stw	r17,20(sp)
   25788:	ad41ffcc 	andi	r21,r21,2047
   2578c:	2c20703a 	and	r16,r5,r16
   25790:	a7003fcc 	andi	fp,r20,255
   25794:	a8006126 	beq	r21,zero,2591c <__divdf3+0x1d0>
   25798:	0081ffc4 	movi	r2,2047
   2579c:	2025883a 	mov	r18,r4
   257a0:	a8803726 	beq	r21,r2,25880 <__divdf3+0x134>
   257a4:	80800434 	orhi	r2,r16,16
   257a8:	100490fa 	slli	r2,r2,3
   257ac:	2020d77a 	srli	r16,r4,29
   257b0:	202490fa 	slli	r18,r4,3
   257b4:	ad7f0044 	addi	r21,r21,-1023
   257b8:	80a0b03a 	or	r16,r16,r2
   257bc:	0027883a 	mov	r19,zero
   257c0:	0013883a 	mov	r9,zero
   257c4:	3804d53a 	srli	r2,r7,20
   257c8:	382cd7fa 	srli	r22,r7,31
   257cc:	04400434 	movhi	r17,16
   257d0:	8c7fffc4 	addi	r17,r17,-1
   257d4:	1081ffcc 	andi	r2,r2,2047
   257d8:	3011883a 	mov	r8,r6
   257dc:	3c62703a 	and	r17,r7,r17
   257e0:	b5c03fcc 	andi	r23,r22,255
   257e4:	10006c26 	beq	r2,zero,25998 <__divdf3+0x24c>
   257e8:	00c1ffc4 	movi	r3,2047
   257ec:	10c06426 	beq	r2,r3,25980 <__divdf3+0x234>
   257f0:	88c00434 	orhi	r3,r17,16
   257f4:	180690fa 	slli	r3,r3,3
   257f8:	3022d77a 	srli	r17,r6,29
   257fc:	301090fa 	slli	r8,r6,3
   25800:	10bf0044 	addi	r2,r2,-1023
   25804:	88e2b03a 	or	r17,r17,r3
   25808:	000f883a 	mov	r7,zero
   2580c:	a58cf03a 	xor	r6,r20,r22
   25810:	3cc8b03a 	or	r4,r7,r19
   25814:	a8abc83a 	sub	r21,r21,r2
   25818:	008003c4 	movi	r2,15
   2581c:	3007883a 	mov	r3,r6
   25820:	34c03fcc 	andi	r19,r6,255
   25824:	11009036 	bltu	r2,r4,25a68 <__divdf3+0x31c>
   25828:	200890ba 	slli	r4,r4,2
   2582c:	008000b4 	movhi	r2,2
   25830:	10961004 	addi	r2,r2,22592
   25834:	2089883a 	add	r4,r4,r2
   25838:	20800017 	ldw	r2,0(r4)
   2583c:	1000683a 	jmp	r2
   25840:	00025a68 	cmpgeui	zero,zero,2409
   25844:	000258b8 	rdprs	zero,zero,2402
   25848:	00025a58 	cmpnei	zero,zero,2409
   2584c:	000258ac 	andhi	zero,zero,2402
   25850:	00025a58 	cmpnei	zero,zero,2409
   25854:	00025a2c 	andhi	zero,zero,2408
   25858:	00025a58 	cmpnei	zero,zero,2409
   2585c:	000258ac 	andhi	zero,zero,2402
   25860:	000258b8 	rdprs	zero,zero,2402
   25864:	000258b8 	rdprs	zero,zero,2402
   25868:	00025a2c 	andhi	zero,zero,2408
   2586c:	000258ac 	andhi	zero,zero,2402
   25870:	0002589c 	xori	zero,zero,2402
   25874:	0002589c 	xori	zero,zero,2402
   25878:	0002589c 	xori	zero,zero,2402
   2587c:	00025d4c 	andi	zero,zero,2421
   25880:	2404b03a 	or	r2,r4,r16
   25884:	1000661e 	bne	r2,zero,25a20 <__divdf3+0x2d4>
   25888:	04c00204 	movi	r19,8
   2588c:	0021883a 	mov	r16,zero
   25890:	0025883a 	mov	r18,zero
   25894:	02400084 	movi	r9,2
   25898:	003fca06 	br	257c4 <__alt_mem_SDRAM_controller+0xfc0257c4>
   2589c:	8023883a 	mov	r17,r16
   258a0:	9011883a 	mov	r8,r18
   258a4:	e02f883a 	mov	r23,fp
   258a8:	480f883a 	mov	r7,r9
   258ac:	00800084 	movi	r2,2
   258b0:	3881311e 	bne	r7,r2,25d78 <__divdf3+0x62c>
   258b4:	b827883a 	mov	r19,r23
   258b8:	98c0004c 	andi	r3,r19,1
   258bc:	0081ffc4 	movi	r2,2047
   258c0:	000b883a 	mov	r5,zero
   258c4:	0025883a 	mov	r18,zero
   258c8:	1004953a 	slli	r2,r2,20
   258cc:	18c03fcc 	andi	r3,r3,255
   258d0:	04400434 	movhi	r17,16
   258d4:	8c7fffc4 	addi	r17,r17,-1
   258d8:	180697fa 	slli	r3,r3,31
   258dc:	2c4a703a 	and	r5,r5,r17
   258e0:	288ab03a 	or	r5,r5,r2
   258e4:	28c6b03a 	or	r3,r5,r3
   258e8:	9005883a 	mov	r2,r18
   258ec:	dfc00d17 	ldw	ra,52(sp)
   258f0:	df000c17 	ldw	fp,48(sp)
   258f4:	ddc00b17 	ldw	r23,44(sp)
   258f8:	dd800a17 	ldw	r22,40(sp)
   258fc:	dd400917 	ldw	r21,36(sp)
   25900:	dd000817 	ldw	r20,32(sp)
   25904:	dcc00717 	ldw	r19,28(sp)
   25908:	dc800617 	ldw	r18,24(sp)
   2590c:	dc400517 	ldw	r17,20(sp)
   25910:	dc000417 	ldw	r16,16(sp)
   25914:	dec00e04 	addi	sp,sp,56
   25918:	f800283a 	ret
   2591c:	2404b03a 	or	r2,r4,r16
   25920:	2027883a 	mov	r19,r4
   25924:	10003926 	beq	r2,zero,25a0c <__divdf3+0x2c0>
   25928:	80012e26 	beq	r16,zero,25de4 <__divdf3+0x698>
   2592c:	8009883a 	mov	r4,r16
   25930:	d9800315 	stw	r6,12(sp)
   25934:	d9c00215 	stw	r7,8(sp)
   25938:	00276b40 	call	276b4 <__clzsi2>
   2593c:	d9800317 	ldw	r6,12(sp)
   25940:	d9c00217 	ldw	r7,8(sp)
   25944:	113ffd44 	addi	r4,r2,-11
   25948:	00c00704 	movi	r3,28
   2594c:	19012116 	blt	r3,r4,25dd4 <__divdf3+0x688>
   25950:	00c00744 	movi	r3,29
   25954:	147ffe04 	addi	r17,r2,-8
   25958:	1907c83a 	sub	r3,r3,r4
   2595c:	8460983a 	sll	r16,r16,r17
   25960:	98c6d83a 	srl	r3,r19,r3
   25964:	9c64983a 	sll	r18,r19,r17
   25968:	1c20b03a 	or	r16,r3,r16
   2596c:	1080fcc4 	addi	r2,r2,1011
   25970:	00abc83a 	sub	r21,zero,r2
   25974:	0027883a 	mov	r19,zero
   25978:	0013883a 	mov	r9,zero
   2597c:	003f9106 	br	257c4 <__alt_mem_SDRAM_controller+0xfc0257c4>
   25980:	3446b03a 	or	r3,r6,r17
   25984:	18001f1e 	bne	r3,zero,25a04 <__divdf3+0x2b8>
   25988:	0023883a 	mov	r17,zero
   2598c:	0011883a 	mov	r8,zero
   25990:	01c00084 	movi	r7,2
   25994:	003f9d06 	br	2580c <__alt_mem_SDRAM_controller+0xfc02580c>
   25998:	3446b03a 	or	r3,r6,r17
   2599c:	18001526 	beq	r3,zero,259f4 <__divdf3+0x2a8>
   259a0:	88011b26 	beq	r17,zero,25e10 <__divdf3+0x6c4>
   259a4:	8809883a 	mov	r4,r17
   259a8:	d9800315 	stw	r6,12(sp)
   259ac:	da400115 	stw	r9,4(sp)
   259b0:	00276b40 	call	276b4 <__clzsi2>
   259b4:	d9800317 	ldw	r6,12(sp)
   259b8:	da400117 	ldw	r9,4(sp)
   259bc:	113ffd44 	addi	r4,r2,-11
   259c0:	00c00704 	movi	r3,28
   259c4:	19010e16 	blt	r3,r4,25e00 <__divdf3+0x6b4>
   259c8:	00c00744 	movi	r3,29
   259cc:	123ffe04 	addi	r8,r2,-8
   259d0:	1907c83a 	sub	r3,r3,r4
   259d4:	8a22983a 	sll	r17,r17,r8
   259d8:	30c6d83a 	srl	r3,r6,r3
   259dc:	3210983a 	sll	r8,r6,r8
   259e0:	1c62b03a 	or	r17,r3,r17
   259e4:	1080fcc4 	addi	r2,r2,1011
   259e8:	0085c83a 	sub	r2,zero,r2
   259ec:	000f883a 	mov	r7,zero
   259f0:	003f8606 	br	2580c <__alt_mem_SDRAM_controller+0xfc02580c>
   259f4:	0023883a 	mov	r17,zero
   259f8:	0011883a 	mov	r8,zero
   259fc:	01c00044 	movi	r7,1
   25a00:	003f8206 	br	2580c <__alt_mem_SDRAM_controller+0xfc02580c>
   25a04:	01c000c4 	movi	r7,3
   25a08:	003f8006 	br	2580c <__alt_mem_SDRAM_controller+0xfc02580c>
   25a0c:	04c00104 	movi	r19,4
   25a10:	0021883a 	mov	r16,zero
   25a14:	0025883a 	mov	r18,zero
   25a18:	02400044 	movi	r9,1
   25a1c:	003f6906 	br	257c4 <__alt_mem_SDRAM_controller+0xfc0257c4>
   25a20:	04c00304 	movi	r19,12
   25a24:	024000c4 	movi	r9,3
   25a28:	003f6606 	br	257c4 <__alt_mem_SDRAM_controller+0xfc0257c4>
   25a2c:	01400434 	movhi	r5,16
   25a30:	0007883a 	mov	r3,zero
   25a34:	297fffc4 	addi	r5,r5,-1
   25a38:	04bfffc4 	movi	r18,-1
   25a3c:	0081ffc4 	movi	r2,2047
   25a40:	003fa106 	br	258c8 <__alt_mem_SDRAM_controller+0xfc0258c8>
   25a44:	00c00044 	movi	r3,1
   25a48:	1887c83a 	sub	r3,r3,r2
   25a4c:	01000e04 	movi	r4,56
   25a50:	20c1210e 	bge	r4,r3,25ed8 <__divdf3+0x78c>
   25a54:	98c0004c 	andi	r3,r19,1
   25a58:	0005883a 	mov	r2,zero
   25a5c:	000b883a 	mov	r5,zero
   25a60:	0025883a 	mov	r18,zero
   25a64:	003f9806 	br	258c8 <__alt_mem_SDRAM_controller+0xfc0258c8>
   25a68:	8c00fd36 	bltu	r17,r16,25e60 <__divdf3+0x714>
   25a6c:	8440fb26 	beq	r16,r17,25e5c <__divdf3+0x710>
   25a70:	8007883a 	mov	r3,r16
   25a74:	ad7fffc4 	addi	r21,r21,-1
   25a78:	0021883a 	mov	r16,zero
   25a7c:	4004d63a 	srli	r2,r8,24
   25a80:	8822923a 	slli	r17,r17,8
   25a84:	1809883a 	mov	r4,r3
   25a88:	402c923a 	slli	r22,r8,8
   25a8c:	88b8b03a 	or	fp,r17,r2
   25a90:	e028d43a 	srli	r20,fp,16
   25a94:	d8c00015 	stw	r3,0(sp)
   25a98:	e5ffffcc 	andi	r23,fp,65535
   25a9c:	a00b883a 	mov	r5,r20
   25aa0:	00238e40 	call	238e4 <__udivsi3>
   25aa4:	d8c00017 	ldw	r3,0(sp)
   25aa8:	a00b883a 	mov	r5,r20
   25aac:	d8800315 	stw	r2,12(sp)
   25ab0:	1809883a 	mov	r4,r3
   25ab4:	00239480 	call	23948 <__umodsi3>
   25ab8:	d9800317 	ldw	r6,12(sp)
   25abc:	1006943a 	slli	r3,r2,16
   25ac0:	9004d43a 	srli	r2,r18,16
   25ac4:	b9a3383a 	mul	r17,r23,r6
   25ac8:	10c4b03a 	or	r2,r2,r3
   25acc:	1440062e 	bgeu	r2,r17,25ae8 <__divdf3+0x39c>
   25ad0:	1705883a 	add	r2,r2,fp
   25ad4:	30ffffc4 	addi	r3,r6,-1
   25ad8:	1700ee36 	bltu	r2,fp,25e94 <__divdf3+0x748>
   25adc:	1440ed2e 	bgeu	r2,r17,25e94 <__divdf3+0x748>
   25ae0:	31bfff84 	addi	r6,r6,-2
   25ae4:	1705883a 	add	r2,r2,fp
   25ae8:	1463c83a 	sub	r17,r2,r17
   25aec:	a00b883a 	mov	r5,r20
   25af0:	8809883a 	mov	r4,r17
   25af4:	d9800315 	stw	r6,12(sp)
   25af8:	00238e40 	call	238e4 <__udivsi3>
   25afc:	a00b883a 	mov	r5,r20
   25b00:	8809883a 	mov	r4,r17
   25b04:	d8800215 	stw	r2,8(sp)
   25b08:	00239480 	call	23948 <__umodsi3>
   25b0c:	d9c00217 	ldw	r7,8(sp)
   25b10:	1004943a 	slli	r2,r2,16
   25b14:	94bfffcc 	andi	r18,r18,65535
   25b18:	b9d1383a 	mul	r8,r23,r7
   25b1c:	90a4b03a 	or	r18,r18,r2
   25b20:	d9800317 	ldw	r6,12(sp)
   25b24:	9200062e 	bgeu	r18,r8,25b40 <__divdf3+0x3f4>
   25b28:	9725883a 	add	r18,r18,fp
   25b2c:	38bfffc4 	addi	r2,r7,-1
   25b30:	9700d636 	bltu	r18,fp,25e8c <__divdf3+0x740>
   25b34:	9200d52e 	bgeu	r18,r8,25e8c <__divdf3+0x740>
   25b38:	39ffff84 	addi	r7,r7,-2
   25b3c:	9725883a 	add	r18,r18,fp
   25b40:	3004943a 	slli	r2,r6,16
   25b44:	b012d43a 	srli	r9,r22,16
   25b48:	b1bfffcc 	andi	r6,r22,65535
   25b4c:	11e2b03a 	or	r17,r2,r7
   25b50:	8806d43a 	srli	r3,r17,16
   25b54:	893fffcc 	andi	r4,r17,65535
   25b58:	218b383a 	mul	r5,r4,r6
   25b5c:	30c5383a 	mul	r2,r6,r3
   25b60:	2249383a 	mul	r4,r4,r9
   25b64:	280ed43a 	srli	r7,r5,16
   25b68:	9225c83a 	sub	r18,r18,r8
   25b6c:	2089883a 	add	r4,r4,r2
   25b70:	3909883a 	add	r4,r7,r4
   25b74:	1a47383a 	mul	r3,r3,r9
   25b78:	2080022e 	bgeu	r4,r2,25b84 <__divdf3+0x438>
   25b7c:	00800074 	movhi	r2,1
   25b80:	1887883a 	add	r3,r3,r2
   25b84:	2004d43a 	srli	r2,r4,16
   25b88:	2008943a 	slli	r4,r4,16
   25b8c:	297fffcc 	andi	r5,r5,65535
   25b90:	10c7883a 	add	r3,r2,r3
   25b94:	2149883a 	add	r4,r4,r5
   25b98:	90c0a536 	bltu	r18,r3,25e30 <__divdf3+0x6e4>
   25b9c:	90c0bf26 	beq	r18,r3,25e9c <__divdf3+0x750>
   25ba0:	90c7c83a 	sub	r3,r18,r3
   25ba4:	810fc83a 	sub	r7,r16,r4
   25ba8:	81e5803a 	cmpltu	r18,r16,r7
   25bac:	1ca5c83a 	sub	r18,r3,r18
   25bb0:	e480c126 	beq	fp,r18,25eb8 <__divdf3+0x76c>
   25bb4:	a00b883a 	mov	r5,r20
   25bb8:	9009883a 	mov	r4,r18
   25bbc:	d9800315 	stw	r6,12(sp)
   25bc0:	d9c00215 	stw	r7,8(sp)
   25bc4:	da400115 	stw	r9,4(sp)
   25bc8:	00238e40 	call	238e4 <__udivsi3>
   25bcc:	a00b883a 	mov	r5,r20
   25bd0:	9009883a 	mov	r4,r18
   25bd4:	d8800015 	stw	r2,0(sp)
   25bd8:	00239480 	call	23948 <__umodsi3>
   25bdc:	d9c00217 	ldw	r7,8(sp)
   25be0:	da000017 	ldw	r8,0(sp)
   25be4:	1006943a 	slli	r3,r2,16
   25be8:	3804d43a 	srli	r2,r7,16
   25bec:	ba21383a 	mul	r16,r23,r8
   25bf0:	d9800317 	ldw	r6,12(sp)
   25bf4:	10c4b03a 	or	r2,r2,r3
   25bf8:	da400117 	ldw	r9,4(sp)
   25bfc:	1400062e 	bgeu	r2,r16,25c18 <__divdf3+0x4cc>
   25c00:	1705883a 	add	r2,r2,fp
   25c04:	40ffffc4 	addi	r3,r8,-1
   25c08:	1700ad36 	bltu	r2,fp,25ec0 <__divdf3+0x774>
   25c0c:	1400ac2e 	bgeu	r2,r16,25ec0 <__divdf3+0x774>
   25c10:	423fff84 	addi	r8,r8,-2
   25c14:	1705883a 	add	r2,r2,fp
   25c18:	1421c83a 	sub	r16,r2,r16
   25c1c:	a00b883a 	mov	r5,r20
   25c20:	8009883a 	mov	r4,r16
   25c24:	d9800315 	stw	r6,12(sp)
   25c28:	d9c00215 	stw	r7,8(sp)
   25c2c:	da000015 	stw	r8,0(sp)
   25c30:	da400115 	stw	r9,4(sp)
   25c34:	00238e40 	call	238e4 <__udivsi3>
   25c38:	8009883a 	mov	r4,r16
   25c3c:	a00b883a 	mov	r5,r20
   25c40:	1025883a 	mov	r18,r2
   25c44:	00239480 	call	23948 <__umodsi3>
   25c48:	d9c00217 	ldw	r7,8(sp)
   25c4c:	1004943a 	slli	r2,r2,16
   25c50:	bcaf383a 	mul	r23,r23,r18
   25c54:	393fffcc 	andi	r4,r7,65535
   25c58:	2088b03a 	or	r4,r4,r2
   25c5c:	d9800317 	ldw	r6,12(sp)
   25c60:	da000017 	ldw	r8,0(sp)
   25c64:	da400117 	ldw	r9,4(sp)
   25c68:	25c0062e 	bgeu	r4,r23,25c84 <__divdf3+0x538>
   25c6c:	2709883a 	add	r4,r4,fp
   25c70:	90bfffc4 	addi	r2,r18,-1
   25c74:	27009436 	bltu	r4,fp,25ec8 <__divdf3+0x77c>
   25c78:	25c0932e 	bgeu	r4,r23,25ec8 <__divdf3+0x77c>
   25c7c:	94bfff84 	addi	r18,r18,-2
   25c80:	2709883a 	add	r4,r4,fp
   25c84:	4004943a 	slli	r2,r8,16
   25c88:	25efc83a 	sub	r23,r4,r23
   25c8c:	1490b03a 	or	r8,r2,r18
   25c90:	4008d43a 	srli	r4,r8,16
   25c94:	40ffffcc 	andi	r3,r8,65535
   25c98:	30c5383a 	mul	r2,r6,r3
   25c9c:	1a47383a 	mul	r3,r3,r9
   25ca0:	310d383a 	mul	r6,r6,r4
   25ca4:	100ad43a 	srli	r5,r2,16
   25ca8:	4913383a 	mul	r9,r9,r4
   25cac:	1987883a 	add	r3,r3,r6
   25cb0:	28c7883a 	add	r3,r5,r3
   25cb4:	1980022e 	bgeu	r3,r6,25cc0 <__divdf3+0x574>
   25cb8:	01000074 	movhi	r4,1
   25cbc:	4913883a 	add	r9,r9,r4
   25cc0:	1808d43a 	srli	r4,r3,16
   25cc4:	1806943a 	slli	r3,r3,16
   25cc8:	10bfffcc 	andi	r2,r2,65535
   25ccc:	2253883a 	add	r9,r4,r9
   25cd0:	1887883a 	add	r3,r3,r2
   25cd4:	ba403836 	bltu	r23,r9,25db8 <__divdf3+0x66c>
   25cd8:	ba403626 	beq	r23,r9,25db4 <__divdf3+0x668>
   25cdc:	42000054 	ori	r8,r8,1
   25ce0:	a880ffc4 	addi	r2,r21,1023
   25ce4:	00bf570e 	bge	zero,r2,25a44 <__alt_mem_SDRAM_controller+0xfc025a44>
   25ce8:	40c001cc 	andi	r3,r8,7
   25cec:	18000726 	beq	r3,zero,25d0c <__divdf3+0x5c0>
   25cf0:	40c003cc 	andi	r3,r8,15
   25cf4:	01000104 	movi	r4,4
   25cf8:	19000426 	beq	r3,r4,25d0c <__divdf3+0x5c0>
   25cfc:	4107883a 	add	r3,r8,r4
   25d00:	1a11803a 	cmpltu	r8,r3,r8
   25d04:	8a23883a 	add	r17,r17,r8
   25d08:	1811883a 	mov	r8,r3
   25d0c:	88c0402c 	andhi	r3,r17,256
   25d10:	18000426 	beq	r3,zero,25d24 <__divdf3+0x5d8>
   25d14:	00ffc034 	movhi	r3,65280
   25d18:	18ffffc4 	addi	r3,r3,-1
   25d1c:	a8810004 	addi	r2,r21,1024
   25d20:	88e2703a 	and	r17,r17,r3
   25d24:	00c1ff84 	movi	r3,2046
   25d28:	18bee316 	blt	r3,r2,258b8 <__alt_mem_SDRAM_controller+0xfc0258b8>
   25d2c:	8824977a 	slli	r18,r17,29
   25d30:	4010d0fa 	srli	r8,r8,3
   25d34:	8822927a 	slli	r17,r17,9
   25d38:	1081ffcc 	andi	r2,r2,2047
   25d3c:	9224b03a 	or	r18,r18,r8
   25d40:	880ad33a 	srli	r5,r17,12
   25d44:	98c0004c 	andi	r3,r19,1
   25d48:	003edf06 	br	258c8 <__alt_mem_SDRAM_controller+0xfc0258c8>
   25d4c:	8080022c 	andhi	r2,r16,8
   25d50:	10001226 	beq	r2,zero,25d9c <__divdf3+0x650>
   25d54:	8880022c 	andhi	r2,r17,8
   25d58:	1000101e 	bne	r2,zero,25d9c <__divdf3+0x650>
   25d5c:	00800434 	movhi	r2,16
   25d60:	89400234 	orhi	r5,r17,8
   25d64:	10bfffc4 	addi	r2,r2,-1
   25d68:	b007883a 	mov	r3,r22
   25d6c:	288a703a 	and	r5,r5,r2
   25d70:	4025883a 	mov	r18,r8
   25d74:	003f3106 	br	25a3c <__alt_mem_SDRAM_controller+0xfc025a3c>
   25d78:	008000c4 	movi	r2,3
   25d7c:	3880a626 	beq	r7,r2,26018 <__divdf3+0x8cc>
   25d80:	00800044 	movi	r2,1
   25d84:	3880521e 	bne	r7,r2,25ed0 <__divdf3+0x784>
   25d88:	b807883a 	mov	r3,r23
   25d8c:	0005883a 	mov	r2,zero
   25d90:	000b883a 	mov	r5,zero
   25d94:	0025883a 	mov	r18,zero
   25d98:	003ecb06 	br	258c8 <__alt_mem_SDRAM_controller+0xfc0258c8>
   25d9c:	00800434 	movhi	r2,16
   25da0:	81400234 	orhi	r5,r16,8
   25da4:	10bfffc4 	addi	r2,r2,-1
   25da8:	a007883a 	mov	r3,r20
   25dac:	288a703a 	and	r5,r5,r2
   25db0:	003f2206 	br	25a3c <__alt_mem_SDRAM_controller+0xfc025a3c>
   25db4:	183fca26 	beq	r3,zero,25ce0 <__alt_mem_SDRAM_controller+0xfc025ce0>
   25db8:	e5ef883a 	add	r23,fp,r23
   25dbc:	40bfffc4 	addi	r2,r8,-1
   25dc0:	bf00392e 	bgeu	r23,fp,25ea8 <__divdf3+0x75c>
   25dc4:	1011883a 	mov	r8,r2
   25dc8:	ba7fc41e 	bne	r23,r9,25cdc <__alt_mem_SDRAM_controller+0xfc025cdc>
   25dcc:	b0ffc31e 	bne	r22,r3,25cdc <__alt_mem_SDRAM_controller+0xfc025cdc>
   25dd0:	003fc306 	br	25ce0 <__alt_mem_SDRAM_controller+0xfc025ce0>
   25dd4:	143ff604 	addi	r16,r2,-40
   25dd8:	9c20983a 	sll	r16,r19,r16
   25ddc:	0025883a 	mov	r18,zero
   25de0:	003ee206 	br	2596c <__alt_mem_SDRAM_controller+0xfc02596c>
   25de4:	d9800315 	stw	r6,12(sp)
   25de8:	d9c00215 	stw	r7,8(sp)
   25dec:	00276b40 	call	276b4 <__clzsi2>
   25df0:	10800804 	addi	r2,r2,32
   25df4:	d9c00217 	ldw	r7,8(sp)
   25df8:	d9800317 	ldw	r6,12(sp)
   25dfc:	003ed106 	br	25944 <__alt_mem_SDRAM_controller+0xfc025944>
   25e00:	147ff604 	addi	r17,r2,-40
   25e04:	3462983a 	sll	r17,r6,r17
   25e08:	0011883a 	mov	r8,zero
   25e0c:	003ef506 	br	259e4 <__alt_mem_SDRAM_controller+0xfc0259e4>
   25e10:	3009883a 	mov	r4,r6
   25e14:	d9800315 	stw	r6,12(sp)
   25e18:	da400115 	stw	r9,4(sp)
   25e1c:	00276b40 	call	276b4 <__clzsi2>
   25e20:	10800804 	addi	r2,r2,32
   25e24:	da400117 	ldw	r9,4(sp)
   25e28:	d9800317 	ldw	r6,12(sp)
   25e2c:	003ee306 	br	259bc <__alt_mem_SDRAM_controller+0xfc0259bc>
   25e30:	85a1883a 	add	r16,r16,r22
   25e34:	8585803a 	cmpltu	r2,r16,r22
   25e38:	1705883a 	add	r2,r2,fp
   25e3c:	14a5883a 	add	r18,r2,r18
   25e40:	88bfffc4 	addi	r2,r17,-1
   25e44:	e4800c2e 	bgeu	fp,r18,25e78 <__divdf3+0x72c>
   25e48:	90c03e36 	bltu	r18,r3,25f44 <__divdf3+0x7f8>
   25e4c:	1c806926 	beq	r3,r18,25ff4 <__divdf3+0x8a8>
   25e50:	90c7c83a 	sub	r3,r18,r3
   25e54:	1023883a 	mov	r17,r2
   25e58:	003f5206 	br	25ba4 <__alt_mem_SDRAM_controller+0xfc025ba4>
   25e5c:	923f0436 	bltu	r18,r8,25a70 <__alt_mem_SDRAM_controller+0xfc025a70>
   25e60:	800897fa 	slli	r4,r16,31
   25e64:	9004d07a 	srli	r2,r18,1
   25e68:	8006d07a 	srli	r3,r16,1
   25e6c:	902097fa 	slli	r16,r18,31
   25e70:	20a4b03a 	or	r18,r4,r2
   25e74:	003f0106 	br	25a7c <__alt_mem_SDRAM_controller+0xfc025a7c>
   25e78:	e4bff51e 	bne	fp,r18,25e50 <__alt_mem_SDRAM_controller+0xfc025e50>
   25e7c:	85bff22e 	bgeu	r16,r22,25e48 <__alt_mem_SDRAM_controller+0xfc025e48>
   25e80:	e0c7c83a 	sub	r3,fp,r3
   25e84:	1023883a 	mov	r17,r2
   25e88:	003f4606 	br	25ba4 <__alt_mem_SDRAM_controller+0xfc025ba4>
   25e8c:	100f883a 	mov	r7,r2
   25e90:	003f2b06 	br	25b40 <__alt_mem_SDRAM_controller+0xfc025b40>
   25e94:	180d883a 	mov	r6,r3
   25e98:	003f1306 	br	25ae8 <__alt_mem_SDRAM_controller+0xfc025ae8>
   25e9c:	813fe436 	bltu	r16,r4,25e30 <__alt_mem_SDRAM_controller+0xfc025e30>
   25ea0:	0007883a 	mov	r3,zero
   25ea4:	003f3f06 	br	25ba4 <__alt_mem_SDRAM_controller+0xfc025ba4>
   25ea8:	ba402c36 	bltu	r23,r9,25f5c <__divdf3+0x810>
   25eac:	4dc05426 	beq	r9,r23,26000 <__divdf3+0x8b4>
   25eb0:	1011883a 	mov	r8,r2
   25eb4:	003f8906 	br	25cdc <__alt_mem_SDRAM_controller+0xfc025cdc>
   25eb8:	023fffc4 	movi	r8,-1
   25ebc:	003f8806 	br	25ce0 <__alt_mem_SDRAM_controller+0xfc025ce0>
   25ec0:	1811883a 	mov	r8,r3
   25ec4:	003f5406 	br	25c18 <__alt_mem_SDRAM_controller+0xfc025c18>
   25ec8:	1025883a 	mov	r18,r2
   25ecc:	003f6d06 	br	25c84 <__alt_mem_SDRAM_controller+0xfc025c84>
   25ed0:	b827883a 	mov	r19,r23
   25ed4:	003f8206 	br	25ce0 <__alt_mem_SDRAM_controller+0xfc025ce0>
   25ed8:	010007c4 	movi	r4,31
   25edc:	20c02616 	blt	r4,r3,25f78 <__divdf3+0x82c>
   25ee0:	00800804 	movi	r2,32
   25ee4:	10c5c83a 	sub	r2,r2,r3
   25ee8:	888a983a 	sll	r5,r17,r2
   25eec:	40c8d83a 	srl	r4,r8,r3
   25ef0:	4084983a 	sll	r2,r8,r2
   25ef4:	88e2d83a 	srl	r17,r17,r3
   25ef8:	2906b03a 	or	r3,r5,r4
   25efc:	1004c03a 	cmpne	r2,r2,zero
   25f00:	1886b03a 	or	r3,r3,r2
   25f04:	188001cc 	andi	r2,r3,7
   25f08:	10000726 	beq	r2,zero,25f28 <__divdf3+0x7dc>
   25f0c:	188003cc 	andi	r2,r3,15
   25f10:	01000104 	movi	r4,4
   25f14:	11000426 	beq	r2,r4,25f28 <__divdf3+0x7dc>
   25f18:	1805883a 	mov	r2,r3
   25f1c:	10c00104 	addi	r3,r2,4
   25f20:	1885803a 	cmpltu	r2,r3,r2
   25f24:	88a3883a 	add	r17,r17,r2
   25f28:	8880202c 	andhi	r2,r17,128
   25f2c:	10002726 	beq	r2,zero,25fcc <__divdf3+0x880>
   25f30:	98c0004c 	andi	r3,r19,1
   25f34:	00800044 	movi	r2,1
   25f38:	000b883a 	mov	r5,zero
   25f3c:	0025883a 	mov	r18,zero
   25f40:	003e6106 	br	258c8 <__alt_mem_SDRAM_controller+0xfc0258c8>
   25f44:	85a1883a 	add	r16,r16,r22
   25f48:	8585803a 	cmpltu	r2,r16,r22
   25f4c:	1705883a 	add	r2,r2,fp
   25f50:	14a5883a 	add	r18,r2,r18
   25f54:	8c7fff84 	addi	r17,r17,-2
   25f58:	003f1106 	br	25ba0 <__alt_mem_SDRAM_controller+0xfc025ba0>
   25f5c:	b589883a 	add	r4,r22,r22
   25f60:	25ad803a 	cmpltu	r22,r4,r22
   25f64:	b739883a 	add	fp,r22,fp
   25f68:	40bfff84 	addi	r2,r8,-2
   25f6c:	bf2f883a 	add	r23,r23,fp
   25f70:	202d883a 	mov	r22,r4
   25f74:	003f9306 	br	25dc4 <__alt_mem_SDRAM_controller+0xfc025dc4>
   25f78:	013ff844 	movi	r4,-31
   25f7c:	2085c83a 	sub	r2,r4,r2
   25f80:	8888d83a 	srl	r4,r17,r2
   25f84:	00800804 	movi	r2,32
   25f88:	18802126 	beq	r3,r2,26010 <__divdf3+0x8c4>
   25f8c:	00801004 	movi	r2,64
   25f90:	10c5c83a 	sub	r2,r2,r3
   25f94:	8884983a 	sll	r2,r17,r2
   25f98:	1204b03a 	or	r2,r2,r8
   25f9c:	1004c03a 	cmpne	r2,r2,zero
   25fa0:	2084b03a 	or	r2,r4,r2
   25fa4:	144001cc 	andi	r17,r2,7
   25fa8:	88000d1e 	bne	r17,zero,25fe0 <__divdf3+0x894>
   25fac:	000b883a 	mov	r5,zero
   25fb0:	1024d0fa 	srli	r18,r2,3
   25fb4:	98c0004c 	andi	r3,r19,1
   25fb8:	0005883a 	mov	r2,zero
   25fbc:	9464b03a 	or	r18,r18,r17
   25fc0:	003e4106 	br	258c8 <__alt_mem_SDRAM_controller+0xfc0258c8>
   25fc4:	1007883a 	mov	r3,r2
   25fc8:	0023883a 	mov	r17,zero
   25fcc:	880a927a 	slli	r5,r17,9
   25fd0:	1805883a 	mov	r2,r3
   25fd4:	8822977a 	slli	r17,r17,29
   25fd8:	280ad33a 	srli	r5,r5,12
   25fdc:	003ff406 	br	25fb0 <__alt_mem_SDRAM_controller+0xfc025fb0>
   25fe0:	10c003cc 	andi	r3,r2,15
   25fe4:	01000104 	movi	r4,4
   25fe8:	193ff626 	beq	r3,r4,25fc4 <__alt_mem_SDRAM_controller+0xfc025fc4>
   25fec:	0023883a 	mov	r17,zero
   25ff0:	003fca06 	br	25f1c <__alt_mem_SDRAM_controller+0xfc025f1c>
   25ff4:	813fd336 	bltu	r16,r4,25f44 <__alt_mem_SDRAM_controller+0xfc025f44>
   25ff8:	1023883a 	mov	r17,r2
   25ffc:	003fa806 	br	25ea0 <__alt_mem_SDRAM_controller+0xfc025ea0>
   26000:	b0ffd636 	bltu	r22,r3,25f5c <__alt_mem_SDRAM_controller+0xfc025f5c>
   26004:	1011883a 	mov	r8,r2
   26008:	b0ff341e 	bne	r22,r3,25cdc <__alt_mem_SDRAM_controller+0xfc025cdc>
   2600c:	003f3406 	br	25ce0 <__alt_mem_SDRAM_controller+0xfc025ce0>
   26010:	0005883a 	mov	r2,zero
   26014:	003fe006 	br	25f98 <__alt_mem_SDRAM_controller+0xfc025f98>
   26018:	00800434 	movhi	r2,16
   2601c:	89400234 	orhi	r5,r17,8
   26020:	10bfffc4 	addi	r2,r2,-1
   26024:	b807883a 	mov	r3,r23
   26028:	288a703a 	and	r5,r5,r2
   2602c:	4025883a 	mov	r18,r8
   26030:	003e8206 	br	25a3c <__alt_mem_SDRAM_controller+0xfc025a3c>

00026034 <__eqdf2>:
   26034:	2804d53a 	srli	r2,r5,20
   26038:	3806d53a 	srli	r3,r7,20
   2603c:	02000434 	movhi	r8,16
   26040:	423fffc4 	addi	r8,r8,-1
   26044:	1081ffcc 	andi	r2,r2,2047
   26048:	0281ffc4 	movi	r10,2047
   2604c:	2a12703a 	and	r9,r5,r8
   26050:	18c1ffcc 	andi	r3,r3,2047
   26054:	3a10703a 	and	r8,r7,r8
   26058:	280ad7fa 	srli	r5,r5,31
   2605c:	380ed7fa 	srli	r7,r7,31
   26060:	12801026 	beq	r2,r10,260a4 <__eqdf2+0x70>
   26064:	0281ffc4 	movi	r10,2047
   26068:	1a800a26 	beq	r3,r10,26094 <__eqdf2+0x60>
   2606c:	10c00226 	beq	r2,r3,26078 <__eqdf2+0x44>
   26070:	00800044 	movi	r2,1
   26074:	f800283a 	ret
   26078:	4a3ffd1e 	bne	r9,r8,26070 <__alt_mem_SDRAM_controller+0xfc026070>
   2607c:	21bffc1e 	bne	r4,r6,26070 <__alt_mem_SDRAM_controller+0xfc026070>
   26080:	29c00c26 	beq	r5,r7,260b4 <__eqdf2+0x80>
   26084:	103ffa1e 	bne	r2,zero,26070 <__alt_mem_SDRAM_controller+0xfc026070>
   26088:	2244b03a 	or	r2,r4,r9
   2608c:	1004c03a 	cmpne	r2,r2,zero
   26090:	f800283a 	ret
   26094:	3214b03a 	or	r10,r6,r8
   26098:	503ff426 	beq	r10,zero,2606c <__alt_mem_SDRAM_controller+0xfc02606c>
   2609c:	00800044 	movi	r2,1
   260a0:	f800283a 	ret
   260a4:	2254b03a 	or	r10,r4,r9
   260a8:	503fee26 	beq	r10,zero,26064 <__alt_mem_SDRAM_controller+0xfc026064>
   260ac:	00800044 	movi	r2,1
   260b0:	f800283a 	ret
   260b4:	0005883a 	mov	r2,zero
   260b8:	f800283a 	ret

000260bc <__gedf2>:
   260bc:	2804d53a 	srli	r2,r5,20
   260c0:	3806d53a 	srli	r3,r7,20
   260c4:	02000434 	movhi	r8,16
   260c8:	423fffc4 	addi	r8,r8,-1
   260cc:	1081ffcc 	andi	r2,r2,2047
   260d0:	0241ffc4 	movi	r9,2047
   260d4:	2a14703a 	and	r10,r5,r8
   260d8:	18c1ffcc 	andi	r3,r3,2047
   260dc:	3a10703a 	and	r8,r7,r8
   260e0:	280ad7fa 	srli	r5,r5,31
   260e4:	380ed7fa 	srli	r7,r7,31
   260e8:	12401d26 	beq	r2,r9,26160 <__gedf2+0xa4>
   260ec:	0241ffc4 	movi	r9,2047
   260f0:	1a401226 	beq	r3,r9,2613c <__gedf2+0x80>
   260f4:	1000081e 	bne	r2,zero,26118 <__gedf2+0x5c>
   260f8:	2296b03a 	or	r11,r4,r10
   260fc:	5813003a 	cmpeq	r9,r11,zero
   26100:	1800091e 	bne	r3,zero,26128 <__gedf2+0x6c>
   26104:	3218b03a 	or	r12,r6,r8
   26108:	6000071e 	bne	r12,zero,26128 <__gedf2+0x6c>
   2610c:	0005883a 	mov	r2,zero
   26110:	5800101e 	bne	r11,zero,26154 <__gedf2+0x98>
   26114:	f800283a 	ret
   26118:	18000c1e 	bne	r3,zero,2614c <__gedf2+0x90>
   2611c:	3212b03a 	or	r9,r6,r8
   26120:	48000c26 	beq	r9,zero,26154 <__gedf2+0x98>
   26124:	0013883a 	mov	r9,zero
   26128:	39c03fcc 	andi	r7,r7,255
   2612c:	48000826 	beq	r9,zero,26150 <__gedf2+0x94>
   26130:	38000926 	beq	r7,zero,26158 <__gedf2+0x9c>
   26134:	00800044 	movi	r2,1
   26138:	f800283a 	ret
   2613c:	3212b03a 	or	r9,r6,r8
   26140:	483fec26 	beq	r9,zero,260f4 <__alt_mem_SDRAM_controller+0xfc0260f4>
   26144:	00bfff84 	movi	r2,-2
   26148:	f800283a 	ret
   2614c:	39c03fcc 	andi	r7,r7,255
   26150:	29c00626 	beq	r5,r7,2616c <__gedf2+0xb0>
   26154:	283ff726 	beq	r5,zero,26134 <__alt_mem_SDRAM_controller+0xfc026134>
   26158:	00bfffc4 	movi	r2,-1
   2615c:	f800283a 	ret
   26160:	2292b03a 	or	r9,r4,r10
   26164:	483fe126 	beq	r9,zero,260ec <__alt_mem_SDRAM_controller+0xfc0260ec>
   26168:	003ff606 	br	26144 <__alt_mem_SDRAM_controller+0xfc026144>
   2616c:	18bff916 	blt	r3,r2,26154 <__alt_mem_SDRAM_controller+0xfc026154>
   26170:	10c00316 	blt	r2,r3,26180 <__gedf2+0xc4>
   26174:	42bff736 	bltu	r8,r10,26154 <__alt_mem_SDRAM_controller+0xfc026154>
   26178:	52000326 	beq	r10,r8,26188 <__gedf2+0xcc>
   2617c:	5200042e 	bgeu	r10,r8,26190 <__gedf2+0xd4>
   26180:	283fec1e 	bne	r5,zero,26134 <__alt_mem_SDRAM_controller+0xfc026134>
   26184:	003ff406 	br	26158 <__alt_mem_SDRAM_controller+0xfc026158>
   26188:	313ff236 	bltu	r6,r4,26154 <__alt_mem_SDRAM_controller+0xfc026154>
   2618c:	21bffc36 	bltu	r4,r6,26180 <__alt_mem_SDRAM_controller+0xfc026180>
   26190:	0005883a 	mov	r2,zero
   26194:	f800283a 	ret

00026198 <__ledf2>:
   26198:	2804d53a 	srli	r2,r5,20
   2619c:	3810d53a 	srli	r8,r7,20
   261a0:	00c00434 	movhi	r3,16
   261a4:	18ffffc4 	addi	r3,r3,-1
   261a8:	1081ffcc 	andi	r2,r2,2047
   261ac:	0241ffc4 	movi	r9,2047
   261b0:	28d4703a 	and	r10,r5,r3
   261b4:	4201ffcc 	andi	r8,r8,2047
   261b8:	38c6703a 	and	r3,r7,r3
   261bc:	280ad7fa 	srli	r5,r5,31
   261c0:	380ed7fa 	srli	r7,r7,31
   261c4:	12401f26 	beq	r2,r9,26244 <__ledf2+0xac>
   261c8:	0241ffc4 	movi	r9,2047
   261cc:	42401426 	beq	r8,r9,26220 <__ledf2+0x88>
   261d0:	1000091e 	bne	r2,zero,261f8 <__ledf2+0x60>
   261d4:	2296b03a 	or	r11,r4,r10
   261d8:	5813003a 	cmpeq	r9,r11,zero
   261dc:	29403fcc 	andi	r5,r5,255
   261e0:	40000a1e 	bne	r8,zero,2620c <__ledf2+0x74>
   261e4:	30d8b03a 	or	r12,r6,r3
   261e8:	6000081e 	bne	r12,zero,2620c <__ledf2+0x74>
   261ec:	0005883a 	mov	r2,zero
   261f0:	5800111e 	bne	r11,zero,26238 <__ledf2+0xa0>
   261f4:	f800283a 	ret
   261f8:	29403fcc 	andi	r5,r5,255
   261fc:	40000c1e 	bne	r8,zero,26230 <__ledf2+0x98>
   26200:	30d2b03a 	or	r9,r6,r3
   26204:	48000c26 	beq	r9,zero,26238 <__ledf2+0xa0>
   26208:	0013883a 	mov	r9,zero
   2620c:	39c03fcc 	andi	r7,r7,255
   26210:	48000826 	beq	r9,zero,26234 <__ledf2+0x9c>
   26214:	38001126 	beq	r7,zero,2625c <__ledf2+0xc4>
   26218:	00800044 	movi	r2,1
   2621c:	f800283a 	ret
   26220:	30d2b03a 	or	r9,r6,r3
   26224:	483fea26 	beq	r9,zero,261d0 <__alt_mem_SDRAM_controller+0xfc0261d0>
   26228:	00800084 	movi	r2,2
   2622c:	f800283a 	ret
   26230:	39c03fcc 	andi	r7,r7,255
   26234:	39400726 	beq	r7,r5,26254 <__ledf2+0xbc>
   26238:	2800081e 	bne	r5,zero,2625c <__ledf2+0xc4>
   2623c:	00800044 	movi	r2,1
   26240:	f800283a 	ret
   26244:	2292b03a 	or	r9,r4,r10
   26248:	483fdf26 	beq	r9,zero,261c8 <__alt_mem_SDRAM_controller+0xfc0261c8>
   2624c:	00800084 	movi	r2,2
   26250:	f800283a 	ret
   26254:	4080030e 	bge	r8,r2,26264 <__ledf2+0xcc>
   26258:	383fef26 	beq	r7,zero,26218 <__alt_mem_SDRAM_controller+0xfc026218>
   2625c:	00bfffc4 	movi	r2,-1
   26260:	f800283a 	ret
   26264:	123feb16 	blt	r2,r8,26214 <__alt_mem_SDRAM_controller+0xfc026214>
   26268:	1abff336 	bltu	r3,r10,26238 <__alt_mem_SDRAM_controller+0xfc026238>
   2626c:	50c00326 	beq	r10,r3,2627c <__ledf2+0xe4>
   26270:	50c0042e 	bgeu	r10,r3,26284 <__ledf2+0xec>
   26274:	283fe81e 	bne	r5,zero,26218 <__alt_mem_SDRAM_controller+0xfc026218>
   26278:	003ff806 	br	2625c <__alt_mem_SDRAM_controller+0xfc02625c>
   2627c:	313fee36 	bltu	r6,r4,26238 <__alt_mem_SDRAM_controller+0xfc026238>
   26280:	21bffc36 	bltu	r4,r6,26274 <__alt_mem_SDRAM_controller+0xfc026274>
   26284:	0005883a 	mov	r2,zero
   26288:	f800283a 	ret

0002628c <__muldf3>:
   2628c:	defff304 	addi	sp,sp,-52
   26290:	2804d53a 	srli	r2,r5,20
   26294:	dd800915 	stw	r22,36(sp)
   26298:	282cd7fa 	srli	r22,r5,31
   2629c:	dc000315 	stw	r16,12(sp)
   262a0:	04000434 	movhi	r16,16
   262a4:	dd400815 	stw	r21,32(sp)
   262a8:	dc800515 	stw	r18,20(sp)
   262ac:	843fffc4 	addi	r16,r16,-1
   262b0:	dfc00c15 	stw	ra,48(sp)
   262b4:	df000b15 	stw	fp,44(sp)
   262b8:	ddc00a15 	stw	r23,40(sp)
   262bc:	dd000715 	stw	r20,28(sp)
   262c0:	dcc00615 	stw	r19,24(sp)
   262c4:	dc400415 	stw	r17,16(sp)
   262c8:	1481ffcc 	andi	r18,r2,2047
   262cc:	2c20703a 	and	r16,r5,r16
   262d0:	b02b883a 	mov	r21,r22
   262d4:	b2403fcc 	andi	r9,r22,255
   262d8:	90006026 	beq	r18,zero,2645c <__muldf3+0x1d0>
   262dc:	0081ffc4 	movi	r2,2047
   262e0:	2029883a 	mov	r20,r4
   262e4:	90803626 	beq	r18,r2,263c0 <__muldf3+0x134>
   262e8:	80800434 	orhi	r2,r16,16
   262ec:	100490fa 	slli	r2,r2,3
   262f0:	2020d77a 	srli	r16,r4,29
   262f4:	202890fa 	slli	r20,r4,3
   262f8:	94bf0044 	addi	r18,r18,-1023
   262fc:	80a0b03a 	or	r16,r16,r2
   26300:	0027883a 	mov	r19,zero
   26304:	0039883a 	mov	fp,zero
   26308:	3804d53a 	srli	r2,r7,20
   2630c:	382ed7fa 	srli	r23,r7,31
   26310:	04400434 	movhi	r17,16
   26314:	8c7fffc4 	addi	r17,r17,-1
   26318:	1081ffcc 	andi	r2,r2,2047
   2631c:	3011883a 	mov	r8,r6
   26320:	3c62703a 	and	r17,r7,r17
   26324:	ba803fcc 	andi	r10,r23,255
   26328:	10006d26 	beq	r2,zero,264e0 <__muldf3+0x254>
   2632c:	00c1ffc4 	movi	r3,2047
   26330:	10c06526 	beq	r2,r3,264c8 <__muldf3+0x23c>
   26334:	88c00434 	orhi	r3,r17,16
   26338:	180690fa 	slli	r3,r3,3
   2633c:	3022d77a 	srli	r17,r6,29
   26340:	301090fa 	slli	r8,r6,3
   26344:	10bf0044 	addi	r2,r2,-1023
   26348:	88e2b03a 	or	r17,r17,r3
   2634c:	000b883a 	mov	r5,zero
   26350:	9085883a 	add	r2,r18,r2
   26354:	2cc8b03a 	or	r4,r5,r19
   26358:	00c003c4 	movi	r3,15
   2635c:	bdacf03a 	xor	r22,r23,r22
   26360:	12c00044 	addi	r11,r2,1
   26364:	19009936 	bltu	r3,r4,265cc <__muldf3+0x340>
   26368:	200890ba 	slli	r4,r4,2
   2636c:	00c000b4 	movhi	r3,2
   26370:	18d8e004 	addi	r3,r3,25472
   26374:	20c9883a 	add	r4,r4,r3
   26378:	20c00017 	ldw	r3,0(r4)
   2637c:	1800683a 	jmp	r3
   26380:	000265cc 	andi	zero,zero,2455
   26384:	000263e0 	cmpeqi	zero,zero,2447
   26388:	000263e0 	cmpeqi	zero,zero,2447
   2638c:	000263dc 	xori	zero,zero,2447
   26390:	000265a8 	cmpgeui	zero,zero,2454
   26394:	000265a8 	cmpgeui	zero,zero,2454
   26398:	00026590 	cmplti	zero,zero,2454
   2639c:	000263dc 	xori	zero,zero,2447
   263a0:	000265a8 	cmpgeui	zero,zero,2454
   263a4:	00026590 	cmplti	zero,zero,2454
   263a8:	000265a8 	cmpgeui	zero,zero,2454
   263ac:	000263dc 	xori	zero,zero,2447
   263b0:	000265b8 	rdprs	zero,zero,2454
   263b4:	000265b8 	rdprs	zero,zero,2454
   263b8:	000265b8 	rdprs	zero,zero,2454
   263bc:	000267d4 	movui	zero,2463
   263c0:	2404b03a 	or	r2,r4,r16
   263c4:	10006f1e 	bne	r2,zero,26584 <__muldf3+0x2f8>
   263c8:	04c00204 	movi	r19,8
   263cc:	0021883a 	mov	r16,zero
   263d0:	0029883a 	mov	r20,zero
   263d4:	07000084 	movi	fp,2
   263d8:	003fcb06 	br	26308 <__alt_mem_SDRAM_controller+0xfc026308>
   263dc:	502d883a 	mov	r22,r10
   263e0:	00800084 	movi	r2,2
   263e4:	28805726 	beq	r5,r2,26544 <__muldf3+0x2b8>
   263e8:	008000c4 	movi	r2,3
   263ec:	28816626 	beq	r5,r2,26988 <__muldf3+0x6fc>
   263f0:	00800044 	movi	r2,1
   263f4:	2881411e 	bne	r5,r2,268fc <__muldf3+0x670>
   263f8:	b02b883a 	mov	r21,r22
   263fc:	0005883a 	mov	r2,zero
   26400:	000b883a 	mov	r5,zero
   26404:	0029883a 	mov	r20,zero
   26408:	1004953a 	slli	r2,r2,20
   2640c:	a8c03fcc 	andi	r3,r21,255
   26410:	04400434 	movhi	r17,16
   26414:	8c7fffc4 	addi	r17,r17,-1
   26418:	180697fa 	slli	r3,r3,31
   2641c:	2c4a703a 	and	r5,r5,r17
   26420:	288ab03a 	or	r5,r5,r2
   26424:	28c6b03a 	or	r3,r5,r3
   26428:	a005883a 	mov	r2,r20
   2642c:	dfc00c17 	ldw	ra,48(sp)
   26430:	df000b17 	ldw	fp,44(sp)
   26434:	ddc00a17 	ldw	r23,40(sp)
   26438:	dd800917 	ldw	r22,36(sp)
   2643c:	dd400817 	ldw	r21,32(sp)
   26440:	dd000717 	ldw	r20,28(sp)
   26444:	dcc00617 	ldw	r19,24(sp)
   26448:	dc800517 	ldw	r18,20(sp)
   2644c:	dc400417 	ldw	r17,16(sp)
   26450:	dc000317 	ldw	r16,12(sp)
   26454:	dec00d04 	addi	sp,sp,52
   26458:	f800283a 	ret
   2645c:	2404b03a 	or	r2,r4,r16
   26460:	2027883a 	mov	r19,r4
   26464:	10004226 	beq	r2,zero,26570 <__muldf3+0x2e4>
   26468:	8000fc26 	beq	r16,zero,2685c <__muldf3+0x5d0>
   2646c:	8009883a 	mov	r4,r16
   26470:	d9800215 	stw	r6,8(sp)
   26474:	d9c00015 	stw	r7,0(sp)
   26478:	da400115 	stw	r9,4(sp)
   2647c:	00276b40 	call	276b4 <__clzsi2>
   26480:	d9800217 	ldw	r6,8(sp)
   26484:	d9c00017 	ldw	r7,0(sp)
   26488:	da400117 	ldw	r9,4(sp)
   2648c:	113ffd44 	addi	r4,r2,-11
   26490:	00c00704 	movi	r3,28
   26494:	1900ed16 	blt	r3,r4,2684c <__muldf3+0x5c0>
   26498:	00c00744 	movi	r3,29
   2649c:	147ffe04 	addi	r17,r2,-8
   264a0:	1907c83a 	sub	r3,r3,r4
   264a4:	8460983a 	sll	r16,r16,r17
   264a8:	98c6d83a 	srl	r3,r19,r3
   264ac:	9c68983a 	sll	r20,r19,r17
   264b0:	1c20b03a 	or	r16,r3,r16
   264b4:	1080fcc4 	addi	r2,r2,1011
   264b8:	00a5c83a 	sub	r18,zero,r2
   264bc:	0027883a 	mov	r19,zero
   264c0:	0039883a 	mov	fp,zero
   264c4:	003f9006 	br	26308 <__alt_mem_SDRAM_controller+0xfc026308>
   264c8:	3446b03a 	or	r3,r6,r17
   264cc:	1800261e 	bne	r3,zero,26568 <__muldf3+0x2dc>
   264d0:	0023883a 	mov	r17,zero
   264d4:	0011883a 	mov	r8,zero
   264d8:	01400084 	movi	r5,2
   264dc:	003f9c06 	br	26350 <__alt_mem_SDRAM_controller+0xfc026350>
   264e0:	3446b03a 	or	r3,r6,r17
   264e4:	18001c26 	beq	r3,zero,26558 <__muldf3+0x2cc>
   264e8:	8800ce26 	beq	r17,zero,26824 <__muldf3+0x598>
   264ec:	8809883a 	mov	r4,r17
   264f0:	d9800215 	stw	r6,8(sp)
   264f4:	da400115 	stw	r9,4(sp)
   264f8:	da800015 	stw	r10,0(sp)
   264fc:	00276b40 	call	276b4 <__clzsi2>
   26500:	d9800217 	ldw	r6,8(sp)
   26504:	da400117 	ldw	r9,4(sp)
   26508:	da800017 	ldw	r10,0(sp)
   2650c:	113ffd44 	addi	r4,r2,-11
   26510:	00c00704 	movi	r3,28
   26514:	1900bf16 	blt	r3,r4,26814 <__muldf3+0x588>
   26518:	00c00744 	movi	r3,29
   2651c:	123ffe04 	addi	r8,r2,-8
   26520:	1907c83a 	sub	r3,r3,r4
   26524:	8a22983a 	sll	r17,r17,r8
   26528:	30c6d83a 	srl	r3,r6,r3
   2652c:	3210983a 	sll	r8,r6,r8
   26530:	1c62b03a 	or	r17,r3,r17
   26534:	1080fcc4 	addi	r2,r2,1011
   26538:	0085c83a 	sub	r2,zero,r2
   2653c:	000b883a 	mov	r5,zero
   26540:	003f8306 	br	26350 <__alt_mem_SDRAM_controller+0xfc026350>
   26544:	b02b883a 	mov	r21,r22
   26548:	0081ffc4 	movi	r2,2047
   2654c:	000b883a 	mov	r5,zero
   26550:	0029883a 	mov	r20,zero
   26554:	003fac06 	br	26408 <__alt_mem_SDRAM_controller+0xfc026408>
   26558:	0023883a 	mov	r17,zero
   2655c:	0011883a 	mov	r8,zero
   26560:	01400044 	movi	r5,1
   26564:	003f7a06 	br	26350 <__alt_mem_SDRAM_controller+0xfc026350>
   26568:	014000c4 	movi	r5,3
   2656c:	003f7806 	br	26350 <__alt_mem_SDRAM_controller+0xfc026350>
   26570:	04c00104 	movi	r19,4
   26574:	0021883a 	mov	r16,zero
   26578:	0029883a 	mov	r20,zero
   2657c:	07000044 	movi	fp,1
   26580:	003f6106 	br	26308 <__alt_mem_SDRAM_controller+0xfc026308>
   26584:	04c00304 	movi	r19,12
   26588:	070000c4 	movi	fp,3
   2658c:	003f5e06 	br	26308 <__alt_mem_SDRAM_controller+0xfc026308>
   26590:	01400434 	movhi	r5,16
   26594:	002b883a 	mov	r21,zero
   26598:	297fffc4 	addi	r5,r5,-1
   2659c:	053fffc4 	movi	r20,-1
   265a0:	0081ffc4 	movi	r2,2047
   265a4:	003f9806 	br	26408 <__alt_mem_SDRAM_controller+0xfc026408>
   265a8:	8023883a 	mov	r17,r16
   265ac:	a011883a 	mov	r8,r20
   265b0:	e00b883a 	mov	r5,fp
   265b4:	003f8a06 	br	263e0 <__alt_mem_SDRAM_controller+0xfc0263e0>
   265b8:	8023883a 	mov	r17,r16
   265bc:	a011883a 	mov	r8,r20
   265c0:	482d883a 	mov	r22,r9
   265c4:	e00b883a 	mov	r5,fp
   265c8:	003f8506 	br	263e0 <__alt_mem_SDRAM_controller+0xfc0263e0>
   265cc:	a00ad43a 	srli	r5,r20,16
   265d0:	401ad43a 	srli	r13,r8,16
   265d4:	a53fffcc 	andi	r20,r20,65535
   265d8:	423fffcc 	andi	r8,r8,65535
   265dc:	4519383a 	mul	r12,r8,r20
   265e0:	4147383a 	mul	r3,r8,r5
   265e4:	6d09383a 	mul	r4,r13,r20
   265e8:	600cd43a 	srli	r6,r12,16
   265ec:	2b5d383a 	mul	r14,r5,r13
   265f0:	20c9883a 	add	r4,r4,r3
   265f4:	310d883a 	add	r6,r6,r4
   265f8:	30c0022e 	bgeu	r6,r3,26604 <__muldf3+0x378>
   265fc:	00c00074 	movhi	r3,1
   26600:	70dd883a 	add	r14,r14,r3
   26604:	8826d43a 	srli	r19,r17,16
   26608:	8bffffcc 	andi	r15,r17,65535
   2660c:	7d23383a 	mul	r17,r15,r20
   26610:	7949383a 	mul	r4,r15,r5
   26614:	9d29383a 	mul	r20,r19,r20
   26618:	8814d43a 	srli	r10,r17,16
   2661c:	3012943a 	slli	r9,r6,16
   26620:	a129883a 	add	r20,r20,r4
   26624:	633fffcc 	andi	r12,r12,65535
   26628:	5515883a 	add	r10,r10,r20
   2662c:	3006d43a 	srli	r3,r6,16
   26630:	4b13883a 	add	r9,r9,r12
   26634:	2ccb383a 	mul	r5,r5,r19
   26638:	5100022e 	bgeu	r10,r4,26644 <__muldf3+0x3b8>
   2663c:	01000074 	movhi	r4,1
   26640:	290b883a 	add	r5,r5,r4
   26644:	802ad43a 	srli	r21,r16,16
   26648:	843fffcc 	andi	r16,r16,65535
   2664c:	440d383a 	mul	r6,r8,r16
   26650:	4565383a 	mul	r18,r8,r21
   26654:	8349383a 	mul	r4,r16,r13
   26658:	500e943a 	slli	r7,r10,16
   2665c:	3010d43a 	srli	r8,r6,16
   26660:	5028d43a 	srli	r20,r10,16
   26664:	2489883a 	add	r4,r4,r18
   26668:	8abfffcc 	andi	r10,r17,65535
   2666c:	3a95883a 	add	r10,r7,r10
   26670:	4119883a 	add	r12,r8,r4
   26674:	a169883a 	add	r20,r20,r5
   26678:	1a87883a 	add	r3,r3,r10
   2667c:	6d5b383a 	mul	r13,r13,r21
   26680:	6480022e 	bgeu	r12,r18,2668c <__muldf3+0x400>
   26684:	01000074 	movhi	r4,1
   26688:	691b883a 	add	r13,r13,r4
   2668c:	7c25383a 	mul	r18,r15,r16
   26690:	7d4b383a 	mul	r5,r15,r21
   26694:	84cf383a 	mul	r7,r16,r19
   26698:	901ed43a 	srli	r15,r18,16
   2669c:	6008d43a 	srli	r4,r12,16
   266a0:	6010943a 	slli	r8,r12,16
   266a4:	394f883a 	add	r7,r7,r5
   266a8:	333fffcc 	andi	r12,r6,65535
   266ac:	79df883a 	add	r15,r15,r7
   266b0:	235b883a 	add	r13,r4,r13
   266b4:	9d63383a 	mul	r17,r19,r21
   266b8:	4309883a 	add	r4,r8,r12
   266bc:	7940022e 	bgeu	r15,r5,266c8 <__muldf3+0x43c>
   266c0:	01400074 	movhi	r5,1
   266c4:	8963883a 	add	r17,r17,r5
   266c8:	780a943a 	slli	r5,r15,16
   266cc:	91bfffcc 	andi	r6,r18,65535
   266d0:	70c7883a 	add	r3,r14,r3
   266d4:	298d883a 	add	r6,r5,r6
   266d8:	1a8f803a 	cmpltu	r7,r3,r10
   266dc:	350b883a 	add	r5,r6,r20
   266e0:	20c7883a 	add	r3,r4,r3
   266e4:	3955883a 	add	r10,r7,r5
   266e8:	1909803a 	cmpltu	r4,r3,r4
   266ec:	6a91883a 	add	r8,r13,r10
   266f0:	780cd43a 	srli	r6,r15,16
   266f4:	2219883a 	add	r12,r4,r8
   266f8:	2d0b803a 	cmpltu	r5,r5,r20
   266fc:	51cf803a 	cmpltu	r7,r10,r7
   26700:	29ceb03a 	or	r7,r5,r7
   26704:	4351803a 	cmpltu	r8,r8,r13
   26708:	610b803a 	cmpltu	r5,r12,r4
   2670c:	4148b03a 	or	r4,r8,r5
   26710:	398f883a 	add	r7,r7,r6
   26714:	3909883a 	add	r4,r7,r4
   26718:	1810927a 	slli	r8,r3,9
   2671c:	2449883a 	add	r4,r4,r17
   26720:	2008927a 	slli	r4,r4,9
   26724:	6022d5fa 	srli	r17,r12,23
   26728:	1806d5fa 	srli	r3,r3,23
   2672c:	4252b03a 	or	r9,r8,r9
   26730:	600a927a 	slli	r5,r12,9
   26734:	4810c03a 	cmpne	r8,r9,zero
   26738:	2462b03a 	or	r17,r4,r17
   2673c:	40c6b03a 	or	r3,r8,r3
   26740:	8900402c 	andhi	r4,r17,256
   26744:	1950b03a 	or	r8,r3,r5
   26748:	20000726 	beq	r4,zero,26768 <__muldf3+0x4dc>
   2674c:	4006d07a 	srli	r3,r8,1
   26750:	880497fa 	slli	r2,r17,31
   26754:	4200004c 	andi	r8,r8,1
   26758:	8822d07a 	srli	r17,r17,1
   2675c:	1a10b03a 	or	r8,r3,r8
   26760:	1210b03a 	or	r8,r2,r8
   26764:	5805883a 	mov	r2,r11
   26768:	1140ffc4 	addi	r5,r2,1023
   2676c:	0140440e 	bge	zero,r5,26880 <__muldf3+0x5f4>
   26770:	40c001cc 	andi	r3,r8,7
   26774:	18000726 	beq	r3,zero,26794 <__muldf3+0x508>
   26778:	40c003cc 	andi	r3,r8,15
   2677c:	01000104 	movi	r4,4
   26780:	19000426 	beq	r3,r4,26794 <__muldf3+0x508>
   26784:	4107883a 	add	r3,r8,r4
   26788:	1a11803a 	cmpltu	r8,r3,r8
   2678c:	8a23883a 	add	r17,r17,r8
   26790:	1811883a 	mov	r8,r3
   26794:	88c0402c 	andhi	r3,r17,256
   26798:	18000426 	beq	r3,zero,267ac <__muldf3+0x520>
   2679c:	11410004 	addi	r5,r2,1024
   267a0:	00bfc034 	movhi	r2,65280
   267a4:	10bfffc4 	addi	r2,r2,-1
   267a8:	88a2703a 	and	r17,r17,r2
   267ac:	0081ff84 	movi	r2,2046
   267b0:	117f6416 	blt	r2,r5,26544 <__alt_mem_SDRAM_controller+0xfc026544>
   267b4:	8828977a 	slli	r20,r17,29
   267b8:	4010d0fa 	srli	r8,r8,3
   267bc:	8822927a 	slli	r17,r17,9
   267c0:	2881ffcc 	andi	r2,r5,2047
   267c4:	a228b03a 	or	r20,r20,r8
   267c8:	880ad33a 	srli	r5,r17,12
   267cc:	b02b883a 	mov	r21,r22
   267d0:	003f0d06 	br	26408 <__alt_mem_SDRAM_controller+0xfc026408>
   267d4:	8080022c 	andhi	r2,r16,8
   267d8:	10000926 	beq	r2,zero,26800 <__muldf3+0x574>
   267dc:	8880022c 	andhi	r2,r17,8
   267e0:	1000071e 	bne	r2,zero,26800 <__muldf3+0x574>
   267e4:	00800434 	movhi	r2,16
   267e8:	89400234 	orhi	r5,r17,8
   267ec:	10bfffc4 	addi	r2,r2,-1
   267f0:	b82b883a 	mov	r21,r23
   267f4:	288a703a 	and	r5,r5,r2
   267f8:	4029883a 	mov	r20,r8
   267fc:	003f6806 	br	265a0 <__alt_mem_SDRAM_controller+0xfc0265a0>
   26800:	00800434 	movhi	r2,16
   26804:	81400234 	orhi	r5,r16,8
   26808:	10bfffc4 	addi	r2,r2,-1
   2680c:	288a703a 	and	r5,r5,r2
   26810:	003f6306 	br	265a0 <__alt_mem_SDRAM_controller+0xfc0265a0>
   26814:	147ff604 	addi	r17,r2,-40
   26818:	3462983a 	sll	r17,r6,r17
   2681c:	0011883a 	mov	r8,zero
   26820:	003f4406 	br	26534 <__alt_mem_SDRAM_controller+0xfc026534>
   26824:	3009883a 	mov	r4,r6
   26828:	d9800215 	stw	r6,8(sp)
   2682c:	da400115 	stw	r9,4(sp)
   26830:	da800015 	stw	r10,0(sp)
   26834:	00276b40 	call	276b4 <__clzsi2>
   26838:	10800804 	addi	r2,r2,32
   2683c:	da800017 	ldw	r10,0(sp)
   26840:	da400117 	ldw	r9,4(sp)
   26844:	d9800217 	ldw	r6,8(sp)
   26848:	003f3006 	br	2650c <__alt_mem_SDRAM_controller+0xfc02650c>
   2684c:	143ff604 	addi	r16,r2,-40
   26850:	9c20983a 	sll	r16,r19,r16
   26854:	0029883a 	mov	r20,zero
   26858:	003f1606 	br	264b4 <__alt_mem_SDRAM_controller+0xfc0264b4>
   2685c:	d9800215 	stw	r6,8(sp)
   26860:	d9c00015 	stw	r7,0(sp)
   26864:	da400115 	stw	r9,4(sp)
   26868:	00276b40 	call	276b4 <__clzsi2>
   2686c:	10800804 	addi	r2,r2,32
   26870:	da400117 	ldw	r9,4(sp)
   26874:	d9c00017 	ldw	r7,0(sp)
   26878:	d9800217 	ldw	r6,8(sp)
   2687c:	003f0306 	br	2648c <__alt_mem_SDRAM_controller+0xfc02648c>
   26880:	00c00044 	movi	r3,1
   26884:	1947c83a 	sub	r3,r3,r5
   26888:	00800e04 	movi	r2,56
   2688c:	10feda16 	blt	r2,r3,263f8 <__alt_mem_SDRAM_controller+0xfc0263f8>
   26890:	008007c4 	movi	r2,31
   26894:	10c01b16 	blt	r2,r3,26904 <__muldf3+0x678>
   26898:	00800804 	movi	r2,32
   2689c:	10c5c83a 	sub	r2,r2,r3
   268a0:	888a983a 	sll	r5,r17,r2
   268a4:	40c8d83a 	srl	r4,r8,r3
   268a8:	4084983a 	sll	r2,r8,r2
   268ac:	88e2d83a 	srl	r17,r17,r3
   268b0:	2906b03a 	or	r3,r5,r4
   268b4:	1004c03a 	cmpne	r2,r2,zero
   268b8:	1886b03a 	or	r3,r3,r2
   268bc:	188001cc 	andi	r2,r3,7
   268c0:	10000726 	beq	r2,zero,268e0 <__muldf3+0x654>
   268c4:	188003cc 	andi	r2,r3,15
   268c8:	01000104 	movi	r4,4
   268cc:	11000426 	beq	r2,r4,268e0 <__muldf3+0x654>
   268d0:	1805883a 	mov	r2,r3
   268d4:	10c00104 	addi	r3,r2,4
   268d8:	1885803a 	cmpltu	r2,r3,r2
   268dc:	88a3883a 	add	r17,r17,r2
   268e0:	8880202c 	andhi	r2,r17,128
   268e4:	10001c26 	beq	r2,zero,26958 <__muldf3+0x6cc>
   268e8:	b02b883a 	mov	r21,r22
   268ec:	00800044 	movi	r2,1
   268f0:	000b883a 	mov	r5,zero
   268f4:	0029883a 	mov	r20,zero
   268f8:	003ec306 	br	26408 <__alt_mem_SDRAM_controller+0xfc026408>
   268fc:	5805883a 	mov	r2,r11
   26900:	003f9906 	br	26768 <__alt_mem_SDRAM_controller+0xfc026768>
   26904:	00bff844 	movi	r2,-31
   26908:	1145c83a 	sub	r2,r2,r5
   2690c:	8888d83a 	srl	r4,r17,r2
   26910:	00800804 	movi	r2,32
   26914:	18801a26 	beq	r3,r2,26980 <__muldf3+0x6f4>
   26918:	00801004 	movi	r2,64
   2691c:	10c5c83a 	sub	r2,r2,r3
   26920:	8884983a 	sll	r2,r17,r2
   26924:	1204b03a 	or	r2,r2,r8
   26928:	1004c03a 	cmpne	r2,r2,zero
   2692c:	2084b03a 	or	r2,r4,r2
   26930:	144001cc 	andi	r17,r2,7
   26934:	88000d1e 	bne	r17,zero,2696c <__muldf3+0x6e0>
   26938:	000b883a 	mov	r5,zero
   2693c:	1028d0fa 	srli	r20,r2,3
   26940:	b02b883a 	mov	r21,r22
   26944:	0005883a 	mov	r2,zero
   26948:	a468b03a 	or	r20,r20,r17
   2694c:	003eae06 	br	26408 <__alt_mem_SDRAM_controller+0xfc026408>
   26950:	1007883a 	mov	r3,r2
   26954:	0023883a 	mov	r17,zero
   26958:	880a927a 	slli	r5,r17,9
   2695c:	1805883a 	mov	r2,r3
   26960:	8822977a 	slli	r17,r17,29
   26964:	280ad33a 	srli	r5,r5,12
   26968:	003ff406 	br	2693c <__alt_mem_SDRAM_controller+0xfc02693c>
   2696c:	10c003cc 	andi	r3,r2,15
   26970:	01000104 	movi	r4,4
   26974:	193ff626 	beq	r3,r4,26950 <__alt_mem_SDRAM_controller+0xfc026950>
   26978:	0023883a 	mov	r17,zero
   2697c:	003fd506 	br	268d4 <__alt_mem_SDRAM_controller+0xfc0268d4>
   26980:	0005883a 	mov	r2,zero
   26984:	003fe706 	br	26924 <__alt_mem_SDRAM_controller+0xfc026924>
   26988:	00800434 	movhi	r2,16
   2698c:	89400234 	orhi	r5,r17,8
   26990:	10bfffc4 	addi	r2,r2,-1
   26994:	b02b883a 	mov	r21,r22
   26998:	288a703a 	and	r5,r5,r2
   2699c:	4029883a 	mov	r20,r8
   269a0:	003eff06 	br	265a0 <__alt_mem_SDRAM_controller+0xfc0265a0>

000269a4 <__subdf3>:
   269a4:	02000434 	movhi	r8,16
   269a8:	423fffc4 	addi	r8,r8,-1
   269ac:	defffb04 	addi	sp,sp,-20
   269b0:	2a14703a 	and	r10,r5,r8
   269b4:	3812d53a 	srli	r9,r7,20
   269b8:	3a10703a 	and	r8,r7,r8
   269bc:	2006d77a 	srli	r3,r4,29
   269c0:	3004d77a 	srli	r2,r6,29
   269c4:	dc000015 	stw	r16,0(sp)
   269c8:	501490fa 	slli	r10,r10,3
   269cc:	2820d53a 	srli	r16,r5,20
   269d0:	401090fa 	slli	r8,r8,3
   269d4:	dc800215 	stw	r18,8(sp)
   269d8:	dc400115 	stw	r17,4(sp)
   269dc:	dfc00415 	stw	ra,16(sp)
   269e0:	202290fa 	slli	r17,r4,3
   269e4:	dcc00315 	stw	r19,12(sp)
   269e8:	4a41ffcc 	andi	r9,r9,2047
   269ec:	0101ffc4 	movi	r4,2047
   269f0:	2824d7fa 	srli	r18,r5,31
   269f4:	8401ffcc 	andi	r16,r16,2047
   269f8:	50c6b03a 	or	r3,r10,r3
   269fc:	380ed7fa 	srli	r7,r7,31
   26a00:	408ab03a 	or	r5,r8,r2
   26a04:	300c90fa 	slli	r6,r6,3
   26a08:	49009626 	beq	r9,r4,26c64 <__subdf3+0x2c0>
   26a0c:	39c0005c 	xori	r7,r7,1
   26a10:	8245c83a 	sub	r2,r16,r9
   26a14:	3c807426 	beq	r7,r18,26be8 <__subdf3+0x244>
   26a18:	0080af0e 	bge	zero,r2,26cd8 <__subdf3+0x334>
   26a1c:	48002a1e 	bne	r9,zero,26ac8 <__subdf3+0x124>
   26a20:	2988b03a 	or	r4,r5,r6
   26a24:	20009a1e 	bne	r4,zero,26c90 <__subdf3+0x2ec>
   26a28:	888001cc 	andi	r2,r17,7
   26a2c:	10000726 	beq	r2,zero,26a4c <__subdf3+0xa8>
   26a30:	888003cc 	andi	r2,r17,15
   26a34:	01000104 	movi	r4,4
   26a38:	11000426 	beq	r2,r4,26a4c <__subdf3+0xa8>
   26a3c:	890b883a 	add	r5,r17,r4
   26a40:	2c63803a 	cmpltu	r17,r5,r17
   26a44:	1c47883a 	add	r3,r3,r17
   26a48:	2823883a 	mov	r17,r5
   26a4c:	1880202c 	andhi	r2,r3,128
   26a50:	10005926 	beq	r2,zero,26bb8 <__subdf3+0x214>
   26a54:	84000044 	addi	r16,r16,1
   26a58:	0081ffc4 	movi	r2,2047
   26a5c:	8080be26 	beq	r16,r2,26d58 <__subdf3+0x3b4>
   26a60:	017fe034 	movhi	r5,65408
   26a64:	297fffc4 	addi	r5,r5,-1
   26a68:	1946703a 	and	r3,r3,r5
   26a6c:	1804977a 	slli	r2,r3,29
   26a70:	1806927a 	slli	r3,r3,9
   26a74:	8822d0fa 	srli	r17,r17,3
   26a78:	8401ffcc 	andi	r16,r16,2047
   26a7c:	180ad33a 	srli	r5,r3,12
   26a80:	9100004c 	andi	r4,r18,1
   26a84:	1444b03a 	or	r2,r2,r17
   26a88:	80c1ffcc 	andi	r3,r16,2047
   26a8c:	1820953a 	slli	r16,r3,20
   26a90:	20c03fcc 	andi	r3,r4,255
   26a94:	180897fa 	slli	r4,r3,31
   26a98:	00c00434 	movhi	r3,16
   26a9c:	18ffffc4 	addi	r3,r3,-1
   26aa0:	28c6703a 	and	r3,r5,r3
   26aa4:	1c06b03a 	or	r3,r3,r16
   26aa8:	1906b03a 	or	r3,r3,r4
   26aac:	dfc00417 	ldw	ra,16(sp)
   26ab0:	dcc00317 	ldw	r19,12(sp)
   26ab4:	dc800217 	ldw	r18,8(sp)
   26ab8:	dc400117 	ldw	r17,4(sp)
   26abc:	dc000017 	ldw	r16,0(sp)
   26ac0:	dec00504 	addi	sp,sp,20
   26ac4:	f800283a 	ret
   26ac8:	0101ffc4 	movi	r4,2047
   26acc:	813fd626 	beq	r16,r4,26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26ad0:	29402034 	orhi	r5,r5,128
   26ad4:	01000e04 	movi	r4,56
   26ad8:	2080a316 	blt	r4,r2,26d68 <__subdf3+0x3c4>
   26adc:	010007c4 	movi	r4,31
   26ae0:	2080c616 	blt	r4,r2,26dfc <__subdf3+0x458>
   26ae4:	01000804 	movi	r4,32
   26ae8:	2089c83a 	sub	r4,r4,r2
   26aec:	2910983a 	sll	r8,r5,r4
   26af0:	308ed83a 	srl	r7,r6,r2
   26af4:	3108983a 	sll	r4,r6,r4
   26af8:	2884d83a 	srl	r2,r5,r2
   26afc:	41ccb03a 	or	r6,r8,r7
   26b00:	2008c03a 	cmpne	r4,r4,zero
   26b04:	310cb03a 	or	r6,r6,r4
   26b08:	898dc83a 	sub	r6,r17,r6
   26b0c:	89a3803a 	cmpltu	r17,r17,r6
   26b10:	1887c83a 	sub	r3,r3,r2
   26b14:	1c47c83a 	sub	r3,r3,r17
   26b18:	3023883a 	mov	r17,r6
   26b1c:	1880202c 	andhi	r2,r3,128
   26b20:	10002326 	beq	r2,zero,26bb0 <__subdf3+0x20c>
   26b24:	04c02034 	movhi	r19,128
   26b28:	9cffffc4 	addi	r19,r19,-1
   26b2c:	1ce6703a 	and	r19,r3,r19
   26b30:	98007a26 	beq	r19,zero,26d1c <__subdf3+0x378>
   26b34:	9809883a 	mov	r4,r19
   26b38:	00276b40 	call	276b4 <__clzsi2>
   26b3c:	113ffe04 	addi	r4,r2,-8
   26b40:	00c007c4 	movi	r3,31
   26b44:	19007b16 	blt	r3,r4,26d34 <__subdf3+0x390>
   26b48:	00800804 	movi	r2,32
   26b4c:	1105c83a 	sub	r2,r2,r4
   26b50:	8884d83a 	srl	r2,r17,r2
   26b54:	9906983a 	sll	r3,r19,r4
   26b58:	8922983a 	sll	r17,r17,r4
   26b5c:	10c4b03a 	or	r2,r2,r3
   26b60:	24007816 	blt	r4,r16,26d44 <__subdf3+0x3a0>
   26b64:	2421c83a 	sub	r16,r4,r16
   26b68:	80c00044 	addi	r3,r16,1
   26b6c:	010007c4 	movi	r4,31
   26b70:	20c09516 	blt	r4,r3,26dc8 <__subdf3+0x424>
   26b74:	01400804 	movi	r5,32
   26b78:	28cbc83a 	sub	r5,r5,r3
   26b7c:	88c8d83a 	srl	r4,r17,r3
   26b80:	8962983a 	sll	r17,r17,r5
   26b84:	114a983a 	sll	r5,r2,r5
   26b88:	10c6d83a 	srl	r3,r2,r3
   26b8c:	8804c03a 	cmpne	r2,r17,zero
   26b90:	290ab03a 	or	r5,r5,r4
   26b94:	28a2b03a 	or	r17,r5,r2
   26b98:	0021883a 	mov	r16,zero
   26b9c:	003fa206 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26ba0:	2090b03a 	or	r8,r4,r2
   26ba4:	40018e26 	beq	r8,zero,271e0 <__subdf3+0x83c>
   26ba8:	1007883a 	mov	r3,r2
   26bac:	2023883a 	mov	r17,r4
   26bb0:	888001cc 	andi	r2,r17,7
   26bb4:	103f9e1e 	bne	r2,zero,26a30 <__alt_mem_SDRAM_controller+0xfc026a30>
   26bb8:	1804977a 	slli	r2,r3,29
   26bbc:	8822d0fa 	srli	r17,r17,3
   26bc0:	1810d0fa 	srli	r8,r3,3
   26bc4:	9100004c 	andi	r4,r18,1
   26bc8:	1444b03a 	or	r2,r2,r17
   26bcc:	00c1ffc4 	movi	r3,2047
   26bd0:	80c02826 	beq	r16,r3,26c74 <__subdf3+0x2d0>
   26bd4:	01400434 	movhi	r5,16
   26bd8:	297fffc4 	addi	r5,r5,-1
   26bdc:	80e0703a 	and	r16,r16,r3
   26be0:	414a703a 	and	r5,r8,r5
   26be4:	003fa806 	br	26a88 <__alt_mem_SDRAM_controller+0xfc026a88>
   26be8:	0080630e 	bge	zero,r2,26d78 <__subdf3+0x3d4>
   26bec:	48003026 	beq	r9,zero,26cb0 <__subdf3+0x30c>
   26bf0:	0101ffc4 	movi	r4,2047
   26bf4:	813f8c26 	beq	r16,r4,26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26bf8:	29402034 	orhi	r5,r5,128
   26bfc:	01000e04 	movi	r4,56
   26c00:	2080a90e 	bge	r4,r2,26ea8 <__subdf3+0x504>
   26c04:	298cb03a 	or	r6,r5,r6
   26c08:	3012c03a 	cmpne	r9,r6,zero
   26c0c:	0005883a 	mov	r2,zero
   26c10:	4c53883a 	add	r9,r9,r17
   26c14:	4c63803a 	cmpltu	r17,r9,r17
   26c18:	10c7883a 	add	r3,r2,r3
   26c1c:	88c7883a 	add	r3,r17,r3
   26c20:	4823883a 	mov	r17,r9
   26c24:	1880202c 	andhi	r2,r3,128
   26c28:	1000d026 	beq	r2,zero,26f6c <__subdf3+0x5c8>
   26c2c:	84000044 	addi	r16,r16,1
   26c30:	0081ffc4 	movi	r2,2047
   26c34:	8080fe26 	beq	r16,r2,27030 <__subdf3+0x68c>
   26c38:	00bfe034 	movhi	r2,65408
   26c3c:	10bfffc4 	addi	r2,r2,-1
   26c40:	1886703a 	and	r3,r3,r2
   26c44:	880ad07a 	srli	r5,r17,1
   26c48:	180497fa 	slli	r2,r3,31
   26c4c:	8900004c 	andi	r4,r17,1
   26c50:	2922b03a 	or	r17,r5,r4
   26c54:	1806d07a 	srli	r3,r3,1
   26c58:	1462b03a 	or	r17,r2,r17
   26c5c:	3825883a 	mov	r18,r7
   26c60:	003f7106 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26c64:	2984b03a 	or	r2,r5,r6
   26c68:	103f6826 	beq	r2,zero,26a0c <__alt_mem_SDRAM_controller+0xfc026a0c>
   26c6c:	39c03fcc 	andi	r7,r7,255
   26c70:	003f6706 	br	26a10 <__alt_mem_SDRAM_controller+0xfc026a10>
   26c74:	4086b03a 	or	r3,r8,r2
   26c78:	18015226 	beq	r3,zero,271c4 <__subdf3+0x820>
   26c7c:	00c00434 	movhi	r3,16
   26c80:	41400234 	orhi	r5,r8,8
   26c84:	18ffffc4 	addi	r3,r3,-1
   26c88:	28ca703a 	and	r5,r5,r3
   26c8c:	003f7e06 	br	26a88 <__alt_mem_SDRAM_controller+0xfc026a88>
   26c90:	10bfffc4 	addi	r2,r2,-1
   26c94:	1000491e 	bne	r2,zero,26dbc <__subdf3+0x418>
   26c98:	898fc83a 	sub	r7,r17,r6
   26c9c:	89e3803a 	cmpltu	r17,r17,r7
   26ca0:	1947c83a 	sub	r3,r3,r5
   26ca4:	1c47c83a 	sub	r3,r3,r17
   26ca8:	3823883a 	mov	r17,r7
   26cac:	003f9b06 	br	26b1c <__alt_mem_SDRAM_controller+0xfc026b1c>
   26cb0:	2988b03a 	or	r4,r5,r6
   26cb4:	203f5c26 	beq	r4,zero,26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26cb8:	10bfffc4 	addi	r2,r2,-1
   26cbc:	1000931e 	bne	r2,zero,26f0c <__subdf3+0x568>
   26cc0:	898d883a 	add	r6,r17,r6
   26cc4:	3463803a 	cmpltu	r17,r6,r17
   26cc8:	1947883a 	add	r3,r3,r5
   26ccc:	88c7883a 	add	r3,r17,r3
   26cd0:	3023883a 	mov	r17,r6
   26cd4:	003fd306 	br	26c24 <__alt_mem_SDRAM_controller+0xfc026c24>
   26cd8:	1000541e 	bne	r2,zero,26e2c <__subdf3+0x488>
   26cdc:	80800044 	addi	r2,r16,1
   26ce0:	1081ffcc 	andi	r2,r2,2047
   26ce4:	01000044 	movi	r4,1
   26ce8:	2080a20e 	bge	r4,r2,26f74 <__subdf3+0x5d0>
   26cec:	8989c83a 	sub	r4,r17,r6
   26cf0:	8905803a 	cmpltu	r2,r17,r4
   26cf4:	1967c83a 	sub	r19,r3,r5
   26cf8:	98a7c83a 	sub	r19,r19,r2
   26cfc:	9880202c 	andhi	r2,r19,128
   26d00:	10006326 	beq	r2,zero,26e90 <__subdf3+0x4ec>
   26d04:	3463c83a 	sub	r17,r6,r17
   26d08:	28c7c83a 	sub	r3,r5,r3
   26d0c:	344d803a 	cmpltu	r6,r6,r17
   26d10:	19a7c83a 	sub	r19,r3,r6
   26d14:	3825883a 	mov	r18,r7
   26d18:	983f861e 	bne	r19,zero,26b34 <__alt_mem_SDRAM_controller+0xfc026b34>
   26d1c:	8809883a 	mov	r4,r17
   26d20:	00276b40 	call	276b4 <__clzsi2>
   26d24:	10800804 	addi	r2,r2,32
   26d28:	113ffe04 	addi	r4,r2,-8
   26d2c:	00c007c4 	movi	r3,31
   26d30:	193f850e 	bge	r3,r4,26b48 <__alt_mem_SDRAM_controller+0xfc026b48>
   26d34:	10bff604 	addi	r2,r2,-40
   26d38:	8884983a 	sll	r2,r17,r2
   26d3c:	0023883a 	mov	r17,zero
   26d40:	243f880e 	bge	r4,r16,26b64 <__alt_mem_SDRAM_controller+0xfc026b64>
   26d44:	00ffe034 	movhi	r3,65408
   26d48:	18ffffc4 	addi	r3,r3,-1
   26d4c:	8121c83a 	sub	r16,r16,r4
   26d50:	10c6703a 	and	r3,r2,r3
   26d54:	003f3406 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26d58:	9100004c 	andi	r4,r18,1
   26d5c:	000b883a 	mov	r5,zero
   26d60:	0005883a 	mov	r2,zero
   26d64:	003f4806 	br	26a88 <__alt_mem_SDRAM_controller+0xfc026a88>
   26d68:	298cb03a 	or	r6,r5,r6
   26d6c:	300cc03a 	cmpne	r6,r6,zero
   26d70:	0005883a 	mov	r2,zero
   26d74:	003f6406 	br	26b08 <__alt_mem_SDRAM_controller+0xfc026b08>
   26d78:	10009a1e 	bne	r2,zero,26fe4 <__subdf3+0x640>
   26d7c:	82400044 	addi	r9,r16,1
   26d80:	4881ffcc 	andi	r2,r9,2047
   26d84:	02800044 	movi	r10,1
   26d88:	5080670e 	bge	r10,r2,26f28 <__subdf3+0x584>
   26d8c:	0081ffc4 	movi	r2,2047
   26d90:	4880af26 	beq	r9,r2,27050 <__subdf3+0x6ac>
   26d94:	898d883a 	add	r6,r17,r6
   26d98:	1945883a 	add	r2,r3,r5
   26d9c:	3447803a 	cmpltu	r3,r6,r17
   26da0:	1887883a 	add	r3,r3,r2
   26da4:	182297fa 	slli	r17,r3,31
   26da8:	300cd07a 	srli	r6,r6,1
   26dac:	1806d07a 	srli	r3,r3,1
   26db0:	4821883a 	mov	r16,r9
   26db4:	89a2b03a 	or	r17,r17,r6
   26db8:	003f1b06 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26dbc:	0101ffc4 	movi	r4,2047
   26dc0:	813f441e 	bne	r16,r4,26ad4 <__alt_mem_SDRAM_controller+0xfc026ad4>
   26dc4:	003f1806 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26dc8:	843ff844 	addi	r16,r16,-31
   26dcc:	01400804 	movi	r5,32
   26dd0:	1408d83a 	srl	r4,r2,r16
   26dd4:	19405026 	beq	r3,r5,26f18 <__subdf3+0x574>
   26dd8:	01401004 	movi	r5,64
   26ddc:	28c7c83a 	sub	r3,r5,r3
   26de0:	10c4983a 	sll	r2,r2,r3
   26de4:	88a2b03a 	or	r17,r17,r2
   26de8:	8822c03a 	cmpne	r17,r17,zero
   26dec:	2462b03a 	or	r17,r4,r17
   26df0:	0007883a 	mov	r3,zero
   26df4:	0021883a 	mov	r16,zero
   26df8:	003f6d06 	br	26bb0 <__alt_mem_SDRAM_controller+0xfc026bb0>
   26dfc:	11fff804 	addi	r7,r2,-32
   26e00:	01000804 	movi	r4,32
   26e04:	29ced83a 	srl	r7,r5,r7
   26e08:	11004526 	beq	r2,r4,26f20 <__subdf3+0x57c>
   26e0c:	01001004 	movi	r4,64
   26e10:	2089c83a 	sub	r4,r4,r2
   26e14:	2904983a 	sll	r2,r5,r4
   26e18:	118cb03a 	or	r6,r2,r6
   26e1c:	300cc03a 	cmpne	r6,r6,zero
   26e20:	398cb03a 	or	r6,r7,r6
   26e24:	0005883a 	mov	r2,zero
   26e28:	003f3706 	br	26b08 <__alt_mem_SDRAM_controller+0xfc026b08>
   26e2c:	80002a26 	beq	r16,zero,26ed8 <__subdf3+0x534>
   26e30:	0101ffc4 	movi	r4,2047
   26e34:	49006626 	beq	r9,r4,26fd0 <__subdf3+0x62c>
   26e38:	0085c83a 	sub	r2,zero,r2
   26e3c:	18c02034 	orhi	r3,r3,128
   26e40:	01000e04 	movi	r4,56
   26e44:	20807e16 	blt	r4,r2,27040 <__subdf3+0x69c>
   26e48:	010007c4 	movi	r4,31
   26e4c:	2080e716 	blt	r4,r2,271ec <__subdf3+0x848>
   26e50:	01000804 	movi	r4,32
   26e54:	2089c83a 	sub	r4,r4,r2
   26e58:	1914983a 	sll	r10,r3,r4
   26e5c:	8890d83a 	srl	r8,r17,r2
   26e60:	8908983a 	sll	r4,r17,r4
   26e64:	1884d83a 	srl	r2,r3,r2
   26e68:	5222b03a 	or	r17,r10,r8
   26e6c:	2006c03a 	cmpne	r3,r4,zero
   26e70:	88e2b03a 	or	r17,r17,r3
   26e74:	3463c83a 	sub	r17,r6,r17
   26e78:	2885c83a 	sub	r2,r5,r2
   26e7c:	344d803a 	cmpltu	r6,r6,r17
   26e80:	1187c83a 	sub	r3,r2,r6
   26e84:	4821883a 	mov	r16,r9
   26e88:	3825883a 	mov	r18,r7
   26e8c:	003f2306 	br	26b1c <__alt_mem_SDRAM_controller+0xfc026b1c>
   26e90:	24d0b03a 	or	r8,r4,r19
   26e94:	40001b1e 	bne	r8,zero,26f04 <__subdf3+0x560>
   26e98:	0005883a 	mov	r2,zero
   26e9c:	0009883a 	mov	r4,zero
   26ea0:	0021883a 	mov	r16,zero
   26ea4:	003f4906 	br	26bcc <__alt_mem_SDRAM_controller+0xfc026bcc>
   26ea8:	010007c4 	movi	r4,31
   26eac:	20803a16 	blt	r4,r2,26f98 <__subdf3+0x5f4>
   26eb0:	01000804 	movi	r4,32
   26eb4:	2089c83a 	sub	r4,r4,r2
   26eb8:	2912983a 	sll	r9,r5,r4
   26ebc:	3090d83a 	srl	r8,r6,r2
   26ec0:	3108983a 	sll	r4,r6,r4
   26ec4:	2884d83a 	srl	r2,r5,r2
   26ec8:	4a12b03a 	or	r9,r9,r8
   26ecc:	2008c03a 	cmpne	r4,r4,zero
   26ed0:	4912b03a 	or	r9,r9,r4
   26ed4:	003f4e06 	br	26c10 <__alt_mem_SDRAM_controller+0xfc026c10>
   26ed8:	1c48b03a 	or	r4,r3,r17
   26edc:	20003c26 	beq	r4,zero,26fd0 <__subdf3+0x62c>
   26ee0:	0084303a 	nor	r2,zero,r2
   26ee4:	1000381e 	bne	r2,zero,26fc8 <__subdf3+0x624>
   26ee8:	3463c83a 	sub	r17,r6,r17
   26eec:	28c5c83a 	sub	r2,r5,r3
   26ef0:	344d803a 	cmpltu	r6,r6,r17
   26ef4:	1187c83a 	sub	r3,r2,r6
   26ef8:	4821883a 	mov	r16,r9
   26efc:	3825883a 	mov	r18,r7
   26f00:	003f0606 	br	26b1c <__alt_mem_SDRAM_controller+0xfc026b1c>
   26f04:	2023883a 	mov	r17,r4
   26f08:	003f0906 	br	26b30 <__alt_mem_SDRAM_controller+0xfc026b30>
   26f0c:	0101ffc4 	movi	r4,2047
   26f10:	813f3a1e 	bne	r16,r4,26bfc <__alt_mem_SDRAM_controller+0xfc026bfc>
   26f14:	003ec406 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26f18:	0005883a 	mov	r2,zero
   26f1c:	003fb106 	br	26de4 <__alt_mem_SDRAM_controller+0xfc026de4>
   26f20:	0005883a 	mov	r2,zero
   26f24:	003fbc06 	br	26e18 <__alt_mem_SDRAM_controller+0xfc026e18>
   26f28:	1c44b03a 	or	r2,r3,r17
   26f2c:	80008e1e 	bne	r16,zero,27168 <__subdf3+0x7c4>
   26f30:	1000c826 	beq	r2,zero,27254 <__subdf3+0x8b0>
   26f34:	2984b03a 	or	r2,r5,r6
   26f38:	103ebb26 	beq	r2,zero,26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26f3c:	8989883a 	add	r4,r17,r6
   26f40:	1945883a 	add	r2,r3,r5
   26f44:	2447803a 	cmpltu	r3,r4,r17
   26f48:	1887883a 	add	r3,r3,r2
   26f4c:	1880202c 	andhi	r2,r3,128
   26f50:	2023883a 	mov	r17,r4
   26f54:	103f1626 	beq	r2,zero,26bb0 <__alt_mem_SDRAM_controller+0xfc026bb0>
   26f58:	00bfe034 	movhi	r2,65408
   26f5c:	10bfffc4 	addi	r2,r2,-1
   26f60:	5021883a 	mov	r16,r10
   26f64:	1886703a 	and	r3,r3,r2
   26f68:	003eaf06 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26f6c:	3825883a 	mov	r18,r7
   26f70:	003f0f06 	br	26bb0 <__alt_mem_SDRAM_controller+0xfc026bb0>
   26f74:	1c44b03a 	or	r2,r3,r17
   26f78:	8000251e 	bne	r16,zero,27010 <__subdf3+0x66c>
   26f7c:	1000661e 	bne	r2,zero,27118 <__subdf3+0x774>
   26f80:	2990b03a 	or	r8,r5,r6
   26f84:	40009626 	beq	r8,zero,271e0 <__subdf3+0x83c>
   26f88:	2807883a 	mov	r3,r5
   26f8c:	3023883a 	mov	r17,r6
   26f90:	3825883a 	mov	r18,r7
   26f94:	003ea406 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26f98:	127ff804 	addi	r9,r2,-32
   26f9c:	01000804 	movi	r4,32
   26fa0:	2a52d83a 	srl	r9,r5,r9
   26fa4:	11008c26 	beq	r2,r4,271d8 <__subdf3+0x834>
   26fa8:	01001004 	movi	r4,64
   26fac:	2085c83a 	sub	r2,r4,r2
   26fb0:	2884983a 	sll	r2,r5,r2
   26fb4:	118cb03a 	or	r6,r2,r6
   26fb8:	300cc03a 	cmpne	r6,r6,zero
   26fbc:	4992b03a 	or	r9,r9,r6
   26fc0:	0005883a 	mov	r2,zero
   26fc4:	003f1206 	br	26c10 <__alt_mem_SDRAM_controller+0xfc026c10>
   26fc8:	0101ffc4 	movi	r4,2047
   26fcc:	493f9c1e 	bne	r9,r4,26e40 <__alt_mem_SDRAM_controller+0xfc026e40>
   26fd0:	2807883a 	mov	r3,r5
   26fd4:	3023883a 	mov	r17,r6
   26fd8:	4821883a 	mov	r16,r9
   26fdc:	3825883a 	mov	r18,r7
   26fe0:	003e9106 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   26fe4:	80001f1e 	bne	r16,zero,27064 <__subdf3+0x6c0>
   26fe8:	1c48b03a 	or	r4,r3,r17
   26fec:	20005a26 	beq	r4,zero,27158 <__subdf3+0x7b4>
   26ff0:	0084303a 	nor	r2,zero,r2
   26ff4:	1000561e 	bne	r2,zero,27150 <__subdf3+0x7ac>
   26ff8:	89a3883a 	add	r17,r17,r6
   26ffc:	1945883a 	add	r2,r3,r5
   27000:	898d803a 	cmpltu	r6,r17,r6
   27004:	3087883a 	add	r3,r6,r2
   27008:	4821883a 	mov	r16,r9
   2700c:	003f0506 	br	26c24 <__alt_mem_SDRAM_controller+0xfc026c24>
   27010:	10002b1e 	bne	r2,zero,270c0 <__subdf3+0x71c>
   27014:	2984b03a 	or	r2,r5,r6
   27018:	10008026 	beq	r2,zero,2721c <__subdf3+0x878>
   2701c:	2807883a 	mov	r3,r5
   27020:	3023883a 	mov	r17,r6
   27024:	3825883a 	mov	r18,r7
   27028:	0401ffc4 	movi	r16,2047
   2702c:	003e7e06 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   27030:	3809883a 	mov	r4,r7
   27034:	0011883a 	mov	r8,zero
   27038:	0005883a 	mov	r2,zero
   2703c:	003ee306 	br	26bcc <__alt_mem_SDRAM_controller+0xfc026bcc>
   27040:	1c62b03a 	or	r17,r3,r17
   27044:	8822c03a 	cmpne	r17,r17,zero
   27048:	0005883a 	mov	r2,zero
   2704c:	003f8906 	br	26e74 <__alt_mem_SDRAM_controller+0xfc026e74>
   27050:	3809883a 	mov	r4,r7
   27054:	4821883a 	mov	r16,r9
   27058:	0011883a 	mov	r8,zero
   2705c:	0005883a 	mov	r2,zero
   27060:	003eda06 	br	26bcc <__alt_mem_SDRAM_controller+0xfc026bcc>
   27064:	0101ffc4 	movi	r4,2047
   27068:	49003b26 	beq	r9,r4,27158 <__subdf3+0x7b4>
   2706c:	0085c83a 	sub	r2,zero,r2
   27070:	18c02034 	orhi	r3,r3,128
   27074:	01000e04 	movi	r4,56
   27078:	20806e16 	blt	r4,r2,27234 <__subdf3+0x890>
   2707c:	010007c4 	movi	r4,31
   27080:	20807716 	blt	r4,r2,27260 <__subdf3+0x8bc>
   27084:	01000804 	movi	r4,32
   27088:	2089c83a 	sub	r4,r4,r2
   2708c:	1914983a 	sll	r10,r3,r4
   27090:	8890d83a 	srl	r8,r17,r2
   27094:	8908983a 	sll	r4,r17,r4
   27098:	1884d83a 	srl	r2,r3,r2
   2709c:	5222b03a 	or	r17,r10,r8
   270a0:	2006c03a 	cmpne	r3,r4,zero
   270a4:	88e2b03a 	or	r17,r17,r3
   270a8:	89a3883a 	add	r17,r17,r6
   270ac:	1145883a 	add	r2,r2,r5
   270b0:	898d803a 	cmpltu	r6,r17,r6
   270b4:	3087883a 	add	r3,r6,r2
   270b8:	4821883a 	mov	r16,r9
   270bc:	003ed906 	br	26c24 <__alt_mem_SDRAM_controller+0xfc026c24>
   270c0:	2984b03a 	or	r2,r5,r6
   270c4:	10004226 	beq	r2,zero,271d0 <__subdf3+0x82c>
   270c8:	1808d0fa 	srli	r4,r3,3
   270cc:	8822d0fa 	srli	r17,r17,3
   270d0:	1806977a 	slli	r3,r3,29
   270d4:	2080022c 	andhi	r2,r4,8
   270d8:	1c62b03a 	or	r17,r3,r17
   270dc:	10000826 	beq	r2,zero,27100 <__subdf3+0x75c>
   270e0:	2812d0fa 	srli	r9,r5,3
   270e4:	4880022c 	andhi	r2,r9,8
   270e8:	1000051e 	bne	r2,zero,27100 <__subdf3+0x75c>
   270ec:	300cd0fa 	srli	r6,r6,3
   270f0:	2804977a 	slli	r2,r5,29
   270f4:	4809883a 	mov	r4,r9
   270f8:	3825883a 	mov	r18,r7
   270fc:	11a2b03a 	or	r17,r2,r6
   27100:	8806d77a 	srli	r3,r17,29
   27104:	200890fa 	slli	r4,r4,3
   27108:	882290fa 	slli	r17,r17,3
   2710c:	0401ffc4 	movi	r16,2047
   27110:	1906b03a 	or	r3,r3,r4
   27114:	003e4406 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   27118:	2984b03a 	or	r2,r5,r6
   2711c:	103e4226 	beq	r2,zero,26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   27120:	8989c83a 	sub	r4,r17,r6
   27124:	8911803a 	cmpltu	r8,r17,r4
   27128:	1945c83a 	sub	r2,r3,r5
   2712c:	1205c83a 	sub	r2,r2,r8
   27130:	1200202c 	andhi	r8,r2,128
   27134:	403e9a26 	beq	r8,zero,26ba0 <__alt_mem_SDRAM_controller+0xfc026ba0>
   27138:	3463c83a 	sub	r17,r6,r17
   2713c:	28c5c83a 	sub	r2,r5,r3
   27140:	344d803a 	cmpltu	r6,r6,r17
   27144:	1187c83a 	sub	r3,r2,r6
   27148:	3825883a 	mov	r18,r7
   2714c:	003e3606 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   27150:	0101ffc4 	movi	r4,2047
   27154:	493fc71e 	bne	r9,r4,27074 <__alt_mem_SDRAM_controller+0xfc027074>
   27158:	2807883a 	mov	r3,r5
   2715c:	3023883a 	mov	r17,r6
   27160:	4821883a 	mov	r16,r9
   27164:	003e3006 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   27168:	10003626 	beq	r2,zero,27244 <__subdf3+0x8a0>
   2716c:	2984b03a 	or	r2,r5,r6
   27170:	10001726 	beq	r2,zero,271d0 <__subdf3+0x82c>
   27174:	1808d0fa 	srli	r4,r3,3
   27178:	8822d0fa 	srli	r17,r17,3
   2717c:	1806977a 	slli	r3,r3,29
   27180:	2080022c 	andhi	r2,r4,8
   27184:	1c62b03a 	or	r17,r3,r17
   27188:	10000726 	beq	r2,zero,271a8 <__subdf3+0x804>
   2718c:	2812d0fa 	srli	r9,r5,3
   27190:	4880022c 	andhi	r2,r9,8
   27194:	1000041e 	bne	r2,zero,271a8 <__subdf3+0x804>
   27198:	300cd0fa 	srli	r6,r6,3
   2719c:	2804977a 	slli	r2,r5,29
   271a0:	4809883a 	mov	r4,r9
   271a4:	11a2b03a 	or	r17,r2,r6
   271a8:	8806d77a 	srli	r3,r17,29
   271ac:	200890fa 	slli	r4,r4,3
   271b0:	882290fa 	slli	r17,r17,3
   271b4:	3825883a 	mov	r18,r7
   271b8:	1906b03a 	or	r3,r3,r4
   271bc:	0401ffc4 	movi	r16,2047
   271c0:	003e1906 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   271c4:	000b883a 	mov	r5,zero
   271c8:	0005883a 	mov	r2,zero
   271cc:	003e2e06 	br	26a88 <__alt_mem_SDRAM_controller+0xfc026a88>
   271d0:	0401ffc4 	movi	r16,2047
   271d4:	003e1406 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   271d8:	0005883a 	mov	r2,zero
   271dc:	003f7506 	br	26fb4 <__alt_mem_SDRAM_controller+0xfc026fb4>
   271e0:	0005883a 	mov	r2,zero
   271e4:	0009883a 	mov	r4,zero
   271e8:	003e7806 	br	26bcc <__alt_mem_SDRAM_controller+0xfc026bcc>
   271ec:	123ff804 	addi	r8,r2,-32
   271f0:	01000804 	movi	r4,32
   271f4:	1a10d83a 	srl	r8,r3,r8
   271f8:	11002526 	beq	r2,r4,27290 <__subdf3+0x8ec>
   271fc:	01001004 	movi	r4,64
   27200:	2085c83a 	sub	r2,r4,r2
   27204:	1884983a 	sll	r2,r3,r2
   27208:	1444b03a 	or	r2,r2,r17
   2720c:	1004c03a 	cmpne	r2,r2,zero
   27210:	40a2b03a 	or	r17,r8,r2
   27214:	0005883a 	mov	r2,zero
   27218:	003f1606 	br	26e74 <__alt_mem_SDRAM_controller+0xfc026e74>
   2721c:	02000434 	movhi	r8,16
   27220:	0009883a 	mov	r4,zero
   27224:	423fffc4 	addi	r8,r8,-1
   27228:	00bfffc4 	movi	r2,-1
   2722c:	0401ffc4 	movi	r16,2047
   27230:	003e6606 	br	26bcc <__alt_mem_SDRAM_controller+0xfc026bcc>
   27234:	1c62b03a 	or	r17,r3,r17
   27238:	8822c03a 	cmpne	r17,r17,zero
   2723c:	0005883a 	mov	r2,zero
   27240:	003f9906 	br	270a8 <__alt_mem_SDRAM_controller+0xfc0270a8>
   27244:	2807883a 	mov	r3,r5
   27248:	3023883a 	mov	r17,r6
   2724c:	0401ffc4 	movi	r16,2047
   27250:	003df506 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   27254:	2807883a 	mov	r3,r5
   27258:	3023883a 	mov	r17,r6
   2725c:	003df206 	br	26a28 <__alt_mem_SDRAM_controller+0xfc026a28>
   27260:	123ff804 	addi	r8,r2,-32
   27264:	01000804 	movi	r4,32
   27268:	1a10d83a 	srl	r8,r3,r8
   2726c:	11000a26 	beq	r2,r4,27298 <__subdf3+0x8f4>
   27270:	01001004 	movi	r4,64
   27274:	2085c83a 	sub	r2,r4,r2
   27278:	1884983a 	sll	r2,r3,r2
   2727c:	1444b03a 	or	r2,r2,r17
   27280:	1004c03a 	cmpne	r2,r2,zero
   27284:	40a2b03a 	or	r17,r8,r2
   27288:	0005883a 	mov	r2,zero
   2728c:	003f8606 	br	270a8 <__alt_mem_SDRAM_controller+0xfc0270a8>
   27290:	0005883a 	mov	r2,zero
   27294:	003fdc06 	br	27208 <__alt_mem_SDRAM_controller+0xfc027208>
   27298:	0005883a 	mov	r2,zero
   2729c:	003ff706 	br	2727c <__alt_mem_SDRAM_controller+0xfc02727c>

000272a0 <__fixdfsi>:
   272a0:	280cd53a 	srli	r6,r5,20
   272a4:	00c00434 	movhi	r3,16
   272a8:	18ffffc4 	addi	r3,r3,-1
   272ac:	3181ffcc 	andi	r6,r6,2047
   272b0:	01c0ff84 	movi	r7,1022
   272b4:	28c6703a 	and	r3,r5,r3
   272b8:	280ad7fa 	srli	r5,r5,31
   272bc:	3980120e 	bge	r7,r6,27308 <__fixdfsi+0x68>
   272c0:	00810744 	movi	r2,1053
   272c4:	11800c16 	blt	r2,r6,272f8 <__fixdfsi+0x58>
   272c8:	00810cc4 	movi	r2,1075
   272cc:	1185c83a 	sub	r2,r2,r6
   272d0:	01c007c4 	movi	r7,31
   272d4:	18c00434 	orhi	r3,r3,16
   272d8:	38800d16 	blt	r7,r2,27310 <__fixdfsi+0x70>
   272dc:	31befb44 	addi	r6,r6,-1043
   272e0:	2084d83a 	srl	r2,r4,r2
   272e4:	1986983a 	sll	r3,r3,r6
   272e8:	1884b03a 	or	r2,r3,r2
   272ec:	28000726 	beq	r5,zero,2730c <__fixdfsi+0x6c>
   272f0:	0085c83a 	sub	r2,zero,r2
   272f4:	f800283a 	ret
   272f8:	00a00034 	movhi	r2,32768
   272fc:	10bfffc4 	addi	r2,r2,-1
   27300:	2885883a 	add	r2,r5,r2
   27304:	f800283a 	ret
   27308:	0005883a 	mov	r2,zero
   2730c:	f800283a 	ret
   27310:	008104c4 	movi	r2,1043
   27314:	1185c83a 	sub	r2,r2,r6
   27318:	1884d83a 	srl	r2,r3,r2
   2731c:	003ff306 	br	272ec <__alt_mem_SDRAM_controller+0xfc0272ec>

00027320 <__floatsidf>:
   27320:	defffd04 	addi	sp,sp,-12
   27324:	dfc00215 	stw	ra,8(sp)
   27328:	dc400115 	stw	r17,4(sp)
   2732c:	dc000015 	stw	r16,0(sp)
   27330:	20002b26 	beq	r4,zero,273e0 <__floatsidf+0xc0>
   27334:	2023883a 	mov	r17,r4
   27338:	2020d7fa 	srli	r16,r4,31
   2733c:	20002d16 	blt	r4,zero,273f4 <__floatsidf+0xd4>
   27340:	8809883a 	mov	r4,r17
   27344:	00276b40 	call	276b4 <__clzsi2>
   27348:	01410784 	movi	r5,1054
   2734c:	288bc83a 	sub	r5,r5,r2
   27350:	01010cc4 	movi	r4,1075
   27354:	2149c83a 	sub	r4,r4,r5
   27358:	00c007c4 	movi	r3,31
   2735c:	1900160e 	bge	r3,r4,273b8 <__floatsidf+0x98>
   27360:	00c104c4 	movi	r3,1043
   27364:	1947c83a 	sub	r3,r3,r5
   27368:	88c6983a 	sll	r3,r17,r3
   2736c:	00800434 	movhi	r2,16
   27370:	10bfffc4 	addi	r2,r2,-1
   27374:	1886703a 	and	r3,r3,r2
   27378:	2941ffcc 	andi	r5,r5,2047
   2737c:	800d883a 	mov	r6,r16
   27380:	0005883a 	mov	r2,zero
   27384:	280a953a 	slli	r5,r5,20
   27388:	31803fcc 	andi	r6,r6,255
   2738c:	01000434 	movhi	r4,16
   27390:	300c97fa 	slli	r6,r6,31
   27394:	213fffc4 	addi	r4,r4,-1
   27398:	1906703a 	and	r3,r3,r4
   2739c:	1946b03a 	or	r3,r3,r5
   273a0:	1986b03a 	or	r3,r3,r6
   273a4:	dfc00217 	ldw	ra,8(sp)
   273a8:	dc400117 	ldw	r17,4(sp)
   273ac:	dc000017 	ldw	r16,0(sp)
   273b0:	dec00304 	addi	sp,sp,12
   273b4:	f800283a 	ret
   273b8:	00c002c4 	movi	r3,11
   273bc:	1887c83a 	sub	r3,r3,r2
   273c0:	88c6d83a 	srl	r3,r17,r3
   273c4:	8904983a 	sll	r2,r17,r4
   273c8:	01000434 	movhi	r4,16
   273cc:	213fffc4 	addi	r4,r4,-1
   273d0:	2941ffcc 	andi	r5,r5,2047
   273d4:	1906703a 	and	r3,r3,r4
   273d8:	800d883a 	mov	r6,r16
   273dc:	003fe906 	br	27384 <__alt_mem_SDRAM_controller+0xfc027384>
   273e0:	000d883a 	mov	r6,zero
   273e4:	000b883a 	mov	r5,zero
   273e8:	0007883a 	mov	r3,zero
   273ec:	0005883a 	mov	r2,zero
   273f0:	003fe406 	br	27384 <__alt_mem_SDRAM_controller+0xfc027384>
   273f4:	0123c83a 	sub	r17,zero,r4
   273f8:	003fd106 	br	27340 <__alt_mem_SDRAM_controller+0xfc027340>

000273fc <__extendsfdf2>:
   273fc:	200ad5fa 	srli	r5,r4,23
   27400:	defffd04 	addi	sp,sp,-12
   27404:	dc400115 	stw	r17,4(sp)
   27408:	29403fcc 	andi	r5,r5,255
   2740c:	29800044 	addi	r6,r5,1
   27410:	04402034 	movhi	r17,128
   27414:	dc000015 	stw	r16,0(sp)
   27418:	8c7fffc4 	addi	r17,r17,-1
   2741c:	dfc00215 	stw	ra,8(sp)
   27420:	31803fcc 	andi	r6,r6,255
   27424:	00800044 	movi	r2,1
   27428:	8922703a 	and	r17,r17,r4
   2742c:	2020d7fa 	srli	r16,r4,31
   27430:	1180110e 	bge	r2,r6,27478 <__extendsfdf2+0x7c>
   27434:	880cd0fa 	srli	r6,r17,3
   27438:	8822977a 	slli	r17,r17,29
   2743c:	2940e004 	addi	r5,r5,896
   27440:	2941ffcc 	andi	r5,r5,2047
   27444:	2804953a 	slli	r2,r5,20
   27448:	01400434 	movhi	r5,16
   2744c:	800697fa 	slli	r3,r16,31
   27450:	297fffc4 	addi	r5,r5,-1
   27454:	314a703a 	and	r5,r6,r5
   27458:	288ab03a 	or	r5,r5,r2
   2745c:	28c6b03a 	or	r3,r5,r3
   27460:	8805883a 	mov	r2,r17
   27464:	dfc00217 	ldw	ra,8(sp)
   27468:	dc400117 	ldw	r17,4(sp)
   2746c:	dc000017 	ldw	r16,0(sp)
   27470:	dec00304 	addi	sp,sp,12
   27474:	f800283a 	ret
   27478:	2800111e 	bne	r5,zero,274c0 <__extendsfdf2+0xc4>
   2747c:	88001c26 	beq	r17,zero,274f0 <__extendsfdf2+0xf4>
   27480:	8809883a 	mov	r4,r17
   27484:	00276b40 	call	276b4 <__clzsi2>
   27488:	00c00284 	movi	r3,10
   2748c:	18801b16 	blt	r3,r2,274fc <__extendsfdf2+0x100>
   27490:	018002c4 	movi	r6,11
   27494:	308dc83a 	sub	r6,r6,r2
   27498:	11000544 	addi	r4,r2,21
   2749c:	8986d83a 	srl	r3,r17,r6
   274a0:	8922983a 	sll	r17,r17,r4
   274a4:	0180e244 	movi	r6,905
   274a8:	01400434 	movhi	r5,16
   274ac:	3085c83a 	sub	r2,r6,r2
   274b0:	297fffc4 	addi	r5,r5,-1
   274b4:	194c703a 	and	r6,r3,r5
   274b8:	1141ffcc 	andi	r5,r2,2047
   274bc:	003fe006 	br	27440 <__alt_mem_SDRAM_controller+0xfc027440>
   274c0:	88000826 	beq	r17,zero,274e4 <__extendsfdf2+0xe8>
   274c4:	880cd0fa 	srli	r6,r17,3
   274c8:	00800434 	movhi	r2,16
   274cc:	10bfffc4 	addi	r2,r2,-1
   274d0:	31800234 	orhi	r6,r6,8
   274d4:	8822977a 	slli	r17,r17,29
   274d8:	308c703a 	and	r6,r6,r2
   274dc:	0141ffc4 	movi	r5,2047
   274e0:	003fd706 	br	27440 <__alt_mem_SDRAM_controller+0xfc027440>
   274e4:	0141ffc4 	movi	r5,2047
   274e8:	000d883a 	mov	r6,zero
   274ec:	003fd406 	br	27440 <__alt_mem_SDRAM_controller+0xfc027440>
   274f0:	000b883a 	mov	r5,zero
   274f4:	000d883a 	mov	r6,zero
   274f8:	003fd106 	br	27440 <__alt_mem_SDRAM_controller+0xfc027440>
   274fc:	11bffd44 	addi	r6,r2,-11
   27500:	8986983a 	sll	r3,r17,r6
   27504:	0023883a 	mov	r17,zero
   27508:	003fe606 	br	274a4 <__alt_mem_SDRAM_controller+0xfc0274a4>

0002750c <__truncdfsf2>:
   2750c:	2810d53a 	srli	r8,r5,20
   27510:	01c00434 	movhi	r7,16
   27514:	39ffffc4 	addi	r7,r7,-1
   27518:	29ce703a 	and	r7,r5,r7
   2751c:	4201ffcc 	andi	r8,r8,2047
   27520:	380e90fa 	slli	r7,r7,3
   27524:	200cd77a 	srli	r6,r4,29
   27528:	42400044 	addi	r9,r8,1
   2752c:	4a41ffcc 	andi	r9,r9,2047
   27530:	00c00044 	movi	r3,1
   27534:	280ad7fa 	srli	r5,r5,31
   27538:	31ceb03a 	or	r7,r6,r7
   2753c:	200490fa 	slli	r2,r4,3
   27540:	1a40230e 	bge	r3,r9,275d0 <__truncdfsf2+0xc4>
   27544:	40ff2004 	addi	r3,r8,-896
   27548:	01803f84 	movi	r6,254
   2754c:	30c01516 	blt	r6,r3,275a4 <__truncdfsf2+0x98>
   27550:	00c0380e 	bge	zero,r3,27634 <__truncdfsf2+0x128>
   27554:	200c91ba 	slli	r6,r4,6
   27558:	380e90fa 	slli	r7,r7,3
   2755c:	1004d77a 	srli	r2,r2,29
   27560:	300cc03a 	cmpne	r6,r6,zero
   27564:	31ccb03a 	or	r6,r6,r7
   27568:	308cb03a 	or	r6,r6,r2
   2756c:	308001cc 	andi	r2,r6,7
   27570:	10000426 	beq	r2,zero,27584 <__truncdfsf2+0x78>
   27574:	308003cc 	andi	r2,r6,15
   27578:	01000104 	movi	r4,4
   2757c:	11000126 	beq	r2,r4,27584 <__truncdfsf2+0x78>
   27580:	31800104 	addi	r6,r6,4
   27584:	3081002c 	andhi	r2,r6,1024
   27588:	10001626 	beq	r2,zero,275e4 <__truncdfsf2+0xd8>
   2758c:	18c00044 	addi	r3,r3,1
   27590:	00803fc4 	movi	r2,255
   27594:	18800326 	beq	r3,r2,275a4 <__truncdfsf2+0x98>
   27598:	300c91ba 	slli	r6,r6,6
   2759c:	300cd27a 	srli	r6,r6,9
   275a0:	00000206 	br	275ac <__truncdfsf2+0xa0>
   275a4:	00ffffc4 	movi	r3,-1
   275a8:	000d883a 	mov	r6,zero
   275ac:	18c03fcc 	andi	r3,r3,255
   275b0:	180895fa 	slli	r4,r3,23
   275b4:	00c02034 	movhi	r3,128
   275b8:	280a97fa 	slli	r5,r5,31
   275bc:	18ffffc4 	addi	r3,r3,-1
   275c0:	30c6703a 	and	r3,r6,r3
   275c4:	1906b03a 	or	r3,r3,r4
   275c8:	1944b03a 	or	r2,r3,r5
   275cc:	f800283a 	ret
   275d0:	40000b1e 	bne	r8,zero,27600 <__truncdfsf2+0xf4>
   275d4:	388cb03a 	or	r6,r7,r2
   275d8:	0007883a 	mov	r3,zero
   275dc:	30000426 	beq	r6,zero,275f0 <__truncdfsf2+0xe4>
   275e0:	01800144 	movi	r6,5
   275e4:	00803fc4 	movi	r2,255
   275e8:	300cd0fa 	srli	r6,r6,3
   275ec:	18800a26 	beq	r3,r2,27618 <__truncdfsf2+0x10c>
   275f0:	00802034 	movhi	r2,128
   275f4:	10bfffc4 	addi	r2,r2,-1
   275f8:	308c703a 	and	r6,r6,r2
   275fc:	003feb06 	br	275ac <__alt_mem_SDRAM_controller+0xfc0275ac>
   27600:	3888b03a 	or	r4,r7,r2
   27604:	203fe726 	beq	r4,zero,275a4 <__alt_mem_SDRAM_controller+0xfc0275a4>
   27608:	380c90fa 	slli	r6,r7,3
   2760c:	00c03fc4 	movi	r3,255
   27610:	31808034 	orhi	r6,r6,512
   27614:	003fd506 	br	2756c <__alt_mem_SDRAM_controller+0xfc02756c>
   27618:	303fe226 	beq	r6,zero,275a4 <__alt_mem_SDRAM_controller+0xfc0275a4>
   2761c:	00802034 	movhi	r2,128
   27620:	31801034 	orhi	r6,r6,64
   27624:	10bfffc4 	addi	r2,r2,-1
   27628:	00ffffc4 	movi	r3,-1
   2762c:	308c703a 	and	r6,r6,r2
   27630:	003fde06 	br	275ac <__alt_mem_SDRAM_controller+0xfc0275ac>
   27634:	013ffa44 	movi	r4,-23
   27638:	19000e16 	blt	r3,r4,27674 <__truncdfsf2+0x168>
   2763c:	01000784 	movi	r4,30
   27640:	20c9c83a 	sub	r4,r4,r3
   27644:	018007c4 	movi	r6,31
   27648:	39c02034 	orhi	r7,r7,128
   2764c:	31000b16 	blt	r6,r4,2767c <__truncdfsf2+0x170>
   27650:	423f2084 	addi	r8,r8,-894
   27654:	120c983a 	sll	r6,r2,r8
   27658:	3a0e983a 	sll	r7,r7,r8
   2765c:	1104d83a 	srl	r2,r2,r4
   27660:	300cc03a 	cmpne	r6,r6,zero
   27664:	31ceb03a 	or	r7,r6,r7
   27668:	388cb03a 	or	r6,r7,r2
   2766c:	0007883a 	mov	r3,zero
   27670:	003fbe06 	br	2756c <__alt_mem_SDRAM_controller+0xfc02756c>
   27674:	0007883a 	mov	r3,zero
   27678:	003fd906 	br	275e0 <__alt_mem_SDRAM_controller+0xfc0275e0>
   2767c:	01bfff84 	movi	r6,-2
   27680:	30cdc83a 	sub	r6,r6,r3
   27684:	00c00804 	movi	r3,32
   27688:	398cd83a 	srl	r6,r7,r6
   2768c:	20c00726 	beq	r4,r3,276ac <__truncdfsf2+0x1a0>
   27690:	423f2884 	addi	r8,r8,-862
   27694:	3a0e983a 	sll	r7,r7,r8
   27698:	3884b03a 	or	r2,r7,r2
   2769c:	1004c03a 	cmpne	r2,r2,zero
   276a0:	118cb03a 	or	r6,r2,r6
   276a4:	0007883a 	mov	r3,zero
   276a8:	003fb006 	br	2756c <__alt_mem_SDRAM_controller+0xfc02756c>
   276ac:	000f883a 	mov	r7,zero
   276b0:	003ff906 	br	27698 <__alt_mem_SDRAM_controller+0xfc027698>

000276b4 <__clzsi2>:
   276b4:	00bfffd4 	movui	r2,65535
   276b8:	11000536 	bltu	r2,r4,276d0 <__clzsi2+0x1c>
   276bc:	00803fc4 	movi	r2,255
   276c0:	11000f36 	bltu	r2,r4,27700 <__clzsi2+0x4c>
   276c4:	00800804 	movi	r2,32
   276c8:	0007883a 	mov	r3,zero
   276cc:	00000506 	br	276e4 <__clzsi2+0x30>
   276d0:	00804034 	movhi	r2,256
   276d4:	10bfffc4 	addi	r2,r2,-1
   276d8:	11000c2e 	bgeu	r2,r4,2770c <__clzsi2+0x58>
   276dc:	00800204 	movi	r2,8
   276e0:	00c00604 	movi	r3,24
   276e4:	20c8d83a 	srl	r4,r4,r3
   276e8:	00c000f4 	movhi	r3,3
   276ec:	18d88104 	addi	r3,r3,25092
   276f0:	1909883a 	add	r4,r3,r4
   276f4:	20c00003 	ldbu	r3,0(r4)
   276f8:	10c5c83a 	sub	r2,r2,r3
   276fc:	f800283a 	ret
   27700:	00800604 	movi	r2,24
   27704:	00c00204 	movi	r3,8
   27708:	003ff606 	br	276e4 <__alt_mem_SDRAM_controller+0xfc0276e4>
   2770c:	00800404 	movi	r2,16
   27710:	1007883a 	mov	r3,r2
   27714:	003ff306 	br	276e4 <__alt_mem_SDRAM_controller+0xfc0276e4>

00027718 <__errno>:
   27718:	00800134 	movhi	r2,4
   2771c:	10a04f04 	addi	r2,r2,-32452
   27720:	10800017 	ldw	r2,0(r2)
   27724:	f800283a 	ret

00027728 <_printf_r>:
   27728:	defffd04 	addi	sp,sp,-12
   2772c:	2805883a 	mov	r2,r5
   27730:	dfc00015 	stw	ra,0(sp)
   27734:	d9800115 	stw	r6,4(sp)
   27738:	d9c00215 	stw	r7,8(sp)
   2773c:	21400217 	ldw	r5,8(r4)
   27740:	d9c00104 	addi	r7,sp,4
   27744:	100d883a 	mov	r6,r2
   27748:	00279000 	call	27900 <___vfprintf_internal_r>
   2774c:	dfc00017 	ldw	ra,0(sp)
   27750:	dec00304 	addi	sp,sp,12
   27754:	f800283a 	ret

00027758 <printf>:
   27758:	defffc04 	addi	sp,sp,-16
   2775c:	dfc00015 	stw	ra,0(sp)
   27760:	d9400115 	stw	r5,4(sp)
   27764:	d9800215 	stw	r6,8(sp)
   27768:	d9c00315 	stw	r7,12(sp)
   2776c:	00800134 	movhi	r2,4
   27770:	10a04f04 	addi	r2,r2,-32452
   27774:	10800017 	ldw	r2,0(r2)
   27778:	200b883a 	mov	r5,r4
   2777c:	d9800104 	addi	r6,sp,4
   27780:	11000217 	ldw	r4,8(r2)
   27784:	0029af80 	call	29af8 <__vfprintf_internal>
   27788:	dfc00017 	ldw	ra,0(sp)
   2778c:	dec00404 	addi	sp,sp,16
   27790:	f800283a 	ret

00027794 <_puts_r>:
   27794:	defff604 	addi	sp,sp,-40
   27798:	dc000715 	stw	r16,28(sp)
   2779c:	2021883a 	mov	r16,r4
   277a0:	2809883a 	mov	r4,r5
   277a4:	dc400815 	stw	r17,32(sp)
   277a8:	dfc00915 	stw	ra,36(sp)
   277ac:	2823883a 	mov	r17,r5
   277b0:	00278680 	call	27868 <strlen>
   277b4:	10c00044 	addi	r3,r2,1
   277b8:	d8800115 	stw	r2,4(sp)
   277bc:	008000f4 	movhi	r2,3
   277c0:	1098c204 	addi	r2,r2,25352
   277c4:	d8800215 	stw	r2,8(sp)
   277c8:	00800044 	movi	r2,1
   277cc:	d8800315 	stw	r2,12(sp)
   277d0:	00800084 	movi	r2,2
   277d4:	dc400015 	stw	r17,0(sp)
   277d8:	d8c00615 	stw	r3,24(sp)
   277dc:	dec00415 	stw	sp,16(sp)
   277e0:	d8800515 	stw	r2,20(sp)
   277e4:	80000226 	beq	r16,zero,277f0 <_puts_r+0x5c>
   277e8:	80800e17 	ldw	r2,56(r16)
   277ec:	10001426 	beq	r2,zero,27840 <_puts_r+0xac>
   277f0:	81400217 	ldw	r5,8(r16)
   277f4:	2880030b 	ldhu	r2,12(r5)
   277f8:	10c8000c 	andi	r3,r2,8192
   277fc:	1800061e 	bne	r3,zero,27818 <_puts_r+0x84>
   27800:	29001917 	ldw	r4,100(r5)
   27804:	00f7ffc4 	movi	r3,-8193
   27808:	10880014 	ori	r2,r2,8192
   2780c:	20c6703a 	and	r3,r4,r3
   27810:	2880030d 	sth	r2,12(r5)
   27814:	28c01915 	stw	r3,100(r5)
   27818:	d9800404 	addi	r6,sp,16
   2781c:	8009883a 	mov	r4,r16
   27820:	002c0280 	call	2c028 <__sfvwrite_r>
   27824:	1000091e 	bne	r2,zero,2784c <_puts_r+0xb8>
   27828:	00800284 	movi	r2,10
   2782c:	dfc00917 	ldw	ra,36(sp)
   27830:	dc400817 	ldw	r17,32(sp)
   27834:	dc000717 	ldw	r16,28(sp)
   27838:	dec00a04 	addi	sp,sp,40
   2783c:	f800283a 	ret
   27840:	8009883a 	mov	r4,r16
   27844:	002bba40 	call	2bba4 <__sinit>
   27848:	003fe906 	br	277f0 <__alt_mem_SDRAM_controller+0xfc0277f0>
   2784c:	00bfffc4 	movi	r2,-1
   27850:	003ff606 	br	2782c <__alt_mem_SDRAM_controller+0xfc02782c>

00027854 <puts>:
   27854:	00800134 	movhi	r2,4
   27858:	10a04f04 	addi	r2,r2,-32452
   2785c:	200b883a 	mov	r5,r4
   27860:	11000017 	ldw	r4,0(r2)
   27864:	00277941 	jmpi	27794 <_puts_r>

00027868 <strlen>:
   27868:	208000cc 	andi	r2,r4,3
   2786c:	10002026 	beq	r2,zero,278f0 <strlen+0x88>
   27870:	20800007 	ldb	r2,0(r4)
   27874:	10002026 	beq	r2,zero,278f8 <strlen+0x90>
   27878:	2005883a 	mov	r2,r4
   2787c:	00000206 	br	27888 <strlen+0x20>
   27880:	10c00007 	ldb	r3,0(r2)
   27884:	18001826 	beq	r3,zero,278e8 <strlen+0x80>
   27888:	10800044 	addi	r2,r2,1
   2788c:	10c000cc 	andi	r3,r2,3
   27890:	183ffb1e 	bne	r3,zero,27880 <__alt_mem_SDRAM_controller+0xfc027880>
   27894:	10c00017 	ldw	r3,0(r2)
   27898:	01ffbff4 	movhi	r7,65279
   2789c:	39ffbfc4 	addi	r7,r7,-257
   278a0:	00ca303a 	nor	r5,zero,r3
   278a4:	01a02074 	movhi	r6,32897
   278a8:	19c7883a 	add	r3,r3,r7
   278ac:	31a02004 	addi	r6,r6,-32640
   278b0:	1946703a 	and	r3,r3,r5
   278b4:	1986703a 	and	r3,r3,r6
   278b8:	1800091e 	bne	r3,zero,278e0 <strlen+0x78>
   278bc:	10800104 	addi	r2,r2,4
   278c0:	10c00017 	ldw	r3,0(r2)
   278c4:	19cb883a 	add	r5,r3,r7
   278c8:	00c6303a 	nor	r3,zero,r3
   278cc:	28c6703a 	and	r3,r5,r3
   278d0:	1986703a 	and	r3,r3,r6
   278d4:	183ff926 	beq	r3,zero,278bc <__alt_mem_SDRAM_controller+0xfc0278bc>
   278d8:	00000106 	br	278e0 <strlen+0x78>
   278dc:	10800044 	addi	r2,r2,1
   278e0:	10c00007 	ldb	r3,0(r2)
   278e4:	183ffd1e 	bne	r3,zero,278dc <__alt_mem_SDRAM_controller+0xfc0278dc>
   278e8:	1105c83a 	sub	r2,r2,r4
   278ec:	f800283a 	ret
   278f0:	2005883a 	mov	r2,r4
   278f4:	003fe706 	br	27894 <__alt_mem_SDRAM_controller+0xfc027894>
   278f8:	0005883a 	mov	r2,zero
   278fc:	f800283a 	ret

00027900 <___vfprintf_internal_r>:
   27900:	deffb804 	addi	sp,sp,-288
   27904:	dfc04715 	stw	ra,284(sp)
   27908:	ddc04515 	stw	r23,276(sp)
   2790c:	dd404315 	stw	r21,268(sp)
   27910:	d9002c15 	stw	r4,176(sp)
   27914:	282f883a 	mov	r23,r5
   27918:	302b883a 	mov	r21,r6
   2791c:	d9c02d15 	stw	r7,180(sp)
   27920:	df004615 	stw	fp,280(sp)
   27924:	dd804415 	stw	r22,272(sp)
   27928:	dd004215 	stw	r20,264(sp)
   2792c:	dcc04115 	stw	r19,260(sp)
   27930:	dc804015 	stw	r18,256(sp)
   27934:	dc403f15 	stw	r17,252(sp)
   27938:	dc003e15 	stw	r16,248(sp)
   2793c:	002c7180 	call	2c718 <_localeconv_r>
   27940:	10800017 	ldw	r2,0(r2)
   27944:	1009883a 	mov	r4,r2
   27948:	d8803415 	stw	r2,208(sp)
   2794c:	00278680 	call	27868 <strlen>
   27950:	d8803715 	stw	r2,220(sp)
   27954:	d8802c17 	ldw	r2,176(sp)
   27958:	10000226 	beq	r2,zero,27964 <___vfprintf_internal_r+0x64>
   2795c:	10800e17 	ldw	r2,56(r2)
   27960:	1000f926 	beq	r2,zero,27d48 <___vfprintf_internal_r+0x448>
   27964:	b880030b 	ldhu	r2,12(r23)
   27968:	10c8000c 	andi	r3,r2,8192
   2796c:	1800061e 	bne	r3,zero,27988 <___vfprintf_internal_r+0x88>
   27970:	b9001917 	ldw	r4,100(r23)
   27974:	00f7ffc4 	movi	r3,-8193
   27978:	10880014 	ori	r2,r2,8192
   2797c:	20c6703a 	and	r3,r4,r3
   27980:	b880030d 	sth	r2,12(r23)
   27984:	b8c01915 	stw	r3,100(r23)
   27988:	10c0020c 	andi	r3,r2,8
   2798c:	1800c126 	beq	r3,zero,27c94 <___vfprintf_internal_r+0x394>
   27990:	b8c00417 	ldw	r3,16(r23)
   27994:	1800bf26 	beq	r3,zero,27c94 <___vfprintf_internal_r+0x394>
   27998:	1080068c 	andi	r2,r2,26
   2799c:	00c00284 	movi	r3,10
   279a0:	10c0c426 	beq	r2,r3,27cb4 <___vfprintf_internal_r+0x3b4>
   279a4:	d8c00404 	addi	r3,sp,16
   279a8:	050000f4 	movhi	r20,3
   279ac:	d9001e04 	addi	r4,sp,120
   279b0:	a518d384 	addi	r20,r20,25422
   279b4:	d8c01e15 	stw	r3,120(sp)
   279b8:	d8002015 	stw	zero,128(sp)
   279bc:	d8001f15 	stw	zero,124(sp)
   279c0:	d8003315 	stw	zero,204(sp)
   279c4:	d8003615 	stw	zero,216(sp)
   279c8:	d8003815 	stw	zero,224(sp)
   279cc:	1811883a 	mov	r8,r3
   279d0:	d8003915 	stw	zero,228(sp)
   279d4:	d8003a15 	stw	zero,232(sp)
   279d8:	d8002f15 	stw	zero,188(sp)
   279dc:	d9002815 	stw	r4,160(sp)
   279e0:	a8800007 	ldb	r2,0(r21)
   279e4:	10027b26 	beq	r2,zero,283d4 <___vfprintf_internal_r+0xad4>
   279e8:	00c00944 	movi	r3,37
   279ec:	a821883a 	mov	r16,r21
   279f0:	10c0021e 	bne	r2,r3,279fc <___vfprintf_internal_r+0xfc>
   279f4:	00001406 	br	27a48 <___vfprintf_internal_r+0x148>
   279f8:	10c00326 	beq	r2,r3,27a08 <___vfprintf_internal_r+0x108>
   279fc:	84000044 	addi	r16,r16,1
   27a00:	80800007 	ldb	r2,0(r16)
   27a04:	103ffc1e 	bne	r2,zero,279f8 <__alt_mem_SDRAM_controller+0xfc0279f8>
   27a08:	8563c83a 	sub	r17,r16,r21
   27a0c:	88000e26 	beq	r17,zero,27a48 <___vfprintf_internal_r+0x148>
   27a10:	d8c02017 	ldw	r3,128(sp)
   27a14:	d8801f17 	ldw	r2,124(sp)
   27a18:	45400015 	stw	r21,0(r8)
   27a1c:	1c47883a 	add	r3,r3,r17
   27a20:	10800044 	addi	r2,r2,1
   27a24:	d8c02015 	stw	r3,128(sp)
   27a28:	44400115 	stw	r17,4(r8)
   27a2c:	d8801f15 	stw	r2,124(sp)
   27a30:	00c001c4 	movi	r3,7
   27a34:	1880a716 	blt	r3,r2,27cd4 <___vfprintf_internal_r+0x3d4>
   27a38:	42000204 	addi	r8,r8,8
   27a3c:	d9402f17 	ldw	r5,188(sp)
   27a40:	2c4b883a 	add	r5,r5,r17
   27a44:	d9402f15 	stw	r5,188(sp)
   27a48:	80800007 	ldb	r2,0(r16)
   27a4c:	1000a826 	beq	r2,zero,27cf0 <___vfprintf_internal_r+0x3f0>
   27a50:	84400047 	ldb	r17,1(r16)
   27a54:	00bfffc4 	movi	r2,-1
   27a58:	85400044 	addi	r21,r16,1
   27a5c:	d8002785 	stb	zero,158(sp)
   27a60:	0007883a 	mov	r3,zero
   27a64:	000f883a 	mov	r7,zero
   27a68:	d8802915 	stw	r2,164(sp)
   27a6c:	d8003115 	stw	zero,196(sp)
   27a70:	0025883a 	mov	r18,zero
   27a74:	01401604 	movi	r5,88
   27a78:	01800244 	movi	r6,9
   27a7c:	02800a84 	movi	r10,42
   27a80:	02401b04 	movi	r9,108
   27a84:	ad400044 	addi	r21,r21,1
   27a88:	88bff804 	addi	r2,r17,-32
   27a8c:	28830436 	bltu	r5,r2,286a0 <___vfprintf_internal_r+0xda0>
   27a90:	100490ba 	slli	r2,r2,2
   27a94:	010000b4 	movhi	r4,2
   27a98:	211eaa04 	addi	r4,r4,31400
   27a9c:	1105883a 	add	r2,r2,r4
   27aa0:	10800017 	ldw	r2,0(r2)
   27aa4:	1000683a 	jmp	r2
   27aa8:	000285c0 	call	285c <__alt_mem_onchip_memory-0x1d7a4>
   27aac:	000286a0 	cmpeqi	zero,zero,2586
   27ab0:	000286a0 	cmpeqi	zero,zero,2586
   27ab4:	000285e0 	cmpeqi	zero,zero,2583
   27ab8:	000286a0 	cmpeqi	zero,zero,2586
   27abc:	000286a0 	cmpeqi	zero,zero,2586
   27ac0:	000286a0 	cmpeqi	zero,zero,2586
   27ac4:	000286a0 	cmpeqi	zero,zero,2586
   27ac8:	000286a0 	cmpeqi	zero,zero,2586
   27acc:	000286a0 	cmpeqi	zero,zero,2586
   27ad0:	00027d54 	movui	zero,2549
   27ad4:	000284fc 	xorhi	zero,zero,2579
   27ad8:	000286a0 	cmpeqi	zero,zero,2586
   27adc:	00027c1c 	xori	zero,zero,2544
   27ae0:	00027d7c 	xorhi	zero,zero,2549
   27ae4:	000286a0 	cmpeqi	zero,zero,2586
   27ae8:	00027dbc 	xorhi	zero,zero,2550
   27aec:	00027dc8 	cmpgei	zero,zero,2551
   27af0:	00027dc8 	cmpgei	zero,zero,2551
   27af4:	00027dc8 	cmpgei	zero,zero,2551
   27af8:	00027dc8 	cmpgei	zero,zero,2551
   27afc:	00027dc8 	cmpgei	zero,zero,2551
   27b00:	00027dc8 	cmpgei	zero,zero,2551
   27b04:	00027dc8 	cmpgei	zero,zero,2551
   27b08:	00027dc8 	cmpgei	zero,zero,2551
   27b0c:	00027dc8 	cmpgei	zero,zero,2551
   27b10:	000286a0 	cmpeqi	zero,zero,2586
   27b14:	000286a0 	cmpeqi	zero,zero,2586
   27b18:	000286a0 	cmpeqi	zero,zero,2586
   27b1c:	000286a0 	cmpeqi	zero,zero,2586
   27b20:	000286a0 	cmpeqi	zero,zero,2586
   27b24:	000286a0 	cmpeqi	zero,zero,2586
   27b28:	000286a0 	cmpeqi	zero,zero,2586
   27b2c:	000286a0 	cmpeqi	zero,zero,2586
   27b30:	000286a0 	cmpeqi	zero,zero,2586
   27b34:	000286a0 	cmpeqi	zero,zero,2586
   27b38:	00027dfc 	xorhi	zero,zero,2551
   27b3c:	00027eb8 	rdprs	zero,zero,2554
   27b40:	000286a0 	cmpeqi	zero,zero,2586
   27b44:	00027eb8 	rdprs	zero,zero,2554
   27b48:	000286a0 	cmpeqi	zero,zero,2586
   27b4c:	000286a0 	cmpeqi	zero,zero,2586
   27b50:	000286a0 	cmpeqi	zero,zero,2586
   27b54:	000286a0 	cmpeqi	zero,zero,2586
   27b58:	00027f58 	cmpnei	zero,zero,2557
   27b5c:	000286a0 	cmpeqi	zero,zero,2586
   27b60:	000286a0 	cmpeqi	zero,zero,2586
   27b64:	00027f64 	muli	zero,zero,2557
   27b68:	000286a0 	cmpeqi	zero,zero,2586
   27b6c:	000286a0 	cmpeqi	zero,zero,2586
   27b70:	000286a0 	cmpeqi	zero,zero,2586
   27b74:	000286a0 	cmpeqi	zero,zero,2586
   27b78:	000286a0 	cmpeqi	zero,zero,2586
   27b7c:	000283dc 	xori	zero,zero,2575
   27b80:	000286a0 	cmpeqi	zero,zero,2586
   27b84:	000286a0 	cmpeqi	zero,zero,2586
   27b88:	0002843c 	xorhi	zero,zero,2576
   27b8c:	000286a0 	cmpeqi	zero,zero,2586
   27b90:	000286a0 	cmpeqi	zero,zero,2586
   27b94:	000286a0 	cmpeqi	zero,zero,2586
   27b98:	000286a0 	cmpeqi	zero,zero,2586
   27b9c:	000286a0 	cmpeqi	zero,zero,2586
   27ba0:	000286a0 	cmpeqi	zero,zero,2586
   27ba4:	000286a0 	cmpeqi	zero,zero,2586
   27ba8:	000286a0 	cmpeqi	zero,zero,2586
   27bac:	000286a0 	cmpeqi	zero,zero,2586
   27bb0:	000286a0 	cmpeqi	zero,zero,2586
   27bb4:	0002864c 	andi	zero,zero,2585
   27bb8:	000285ec 	andhi	zero,zero,2583
   27bbc:	00027eb8 	rdprs	zero,zero,2554
   27bc0:	00027eb8 	rdprs	zero,zero,2554
   27bc4:	00027eb8 	rdprs	zero,zero,2554
   27bc8:	000285fc 	xorhi	zero,zero,2583
   27bcc:	000285ec 	andhi	zero,zero,2583
   27bd0:	000286a0 	cmpeqi	zero,zero,2586
   27bd4:	000286a0 	cmpeqi	zero,zero,2586
   27bd8:	00028608 	cmpgei	zero,zero,2584
   27bdc:	000286a0 	cmpeqi	zero,zero,2586
   27be0:	00028618 	cmpnei	zero,zero,2584
   27be4:	000284ec 	andhi	zero,zero,2579
   27be8:	00027c28 	cmpgeui	zero,zero,2544
   27bec:	0002850c 	andi	zero,zero,2580
   27bf0:	000286a0 	cmpeqi	zero,zero,2586
   27bf4:	00028518 	cmpnei	zero,zero,2580
   27bf8:	000286a0 	cmpeqi	zero,zero,2586
   27bfc:	00028574 	movhi	zero,2581
   27c00:	000286a0 	cmpeqi	zero,zero,2586
   27c04:	000286a0 	cmpeqi	zero,zero,2586
   27c08:	00028584 	movi	zero,2582
   27c0c:	d9003117 	ldw	r4,196(sp)
   27c10:	d8802d15 	stw	r2,180(sp)
   27c14:	0109c83a 	sub	r4,zero,r4
   27c18:	d9003115 	stw	r4,196(sp)
   27c1c:	94800114 	ori	r18,r18,4
   27c20:	ac400007 	ldb	r17,0(r21)
   27c24:	003f9706 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   27c28:	00800c04 	movi	r2,48
   27c2c:	d9002d17 	ldw	r4,180(sp)
   27c30:	d9402917 	ldw	r5,164(sp)
   27c34:	d8802705 	stb	r2,156(sp)
   27c38:	00801e04 	movi	r2,120
   27c3c:	d8802745 	stb	r2,157(sp)
   27c40:	d8002785 	stb	zero,158(sp)
   27c44:	20c00104 	addi	r3,r4,4
   27c48:	24c00017 	ldw	r19,0(r4)
   27c4c:	002d883a 	mov	r22,zero
   27c50:	90800094 	ori	r2,r18,2
   27c54:	28029a16 	blt	r5,zero,286c0 <___vfprintf_internal_r+0xdc0>
   27c58:	00bfdfc4 	movi	r2,-129
   27c5c:	90a4703a 	and	r18,r18,r2
   27c60:	d8c02d15 	stw	r3,180(sp)
   27c64:	94800094 	ori	r18,r18,2
   27c68:	9802871e 	bne	r19,zero,28688 <___vfprintf_internal_r+0xd88>
   27c6c:	008000f4 	movhi	r2,3
   27c70:	1098cc04 	addi	r2,r2,25392
   27c74:	d8803915 	stw	r2,228(sp)
   27c78:	04401e04 	movi	r17,120
   27c7c:	d8802917 	ldw	r2,164(sp)
   27c80:	0039883a 	mov	fp,zero
   27c84:	1001e926 	beq	r2,zero,2842c <___vfprintf_internal_r+0xb2c>
   27c88:	0027883a 	mov	r19,zero
   27c8c:	002d883a 	mov	r22,zero
   27c90:	00020506 	br	284a8 <___vfprintf_internal_r+0xba8>
   27c94:	d9002c17 	ldw	r4,176(sp)
   27c98:	b80b883a 	mov	r5,r23
   27c9c:	0029bd00 	call	29bd0 <__swsetup_r>
   27ca0:	1005ac1e 	bne	r2,zero,29354 <___vfprintf_internal_r+0x1a54>
   27ca4:	b880030b 	ldhu	r2,12(r23)
   27ca8:	00c00284 	movi	r3,10
   27cac:	1080068c 	andi	r2,r2,26
   27cb0:	10ff3c1e 	bne	r2,r3,279a4 <__alt_mem_SDRAM_controller+0xfc0279a4>
   27cb4:	b880038f 	ldh	r2,14(r23)
   27cb8:	103f3a16 	blt	r2,zero,279a4 <__alt_mem_SDRAM_controller+0xfc0279a4>
   27cbc:	d9c02d17 	ldw	r7,180(sp)
   27cc0:	d9002c17 	ldw	r4,176(sp)
   27cc4:	a80d883a 	mov	r6,r21
   27cc8:	b80b883a 	mov	r5,r23
   27ccc:	0029b140 	call	29b14 <__sbprintf>
   27cd0:	00001106 	br	27d18 <___vfprintf_internal_r+0x418>
   27cd4:	d9002c17 	ldw	r4,176(sp)
   27cd8:	d9801e04 	addi	r6,sp,120
   27cdc:	b80b883a 	mov	r5,r23
   27ce0:	002ee880 	call	2ee88 <__sprint_r>
   27ce4:	1000081e 	bne	r2,zero,27d08 <___vfprintf_internal_r+0x408>
   27ce8:	da000404 	addi	r8,sp,16
   27cec:	003f5306 	br	27a3c <__alt_mem_SDRAM_controller+0xfc027a3c>
   27cf0:	d8802017 	ldw	r2,128(sp)
   27cf4:	10000426 	beq	r2,zero,27d08 <___vfprintf_internal_r+0x408>
   27cf8:	d9002c17 	ldw	r4,176(sp)
   27cfc:	d9801e04 	addi	r6,sp,120
   27d00:	b80b883a 	mov	r5,r23
   27d04:	002ee880 	call	2ee88 <__sprint_r>
   27d08:	b880030b 	ldhu	r2,12(r23)
   27d0c:	1080100c 	andi	r2,r2,64
   27d10:	1005901e 	bne	r2,zero,29354 <___vfprintf_internal_r+0x1a54>
   27d14:	d8802f17 	ldw	r2,188(sp)
   27d18:	dfc04717 	ldw	ra,284(sp)
   27d1c:	df004617 	ldw	fp,280(sp)
   27d20:	ddc04517 	ldw	r23,276(sp)
   27d24:	dd804417 	ldw	r22,272(sp)
   27d28:	dd404317 	ldw	r21,268(sp)
   27d2c:	dd004217 	ldw	r20,264(sp)
   27d30:	dcc04117 	ldw	r19,260(sp)
   27d34:	dc804017 	ldw	r18,256(sp)
   27d38:	dc403f17 	ldw	r17,252(sp)
   27d3c:	dc003e17 	ldw	r16,248(sp)
   27d40:	dec04804 	addi	sp,sp,288
   27d44:	f800283a 	ret
   27d48:	d9002c17 	ldw	r4,176(sp)
   27d4c:	002bba40 	call	2bba4 <__sinit>
   27d50:	003f0406 	br	27964 <__alt_mem_SDRAM_controller+0xfc027964>
   27d54:	d8802d17 	ldw	r2,180(sp)
   27d58:	d9002d17 	ldw	r4,180(sp)
   27d5c:	10800017 	ldw	r2,0(r2)
   27d60:	d8803115 	stw	r2,196(sp)
   27d64:	20800104 	addi	r2,r4,4
   27d68:	d9003117 	ldw	r4,196(sp)
   27d6c:	203fa716 	blt	r4,zero,27c0c <__alt_mem_SDRAM_controller+0xfc027c0c>
   27d70:	d8802d15 	stw	r2,180(sp)
   27d74:	ac400007 	ldb	r17,0(r21)
   27d78:	003f4206 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   27d7c:	ac400007 	ldb	r17,0(r21)
   27d80:	aac00044 	addi	r11,r21,1
   27d84:	8a872826 	beq	r17,r10,29a28 <___vfprintf_internal_r+0x2128>
   27d88:	88bff404 	addi	r2,r17,-48
   27d8c:	0009883a 	mov	r4,zero
   27d90:	30867d36 	bltu	r6,r2,29788 <___vfprintf_internal_r+0x1e88>
   27d94:	5c400007 	ldb	r17,0(r11)
   27d98:	210002a4 	muli	r4,r4,10
   27d9c:	5d400044 	addi	r21,r11,1
   27da0:	a817883a 	mov	r11,r21
   27da4:	2089883a 	add	r4,r4,r2
   27da8:	88bff404 	addi	r2,r17,-48
   27dac:	30bff92e 	bgeu	r6,r2,27d94 <__alt_mem_SDRAM_controller+0xfc027d94>
   27db0:	2005c916 	blt	r4,zero,294d8 <___vfprintf_internal_r+0x1bd8>
   27db4:	d9002915 	stw	r4,164(sp)
   27db8:	003f3306 	br	27a88 <__alt_mem_SDRAM_controller+0xfc027a88>
   27dbc:	94802014 	ori	r18,r18,128
   27dc0:	ac400007 	ldb	r17,0(r21)
   27dc4:	003f2f06 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   27dc8:	a809883a 	mov	r4,r21
   27dcc:	d8003115 	stw	zero,196(sp)
   27dd0:	88bff404 	addi	r2,r17,-48
   27dd4:	0017883a 	mov	r11,zero
   27dd8:	24400007 	ldb	r17,0(r4)
   27ddc:	5ac002a4 	muli	r11,r11,10
   27de0:	ad400044 	addi	r21,r21,1
   27de4:	a809883a 	mov	r4,r21
   27de8:	12d7883a 	add	r11,r2,r11
   27dec:	88bff404 	addi	r2,r17,-48
   27df0:	30bff92e 	bgeu	r6,r2,27dd8 <__alt_mem_SDRAM_controller+0xfc027dd8>
   27df4:	dac03115 	stw	r11,196(sp)
   27df8:	003f2306 	br	27a88 <__alt_mem_SDRAM_controller+0xfc027a88>
   27dfc:	18c03fcc 	andi	r3,r3,255
   27e00:	18072b1e 	bne	r3,zero,29ab0 <___vfprintf_internal_r+0x21b0>
   27e04:	94800414 	ori	r18,r18,16
   27e08:	9080080c 	andi	r2,r18,32
   27e0c:	10037b26 	beq	r2,zero,28bfc <___vfprintf_internal_r+0x12fc>
   27e10:	d9402d17 	ldw	r5,180(sp)
   27e14:	28800117 	ldw	r2,4(r5)
   27e18:	2cc00017 	ldw	r19,0(r5)
   27e1c:	29400204 	addi	r5,r5,8
   27e20:	d9402d15 	stw	r5,180(sp)
   27e24:	102d883a 	mov	r22,r2
   27e28:	10044b16 	blt	r2,zero,28f58 <___vfprintf_internal_r+0x1658>
   27e2c:	d9402917 	ldw	r5,164(sp)
   27e30:	df002783 	ldbu	fp,158(sp)
   27e34:	2803bc16 	blt	r5,zero,28d28 <___vfprintf_internal_r+0x1428>
   27e38:	00ffdfc4 	movi	r3,-129
   27e3c:	9d84b03a 	or	r2,r19,r22
   27e40:	90e4703a 	and	r18,r18,r3
   27e44:	10017726 	beq	r2,zero,28424 <___vfprintf_internal_r+0xb24>
   27e48:	b0038326 	beq	r22,zero,28c58 <___vfprintf_internal_r+0x1358>
   27e4c:	dc402a15 	stw	r17,168(sp)
   27e50:	dc001e04 	addi	r16,sp,120
   27e54:	b023883a 	mov	r17,r22
   27e58:	402d883a 	mov	r22,r8
   27e5c:	9809883a 	mov	r4,r19
   27e60:	880b883a 	mov	r5,r17
   27e64:	01800284 	movi	r6,10
   27e68:	000f883a 	mov	r7,zero
   27e6c:	00312800 	call	31280 <__umoddi3>
   27e70:	10800c04 	addi	r2,r2,48
   27e74:	843fffc4 	addi	r16,r16,-1
   27e78:	9809883a 	mov	r4,r19
   27e7c:	880b883a 	mov	r5,r17
   27e80:	80800005 	stb	r2,0(r16)
   27e84:	01800284 	movi	r6,10
   27e88:	000f883a 	mov	r7,zero
   27e8c:	0030d080 	call	30d08 <__udivdi3>
   27e90:	1027883a 	mov	r19,r2
   27e94:	10c4b03a 	or	r2,r2,r3
   27e98:	1823883a 	mov	r17,r3
   27e9c:	103fef1e 	bne	r2,zero,27e5c <__alt_mem_SDRAM_controller+0xfc027e5c>
   27ea0:	d8c02817 	ldw	r3,160(sp)
   27ea4:	dc402a17 	ldw	r17,168(sp)
   27ea8:	b011883a 	mov	r8,r22
   27eac:	1c07c83a 	sub	r3,r3,r16
   27eb0:	d8c02e15 	stw	r3,184(sp)
   27eb4:	00005906 	br	2801c <___vfprintf_internal_r+0x71c>
   27eb8:	18c03fcc 	andi	r3,r3,255
   27ebc:	1806fa1e 	bne	r3,zero,29aa8 <___vfprintf_internal_r+0x21a8>
   27ec0:	9080020c 	andi	r2,r18,8
   27ec4:	10048a26 	beq	r2,zero,290f0 <___vfprintf_internal_r+0x17f0>
   27ec8:	d8c02d17 	ldw	r3,180(sp)
   27ecc:	d9002d17 	ldw	r4,180(sp)
   27ed0:	d9402d17 	ldw	r5,180(sp)
   27ed4:	18c00017 	ldw	r3,0(r3)
   27ed8:	21000117 	ldw	r4,4(r4)
   27edc:	29400204 	addi	r5,r5,8
   27ee0:	d8c03615 	stw	r3,216(sp)
   27ee4:	d9003815 	stw	r4,224(sp)
   27ee8:	d9402d15 	stw	r5,180(sp)
   27eec:	d9003617 	ldw	r4,216(sp)
   27ef0:	d9403817 	ldw	r5,224(sp)
   27ef4:	da003d15 	stw	r8,244(sp)
   27ef8:	04000044 	movi	r16,1
   27efc:	00235440 	call	23544 <__fpclassifyd>
   27f00:	da003d17 	ldw	r8,244(sp)
   27f04:	14041f1e 	bne	r2,r16,28f84 <___vfprintf_internal_r+0x1684>
   27f08:	d9003617 	ldw	r4,216(sp)
   27f0c:	d9403817 	ldw	r5,224(sp)
   27f10:	000d883a 	mov	r6,zero
   27f14:	000f883a 	mov	r7,zero
   27f18:	00261980 	call	26198 <__ledf2>
   27f1c:	da003d17 	ldw	r8,244(sp)
   27f20:	1005be16 	blt	r2,zero,2961c <___vfprintf_internal_r+0x1d1c>
   27f24:	df002783 	ldbu	fp,158(sp)
   27f28:	008011c4 	movi	r2,71
   27f2c:	1445330e 	bge	r2,r17,293fc <___vfprintf_internal_r+0x1afc>
   27f30:	040000f4 	movhi	r16,3
   27f34:	8418c404 	addi	r16,r16,25360
   27f38:	00c000c4 	movi	r3,3
   27f3c:	00bfdfc4 	movi	r2,-129
   27f40:	d8c02a15 	stw	r3,168(sp)
   27f44:	90a4703a 	and	r18,r18,r2
   27f48:	d8c02e15 	stw	r3,184(sp)
   27f4c:	d8002915 	stw	zero,164(sp)
   27f50:	d8003215 	stw	zero,200(sp)
   27f54:	00003706 	br	28034 <___vfprintf_internal_r+0x734>
   27f58:	94800214 	ori	r18,r18,8
   27f5c:	ac400007 	ldb	r17,0(r21)
   27f60:	003ec806 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   27f64:	18c03fcc 	andi	r3,r3,255
   27f68:	1806db1e 	bne	r3,zero,29ad8 <___vfprintf_internal_r+0x21d8>
   27f6c:	94800414 	ori	r18,r18,16
   27f70:	9080080c 	andi	r2,r18,32
   27f74:	1002d826 	beq	r2,zero,28ad8 <___vfprintf_internal_r+0x11d8>
   27f78:	d9402d17 	ldw	r5,180(sp)
   27f7c:	d8c02917 	ldw	r3,164(sp)
   27f80:	d8002785 	stb	zero,158(sp)
   27f84:	28800204 	addi	r2,r5,8
   27f88:	2cc00017 	ldw	r19,0(r5)
   27f8c:	2d800117 	ldw	r22,4(r5)
   27f90:	18048f16 	blt	r3,zero,291d0 <___vfprintf_internal_r+0x18d0>
   27f94:	013fdfc4 	movi	r4,-129
   27f98:	9d86b03a 	or	r3,r19,r22
   27f9c:	d8802d15 	stw	r2,180(sp)
   27fa0:	9124703a 	and	r18,r18,r4
   27fa4:	1802d91e 	bne	r3,zero,28b0c <___vfprintf_internal_r+0x120c>
   27fa8:	d8c02917 	ldw	r3,164(sp)
   27fac:	0039883a 	mov	fp,zero
   27fb0:	1805c326 	beq	r3,zero,296c0 <___vfprintf_internal_r+0x1dc0>
   27fb4:	0027883a 	mov	r19,zero
   27fb8:	002d883a 	mov	r22,zero
   27fbc:	dc001e04 	addi	r16,sp,120
   27fc0:	9806d0fa 	srli	r3,r19,3
   27fc4:	b008977a 	slli	r4,r22,29
   27fc8:	b02cd0fa 	srli	r22,r22,3
   27fcc:	9cc001cc 	andi	r19,r19,7
   27fd0:	98800c04 	addi	r2,r19,48
   27fd4:	843fffc4 	addi	r16,r16,-1
   27fd8:	20e6b03a 	or	r19,r4,r3
   27fdc:	80800005 	stb	r2,0(r16)
   27fe0:	9d86b03a 	or	r3,r19,r22
   27fe4:	183ff61e 	bne	r3,zero,27fc0 <__alt_mem_SDRAM_controller+0xfc027fc0>
   27fe8:	90c0004c 	andi	r3,r18,1
   27fec:	18013b26 	beq	r3,zero,284dc <___vfprintf_internal_r+0xbdc>
   27ff0:	10803fcc 	andi	r2,r2,255
   27ff4:	1080201c 	xori	r2,r2,128
   27ff8:	10bfe004 	addi	r2,r2,-128
   27ffc:	00c00c04 	movi	r3,48
   28000:	10c13626 	beq	r2,r3,284dc <___vfprintf_internal_r+0xbdc>
   28004:	80ffffc5 	stb	r3,-1(r16)
   28008:	d8c02817 	ldw	r3,160(sp)
   2800c:	80bfffc4 	addi	r2,r16,-1
   28010:	1021883a 	mov	r16,r2
   28014:	1887c83a 	sub	r3,r3,r2
   28018:	d8c02e15 	stw	r3,184(sp)
   2801c:	d8802e17 	ldw	r2,184(sp)
   28020:	d9002917 	ldw	r4,164(sp)
   28024:	1100010e 	bge	r2,r4,2802c <___vfprintf_internal_r+0x72c>
   28028:	2005883a 	mov	r2,r4
   2802c:	d8802a15 	stw	r2,168(sp)
   28030:	d8003215 	stw	zero,200(sp)
   28034:	e7003fcc 	andi	fp,fp,255
   28038:	e700201c 	xori	fp,fp,128
   2803c:	e73fe004 	addi	fp,fp,-128
   28040:	e0000326 	beq	fp,zero,28050 <___vfprintf_internal_r+0x750>
   28044:	d8c02a17 	ldw	r3,168(sp)
   28048:	18c00044 	addi	r3,r3,1
   2804c:	d8c02a15 	stw	r3,168(sp)
   28050:	90c0008c 	andi	r3,r18,2
   28054:	d8c02b15 	stw	r3,172(sp)
   28058:	18000326 	beq	r3,zero,28068 <___vfprintf_internal_r+0x768>
   2805c:	d8c02a17 	ldw	r3,168(sp)
   28060:	18c00084 	addi	r3,r3,2
   28064:	d8c02a15 	stw	r3,168(sp)
   28068:	90c0210c 	andi	r3,r18,132
   2806c:	d8c03015 	stw	r3,192(sp)
   28070:	1801a31e 	bne	r3,zero,28700 <___vfprintf_internal_r+0xe00>
   28074:	d9003117 	ldw	r4,196(sp)
   28078:	d8c02a17 	ldw	r3,168(sp)
   2807c:	20e7c83a 	sub	r19,r4,r3
   28080:	04c19f0e 	bge	zero,r19,28700 <___vfprintf_internal_r+0xe00>
   28084:	02400404 	movi	r9,16
   28088:	d8c02017 	ldw	r3,128(sp)
   2808c:	d8801f17 	ldw	r2,124(sp)
   28090:	4cc50d0e 	bge	r9,r19,294c8 <___vfprintf_internal_r+0x1bc8>
   28094:	014000f4 	movhi	r5,3
   28098:	2958d784 	addi	r5,r5,25438
   2809c:	dc403b15 	stw	r17,236(sp)
   280a0:	d9403515 	stw	r5,212(sp)
   280a4:	9823883a 	mov	r17,r19
   280a8:	482d883a 	mov	r22,r9
   280ac:	9027883a 	mov	r19,r18
   280b0:	070001c4 	movi	fp,7
   280b4:	8025883a 	mov	r18,r16
   280b8:	dc002c17 	ldw	r16,176(sp)
   280bc:	00000306 	br	280cc <___vfprintf_internal_r+0x7cc>
   280c0:	8c7ffc04 	addi	r17,r17,-16
   280c4:	42000204 	addi	r8,r8,8
   280c8:	b440130e 	bge	r22,r17,28118 <___vfprintf_internal_r+0x818>
   280cc:	010000f4 	movhi	r4,3
   280d0:	18c00404 	addi	r3,r3,16
   280d4:	10800044 	addi	r2,r2,1
   280d8:	2118d784 	addi	r4,r4,25438
   280dc:	41000015 	stw	r4,0(r8)
   280e0:	45800115 	stw	r22,4(r8)
   280e4:	d8c02015 	stw	r3,128(sp)
   280e8:	d8801f15 	stw	r2,124(sp)
   280ec:	e0bff40e 	bge	fp,r2,280c0 <__alt_mem_SDRAM_controller+0xfc0280c0>
   280f0:	d9801e04 	addi	r6,sp,120
   280f4:	b80b883a 	mov	r5,r23
   280f8:	8009883a 	mov	r4,r16
   280fc:	002ee880 	call	2ee88 <__sprint_r>
   28100:	103f011e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28104:	8c7ffc04 	addi	r17,r17,-16
   28108:	d8c02017 	ldw	r3,128(sp)
   2810c:	d8801f17 	ldw	r2,124(sp)
   28110:	da000404 	addi	r8,sp,16
   28114:	b47fed16 	blt	r22,r17,280cc <__alt_mem_SDRAM_controller+0xfc0280cc>
   28118:	9021883a 	mov	r16,r18
   2811c:	9825883a 	mov	r18,r19
   28120:	8827883a 	mov	r19,r17
   28124:	dc403b17 	ldw	r17,236(sp)
   28128:	d9403517 	ldw	r5,212(sp)
   2812c:	98c7883a 	add	r3,r19,r3
   28130:	10800044 	addi	r2,r2,1
   28134:	41400015 	stw	r5,0(r8)
   28138:	44c00115 	stw	r19,4(r8)
   2813c:	d8c02015 	stw	r3,128(sp)
   28140:	d8801f15 	stw	r2,124(sp)
   28144:	010001c4 	movi	r4,7
   28148:	2082a316 	blt	r4,r2,28bd8 <___vfprintf_internal_r+0x12d8>
   2814c:	df002787 	ldb	fp,158(sp)
   28150:	42000204 	addi	r8,r8,8
   28154:	e0000c26 	beq	fp,zero,28188 <___vfprintf_internal_r+0x888>
   28158:	d8801f17 	ldw	r2,124(sp)
   2815c:	d9002784 	addi	r4,sp,158
   28160:	18c00044 	addi	r3,r3,1
   28164:	10800044 	addi	r2,r2,1
   28168:	41000015 	stw	r4,0(r8)
   2816c:	01000044 	movi	r4,1
   28170:	41000115 	stw	r4,4(r8)
   28174:	d8c02015 	stw	r3,128(sp)
   28178:	d8801f15 	stw	r2,124(sp)
   2817c:	010001c4 	movi	r4,7
   28180:	20823c16 	blt	r4,r2,28a74 <___vfprintf_internal_r+0x1174>
   28184:	42000204 	addi	r8,r8,8
   28188:	d8802b17 	ldw	r2,172(sp)
   2818c:	10000c26 	beq	r2,zero,281c0 <___vfprintf_internal_r+0x8c0>
   28190:	d8801f17 	ldw	r2,124(sp)
   28194:	d9002704 	addi	r4,sp,156
   28198:	18c00084 	addi	r3,r3,2
   2819c:	10800044 	addi	r2,r2,1
   281a0:	41000015 	stw	r4,0(r8)
   281a4:	01000084 	movi	r4,2
   281a8:	41000115 	stw	r4,4(r8)
   281ac:	d8c02015 	stw	r3,128(sp)
   281b0:	d8801f15 	stw	r2,124(sp)
   281b4:	010001c4 	movi	r4,7
   281b8:	20823616 	blt	r4,r2,28a94 <___vfprintf_internal_r+0x1194>
   281bc:	42000204 	addi	r8,r8,8
   281c0:	d9003017 	ldw	r4,192(sp)
   281c4:	00802004 	movi	r2,128
   281c8:	20819926 	beq	r4,r2,28830 <___vfprintf_internal_r+0xf30>
   281cc:	d9402917 	ldw	r5,164(sp)
   281d0:	d8802e17 	ldw	r2,184(sp)
   281d4:	28adc83a 	sub	r22,r5,r2
   281d8:	0580310e 	bge	zero,r22,282a0 <___vfprintf_internal_r+0x9a0>
   281dc:	07000404 	movi	fp,16
   281e0:	d8801f17 	ldw	r2,124(sp)
   281e4:	e584140e 	bge	fp,r22,29238 <___vfprintf_internal_r+0x1938>
   281e8:	014000f4 	movhi	r5,3
   281ec:	2958d384 	addi	r5,r5,25422
   281f0:	dc402915 	stw	r17,164(sp)
   281f4:	d9402b15 	stw	r5,172(sp)
   281f8:	b023883a 	mov	r17,r22
   281fc:	04c001c4 	movi	r19,7
   28200:	a82d883a 	mov	r22,r21
   28204:	902b883a 	mov	r21,r18
   28208:	8025883a 	mov	r18,r16
   2820c:	dc002c17 	ldw	r16,176(sp)
   28210:	00000306 	br	28220 <___vfprintf_internal_r+0x920>
   28214:	8c7ffc04 	addi	r17,r17,-16
   28218:	42000204 	addi	r8,r8,8
   2821c:	e440110e 	bge	fp,r17,28264 <___vfprintf_internal_r+0x964>
   28220:	18c00404 	addi	r3,r3,16
   28224:	10800044 	addi	r2,r2,1
   28228:	45000015 	stw	r20,0(r8)
   2822c:	47000115 	stw	fp,4(r8)
   28230:	d8c02015 	stw	r3,128(sp)
   28234:	d8801f15 	stw	r2,124(sp)
   28238:	98bff60e 	bge	r19,r2,28214 <__alt_mem_SDRAM_controller+0xfc028214>
   2823c:	d9801e04 	addi	r6,sp,120
   28240:	b80b883a 	mov	r5,r23
   28244:	8009883a 	mov	r4,r16
   28248:	002ee880 	call	2ee88 <__sprint_r>
   2824c:	103eae1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28250:	8c7ffc04 	addi	r17,r17,-16
   28254:	d8c02017 	ldw	r3,128(sp)
   28258:	d8801f17 	ldw	r2,124(sp)
   2825c:	da000404 	addi	r8,sp,16
   28260:	e47fef16 	blt	fp,r17,28220 <__alt_mem_SDRAM_controller+0xfc028220>
   28264:	9021883a 	mov	r16,r18
   28268:	a825883a 	mov	r18,r21
   2826c:	b02b883a 	mov	r21,r22
   28270:	882d883a 	mov	r22,r17
   28274:	dc402917 	ldw	r17,164(sp)
   28278:	d9002b17 	ldw	r4,172(sp)
   2827c:	1d87883a 	add	r3,r3,r22
   28280:	10800044 	addi	r2,r2,1
   28284:	41000015 	stw	r4,0(r8)
   28288:	45800115 	stw	r22,4(r8)
   2828c:	d8c02015 	stw	r3,128(sp)
   28290:	d8801f15 	stw	r2,124(sp)
   28294:	010001c4 	movi	r4,7
   28298:	2081ee16 	blt	r4,r2,28a54 <___vfprintf_internal_r+0x1154>
   2829c:	42000204 	addi	r8,r8,8
   282a0:	9080400c 	andi	r2,r18,256
   282a4:	1001181e 	bne	r2,zero,28708 <___vfprintf_internal_r+0xe08>
   282a8:	d9402e17 	ldw	r5,184(sp)
   282ac:	d8801f17 	ldw	r2,124(sp)
   282b0:	44000015 	stw	r16,0(r8)
   282b4:	1947883a 	add	r3,r3,r5
   282b8:	10800044 	addi	r2,r2,1
   282bc:	41400115 	stw	r5,4(r8)
   282c0:	d8c02015 	stw	r3,128(sp)
   282c4:	d8801f15 	stw	r2,124(sp)
   282c8:	010001c4 	movi	r4,7
   282cc:	2081d316 	blt	r4,r2,28a1c <___vfprintf_internal_r+0x111c>
   282d0:	42000204 	addi	r8,r8,8
   282d4:	9480010c 	andi	r18,r18,4
   282d8:	90003226 	beq	r18,zero,283a4 <___vfprintf_internal_r+0xaa4>
   282dc:	d9403117 	ldw	r5,196(sp)
   282e0:	d8802a17 	ldw	r2,168(sp)
   282e4:	28a1c83a 	sub	r16,r5,r2
   282e8:	04002e0e 	bge	zero,r16,283a4 <___vfprintf_internal_r+0xaa4>
   282ec:	04400404 	movi	r17,16
   282f0:	d8801f17 	ldw	r2,124(sp)
   282f4:	8c04a20e 	bge	r17,r16,29580 <___vfprintf_internal_r+0x1c80>
   282f8:	014000f4 	movhi	r5,3
   282fc:	2958d784 	addi	r5,r5,25438
   28300:	d9403515 	stw	r5,212(sp)
   28304:	048001c4 	movi	r18,7
   28308:	dcc02c17 	ldw	r19,176(sp)
   2830c:	00000306 	br	2831c <___vfprintf_internal_r+0xa1c>
   28310:	843ffc04 	addi	r16,r16,-16
   28314:	42000204 	addi	r8,r8,8
   28318:	8c00130e 	bge	r17,r16,28368 <___vfprintf_internal_r+0xa68>
   2831c:	010000f4 	movhi	r4,3
   28320:	18c00404 	addi	r3,r3,16
   28324:	10800044 	addi	r2,r2,1
   28328:	2118d784 	addi	r4,r4,25438
   2832c:	41000015 	stw	r4,0(r8)
   28330:	44400115 	stw	r17,4(r8)
   28334:	d8c02015 	stw	r3,128(sp)
   28338:	d8801f15 	stw	r2,124(sp)
   2833c:	90bff40e 	bge	r18,r2,28310 <__alt_mem_SDRAM_controller+0xfc028310>
   28340:	d9801e04 	addi	r6,sp,120
   28344:	b80b883a 	mov	r5,r23
   28348:	9809883a 	mov	r4,r19
   2834c:	002ee880 	call	2ee88 <__sprint_r>
   28350:	103e6d1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28354:	843ffc04 	addi	r16,r16,-16
   28358:	d8c02017 	ldw	r3,128(sp)
   2835c:	d8801f17 	ldw	r2,124(sp)
   28360:	da000404 	addi	r8,sp,16
   28364:	8c3fed16 	blt	r17,r16,2831c <__alt_mem_SDRAM_controller+0xfc02831c>
   28368:	d9403517 	ldw	r5,212(sp)
   2836c:	1c07883a 	add	r3,r3,r16
   28370:	10800044 	addi	r2,r2,1
   28374:	41400015 	stw	r5,0(r8)
   28378:	44000115 	stw	r16,4(r8)
   2837c:	d8c02015 	stw	r3,128(sp)
   28380:	d8801f15 	stw	r2,124(sp)
   28384:	010001c4 	movi	r4,7
   28388:	2080060e 	bge	r4,r2,283a4 <___vfprintf_internal_r+0xaa4>
   2838c:	d9002c17 	ldw	r4,176(sp)
   28390:	d9801e04 	addi	r6,sp,120
   28394:	b80b883a 	mov	r5,r23
   28398:	002ee880 	call	2ee88 <__sprint_r>
   2839c:	103e5a1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   283a0:	d8c02017 	ldw	r3,128(sp)
   283a4:	d8803117 	ldw	r2,196(sp)
   283a8:	d9002a17 	ldw	r4,168(sp)
   283ac:	1100010e 	bge	r2,r4,283b4 <___vfprintf_internal_r+0xab4>
   283b0:	2005883a 	mov	r2,r4
   283b4:	d9402f17 	ldw	r5,188(sp)
   283b8:	288b883a 	add	r5,r5,r2
   283bc:	d9402f15 	stw	r5,188(sp)
   283c0:	18019e1e 	bne	r3,zero,28a3c <___vfprintf_internal_r+0x113c>
   283c4:	a8800007 	ldb	r2,0(r21)
   283c8:	d8001f15 	stw	zero,124(sp)
   283cc:	da000404 	addi	r8,sp,16
   283d0:	103d851e 	bne	r2,zero,279e8 <__alt_mem_SDRAM_controller+0xfc0279e8>
   283d4:	a821883a 	mov	r16,r21
   283d8:	003d9b06 	br	27a48 <__alt_mem_SDRAM_controller+0xfc027a48>
   283dc:	18c03fcc 	andi	r3,r3,255
   283e0:	1805c11e 	bne	r3,zero,29ae8 <___vfprintf_internal_r+0x21e8>
   283e4:	94800414 	ori	r18,r18,16
   283e8:	9080080c 	andi	r2,r18,32
   283ec:	10020c26 	beq	r2,zero,28c20 <___vfprintf_internal_r+0x1320>
   283f0:	d8802d17 	ldw	r2,180(sp)
   283f4:	d9002917 	ldw	r4,164(sp)
   283f8:	d8002785 	stb	zero,158(sp)
   283fc:	10c00204 	addi	r3,r2,8
   28400:	14c00017 	ldw	r19,0(r2)
   28404:	15800117 	ldw	r22,4(r2)
   28408:	20040f16 	blt	r4,zero,29448 <___vfprintf_internal_r+0x1b48>
   2840c:	013fdfc4 	movi	r4,-129
   28410:	9d84b03a 	or	r2,r19,r22
   28414:	d8c02d15 	stw	r3,180(sp)
   28418:	9124703a 	and	r18,r18,r4
   2841c:	0039883a 	mov	fp,zero
   28420:	103e891e 	bne	r2,zero,27e48 <__alt_mem_SDRAM_controller+0xfc027e48>
   28424:	d9002917 	ldw	r4,164(sp)
   28428:	2002c11e 	bne	r4,zero,28f30 <___vfprintf_internal_r+0x1630>
   2842c:	d8002915 	stw	zero,164(sp)
   28430:	d8002e15 	stw	zero,184(sp)
   28434:	dc001e04 	addi	r16,sp,120
   28438:	003ef806 	br	2801c <__alt_mem_SDRAM_controller+0xfc02801c>
   2843c:	18c03fcc 	andi	r3,r3,255
   28440:	18059d1e 	bne	r3,zero,29ab8 <___vfprintf_internal_r+0x21b8>
   28444:	014000f4 	movhi	r5,3
   28448:	2958c704 	addi	r5,r5,25372
   2844c:	d9403915 	stw	r5,228(sp)
   28450:	9080080c 	andi	r2,r18,32
   28454:	10005226 	beq	r2,zero,285a0 <___vfprintf_internal_r+0xca0>
   28458:	d8802d17 	ldw	r2,180(sp)
   2845c:	14c00017 	ldw	r19,0(r2)
   28460:	15800117 	ldw	r22,4(r2)
   28464:	10800204 	addi	r2,r2,8
   28468:	d8802d15 	stw	r2,180(sp)
   2846c:	9080004c 	andi	r2,r18,1
   28470:	10019026 	beq	r2,zero,28ab4 <___vfprintf_internal_r+0x11b4>
   28474:	9d84b03a 	or	r2,r19,r22
   28478:	10036926 	beq	r2,zero,29220 <___vfprintf_internal_r+0x1920>
   2847c:	d8c02917 	ldw	r3,164(sp)
   28480:	00800c04 	movi	r2,48
   28484:	d8802705 	stb	r2,156(sp)
   28488:	dc402745 	stb	r17,157(sp)
   2848c:	d8002785 	stb	zero,158(sp)
   28490:	90800094 	ori	r2,r18,2
   28494:	18045d16 	blt	r3,zero,2960c <___vfprintf_internal_r+0x1d0c>
   28498:	00bfdfc4 	movi	r2,-129
   2849c:	90a4703a 	and	r18,r18,r2
   284a0:	94800094 	ori	r18,r18,2
   284a4:	0039883a 	mov	fp,zero
   284a8:	d9003917 	ldw	r4,228(sp)
   284ac:	dc001e04 	addi	r16,sp,120
   284b0:	988003cc 	andi	r2,r19,15
   284b4:	b006973a 	slli	r3,r22,28
   284b8:	2085883a 	add	r2,r4,r2
   284bc:	9826d13a 	srli	r19,r19,4
   284c0:	10800003 	ldbu	r2,0(r2)
   284c4:	b02cd13a 	srli	r22,r22,4
   284c8:	843fffc4 	addi	r16,r16,-1
   284cc:	1ce6b03a 	or	r19,r3,r19
   284d0:	80800005 	stb	r2,0(r16)
   284d4:	9d84b03a 	or	r2,r19,r22
   284d8:	103ff51e 	bne	r2,zero,284b0 <__alt_mem_SDRAM_controller+0xfc0284b0>
   284dc:	d8c02817 	ldw	r3,160(sp)
   284e0:	1c07c83a 	sub	r3,r3,r16
   284e4:	d8c02e15 	stw	r3,184(sp)
   284e8:	003ecc06 	br	2801c <__alt_mem_SDRAM_controller+0xfc02801c>
   284ec:	18c03fcc 	andi	r3,r3,255
   284f0:	183e9f26 	beq	r3,zero,27f70 <__alt_mem_SDRAM_controller+0xfc027f70>
   284f4:	d9c02785 	stb	r7,158(sp)
   284f8:	003e9d06 	br	27f70 <__alt_mem_SDRAM_controller+0xfc027f70>
   284fc:	00c00044 	movi	r3,1
   28500:	01c00ac4 	movi	r7,43
   28504:	ac400007 	ldb	r17,0(r21)
   28508:	003d5e06 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   2850c:	94800814 	ori	r18,r18,32
   28510:	ac400007 	ldb	r17,0(r21)
   28514:	003d5b06 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   28518:	d8c02d17 	ldw	r3,180(sp)
   2851c:	d8002785 	stb	zero,158(sp)
   28520:	1c000017 	ldw	r16,0(r3)
   28524:	1cc00104 	addi	r19,r3,4
   28528:	80041926 	beq	r16,zero,29590 <___vfprintf_internal_r+0x1c90>
   2852c:	d9002917 	ldw	r4,164(sp)
   28530:	2003d016 	blt	r4,zero,29474 <___vfprintf_internal_r+0x1b74>
   28534:	200d883a 	mov	r6,r4
   28538:	000b883a 	mov	r5,zero
   2853c:	8009883a 	mov	r4,r16
   28540:	da003d15 	stw	r8,244(sp)
   28544:	002d1100 	call	2d110 <memchr>
   28548:	da003d17 	ldw	r8,244(sp)
   2854c:	10045426 	beq	r2,zero,296a0 <___vfprintf_internal_r+0x1da0>
   28550:	1405c83a 	sub	r2,r2,r16
   28554:	d8802e15 	stw	r2,184(sp)
   28558:	1003cc16 	blt	r2,zero,2948c <___vfprintf_internal_r+0x1b8c>
   2855c:	df002783 	ldbu	fp,158(sp)
   28560:	d8802a15 	stw	r2,168(sp)
   28564:	dcc02d15 	stw	r19,180(sp)
   28568:	d8002915 	stw	zero,164(sp)
   2856c:	d8003215 	stw	zero,200(sp)
   28570:	003eb006 	br	28034 <__alt_mem_SDRAM_controller+0xfc028034>
   28574:	18c03fcc 	andi	r3,r3,255
   28578:	183f9b26 	beq	r3,zero,283e8 <__alt_mem_SDRAM_controller+0xfc0283e8>
   2857c:	d9c02785 	stb	r7,158(sp)
   28580:	003f9906 	br	283e8 <__alt_mem_SDRAM_controller+0xfc0283e8>
   28584:	18c03fcc 	andi	r3,r3,255
   28588:	1805551e 	bne	r3,zero,29ae0 <___vfprintf_internal_r+0x21e0>
   2858c:	014000f4 	movhi	r5,3
   28590:	2958cc04 	addi	r5,r5,25392
   28594:	d9403915 	stw	r5,228(sp)
   28598:	9080080c 	andi	r2,r18,32
   2859c:	103fae1e 	bne	r2,zero,28458 <__alt_mem_SDRAM_controller+0xfc028458>
   285a0:	9080040c 	andi	r2,r18,16
   285a4:	1002de26 	beq	r2,zero,29120 <___vfprintf_internal_r+0x1820>
   285a8:	d8c02d17 	ldw	r3,180(sp)
   285ac:	002d883a 	mov	r22,zero
   285b0:	1cc00017 	ldw	r19,0(r3)
   285b4:	18c00104 	addi	r3,r3,4
   285b8:	d8c02d15 	stw	r3,180(sp)
   285bc:	003fab06 	br	2846c <__alt_mem_SDRAM_controller+0xfc02846c>
   285c0:	38803fcc 	andi	r2,r7,255
   285c4:	1080201c 	xori	r2,r2,128
   285c8:	10bfe004 	addi	r2,r2,-128
   285cc:	1002d21e 	bne	r2,zero,29118 <___vfprintf_internal_r+0x1818>
   285d0:	00c00044 	movi	r3,1
   285d4:	01c00804 	movi	r7,32
   285d8:	ac400007 	ldb	r17,0(r21)
   285dc:	003d2906 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   285e0:	94800054 	ori	r18,r18,1
   285e4:	ac400007 	ldb	r17,0(r21)
   285e8:	003d2606 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   285ec:	18c03fcc 	andi	r3,r3,255
   285f0:	183e0526 	beq	r3,zero,27e08 <__alt_mem_SDRAM_controller+0xfc027e08>
   285f4:	d9c02785 	stb	r7,158(sp)
   285f8:	003e0306 	br	27e08 <__alt_mem_SDRAM_controller+0xfc027e08>
   285fc:	94801014 	ori	r18,r18,64
   28600:	ac400007 	ldb	r17,0(r21)
   28604:	003d1f06 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   28608:	ac400007 	ldb	r17,0(r21)
   2860c:	8a438726 	beq	r17,r9,2942c <___vfprintf_internal_r+0x1b2c>
   28610:	94800414 	ori	r18,r18,16
   28614:	003d1b06 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   28618:	18c03fcc 	andi	r3,r3,255
   2861c:	1805341e 	bne	r3,zero,29af0 <___vfprintf_internal_r+0x21f0>
   28620:	9080080c 	andi	r2,r18,32
   28624:	1002cd26 	beq	r2,zero,2915c <___vfprintf_internal_r+0x185c>
   28628:	d9402d17 	ldw	r5,180(sp)
   2862c:	d9002f17 	ldw	r4,188(sp)
   28630:	28800017 	ldw	r2,0(r5)
   28634:	2007d7fa 	srai	r3,r4,31
   28638:	29400104 	addi	r5,r5,4
   2863c:	d9402d15 	stw	r5,180(sp)
   28640:	11000015 	stw	r4,0(r2)
   28644:	10c00115 	stw	r3,4(r2)
   28648:	003ce506 	br	279e0 <__alt_mem_SDRAM_controller+0xfc0279e0>
   2864c:	d8c02d17 	ldw	r3,180(sp)
   28650:	d9002d17 	ldw	r4,180(sp)
   28654:	d8002785 	stb	zero,158(sp)
   28658:	18800017 	ldw	r2,0(r3)
   2865c:	21000104 	addi	r4,r4,4
   28660:	00c00044 	movi	r3,1
   28664:	d8c02a15 	stw	r3,168(sp)
   28668:	d8801405 	stb	r2,80(sp)
   2866c:	d9002d15 	stw	r4,180(sp)
   28670:	d8c02e15 	stw	r3,184(sp)
   28674:	d8002915 	stw	zero,164(sp)
   28678:	d8003215 	stw	zero,200(sp)
   2867c:	dc001404 	addi	r16,sp,80
   28680:	0039883a 	mov	fp,zero
   28684:	003e7206 	br	28050 <__alt_mem_SDRAM_controller+0xfc028050>
   28688:	010000f4 	movhi	r4,3
   2868c:	2118cc04 	addi	r4,r4,25392
   28690:	0039883a 	mov	fp,zero
   28694:	d9003915 	stw	r4,228(sp)
   28698:	04401e04 	movi	r17,120
   2869c:	003f8206 	br	284a8 <__alt_mem_SDRAM_controller+0xfc0284a8>
   286a0:	18c03fcc 	andi	r3,r3,255
   286a4:	1805061e 	bne	r3,zero,29ac0 <___vfprintf_internal_r+0x21c0>
   286a8:	883d9126 	beq	r17,zero,27cf0 <__alt_mem_SDRAM_controller+0xfc027cf0>
   286ac:	00c00044 	movi	r3,1
   286b0:	d8c02a15 	stw	r3,168(sp)
   286b4:	dc401405 	stb	r17,80(sp)
   286b8:	d8002785 	stb	zero,158(sp)
   286bc:	003fec06 	br	28670 <__alt_mem_SDRAM_controller+0xfc028670>
   286c0:	014000f4 	movhi	r5,3
   286c4:	2958cc04 	addi	r5,r5,25392
   286c8:	d9403915 	stw	r5,228(sp)
   286cc:	d8c02d15 	stw	r3,180(sp)
   286d0:	1025883a 	mov	r18,r2
   286d4:	04401e04 	movi	r17,120
   286d8:	9d84b03a 	or	r2,r19,r22
   286dc:	1000fc1e 	bne	r2,zero,28ad0 <___vfprintf_internal_r+0x11d0>
   286e0:	0039883a 	mov	fp,zero
   286e4:	00800084 	movi	r2,2
   286e8:	10803fcc 	andi	r2,r2,255
   286ec:	00c00044 	movi	r3,1
   286f0:	10c20f26 	beq	r2,r3,28f30 <___vfprintf_internal_r+0x1630>
   286f4:	00c00084 	movi	r3,2
   286f8:	10fd6326 	beq	r2,r3,27c88 <__alt_mem_SDRAM_controller+0xfc027c88>
   286fc:	003e2d06 	br	27fb4 <__alt_mem_SDRAM_controller+0xfc027fb4>
   28700:	d8c02017 	ldw	r3,128(sp)
   28704:	003e9306 	br	28154 <__alt_mem_SDRAM_controller+0xfc028154>
   28708:	00801944 	movi	r2,101
   2870c:	14407e0e 	bge	r2,r17,28908 <___vfprintf_internal_r+0x1008>
   28710:	d9003617 	ldw	r4,216(sp)
   28714:	d9403817 	ldw	r5,224(sp)
   28718:	000d883a 	mov	r6,zero
   2871c:	000f883a 	mov	r7,zero
   28720:	d8c03c15 	stw	r3,240(sp)
   28724:	da003d15 	stw	r8,244(sp)
   28728:	00260340 	call	26034 <__eqdf2>
   2872c:	d8c03c17 	ldw	r3,240(sp)
   28730:	da003d17 	ldw	r8,244(sp)
   28734:	1000f71e 	bne	r2,zero,28b14 <___vfprintf_internal_r+0x1214>
   28738:	d8801f17 	ldw	r2,124(sp)
   2873c:	010000f4 	movhi	r4,3
   28740:	2118d304 	addi	r4,r4,25420
   28744:	18c00044 	addi	r3,r3,1
   28748:	10800044 	addi	r2,r2,1
   2874c:	41000015 	stw	r4,0(r8)
   28750:	01000044 	movi	r4,1
   28754:	41000115 	stw	r4,4(r8)
   28758:	d8c02015 	stw	r3,128(sp)
   2875c:	d8801f15 	stw	r2,124(sp)
   28760:	010001c4 	movi	r4,7
   28764:	2082b816 	blt	r4,r2,29248 <___vfprintf_internal_r+0x1948>
   28768:	42000204 	addi	r8,r8,8
   2876c:	d8802617 	ldw	r2,152(sp)
   28770:	d9403317 	ldw	r5,204(sp)
   28774:	11400216 	blt	r2,r5,28780 <___vfprintf_internal_r+0xe80>
   28778:	9080004c 	andi	r2,r18,1
   2877c:	103ed526 	beq	r2,zero,282d4 <__alt_mem_SDRAM_controller+0xfc0282d4>
   28780:	d8803717 	ldw	r2,220(sp)
   28784:	d9003417 	ldw	r4,208(sp)
   28788:	d9403717 	ldw	r5,220(sp)
   2878c:	1887883a 	add	r3,r3,r2
   28790:	d8801f17 	ldw	r2,124(sp)
   28794:	41000015 	stw	r4,0(r8)
   28798:	41400115 	stw	r5,4(r8)
   2879c:	10800044 	addi	r2,r2,1
   287a0:	d8c02015 	stw	r3,128(sp)
   287a4:	d8801f15 	stw	r2,124(sp)
   287a8:	010001c4 	movi	r4,7
   287ac:	20832916 	blt	r4,r2,29454 <___vfprintf_internal_r+0x1b54>
   287b0:	42000204 	addi	r8,r8,8
   287b4:	d8803317 	ldw	r2,204(sp)
   287b8:	143fffc4 	addi	r16,r2,-1
   287bc:	043ec50e 	bge	zero,r16,282d4 <__alt_mem_SDRAM_controller+0xfc0282d4>
   287c0:	04400404 	movi	r17,16
   287c4:	d8801f17 	ldw	r2,124(sp)
   287c8:	8c00880e 	bge	r17,r16,289ec <___vfprintf_internal_r+0x10ec>
   287cc:	014000f4 	movhi	r5,3
   287d0:	2958d384 	addi	r5,r5,25422
   287d4:	d9402b15 	stw	r5,172(sp)
   287d8:	058001c4 	movi	r22,7
   287dc:	dcc02c17 	ldw	r19,176(sp)
   287e0:	00000306 	br	287f0 <___vfprintf_internal_r+0xef0>
   287e4:	42000204 	addi	r8,r8,8
   287e8:	843ffc04 	addi	r16,r16,-16
   287ec:	8c00820e 	bge	r17,r16,289f8 <___vfprintf_internal_r+0x10f8>
   287f0:	18c00404 	addi	r3,r3,16
   287f4:	10800044 	addi	r2,r2,1
   287f8:	45000015 	stw	r20,0(r8)
   287fc:	44400115 	stw	r17,4(r8)
   28800:	d8c02015 	stw	r3,128(sp)
   28804:	d8801f15 	stw	r2,124(sp)
   28808:	b0bff60e 	bge	r22,r2,287e4 <__alt_mem_SDRAM_controller+0xfc0287e4>
   2880c:	d9801e04 	addi	r6,sp,120
   28810:	b80b883a 	mov	r5,r23
   28814:	9809883a 	mov	r4,r19
   28818:	002ee880 	call	2ee88 <__sprint_r>
   2881c:	103d3a1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28820:	d8c02017 	ldw	r3,128(sp)
   28824:	d8801f17 	ldw	r2,124(sp)
   28828:	da000404 	addi	r8,sp,16
   2882c:	003fee06 	br	287e8 <__alt_mem_SDRAM_controller+0xfc0287e8>
   28830:	d9403117 	ldw	r5,196(sp)
   28834:	d8802a17 	ldw	r2,168(sp)
   28838:	28adc83a 	sub	r22,r5,r2
   2883c:	05be630e 	bge	zero,r22,281cc <__alt_mem_SDRAM_controller+0xfc0281cc>
   28840:	07000404 	movi	fp,16
   28844:	d8801f17 	ldw	r2,124(sp)
   28848:	e5838f0e 	bge	fp,r22,29688 <___vfprintf_internal_r+0x1d88>
   2884c:	014000f4 	movhi	r5,3
   28850:	2958d384 	addi	r5,r5,25422
   28854:	dc403015 	stw	r17,192(sp)
   28858:	d9402b15 	stw	r5,172(sp)
   2885c:	b023883a 	mov	r17,r22
   28860:	04c001c4 	movi	r19,7
   28864:	a82d883a 	mov	r22,r21
   28868:	902b883a 	mov	r21,r18
   2886c:	8025883a 	mov	r18,r16
   28870:	dc002c17 	ldw	r16,176(sp)
   28874:	00000306 	br	28884 <___vfprintf_internal_r+0xf84>
   28878:	8c7ffc04 	addi	r17,r17,-16
   2887c:	42000204 	addi	r8,r8,8
   28880:	e440110e 	bge	fp,r17,288c8 <___vfprintf_internal_r+0xfc8>
   28884:	18c00404 	addi	r3,r3,16
   28888:	10800044 	addi	r2,r2,1
   2888c:	45000015 	stw	r20,0(r8)
   28890:	47000115 	stw	fp,4(r8)
   28894:	d8c02015 	stw	r3,128(sp)
   28898:	d8801f15 	stw	r2,124(sp)
   2889c:	98bff60e 	bge	r19,r2,28878 <__alt_mem_SDRAM_controller+0xfc028878>
   288a0:	d9801e04 	addi	r6,sp,120
   288a4:	b80b883a 	mov	r5,r23
   288a8:	8009883a 	mov	r4,r16
   288ac:	002ee880 	call	2ee88 <__sprint_r>
   288b0:	103d151e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   288b4:	8c7ffc04 	addi	r17,r17,-16
   288b8:	d8c02017 	ldw	r3,128(sp)
   288bc:	d8801f17 	ldw	r2,124(sp)
   288c0:	da000404 	addi	r8,sp,16
   288c4:	e47fef16 	blt	fp,r17,28884 <__alt_mem_SDRAM_controller+0xfc028884>
   288c8:	9021883a 	mov	r16,r18
   288cc:	a825883a 	mov	r18,r21
   288d0:	b02b883a 	mov	r21,r22
   288d4:	882d883a 	mov	r22,r17
   288d8:	dc403017 	ldw	r17,192(sp)
   288dc:	d9002b17 	ldw	r4,172(sp)
   288e0:	1d87883a 	add	r3,r3,r22
   288e4:	10800044 	addi	r2,r2,1
   288e8:	41000015 	stw	r4,0(r8)
   288ec:	45800115 	stw	r22,4(r8)
   288f0:	d8c02015 	stw	r3,128(sp)
   288f4:	d8801f15 	stw	r2,124(sp)
   288f8:	010001c4 	movi	r4,7
   288fc:	20818e16 	blt	r4,r2,28f38 <___vfprintf_internal_r+0x1638>
   28900:	42000204 	addi	r8,r8,8
   28904:	003e3106 	br	281cc <__alt_mem_SDRAM_controller+0xfc0281cc>
   28908:	d9403317 	ldw	r5,204(sp)
   2890c:	00800044 	movi	r2,1
   28910:	18c00044 	addi	r3,r3,1
   28914:	1141530e 	bge	r2,r5,28e64 <___vfprintf_internal_r+0x1564>
   28918:	dc401f17 	ldw	r17,124(sp)
   2891c:	00800044 	movi	r2,1
   28920:	40800115 	stw	r2,4(r8)
   28924:	8c400044 	addi	r17,r17,1
   28928:	44000015 	stw	r16,0(r8)
   2892c:	d8c02015 	stw	r3,128(sp)
   28930:	dc401f15 	stw	r17,124(sp)
   28934:	008001c4 	movi	r2,7
   28938:	14416b16 	blt	r2,r17,28ee8 <___vfprintf_internal_r+0x15e8>
   2893c:	42000204 	addi	r8,r8,8
   28940:	d8803717 	ldw	r2,220(sp)
   28944:	d9003417 	ldw	r4,208(sp)
   28948:	8c400044 	addi	r17,r17,1
   2894c:	10c7883a 	add	r3,r2,r3
   28950:	40800115 	stw	r2,4(r8)
   28954:	41000015 	stw	r4,0(r8)
   28958:	d8c02015 	stw	r3,128(sp)
   2895c:	dc401f15 	stw	r17,124(sp)
   28960:	008001c4 	movi	r2,7
   28964:	14416916 	blt	r2,r17,28f0c <___vfprintf_internal_r+0x160c>
   28968:	45800204 	addi	r22,r8,8
   2896c:	d9003617 	ldw	r4,216(sp)
   28970:	d9403817 	ldw	r5,224(sp)
   28974:	000d883a 	mov	r6,zero
   28978:	000f883a 	mov	r7,zero
   2897c:	d8c03c15 	stw	r3,240(sp)
   28980:	00260340 	call	26034 <__eqdf2>
   28984:	d8c03c17 	ldw	r3,240(sp)
   28988:	1000bc26 	beq	r2,zero,28c7c <___vfprintf_internal_r+0x137c>
   2898c:	d9403317 	ldw	r5,204(sp)
   28990:	84000044 	addi	r16,r16,1
   28994:	8c400044 	addi	r17,r17,1
   28998:	28bfffc4 	addi	r2,r5,-1
   2899c:	1887883a 	add	r3,r3,r2
   289a0:	b0800115 	stw	r2,4(r22)
   289a4:	b4000015 	stw	r16,0(r22)
   289a8:	d8c02015 	stw	r3,128(sp)
   289ac:	dc401f15 	stw	r17,124(sp)
   289b0:	008001c4 	movi	r2,7
   289b4:	14414316 	blt	r2,r17,28ec4 <___vfprintf_internal_r+0x15c4>
   289b8:	b5800204 	addi	r22,r22,8
   289bc:	d9003a17 	ldw	r4,232(sp)
   289c0:	df0022c4 	addi	fp,sp,139
   289c4:	8c400044 	addi	r17,r17,1
   289c8:	20c7883a 	add	r3,r4,r3
   289cc:	b7000015 	stw	fp,0(r22)
   289d0:	b1000115 	stw	r4,4(r22)
   289d4:	d8c02015 	stw	r3,128(sp)
   289d8:	dc401f15 	stw	r17,124(sp)
   289dc:	008001c4 	movi	r2,7
   289e0:	14400e16 	blt	r2,r17,28a1c <___vfprintf_internal_r+0x111c>
   289e4:	b2000204 	addi	r8,r22,8
   289e8:	003e3a06 	br	282d4 <__alt_mem_SDRAM_controller+0xfc0282d4>
   289ec:	010000f4 	movhi	r4,3
   289f0:	2118d384 	addi	r4,r4,25422
   289f4:	d9002b15 	stw	r4,172(sp)
   289f8:	d9002b17 	ldw	r4,172(sp)
   289fc:	1c07883a 	add	r3,r3,r16
   28a00:	44000115 	stw	r16,4(r8)
   28a04:	41000015 	stw	r4,0(r8)
   28a08:	10800044 	addi	r2,r2,1
   28a0c:	d8c02015 	stw	r3,128(sp)
   28a10:	d8801f15 	stw	r2,124(sp)
   28a14:	010001c4 	movi	r4,7
   28a18:	20be2d0e 	bge	r4,r2,282d0 <__alt_mem_SDRAM_controller+0xfc0282d0>
   28a1c:	d9002c17 	ldw	r4,176(sp)
   28a20:	d9801e04 	addi	r6,sp,120
   28a24:	b80b883a 	mov	r5,r23
   28a28:	002ee880 	call	2ee88 <__sprint_r>
   28a2c:	103cb61e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28a30:	d8c02017 	ldw	r3,128(sp)
   28a34:	da000404 	addi	r8,sp,16
   28a38:	003e2606 	br	282d4 <__alt_mem_SDRAM_controller+0xfc0282d4>
   28a3c:	d9002c17 	ldw	r4,176(sp)
   28a40:	d9801e04 	addi	r6,sp,120
   28a44:	b80b883a 	mov	r5,r23
   28a48:	002ee880 	call	2ee88 <__sprint_r>
   28a4c:	103e5d26 	beq	r2,zero,283c4 <__alt_mem_SDRAM_controller+0xfc0283c4>
   28a50:	003cad06 	br	27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28a54:	d9002c17 	ldw	r4,176(sp)
   28a58:	d9801e04 	addi	r6,sp,120
   28a5c:	b80b883a 	mov	r5,r23
   28a60:	002ee880 	call	2ee88 <__sprint_r>
   28a64:	103ca81e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28a68:	d8c02017 	ldw	r3,128(sp)
   28a6c:	da000404 	addi	r8,sp,16
   28a70:	003e0b06 	br	282a0 <__alt_mem_SDRAM_controller+0xfc0282a0>
   28a74:	d9002c17 	ldw	r4,176(sp)
   28a78:	d9801e04 	addi	r6,sp,120
   28a7c:	b80b883a 	mov	r5,r23
   28a80:	002ee880 	call	2ee88 <__sprint_r>
   28a84:	103ca01e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28a88:	d8c02017 	ldw	r3,128(sp)
   28a8c:	da000404 	addi	r8,sp,16
   28a90:	003dbd06 	br	28188 <__alt_mem_SDRAM_controller+0xfc028188>
   28a94:	d9002c17 	ldw	r4,176(sp)
   28a98:	d9801e04 	addi	r6,sp,120
   28a9c:	b80b883a 	mov	r5,r23
   28aa0:	002ee880 	call	2ee88 <__sprint_r>
   28aa4:	103c981e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28aa8:	d8c02017 	ldw	r3,128(sp)
   28aac:	da000404 	addi	r8,sp,16
   28ab0:	003dc306 	br	281c0 <__alt_mem_SDRAM_controller+0xfc0281c0>
   28ab4:	d8802917 	ldw	r2,164(sp)
   28ab8:	d8002785 	stb	zero,158(sp)
   28abc:	103f0616 	blt	r2,zero,286d8 <__alt_mem_SDRAM_controller+0xfc0286d8>
   28ac0:	00ffdfc4 	movi	r3,-129
   28ac4:	9d84b03a 	or	r2,r19,r22
   28ac8:	90e4703a 	and	r18,r18,r3
   28acc:	103c6b26 	beq	r2,zero,27c7c <__alt_mem_SDRAM_controller+0xfc027c7c>
   28ad0:	0039883a 	mov	fp,zero
   28ad4:	003e7406 	br	284a8 <__alt_mem_SDRAM_controller+0xfc0284a8>
   28ad8:	9080040c 	andi	r2,r18,16
   28adc:	1001b326 	beq	r2,zero,291ac <___vfprintf_internal_r+0x18ac>
   28ae0:	d9002d17 	ldw	r4,180(sp)
   28ae4:	d9402917 	ldw	r5,164(sp)
   28ae8:	d8002785 	stb	zero,158(sp)
   28aec:	20800104 	addi	r2,r4,4
   28af0:	24c00017 	ldw	r19,0(r4)
   28af4:	002d883a 	mov	r22,zero
   28af8:	2801b516 	blt	r5,zero,291d0 <___vfprintf_internal_r+0x18d0>
   28afc:	00ffdfc4 	movi	r3,-129
   28b00:	d8802d15 	stw	r2,180(sp)
   28b04:	90e4703a 	and	r18,r18,r3
   28b08:	983d2726 	beq	r19,zero,27fa8 <__alt_mem_SDRAM_controller+0xfc027fa8>
   28b0c:	0039883a 	mov	fp,zero
   28b10:	003d2a06 	br	27fbc <__alt_mem_SDRAM_controller+0xfc027fbc>
   28b14:	dc402617 	ldw	r17,152(sp)
   28b18:	0441d30e 	bge	zero,r17,29268 <___vfprintf_internal_r+0x1968>
   28b1c:	dc403217 	ldw	r17,200(sp)
   28b20:	d8803317 	ldw	r2,204(sp)
   28b24:	1440010e 	bge	r2,r17,28b2c <___vfprintf_internal_r+0x122c>
   28b28:	1023883a 	mov	r17,r2
   28b2c:	04400a0e 	bge	zero,r17,28b58 <___vfprintf_internal_r+0x1258>
   28b30:	d8801f17 	ldw	r2,124(sp)
   28b34:	1c47883a 	add	r3,r3,r17
   28b38:	44000015 	stw	r16,0(r8)
   28b3c:	10800044 	addi	r2,r2,1
   28b40:	44400115 	stw	r17,4(r8)
   28b44:	d8c02015 	stw	r3,128(sp)
   28b48:	d8801f15 	stw	r2,124(sp)
   28b4c:	010001c4 	movi	r4,7
   28b50:	20826516 	blt	r4,r2,294e8 <___vfprintf_internal_r+0x1be8>
   28b54:	42000204 	addi	r8,r8,8
   28b58:	88026116 	blt	r17,zero,294e0 <___vfprintf_internal_r+0x1be0>
   28b5c:	d9003217 	ldw	r4,200(sp)
   28b60:	2463c83a 	sub	r17,r4,r17
   28b64:	04407b0e 	bge	zero,r17,28d54 <___vfprintf_internal_r+0x1454>
   28b68:	05800404 	movi	r22,16
   28b6c:	d8801f17 	ldw	r2,124(sp)
   28b70:	b4419d0e 	bge	r22,r17,291e8 <___vfprintf_internal_r+0x18e8>
   28b74:	010000f4 	movhi	r4,3
   28b78:	2118d384 	addi	r4,r4,25422
   28b7c:	d9002b15 	stw	r4,172(sp)
   28b80:	070001c4 	movi	fp,7
   28b84:	dcc02c17 	ldw	r19,176(sp)
   28b88:	00000306 	br	28b98 <___vfprintf_internal_r+0x1298>
   28b8c:	42000204 	addi	r8,r8,8
   28b90:	8c7ffc04 	addi	r17,r17,-16
   28b94:	b441970e 	bge	r22,r17,291f4 <___vfprintf_internal_r+0x18f4>
   28b98:	18c00404 	addi	r3,r3,16
   28b9c:	10800044 	addi	r2,r2,1
   28ba0:	45000015 	stw	r20,0(r8)
   28ba4:	45800115 	stw	r22,4(r8)
   28ba8:	d8c02015 	stw	r3,128(sp)
   28bac:	d8801f15 	stw	r2,124(sp)
   28bb0:	e0bff60e 	bge	fp,r2,28b8c <__alt_mem_SDRAM_controller+0xfc028b8c>
   28bb4:	d9801e04 	addi	r6,sp,120
   28bb8:	b80b883a 	mov	r5,r23
   28bbc:	9809883a 	mov	r4,r19
   28bc0:	002ee880 	call	2ee88 <__sprint_r>
   28bc4:	103c501e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28bc8:	d8c02017 	ldw	r3,128(sp)
   28bcc:	d8801f17 	ldw	r2,124(sp)
   28bd0:	da000404 	addi	r8,sp,16
   28bd4:	003fee06 	br	28b90 <__alt_mem_SDRAM_controller+0xfc028b90>
   28bd8:	d9002c17 	ldw	r4,176(sp)
   28bdc:	d9801e04 	addi	r6,sp,120
   28be0:	b80b883a 	mov	r5,r23
   28be4:	002ee880 	call	2ee88 <__sprint_r>
   28be8:	103c471e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28bec:	d8c02017 	ldw	r3,128(sp)
   28bf0:	df002787 	ldb	fp,158(sp)
   28bf4:	da000404 	addi	r8,sp,16
   28bf8:	003d5606 	br	28154 <__alt_mem_SDRAM_controller+0xfc028154>
   28bfc:	9080040c 	andi	r2,r18,16
   28c00:	10016126 	beq	r2,zero,29188 <___vfprintf_internal_r+0x1888>
   28c04:	d8802d17 	ldw	r2,180(sp)
   28c08:	14c00017 	ldw	r19,0(r2)
   28c0c:	10800104 	addi	r2,r2,4
   28c10:	d8802d15 	stw	r2,180(sp)
   28c14:	982dd7fa 	srai	r22,r19,31
   28c18:	b005883a 	mov	r2,r22
   28c1c:	003c8206 	br	27e28 <__alt_mem_SDRAM_controller+0xfc027e28>
   28c20:	9080040c 	andi	r2,r18,16
   28c24:	10003526 	beq	r2,zero,28cfc <___vfprintf_internal_r+0x13fc>
   28c28:	d9402d17 	ldw	r5,180(sp)
   28c2c:	d8c02917 	ldw	r3,164(sp)
   28c30:	d8002785 	stb	zero,158(sp)
   28c34:	28800104 	addi	r2,r5,4
   28c38:	2cc00017 	ldw	r19,0(r5)
   28c3c:	002d883a 	mov	r22,zero
   28c40:	18003716 	blt	r3,zero,28d20 <___vfprintf_internal_r+0x1420>
   28c44:	00ffdfc4 	movi	r3,-129
   28c48:	d8802d15 	stw	r2,180(sp)
   28c4c:	90e4703a 	and	r18,r18,r3
   28c50:	0039883a 	mov	fp,zero
   28c54:	983df326 	beq	r19,zero,28424 <__alt_mem_SDRAM_controller+0xfc028424>
   28c58:	00800244 	movi	r2,9
   28c5c:	14fc7b36 	bltu	r2,r19,27e4c <__alt_mem_SDRAM_controller+0xfc027e4c>
   28c60:	d8c02817 	ldw	r3,160(sp)
   28c64:	dc001dc4 	addi	r16,sp,119
   28c68:	9cc00c04 	addi	r19,r19,48
   28c6c:	1c07c83a 	sub	r3,r3,r16
   28c70:	dcc01dc5 	stb	r19,119(sp)
   28c74:	d8c02e15 	stw	r3,184(sp)
   28c78:	003ce806 	br	2801c <__alt_mem_SDRAM_controller+0xfc02801c>
   28c7c:	d8803317 	ldw	r2,204(sp)
   28c80:	143fffc4 	addi	r16,r2,-1
   28c84:	043f4d0e 	bge	zero,r16,289bc <__alt_mem_SDRAM_controller+0xfc0289bc>
   28c88:	07000404 	movi	fp,16
   28c8c:	e400810e 	bge	fp,r16,28e94 <___vfprintf_internal_r+0x1594>
   28c90:	014000f4 	movhi	r5,3
   28c94:	2958d384 	addi	r5,r5,25422
   28c98:	d9402b15 	stw	r5,172(sp)
   28c9c:	01c001c4 	movi	r7,7
   28ca0:	dcc02c17 	ldw	r19,176(sp)
   28ca4:	00000306 	br	28cb4 <___vfprintf_internal_r+0x13b4>
   28ca8:	b5800204 	addi	r22,r22,8
   28cac:	843ffc04 	addi	r16,r16,-16
   28cb0:	e4007b0e 	bge	fp,r16,28ea0 <___vfprintf_internal_r+0x15a0>
   28cb4:	18c00404 	addi	r3,r3,16
   28cb8:	8c400044 	addi	r17,r17,1
   28cbc:	b5000015 	stw	r20,0(r22)
   28cc0:	b7000115 	stw	fp,4(r22)
   28cc4:	d8c02015 	stw	r3,128(sp)
   28cc8:	dc401f15 	stw	r17,124(sp)
   28ccc:	3c7ff60e 	bge	r7,r17,28ca8 <__alt_mem_SDRAM_controller+0xfc028ca8>
   28cd0:	d9801e04 	addi	r6,sp,120
   28cd4:	b80b883a 	mov	r5,r23
   28cd8:	9809883a 	mov	r4,r19
   28cdc:	d9c03c15 	stw	r7,240(sp)
   28ce0:	002ee880 	call	2ee88 <__sprint_r>
   28ce4:	d9c03c17 	ldw	r7,240(sp)
   28ce8:	103c071e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28cec:	d8c02017 	ldw	r3,128(sp)
   28cf0:	dc401f17 	ldw	r17,124(sp)
   28cf4:	dd800404 	addi	r22,sp,16
   28cf8:	003fec06 	br	28cac <__alt_mem_SDRAM_controller+0xfc028cac>
   28cfc:	9080100c 	andi	r2,r18,64
   28d00:	d8002785 	stb	zero,158(sp)
   28d04:	10010e26 	beq	r2,zero,29140 <___vfprintf_internal_r+0x1840>
   28d08:	d9002d17 	ldw	r4,180(sp)
   28d0c:	d9402917 	ldw	r5,164(sp)
   28d10:	002d883a 	mov	r22,zero
   28d14:	20800104 	addi	r2,r4,4
   28d18:	24c0000b 	ldhu	r19,0(r4)
   28d1c:	283fc90e 	bge	r5,zero,28c44 <__alt_mem_SDRAM_controller+0xfc028c44>
   28d20:	d8802d15 	stw	r2,180(sp)
   28d24:	0039883a 	mov	fp,zero
   28d28:	9d84b03a 	or	r2,r19,r22
   28d2c:	103c461e 	bne	r2,zero,27e48 <__alt_mem_SDRAM_controller+0xfc027e48>
   28d30:	00800044 	movi	r2,1
   28d34:	003e6c06 	br	286e8 <__alt_mem_SDRAM_controller+0xfc0286e8>
   28d38:	d9002c17 	ldw	r4,176(sp)
   28d3c:	d9801e04 	addi	r6,sp,120
   28d40:	b80b883a 	mov	r5,r23
   28d44:	002ee880 	call	2ee88 <__sprint_r>
   28d48:	103bef1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28d4c:	d8c02017 	ldw	r3,128(sp)
   28d50:	da000404 	addi	r8,sp,16
   28d54:	d9003217 	ldw	r4,200(sp)
   28d58:	d8802617 	ldw	r2,152(sp)
   28d5c:	d9403317 	ldw	r5,204(sp)
   28d60:	8123883a 	add	r17,r16,r4
   28d64:	11400216 	blt	r2,r5,28d70 <___vfprintf_internal_r+0x1470>
   28d68:	9100004c 	andi	r4,r18,1
   28d6c:	20000d26 	beq	r4,zero,28da4 <___vfprintf_internal_r+0x14a4>
   28d70:	d9003717 	ldw	r4,220(sp)
   28d74:	d9403417 	ldw	r5,208(sp)
   28d78:	1907883a 	add	r3,r3,r4
   28d7c:	d9001f17 	ldw	r4,124(sp)
   28d80:	41400015 	stw	r5,0(r8)
   28d84:	d9403717 	ldw	r5,220(sp)
   28d88:	21000044 	addi	r4,r4,1
   28d8c:	d8c02015 	stw	r3,128(sp)
   28d90:	41400115 	stw	r5,4(r8)
   28d94:	d9001f15 	stw	r4,124(sp)
   28d98:	014001c4 	movi	r5,7
   28d9c:	2901e816 	blt	r5,r4,29540 <___vfprintf_internal_r+0x1c40>
   28da0:	42000204 	addi	r8,r8,8
   28da4:	d9003317 	ldw	r4,204(sp)
   28da8:	8121883a 	add	r16,r16,r4
   28dac:	2085c83a 	sub	r2,r4,r2
   28db0:	8461c83a 	sub	r16,r16,r17
   28db4:	1400010e 	bge	r2,r16,28dbc <___vfprintf_internal_r+0x14bc>
   28db8:	1021883a 	mov	r16,r2
   28dbc:	04000a0e 	bge	zero,r16,28de8 <___vfprintf_internal_r+0x14e8>
   28dc0:	d9001f17 	ldw	r4,124(sp)
   28dc4:	1c07883a 	add	r3,r3,r16
   28dc8:	44400015 	stw	r17,0(r8)
   28dcc:	21000044 	addi	r4,r4,1
   28dd0:	44000115 	stw	r16,4(r8)
   28dd4:	d8c02015 	stw	r3,128(sp)
   28dd8:	d9001f15 	stw	r4,124(sp)
   28ddc:	014001c4 	movi	r5,7
   28de0:	2901fb16 	blt	r5,r4,295d0 <___vfprintf_internal_r+0x1cd0>
   28de4:	42000204 	addi	r8,r8,8
   28de8:	8001f716 	blt	r16,zero,295c8 <___vfprintf_internal_r+0x1cc8>
   28dec:	1421c83a 	sub	r16,r2,r16
   28df0:	043d380e 	bge	zero,r16,282d4 <__alt_mem_SDRAM_controller+0xfc0282d4>
   28df4:	04400404 	movi	r17,16
   28df8:	d8801f17 	ldw	r2,124(sp)
   28dfc:	8c3efb0e 	bge	r17,r16,289ec <__alt_mem_SDRAM_controller+0xfc0289ec>
   28e00:	014000f4 	movhi	r5,3
   28e04:	2958d384 	addi	r5,r5,25422
   28e08:	d9402b15 	stw	r5,172(sp)
   28e0c:	058001c4 	movi	r22,7
   28e10:	dcc02c17 	ldw	r19,176(sp)
   28e14:	00000306 	br	28e24 <___vfprintf_internal_r+0x1524>
   28e18:	42000204 	addi	r8,r8,8
   28e1c:	843ffc04 	addi	r16,r16,-16
   28e20:	8c3ef50e 	bge	r17,r16,289f8 <__alt_mem_SDRAM_controller+0xfc0289f8>
   28e24:	18c00404 	addi	r3,r3,16
   28e28:	10800044 	addi	r2,r2,1
   28e2c:	45000015 	stw	r20,0(r8)
   28e30:	44400115 	stw	r17,4(r8)
   28e34:	d8c02015 	stw	r3,128(sp)
   28e38:	d8801f15 	stw	r2,124(sp)
   28e3c:	b0bff60e 	bge	r22,r2,28e18 <__alt_mem_SDRAM_controller+0xfc028e18>
   28e40:	d9801e04 	addi	r6,sp,120
   28e44:	b80b883a 	mov	r5,r23
   28e48:	9809883a 	mov	r4,r19
   28e4c:	002ee880 	call	2ee88 <__sprint_r>
   28e50:	103bad1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28e54:	d8c02017 	ldw	r3,128(sp)
   28e58:	d8801f17 	ldw	r2,124(sp)
   28e5c:	da000404 	addi	r8,sp,16
   28e60:	003fee06 	br	28e1c <__alt_mem_SDRAM_controller+0xfc028e1c>
   28e64:	9088703a 	and	r4,r18,r2
   28e68:	203eab1e 	bne	r4,zero,28918 <__alt_mem_SDRAM_controller+0xfc028918>
   28e6c:	dc401f17 	ldw	r17,124(sp)
   28e70:	40800115 	stw	r2,4(r8)
   28e74:	44000015 	stw	r16,0(r8)
   28e78:	8c400044 	addi	r17,r17,1
   28e7c:	d8c02015 	stw	r3,128(sp)
   28e80:	dc401f15 	stw	r17,124(sp)
   28e84:	008001c4 	movi	r2,7
   28e88:	14400e16 	blt	r2,r17,28ec4 <___vfprintf_internal_r+0x15c4>
   28e8c:	45800204 	addi	r22,r8,8
   28e90:	003eca06 	br	289bc <__alt_mem_SDRAM_controller+0xfc0289bc>
   28e94:	010000f4 	movhi	r4,3
   28e98:	2118d384 	addi	r4,r4,25422
   28e9c:	d9002b15 	stw	r4,172(sp)
   28ea0:	d8802b17 	ldw	r2,172(sp)
   28ea4:	1c07883a 	add	r3,r3,r16
   28ea8:	8c400044 	addi	r17,r17,1
   28eac:	b0800015 	stw	r2,0(r22)
   28eb0:	b4000115 	stw	r16,4(r22)
   28eb4:	d8c02015 	stw	r3,128(sp)
   28eb8:	dc401f15 	stw	r17,124(sp)
   28ebc:	008001c4 	movi	r2,7
   28ec0:	147ebd0e 	bge	r2,r17,289b8 <__alt_mem_SDRAM_controller+0xfc0289b8>
   28ec4:	d9002c17 	ldw	r4,176(sp)
   28ec8:	d9801e04 	addi	r6,sp,120
   28ecc:	b80b883a 	mov	r5,r23
   28ed0:	002ee880 	call	2ee88 <__sprint_r>
   28ed4:	103b8c1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28ed8:	d8c02017 	ldw	r3,128(sp)
   28edc:	dc401f17 	ldw	r17,124(sp)
   28ee0:	dd800404 	addi	r22,sp,16
   28ee4:	003eb506 	br	289bc <__alt_mem_SDRAM_controller+0xfc0289bc>
   28ee8:	d9002c17 	ldw	r4,176(sp)
   28eec:	d9801e04 	addi	r6,sp,120
   28ef0:	b80b883a 	mov	r5,r23
   28ef4:	002ee880 	call	2ee88 <__sprint_r>
   28ef8:	103b831e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28efc:	d8c02017 	ldw	r3,128(sp)
   28f00:	dc401f17 	ldw	r17,124(sp)
   28f04:	da000404 	addi	r8,sp,16
   28f08:	003e8d06 	br	28940 <__alt_mem_SDRAM_controller+0xfc028940>
   28f0c:	d9002c17 	ldw	r4,176(sp)
   28f10:	d9801e04 	addi	r6,sp,120
   28f14:	b80b883a 	mov	r5,r23
   28f18:	002ee880 	call	2ee88 <__sprint_r>
   28f1c:	103b7a1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28f20:	d8c02017 	ldw	r3,128(sp)
   28f24:	dc401f17 	ldw	r17,124(sp)
   28f28:	dd800404 	addi	r22,sp,16
   28f2c:	003e8f06 	br	2896c <__alt_mem_SDRAM_controller+0xfc02896c>
   28f30:	0027883a 	mov	r19,zero
   28f34:	003f4a06 	br	28c60 <__alt_mem_SDRAM_controller+0xfc028c60>
   28f38:	d9002c17 	ldw	r4,176(sp)
   28f3c:	d9801e04 	addi	r6,sp,120
   28f40:	b80b883a 	mov	r5,r23
   28f44:	002ee880 	call	2ee88 <__sprint_r>
   28f48:	103b6f1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   28f4c:	d8c02017 	ldw	r3,128(sp)
   28f50:	da000404 	addi	r8,sp,16
   28f54:	003c9d06 	br	281cc <__alt_mem_SDRAM_controller+0xfc0281cc>
   28f58:	04e7c83a 	sub	r19,zero,r19
   28f5c:	9804c03a 	cmpne	r2,r19,zero
   28f60:	05adc83a 	sub	r22,zero,r22
   28f64:	b0adc83a 	sub	r22,r22,r2
   28f68:	d8802917 	ldw	r2,164(sp)
   28f6c:	07000b44 	movi	fp,45
   28f70:	df002785 	stb	fp,158(sp)
   28f74:	10017b16 	blt	r2,zero,29564 <___vfprintf_internal_r+0x1c64>
   28f78:	00bfdfc4 	movi	r2,-129
   28f7c:	90a4703a 	and	r18,r18,r2
   28f80:	003bb106 	br	27e48 <__alt_mem_SDRAM_controller+0xfc027e48>
   28f84:	d9003617 	ldw	r4,216(sp)
   28f88:	d9403817 	ldw	r5,224(sp)
   28f8c:	da003d15 	stw	r8,244(sp)
   28f90:	00235440 	call	23544 <__fpclassifyd>
   28f94:	da003d17 	ldw	r8,244(sp)
   28f98:	1000f026 	beq	r2,zero,2935c <___vfprintf_internal_r+0x1a5c>
   28f9c:	d9002917 	ldw	r4,164(sp)
   28fa0:	05bff7c4 	movi	r22,-33
   28fa4:	00bfffc4 	movi	r2,-1
   28fa8:	8dac703a 	and	r22,r17,r22
   28fac:	20820026 	beq	r4,r2,297b0 <___vfprintf_internal_r+0x1eb0>
   28fb0:	008011c4 	movi	r2,71
   28fb4:	b081f726 	beq	r22,r2,29794 <___vfprintf_internal_r+0x1e94>
   28fb8:	d9003817 	ldw	r4,224(sp)
   28fbc:	90c04014 	ori	r3,r18,256
   28fc0:	d8c02b15 	stw	r3,172(sp)
   28fc4:	20021516 	blt	r4,zero,2981c <___vfprintf_internal_r+0x1f1c>
   28fc8:	dcc03817 	ldw	r19,224(sp)
   28fcc:	d8002a05 	stb	zero,168(sp)
   28fd0:	00801984 	movi	r2,102
   28fd4:	8881f926 	beq	r17,r2,297bc <___vfprintf_internal_r+0x1ebc>
   28fd8:	00801184 	movi	r2,70
   28fdc:	88821c26 	beq	r17,r2,29850 <___vfprintf_internal_r+0x1f50>
   28fe0:	00801144 	movi	r2,69
   28fe4:	b081ef26 	beq	r22,r2,297a4 <___vfprintf_internal_r+0x1ea4>
   28fe8:	d8c02917 	ldw	r3,164(sp)
   28fec:	d8802104 	addi	r2,sp,132
   28ff0:	d8800315 	stw	r2,12(sp)
   28ff4:	d9403617 	ldw	r5,216(sp)
   28ff8:	d8802504 	addi	r2,sp,148
   28ffc:	d9002c17 	ldw	r4,176(sp)
   29000:	d8800215 	stw	r2,8(sp)
   29004:	d8802604 	addi	r2,sp,152
   29008:	d8c00015 	stw	r3,0(sp)
   2900c:	d8800115 	stw	r2,4(sp)
   29010:	01c00084 	movi	r7,2
   29014:	980d883a 	mov	r6,r19
   29018:	d8c03c15 	stw	r3,240(sp)
   2901c:	da003d15 	stw	r8,244(sp)
   29020:	0029f240 	call	29f24 <_dtoa_r>
   29024:	1021883a 	mov	r16,r2
   29028:	008019c4 	movi	r2,103
   2902c:	d8c03c17 	ldw	r3,240(sp)
   29030:	da003d17 	ldw	r8,244(sp)
   29034:	88817126 	beq	r17,r2,295fc <___vfprintf_internal_r+0x1cfc>
   29038:	008011c4 	movi	r2,71
   2903c:	88829226 	beq	r17,r2,29a88 <___vfprintf_internal_r+0x2188>
   29040:	80f9883a 	add	fp,r16,r3
   29044:	d9003617 	ldw	r4,216(sp)
   29048:	000d883a 	mov	r6,zero
   2904c:	000f883a 	mov	r7,zero
   29050:	980b883a 	mov	r5,r19
   29054:	da003d15 	stw	r8,244(sp)
   29058:	00260340 	call	26034 <__eqdf2>
   2905c:	da003d17 	ldw	r8,244(sp)
   29060:	10018d26 	beq	r2,zero,29698 <___vfprintf_internal_r+0x1d98>
   29064:	d8802117 	ldw	r2,132(sp)
   29068:	1700062e 	bgeu	r2,fp,29084 <___vfprintf_internal_r+0x1784>
   2906c:	01000c04 	movi	r4,48
   29070:	10c00044 	addi	r3,r2,1
   29074:	d8c02115 	stw	r3,132(sp)
   29078:	11000005 	stb	r4,0(r2)
   2907c:	d8802117 	ldw	r2,132(sp)
   29080:	173ffb36 	bltu	r2,fp,29070 <__alt_mem_SDRAM_controller+0xfc029070>
   29084:	1405c83a 	sub	r2,r2,r16
   29088:	d8803315 	stw	r2,204(sp)
   2908c:	008011c4 	movi	r2,71
   29090:	b0817626 	beq	r22,r2,2966c <___vfprintf_internal_r+0x1d6c>
   29094:	00801944 	movi	r2,101
   29098:	1442810e 	bge	r2,r17,29aa0 <___vfprintf_internal_r+0x21a0>
   2909c:	d8c02617 	ldw	r3,152(sp)
   290a0:	00801984 	movi	r2,102
   290a4:	d8c03215 	stw	r3,200(sp)
   290a8:	8881fe26 	beq	r17,r2,298a4 <___vfprintf_internal_r+0x1fa4>
   290ac:	d8c03217 	ldw	r3,200(sp)
   290b0:	d9003317 	ldw	r4,204(sp)
   290b4:	1901dd16 	blt	r3,r4,2982c <___vfprintf_internal_r+0x1f2c>
   290b8:	9480004c 	andi	r18,r18,1
   290bc:	90022b1e 	bne	r18,zero,2996c <___vfprintf_internal_r+0x206c>
   290c0:	1805883a 	mov	r2,r3
   290c4:	18028016 	blt	r3,zero,29ac8 <___vfprintf_internal_r+0x21c8>
   290c8:	d8c03217 	ldw	r3,200(sp)
   290cc:	044019c4 	movi	r17,103
   290d0:	d8c02e15 	stw	r3,184(sp)
   290d4:	df002a07 	ldb	fp,168(sp)
   290d8:	e001531e 	bne	fp,zero,29628 <___vfprintf_internal_r+0x1d28>
   290dc:	df002783 	ldbu	fp,158(sp)
   290e0:	d8802a15 	stw	r2,168(sp)
   290e4:	dc802b17 	ldw	r18,172(sp)
   290e8:	d8002915 	stw	zero,164(sp)
   290ec:	003bd106 	br	28034 <__alt_mem_SDRAM_controller+0xfc028034>
   290f0:	d8802d17 	ldw	r2,180(sp)
   290f4:	d8c02d17 	ldw	r3,180(sp)
   290f8:	d9002d17 	ldw	r4,180(sp)
   290fc:	10800017 	ldw	r2,0(r2)
   29100:	18c00117 	ldw	r3,4(r3)
   29104:	21000204 	addi	r4,r4,8
   29108:	d8803615 	stw	r2,216(sp)
   2910c:	d8c03815 	stw	r3,224(sp)
   29110:	d9002d15 	stw	r4,180(sp)
   29114:	003b7506 	br	27eec <__alt_mem_SDRAM_controller+0xfc027eec>
   29118:	ac400007 	ldb	r17,0(r21)
   2911c:	003a5906 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   29120:	9080100c 	andi	r2,r18,64
   29124:	1000a826 	beq	r2,zero,293c8 <___vfprintf_internal_r+0x1ac8>
   29128:	d9002d17 	ldw	r4,180(sp)
   2912c:	002d883a 	mov	r22,zero
   29130:	24c0000b 	ldhu	r19,0(r4)
   29134:	21000104 	addi	r4,r4,4
   29138:	d9002d15 	stw	r4,180(sp)
   2913c:	003ccb06 	br	2846c <__alt_mem_SDRAM_controller+0xfc02846c>
   29140:	d8c02d17 	ldw	r3,180(sp)
   29144:	d9002917 	ldw	r4,164(sp)
   29148:	002d883a 	mov	r22,zero
   2914c:	18800104 	addi	r2,r3,4
   29150:	1cc00017 	ldw	r19,0(r3)
   29154:	203ebb0e 	bge	r4,zero,28c44 <__alt_mem_SDRAM_controller+0xfc028c44>
   29158:	003ef106 	br	28d20 <__alt_mem_SDRAM_controller+0xfc028d20>
   2915c:	9080040c 	andi	r2,r18,16
   29160:	1000921e 	bne	r2,zero,293ac <___vfprintf_internal_r+0x1aac>
   29164:	9480100c 	andi	r18,r18,64
   29168:	90013926 	beq	r18,zero,29650 <___vfprintf_internal_r+0x1d50>
   2916c:	d9002d17 	ldw	r4,180(sp)
   29170:	d9402f17 	ldw	r5,188(sp)
   29174:	20800017 	ldw	r2,0(r4)
   29178:	21000104 	addi	r4,r4,4
   2917c:	d9002d15 	stw	r4,180(sp)
   29180:	1140000d 	sth	r5,0(r2)
   29184:	003a1606 	br	279e0 <__alt_mem_SDRAM_controller+0xfc0279e0>
   29188:	9080100c 	andi	r2,r18,64
   2918c:	10008026 	beq	r2,zero,29390 <___vfprintf_internal_r+0x1a90>
   29190:	d8c02d17 	ldw	r3,180(sp)
   29194:	1cc0000f 	ldh	r19,0(r3)
   29198:	18c00104 	addi	r3,r3,4
   2919c:	d8c02d15 	stw	r3,180(sp)
   291a0:	982dd7fa 	srai	r22,r19,31
   291a4:	b005883a 	mov	r2,r22
   291a8:	003b1f06 	br	27e28 <__alt_mem_SDRAM_controller+0xfc027e28>
   291ac:	9080100c 	andi	r2,r18,64
   291b0:	d8002785 	stb	zero,158(sp)
   291b4:	10008a1e 	bne	r2,zero,293e0 <___vfprintf_internal_r+0x1ae0>
   291b8:	d9402d17 	ldw	r5,180(sp)
   291bc:	d8c02917 	ldw	r3,164(sp)
   291c0:	002d883a 	mov	r22,zero
   291c4:	28800104 	addi	r2,r5,4
   291c8:	2cc00017 	ldw	r19,0(r5)
   291cc:	183e4b0e 	bge	r3,zero,28afc <__alt_mem_SDRAM_controller+0xfc028afc>
   291d0:	9d86b03a 	or	r3,r19,r22
   291d4:	d8802d15 	stw	r2,180(sp)
   291d8:	183e4c1e 	bne	r3,zero,28b0c <__alt_mem_SDRAM_controller+0xfc028b0c>
   291dc:	0039883a 	mov	fp,zero
   291e0:	0005883a 	mov	r2,zero
   291e4:	003d4006 	br	286e8 <__alt_mem_SDRAM_controller+0xfc0286e8>
   291e8:	014000f4 	movhi	r5,3
   291ec:	2958d384 	addi	r5,r5,25422
   291f0:	d9402b15 	stw	r5,172(sp)
   291f4:	d9402b17 	ldw	r5,172(sp)
   291f8:	1c47883a 	add	r3,r3,r17
   291fc:	10800044 	addi	r2,r2,1
   29200:	41400015 	stw	r5,0(r8)
   29204:	44400115 	stw	r17,4(r8)
   29208:	d8c02015 	stw	r3,128(sp)
   2920c:	d8801f15 	stw	r2,124(sp)
   29210:	010001c4 	movi	r4,7
   29214:	20bec816 	blt	r4,r2,28d38 <__alt_mem_SDRAM_controller+0xfc028d38>
   29218:	42000204 	addi	r8,r8,8
   2921c:	003ecd06 	br	28d54 <__alt_mem_SDRAM_controller+0xfc028d54>
   29220:	d9002917 	ldw	r4,164(sp)
   29224:	d8002785 	stb	zero,158(sp)
   29228:	203d2d16 	blt	r4,zero,286e0 <__alt_mem_SDRAM_controller+0xfc0286e0>
   2922c:	00bfdfc4 	movi	r2,-129
   29230:	90a4703a 	and	r18,r18,r2
   29234:	003a9106 	br	27c7c <__alt_mem_SDRAM_controller+0xfc027c7c>
   29238:	010000f4 	movhi	r4,3
   2923c:	2118d384 	addi	r4,r4,25422
   29240:	d9002b15 	stw	r4,172(sp)
   29244:	003c0c06 	br	28278 <__alt_mem_SDRAM_controller+0xfc028278>
   29248:	d9002c17 	ldw	r4,176(sp)
   2924c:	d9801e04 	addi	r6,sp,120
   29250:	b80b883a 	mov	r5,r23
   29254:	002ee880 	call	2ee88 <__sprint_r>
   29258:	103aab1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   2925c:	d8c02017 	ldw	r3,128(sp)
   29260:	da000404 	addi	r8,sp,16
   29264:	003d4106 	br	2876c <__alt_mem_SDRAM_controller+0xfc02876c>
   29268:	d8801f17 	ldw	r2,124(sp)
   2926c:	014000f4 	movhi	r5,3
   29270:	01000044 	movi	r4,1
   29274:	18c00044 	addi	r3,r3,1
   29278:	10800044 	addi	r2,r2,1
   2927c:	2958d304 	addi	r5,r5,25420
   29280:	41000115 	stw	r4,4(r8)
   29284:	41400015 	stw	r5,0(r8)
   29288:	d8c02015 	stw	r3,128(sp)
   2928c:	d8801f15 	stw	r2,124(sp)
   29290:	010001c4 	movi	r4,7
   29294:	20805c16 	blt	r4,r2,29408 <___vfprintf_internal_r+0x1b08>
   29298:	42000204 	addi	r8,r8,8
   2929c:	8800041e 	bne	r17,zero,292b0 <___vfprintf_internal_r+0x19b0>
   292a0:	d8803317 	ldw	r2,204(sp)
   292a4:	1000021e 	bne	r2,zero,292b0 <___vfprintf_internal_r+0x19b0>
   292a8:	9080004c 	andi	r2,r18,1
   292ac:	103c0926 	beq	r2,zero,282d4 <__alt_mem_SDRAM_controller+0xfc0282d4>
   292b0:	d9003717 	ldw	r4,220(sp)
   292b4:	d8801f17 	ldw	r2,124(sp)
   292b8:	d9403417 	ldw	r5,208(sp)
   292bc:	20c7883a 	add	r3,r4,r3
   292c0:	10800044 	addi	r2,r2,1
   292c4:	41000115 	stw	r4,4(r8)
   292c8:	41400015 	stw	r5,0(r8)
   292cc:	d8c02015 	stw	r3,128(sp)
   292d0:	d8801f15 	stw	r2,124(sp)
   292d4:	010001c4 	movi	r4,7
   292d8:	20812116 	blt	r4,r2,29760 <___vfprintf_internal_r+0x1e60>
   292dc:	42000204 	addi	r8,r8,8
   292e0:	0463c83a 	sub	r17,zero,r17
   292e4:	0440730e 	bge	zero,r17,294b4 <___vfprintf_internal_r+0x1bb4>
   292e8:	05800404 	movi	r22,16
   292ec:	b440860e 	bge	r22,r17,29508 <___vfprintf_internal_r+0x1c08>
   292f0:	014000f4 	movhi	r5,3
   292f4:	2958d384 	addi	r5,r5,25422
   292f8:	d9402b15 	stw	r5,172(sp)
   292fc:	070001c4 	movi	fp,7
   29300:	dcc02c17 	ldw	r19,176(sp)
   29304:	00000306 	br	29314 <___vfprintf_internal_r+0x1a14>
   29308:	42000204 	addi	r8,r8,8
   2930c:	8c7ffc04 	addi	r17,r17,-16
   29310:	b440800e 	bge	r22,r17,29514 <___vfprintf_internal_r+0x1c14>
   29314:	18c00404 	addi	r3,r3,16
   29318:	10800044 	addi	r2,r2,1
   2931c:	45000015 	stw	r20,0(r8)
   29320:	45800115 	stw	r22,4(r8)
   29324:	d8c02015 	stw	r3,128(sp)
   29328:	d8801f15 	stw	r2,124(sp)
   2932c:	e0bff60e 	bge	fp,r2,29308 <__alt_mem_SDRAM_controller+0xfc029308>
   29330:	d9801e04 	addi	r6,sp,120
   29334:	b80b883a 	mov	r5,r23
   29338:	9809883a 	mov	r4,r19
   2933c:	002ee880 	call	2ee88 <__sprint_r>
   29340:	103a711e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   29344:	d8c02017 	ldw	r3,128(sp)
   29348:	d8801f17 	ldw	r2,124(sp)
   2934c:	da000404 	addi	r8,sp,16
   29350:	003fee06 	br	2930c <__alt_mem_SDRAM_controller+0xfc02930c>
   29354:	00bfffc4 	movi	r2,-1
   29358:	003a6f06 	br	27d18 <__alt_mem_SDRAM_controller+0xfc027d18>
   2935c:	008011c4 	movi	r2,71
   29360:	1440b816 	blt	r2,r17,29644 <___vfprintf_internal_r+0x1d44>
   29364:	040000f4 	movhi	r16,3
   29368:	8418c504 	addi	r16,r16,25364
   2936c:	00c000c4 	movi	r3,3
   29370:	00bfdfc4 	movi	r2,-129
   29374:	d8c02a15 	stw	r3,168(sp)
   29378:	90a4703a 	and	r18,r18,r2
   2937c:	df002783 	ldbu	fp,158(sp)
   29380:	d8c02e15 	stw	r3,184(sp)
   29384:	d8002915 	stw	zero,164(sp)
   29388:	d8003215 	stw	zero,200(sp)
   2938c:	003b2906 	br	28034 <__alt_mem_SDRAM_controller+0xfc028034>
   29390:	d9002d17 	ldw	r4,180(sp)
   29394:	24c00017 	ldw	r19,0(r4)
   29398:	21000104 	addi	r4,r4,4
   2939c:	d9002d15 	stw	r4,180(sp)
   293a0:	982dd7fa 	srai	r22,r19,31
   293a4:	b005883a 	mov	r2,r22
   293a8:	003a9f06 	br	27e28 <__alt_mem_SDRAM_controller+0xfc027e28>
   293ac:	d9402d17 	ldw	r5,180(sp)
   293b0:	d8c02f17 	ldw	r3,188(sp)
   293b4:	28800017 	ldw	r2,0(r5)
   293b8:	29400104 	addi	r5,r5,4
   293bc:	d9402d15 	stw	r5,180(sp)
   293c0:	10c00015 	stw	r3,0(r2)
   293c4:	00398606 	br	279e0 <__alt_mem_SDRAM_controller+0xfc0279e0>
   293c8:	d9402d17 	ldw	r5,180(sp)
   293cc:	002d883a 	mov	r22,zero
   293d0:	2cc00017 	ldw	r19,0(r5)
   293d4:	29400104 	addi	r5,r5,4
   293d8:	d9402d15 	stw	r5,180(sp)
   293dc:	003c2306 	br	2846c <__alt_mem_SDRAM_controller+0xfc02846c>
   293e0:	d8c02d17 	ldw	r3,180(sp)
   293e4:	d9002917 	ldw	r4,164(sp)
   293e8:	002d883a 	mov	r22,zero
   293ec:	18800104 	addi	r2,r3,4
   293f0:	1cc0000b 	ldhu	r19,0(r3)
   293f4:	203dc10e 	bge	r4,zero,28afc <__alt_mem_SDRAM_controller+0xfc028afc>
   293f8:	003f7506 	br	291d0 <__alt_mem_SDRAM_controller+0xfc0291d0>
   293fc:	040000f4 	movhi	r16,3
   29400:	8418c304 	addi	r16,r16,25356
   29404:	003acc06 	br	27f38 <__alt_mem_SDRAM_controller+0xfc027f38>
   29408:	d9002c17 	ldw	r4,176(sp)
   2940c:	d9801e04 	addi	r6,sp,120
   29410:	b80b883a 	mov	r5,r23
   29414:	002ee880 	call	2ee88 <__sprint_r>
   29418:	103a3b1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   2941c:	dc402617 	ldw	r17,152(sp)
   29420:	d8c02017 	ldw	r3,128(sp)
   29424:	da000404 	addi	r8,sp,16
   29428:	003f9c06 	br	2929c <__alt_mem_SDRAM_controller+0xfc02929c>
   2942c:	ac400043 	ldbu	r17,1(r21)
   29430:	94800814 	ori	r18,r18,32
   29434:	ad400044 	addi	r21,r21,1
   29438:	8c403fcc 	andi	r17,r17,255
   2943c:	8c40201c 	xori	r17,r17,128
   29440:	8c7fe004 	addi	r17,r17,-128
   29444:	00398f06 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   29448:	d8c02d15 	stw	r3,180(sp)
   2944c:	0039883a 	mov	fp,zero
   29450:	003e3506 	br	28d28 <__alt_mem_SDRAM_controller+0xfc028d28>
   29454:	d9002c17 	ldw	r4,176(sp)
   29458:	d9801e04 	addi	r6,sp,120
   2945c:	b80b883a 	mov	r5,r23
   29460:	002ee880 	call	2ee88 <__sprint_r>
   29464:	103a281e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   29468:	d8c02017 	ldw	r3,128(sp)
   2946c:	da000404 	addi	r8,sp,16
   29470:	003cd006 	br	287b4 <__alt_mem_SDRAM_controller+0xfc0287b4>
   29474:	8009883a 	mov	r4,r16
   29478:	da003d15 	stw	r8,244(sp)
   2947c:	00278680 	call	27868 <strlen>
   29480:	d8802e15 	stw	r2,184(sp)
   29484:	da003d17 	ldw	r8,244(sp)
   29488:	103c340e 	bge	r2,zero,2855c <__alt_mem_SDRAM_controller+0xfc02855c>
   2948c:	0005883a 	mov	r2,zero
   29490:	003c3206 	br	2855c <__alt_mem_SDRAM_controller+0xfc02855c>
   29494:	d9002c17 	ldw	r4,176(sp)
   29498:	d9801e04 	addi	r6,sp,120
   2949c:	b80b883a 	mov	r5,r23
   294a0:	002ee880 	call	2ee88 <__sprint_r>
   294a4:	103a181e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   294a8:	d8c02017 	ldw	r3,128(sp)
   294ac:	d8801f17 	ldw	r2,124(sp)
   294b0:	da000404 	addi	r8,sp,16
   294b4:	d9403317 	ldw	r5,204(sp)
   294b8:	10800044 	addi	r2,r2,1
   294bc:	44000015 	stw	r16,0(r8)
   294c0:	28c7883a 	add	r3,r5,r3
   294c4:	003b7d06 	br	282bc <__alt_mem_SDRAM_controller+0xfc0282bc>
   294c8:	010000f4 	movhi	r4,3
   294cc:	2118d784 	addi	r4,r4,25438
   294d0:	d9003515 	stw	r4,212(sp)
   294d4:	003b1406 	br	28128 <__alt_mem_SDRAM_controller+0xfc028128>
   294d8:	013fffc4 	movi	r4,-1
   294dc:	003a3506 	br	27db4 <__alt_mem_SDRAM_controller+0xfc027db4>
   294e0:	0023883a 	mov	r17,zero
   294e4:	003d9d06 	br	28b5c <__alt_mem_SDRAM_controller+0xfc028b5c>
   294e8:	d9002c17 	ldw	r4,176(sp)
   294ec:	d9801e04 	addi	r6,sp,120
   294f0:	b80b883a 	mov	r5,r23
   294f4:	002ee880 	call	2ee88 <__sprint_r>
   294f8:	103a031e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   294fc:	d8c02017 	ldw	r3,128(sp)
   29500:	da000404 	addi	r8,sp,16
   29504:	003d9406 	br	28b58 <__alt_mem_SDRAM_controller+0xfc028b58>
   29508:	010000f4 	movhi	r4,3
   2950c:	2118d384 	addi	r4,r4,25422
   29510:	d9002b15 	stw	r4,172(sp)
   29514:	d9002b17 	ldw	r4,172(sp)
   29518:	1c47883a 	add	r3,r3,r17
   2951c:	10800044 	addi	r2,r2,1
   29520:	41000015 	stw	r4,0(r8)
   29524:	44400115 	stw	r17,4(r8)
   29528:	d8c02015 	stw	r3,128(sp)
   2952c:	d8801f15 	stw	r2,124(sp)
   29530:	010001c4 	movi	r4,7
   29534:	20bfd716 	blt	r4,r2,29494 <__alt_mem_SDRAM_controller+0xfc029494>
   29538:	42000204 	addi	r8,r8,8
   2953c:	003fdd06 	br	294b4 <__alt_mem_SDRAM_controller+0xfc0294b4>
   29540:	d9002c17 	ldw	r4,176(sp)
   29544:	d9801e04 	addi	r6,sp,120
   29548:	b80b883a 	mov	r5,r23
   2954c:	002ee880 	call	2ee88 <__sprint_r>
   29550:	1039ed1e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   29554:	d8802617 	ldw	r2,152(sp)
   29558:	d8c02017 	ldw	r3,128(sp)
   2955c:	da000404 	addi	r8,sp,16
   29560:	003e1006 	br	28da4 <__alt_mem_SDRAM_controller+0xfc028da4>
   29564:	00800044 	movi	r2,1
   29568:	10803fcc 	andi	r2,r2,255
   2956c:	00c00044 	movi	r3,1
   29570:	10fa3526 	beq	r2,r3,27e48 <__alt_mem_SDRAM_controller+0xfc027e48>
   29574:	00c00084 	movi	r3,2
   29578:	10fbcb26 	beq	r2,r3,284a8 <__alt_mem_SDRAM_controller+0xfc0284a8>
   2957c:	003a8f06 	br	27fbc <__alt_mem_SDRAM_controller+0xfc027fbc>
   29580:	010000f4 	movhi	r4,3
   29584:	2118d784 	addi	r4,r4,25438
   29588:	d9003515 	stw	r4,212(sp)
   2958c:	003b7606 	br	28368 <__alt_mem_SDRAM_controller+0xfc028368>
   29590:	d8802917 	ldw	r2,164(sp)
   29594:	00c00184 	movi	r3,6
   29598:	1880012e 	bgeu	r3,r2,295a0 <___vfprintf_internal_r+0x1ca0>
   2959c:	1805883a 	mov	r2,r3
   295a0:	d8802e15 	stw	r2,184(sp)
   295a4:	1000ef16 	blt	r2,zero,29964 <___vfprintf_internal_r+0x2064>
   295a8:	040000f4 	movhi	r16,3
   295ac:	d8802a15 	stw	r2,168(sp)
   295b0:	dcc02d15 	stw	r19,180(sp)
   295b4:	d8002915 	stw	zero,164(sp)
   295b8:	d8003215 	stw	zero,200(sp)
   295bc:	8418d104 	addi	r16,r16,25412
   295c0:	0039883a 	mov	fp,zero
   295c4:	003aa206 	br	28050 <__alt_mem_SDRAM_controller+0xfc028050>
   295c8:	0021883a 	mov	r16,zero
   295cc:	003e0706 	br	28dec <__alt_mem_SDRAM_controller+0xfc028dec>
   295d0:	d9002c17 	ldw	r4,176(sp)
   295d4:	d9801e04 	addi	r6,sp,120
   295d8:	b80b883a 	mov	r5,r23
   295dc:	002ee880 	call	2ee88 <__sprint_r>
   295e0:	1039c91e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   295e4:	d8802617 	ldw	r2,152(sp)
   295e8:	d9403317 	ldw	r5,204(sp)
   295ec:	d8c02017 	ldw	r3,128(sp)
   295f0:	da000404 	addi	r8,sp,16
   295f4:	2885c83a 	sub	r2,r5,r2
   295f8:	003dfb06 	br	28de8 <__alt_mem_SDRAM_controller+0xfc028de8>
   295fc:	9080004c 	andi	r2,r18,1
   29600:	103e8f1e 	bne	r2,zero,29040 <__alt_mem_SDRAM_controller+0xfc029040>
   29604:	d8802117 	ldw	r2,132(sp)
   29608:	003e9e06 	br	29084 <__alt_mem_SDRAM_controller+0xfc029084>
   2960c:	1025883a 	mov	r18,r2
   29610:	0039883a 	mov	fp,zero
   29614:	00800084 	movi	r2,2
   29618:	003fd306 	br	29568 <__alt_mem_SDRAM_controller+0xfc029568>
   2961c:	07000b44 	movi	fp,45
   29620:	df002785 	stb	fp,158(sp)
   29624:	003a4006 	br	27f28 <__alt_mem_SDRAM_controller+0xfc027f28>
   29628:	00c00b44 	movi	r3,45
   2962c:	d8c02785 	stb	r3,158(sp)
   29630:	d8802a15 	stw	r2,168(sp)
   29634:	dc802b17 	ldw	r18,172(sp)
   29638:	d8002915 	stw	zero,164(sp)
   2963c:	07000b44 	movi	fp,45
   29640:	003a8006 	br	28044 <__alt_mem_SDRAM_controller+0xfc028044>
   29644:	040000f4 	movhi	r16,3
   29648:	8418c604 	addi	r16,r16,25368
   2964c:	003f4706 	br	2936c <__alt_mem_SDRAM_controller+0xfc02936c>
   29650:	d8c02d17 	ldw	r3,180(sp)
   29654:	d9002f17 	ldw	r4,188(sp)
   29658:	18800017 	ldw	r2,0(r3)
   2965c:	18c00104 	addi	r3,r3,4
   29660:	d8c02d15 	stw	r3,180(sp)
   29664:	11000015 	stw	r4,0(r2)
   29668:	0038dd06 	br	279e0 <__alt_mem_SDRAM_controller+0xfc0279e0>
   2966c:	dd802617 	ldw	r22,152(sp)
   29670:	00bfff44 	movi	r2,-3
   29674:	b0801c16 	blt	r22,r2,296e8 <___vfprintf_internal_r+0x1de8>
   29678:	d9402917 	ldw	r5,164(sp)
   2967c:	2d801a16 	blt	r5,r22,296e8 <___vfprintf_internal_r+0x1de8>
   29680:	dd803215 	stw	r22,200(sp)
   29684:	003e8906 	br	290ac <__alt_mem_SDRAM_controller+0xfc0290ac>
   29688:	010000f4 	movhi	r4,3
   2968c:	2118d384 	addi	r4,r4,25422
   29690:	d9002b15 	stw	r4,172(sp)
   29694:	003c9106 	br	288dc <__alt_mem_SDRAM_controller+0xfc0288dc>
   29698:	e005883a 	mov	r2,fp
   2969c:	003e7906 	br	29084 <__alt_mem_SDRAM_controller+0xfc029084>
   296a0:	d9402917 	ldw	r5,164(sp)
   296a4:	df002783 	ldbu	fp,158(sp)
   296a8:	dcc02d15 	stw	r19,180(sp)
   296ac:	d9402a15 	stw	r5,168(sp)
   296b0:	d9402e15 	stw	r5,184(sp)
   296b4:	d8002915 	stw	zero,164(sp)
   296b8:	d8003215 	stw	zero,200(sp)
   296bc:	003a5d06 	br	28034 <__alt_mem_SDRAM_controller+0xfc028034>
   296c0:	9080004c 	andi	r2,r18,1
   296c4:	0039883a 	mov	fp,zero
   296c8:	10000426 	beq	r2,zero,296dc <___vfprintf_internal_r+0x1ddc>
   296cc:	00800c04 	movi	r2,48
   296d0:	dc001dc4 	addi	r16,sp,119
   296d4:	d8801dc5 	stb	r2,119(sp)
   296d8:	003b8006 	br	284dc <__alt_mem_SDRAM_controller+0xfc0284dc>
   296dc:	d8002e15 	stw	zero,184(sp)
   296e0:	dc001e04 	addi	r16,sp,120
   296e4:	003a4d06 	br	2801c <__alt_mem_SDRAM_controller+0xfc02801c>
   296e8:	8c7fff84 	addi	r17,r17,-2
   296ec:	b5bfffc4 	addi	r22,r22,-1
   296f0:	dd802615 	stw	r22,152(sp)
   296f4:	dc4022c5 	stb	r17,139(sp)
   296f8:	b000bf16 	blt	r22,zero,299f8 <___vfprintf_internal_r+0x20f8>
   296fc:	00800ac4 	movi	r2,43
   29700:	d8802305 	stb	r2,140(sp)
   29704:	00800244 	movi	r2,9
   29708:	15807016 	blt	r2,r22,298cc <___vfprintf_internal_r+0x1fcc>
   2970c:	00800c04 	movi	r2,48
   29710:	b5800c04 	addi	r22,r22,48
   29714:	d8802345 	stb	r2,141(sp)
   29718:	dd802385 	stb	r22,142(sp)
   2971c:	d88023c4 	addi	r2,sp,143
   29720:	df0022c4 	addi	fp,sp,139
   29724:	d8c03317 	ldw	r3,204(sp)
   29728:	1739c83a 	sub	fp,r2,fp
   2972c:	d9003317 	ldw	r4,204(sp)
   29730:	e0c7883a 	add	r3,fp,r3
   29734:	df003a15 	stw	fp,232(sp)
   29738:	d8c02e15 	stw	r3,184(sp)
   2973c:	00800044 	movi	r2,1
   29740:	1100b30e 	bge	r2,r4,29a10 <___vfprintf_internal_r+0x2110>
   29744:	d8c02e17 	ldw	r3,184(sp)
   29748:	18c00044 	addi	r3,r3,1
   2974c:	d8c02e15 	stw	r3,184(sp)
   29750:	1805883a 	mov	r2,r3
   29754:	1800ac16 	blt	r3,zero,29a08 <___vfprintf_internal_r+0x2108>
   29758:	d8003215 	stw	zero,200(sp)
   2975c:	003e5d06 	br	290d4 <__alt_mem_SDRAM_controller+0xfc0290d4>
   29760:	d9002c17 	ldw	r4,176(sp)
   29764:	d9801e04 	addi	r6,sp,120
   29768:	b80b883a 	mov	r5,r23
   2976c:	002ee880 	call	2ee88 <__sprint_r>
   29770:	1039651e 	bne	r2,zero,27d08 <__alt_mem_SDRAM_controller+0xfc027d08>
   29774:	dc402617 	ldw	r17,152(sp)
   29778:	d8c02017 	ldw	r3,128(sp)
   2977c:	d8801f17 	ldw	r2,124(sp)
   29780:	da000404 	addi	r8,sp,16
   29784:	003ed606 	br	292e0 <__alt_mem_SDRAM_controller+0xfc0292e0>
   29788:	582b883a 	mov	r21,r11
   2978c:	d8002915 	stw	zero,164(sp)
   29790:	0038bd06 	br	27a88 <__alt_mem_SDRAM_controller+0xfc027a88>
   29794:	d8802917 	ldw	r2,164(sp)
   29798:	103e071e 	bne	r2,zero,28fb8 <__alt_mem_SDRAM_controller+0xfc028fb8>
   2979c:	dc002915 	stw	r16,164(sp)
   297a0:	003e0506 	br	28fb8 <__alt_mem_SDRAM_controller+0xfc028fb8>
   297a4:	d9002917 	ldw	r4,164(sp)
   297a8:	20c00044 	addi	r3,r4,1
   297ac:	003e0f06 	br	28fec <__alt_mem_SDRAM_controller+0xfc028fec>
   297b0:	01400184 	movi	r5,6
   297b4:	d9402915 	stw	r5,164(sp)
   297b8:	003dff06 	br	28fb8 <__alt_mem_SDRAM_controller+0xfc028fb8>
   297bc:	d8802104 	addi	r2,sp,132
   297c0:	d8800315 	stw	r2,12(sp)
   297c4:	d8802504 	addi	r2,sp,148
   297c8:	d8800215 	stw	r2,8(sp)
   297cc:	d8802604 	addi	r2,sp,152
   297d0:	d8800115 	stw	r2,4(sp)
   297d4:	d8802917 	ldw	r2,164(sp)
   297d8:	d9403617 	ldw	r5,216(sp)
   297dc:	d9002c17 	ldw	r4,176(sp)
   297e0:	d8800015 	stw	r2,0(sp)
   297e4:	01c000c4 	movi	r7,3
   297e8:	980d883a 	mov	r6,r19
   297ec:	da003d15 	stw	r8,244(sp)
   297f0:	0029f240 	call	29f24 <_dtoa_r>
   297f4:	d8c02917 	ldw	r3,164(sp)
   297f8:	da003d17 	ldw	r8,244(sp)
   297fc:	1021883a 	mov	r16,r2
   29800:	10f9883a 	add	fp,r2,r3
   29804:	81000007 	ldb	r4,0(r16)
   29808:	00800c04 	movi	r2,48
   2980c:	20805e26 	beq	r4,r2,29988 <___vfprintf_internal_r+0x2088>
   29810:	d8c02617 	ldw	r3,152(sp)
   29814:	e0f9883a 	add	fp,fp,r3
   29818:	003e0a06 	br	29044 <__alt_mem_SDRAM_controller+0xfc029044>
   2981c:	00c00b44 	movi	r3,45
   29820:	24e0003c 	xorhi	r19,r4,32768
   29824:	d8c02a05 	stb	r3,168(sp)
   29828:	003de906 	br	28fd0 <__alt_mem_SDRAM_controller+0xfc028fd0>
   2982c:	d8c03217 	ldw	r3,200(sp)
   29830:	00c07a0e 	bge	zero,r3,29a1c <___vfprintf_internal_r+0x211c>
   29834:	00800044 	movi	r2,1
   29838:	d9003317 	ldw	r4,204(sp)
   2983c:	1105883a 	add	r2,r2,r4
   29840:	d8802e15 	stw	r2,184(sp)
   29844:	10004e16 	blt	r2,zero,29980 <___vfprintf_internal_r+0x2080>
   29848:	044019c4 	movi	r17,103
   2984c:	003e2106 	br	290d4 <__alt_mem_SDRAM_controller+0xfc0290d4>
   29850:	d9002917 	ldw	r4,164(sp)
   29854:	d8802104 	addi	r2,sp,132
   29858:	d8800315 	stw	r2,12(sp)
   2985c:	d9000015 	stw	r4,0(sp)
   29860:	d8802504 	addi	r2,sp,148
   29864:	d9403617 	ldw	r5,216(sp)
   29868:	d9002c17 	ldw	r4,176(sp)
   2986c:	d8800215 	stw	r2,8(sp)
   29870:	d8802604 	addi	r2,sp,152
   29874:	d8800115 	stw	r2,4(sp)
   29878:	01c000c4 	movi	r7,3
   2987c:	980d883a 	mov	r6,r19
   29880:	da003d15 	stw	r8,244(sp)
   29884:	0029f240 	call	29f24 <_dtoa_r>
   29888:	d8c02917 	ldw	r3,164(sp)
   2988c:	da003d17 	ldw	r8,244(sp)
   29890:	1021883a 	mov	r16,r2
   29894:	00801184 	movi	r2,70
   29898:	80f9883a 	add	fp,r16,r3
   2989c:	88bfd926 	beq	r17,r2,29804 <__alt_mem_SDRAM_controller+0xfc029804>
   298a0:	003de806 	br	29044 <__alt_mem_SDRAM_controller+0xfc029044>
   298a4:	d9002917 	ldw	r4,164(sp)
   298a8:	00c04d0e 	bge	zero,r3,299e0 <___vfprintf_internal_r+0x20e0>
   298ac:	2000441e 	bne	r4,zero,299c0 <___vfprintf_internal_r+0x20c0>
   298b0:	9480004c 	andi	r18,r18,1
   298b4:	9000421e 	bne	r18,zero,299c0 <___vfprintf_internal_r+0x20c0>
   298b8:	1805883a 	mov	r2,r3
   298bc:	18007016 	blt	r3,zero,29a80 <___vfprintf_internal_r+0x2180>
   298c0:	d8c03217 	ldw	r3,200(sp)
   298c4:	d8c02e15 	stw	r3,184(sp)
   298c8:	003e0206 	br	290d4 <__alt_mem_SDRAM_controller+0xfc0290d4>
   298cc:	df0022c4 	addi	fp,sp,139
   298d0:	dc002915 	stw	r16,164(sp)
   298d4:	4027883a 	mov	r19,r8
   298d8:	e021883a 	mov	r16,fp
   298dc:	b009883a 	mov	r4,r22
   298e0:	01400284 	movi	r5,10
   298e4:	00238700 	call	23870 <__modsi3>
   298e8:	10800c04 	addi	r2,r2,48
   298ec:	843fffc4 	addi	r16,r16,-1
   298f0:	b009883a 	mov	r4,r22
   298f4:	01400284 	movi	r5,10
   298f8:	80800005 	stb	r2,0(r16)
   298fc:	00237ec0 	call	237ec <__divsi3>
   29900:	102d883a 	mov	r22,r2
   29904:	00800244 	movi	r2,9
   29908:	15bff416 	blt	r2,r22,298dc <__alt_mem_SDRAM_controller+0xfc0298dc>
   2990c:	9811883a 	mov	r8,r19
   29910:	b0800c04 	addi	r2,r22,48
   29914:	8027883a 	mov	r19,r16
   29918:	997fffc4 	addi	r5,r19,-1
   2991c:	98bfffc5 	stb	r2,-1(r19)
   29920:	dc002917 	ldw	r16,164(sp)
   29924:	2f006a2e 	bgeu	r5,fp,29ad0 <___vfprintf_internal_r+0x21d0>
   29928:	d9c02384 	addi	r7,sp,142
   2992c:	3ccfc83a 	sub	r7,r7,r19
   29930:	d9002344 	addi	r4,sp,141
   29934:	e1cf883a 	add	r7,fp,r7
   29938:	00000106 	br	29940 <___vfprintf_internal_r+0x2040>
   2993c:	28800003 	ldbu	r2,0(r5)
   29940:	20800005 	stb	r2,0(r4)
   29944:	21000044 	addi	r4,r4,1
   29948:	29400044 	addi	r5,r5,1
   2994c:	393ffb1e 	bne	r7,r4,2993c <__alt_mem_SDRAM_controller+0xfc02993c>
   29950:	d8802304 	addi	r2,sp,140
   29954:	14c5c83a 	sub	r2,r2,r19
   29958:	d8c02344 	addi	r3,sp,141
   2995c:	1885883a 	add	r2,r3,r2
   29960:	003f7006 	br	29724 <__alt_mem_SDRAM_controller+0xfc029724>
   29964:	0005883a 	mov	r2,zero
   29968:	003f0f06 	br	295a8 <__alt_mem_SDRAM_controller+0xfc0295a8>
   2996c:	d8c03217 	ldw	r3,200(sp)
   29970:	18c00044 	addi	r3,r3,1
   29974:	d8c02e15 	stw	r3,184(sp)
   29978:	1805883a 	mov	r2,r3
   2997c:	183fb20e 	bge	r3,zero,29848 <__alt_mem_SDRAM_controller+0xfc029848>
   29980:	0005883a 	mov	r2,zero
   29984:	003fb006 	br	29848 <__alt_mem_SDRAM_controller+0xfc029848>
   29988:	d9003617 	ldw	r4,216(sp)
   2998c:	000d883a 	mov	r6,zero
   29990:	000f883a 	mov	r7,zero
   29994:	980b883a 	mov	r5,r19
   29998:	d8c03c15 	stw	r3,240(sp)
   2999c:	da003d15 	stw	r8,244(sp)
   299a0:	00260340 	call	26034 <__eqdf2>
   299a4:	d8c03c17 	ldw	r3,240(sp)
   299a8:	da003d17 	ldw	r8,244(sp)
   299ac:	103f9826 	beq	r2,zero,29810 <__alt_mem_SDRAM_controller+0xfc029810>
   299b0:	00800044 	movi	r2,1
   299b4:	10c7c83a 	sub	r3,r2,r3
   299b8:	d8c02615 	stw	r3,152(sp)
   299bc:	003f9506 	br	29814 <__alt_mem_SDRAM_controller+0xfc029814>
   299c0:	d9002917 	ldw	r4,164(sp)
   299c4:	d8c03217 	ldw	r3,200(sp)
   299c8:	20800044 	addi	r2,r4,1
   299cc:	1885883a 	add	r2,r3,r2
   299d0:	d8802e15 	stw	r2,184(sp)
   299d4:	103dbf0e 	bge	r2,zero,290d4 <__alt_mem_SDRAM_controller+0xfc0290d4>
   299d8:	0005883a 	mov	r2,zero
   299dc:	003dbd06 	br	290d4 <__alt_mem_SDRAM_controller+0xfc0290d4>
   299e0:	2000211e 	bne	r4,zero,29a68 <___vfprintf_internal_r+0x2168>
   299e4:	9480004c 	andi	r18,r18,1
   299e8:	90001f1e 	bne	r18,zero,29a68 <___vfprintf_internal_r+0x2168>
   299ec:	00800044 	movi	r2,1
   299f0:	d8802e15 	stw	r2,184(sp)
   299f4:	003db706 	br	290d4 <__alt_mem_SDRAM_controller+0xfc0290d4>
   299f8:	00800b44 	movi	r2,45
   299fc:	05adc83a 	sub	r22,zero,r22
   29a00:	d8802305 	stb	r2,140(sp)
   29a04:	003f3f06 	br	29704 <__alt_mem_SDRAM_controller+0xfc029704>
   29a08:	0005883a 	mov	r2,zero
   29a0c:	003f5206 	br	29758 <__alt_mem_SDRAM_controller+0xfc029758>
   29a10:	90a4703a 	and	r18,r18,r2
   29a14:	903f4e26 	beq	r18,zero,29750 <__alt_mem_SDRAM_controller+0xfc029750>
   29a18:	003f4a06 	br	29744 <__alt_mem_SDRAM_controller+0xfc029744>
   29a1c:	00800084 	movi	r2,2
   29a20:	10c5c83a 	sub	r2,r2,r3
   29a24:	003f8406 	br	29838 <__alt_mem_SDRAM_controller+0xfc029838>
   29a28:	d8802d17 	ldw	r2,180(sp)
   29a2c:	d9002d17 	ldw	r4,180(sp)
   29a30:	ac400043 	ldbu	r17,1(r21)
   29a34:	10800017 	ldw	r2,0(r2)
   29a38:	582b883a 	mov	r21,r11
   29a3c:	d8802915 	stw	r2,164(sp)
   29a40:	20800104 	addi	r2,r4,4
   29a44:	d9002917 	ldw	r4,164(sp)
   29a48:	d8802d15 	stw	r2,180(sp)
   29a4c:	203e7a0e 	bge	r4,zero,29438 <__alt_mem_SDRAM_controller+0xfc029438>
   29a50:	8c403fcc 	andi	r17,r17,255
   29a54:	00bfffc4 	movi	r2,-1
   29a58:	8c40201c 	xori	r17,r17,128
   29a5c:	d8802915 	stw	r2,164(sp)
   29a60:	8c7fe004 	addi	r17,r17,-128
   29a64:	00380706 	br	27a84 <__alt_mem_SDRAM_controller+0xfc027a84>
   29a68:	d8c02917 	ldw	r3,164(sp)
   29a6c:	18c00084 	addi	r3,r3,2
   29a70:	d8c02e15 	stw	r3,184(sp)
   29a74:	1805883a 	mov	r2,r3
   29a78:	183d960e 	bge	r3,zero,290d4 <__alt_mem_SDRAM_controller+0xfc0290d4>
   29a7c:	003fd606 	br	299d8 <__alt_mem_SDRAM_controller+0xfc0299d8>
   29a80:	0005883a 	mov	r2,zero
   29a84:	003f8e06 	br	298c0 <__alt_mem_SDRAM_controller+0xfc0298c0>
   29a88:	9080004c 	andi	r2,r18,1
   29a8c:	103f811e 	bne	r2,zero,29894 <__alt_mem_SDRAM_controller+0xfc029894>
   29a90:	d8802117 	ldw	r2,132(sp)
   29a94:	1405c83a 	sub	r2,r2,r16
   29a98:	d8803315 	stw	r2,204(sp)
   29a9c:	b47ef326 	beq	r22,r17,2966c <__alt_mem_SDRAM_controller+0xfc02966c>
   29aa0:	dd802617 	ldw	r22,152(sp)
   29aa4:	003f1106 	br	296ec <__alt_mem_SDRAM_controller+0xfc0296ec>
   29aa8:	d9c02785 	stb	r7,158(sp)
   29aac:	00390406 	br	27ec0 <__alt_mem_SDRAM_controller+0xfc027ec0>
   29ab0:	d9c02785 	stb	r7,158(sp)
   29ab4:	0038d306 	br	27e04 <__alt_mem_SDRAM_controller+0xfc027e04>
   29ab8:	d9c02785 	stb	r7,158(sp)
   29abc:	003a6106 	br	28444 <__alt_mem_SDRAM_controller+0xfc028444>
   29ac0:	d9c02785 	stb	r7,158(sp)
   29ac4:	003af806 	br	286a8 <__alt_mem_SDRAM_controller+0xfc0286a8>
   29ac8:	0005883a 	mov	r2,zero
   29acc:	003d7e06 	br	290c8 <__alt_mem_SDRAM_controller+0xfc0290c8>
   29ad0:	d8802344 	addi	r2,sp,141
   29ad4:	003f1306 	br	29724 <__alt_mem_SDRAM_controller+0xfc029724>
   29ad8:	d9c02785 	stb	r7,158(sp)
   29adc:	00392306 	br	27f6c <__alt_mem_SDRAM_controller+0xfc027f6c>
   29ae0:	d9c02785 	stb	r7,158(sp)
   29ae4:	003aa906 	br	2858c <__alt_mem_SDRAM_controller+0xfc02858c>
   29ae8:	d9c02785 	stb	r7,158(sp)
   29aec:	003a3d06 	br	283e4 <__alt_mem_SDRAM_controller+0xfc0283e4>
   29af0:	d9c02785 	stb	r7,158(sp)
   29af4:	003aca06 	br	28620 <__alt_mem_SDRAM_controller+0xfc028620>

00029af8 <__vfprintf_internal>:
   29af8:	00800134 	movhi	r2,4
   29afc:	10a04f04 	addi	r2,r2,-32452
   29b00:	300f883a 	mov	r7,r6
   29b04:	280d883a 	mov	r6,r5
   29b08:	200b883a 	mov	r5,r4
   29b0c:	11000017 	ldw	r4,0(r2)
   29b10:	00279001 	jmpi	27900 <___vfprintf_internal_r>

00029b14 <__sbprintf>:
   29b14:	2880030b 	ldhu	r2,12(r5)
   29b18:	2ac01917 	ldw	r11,100(r5)
   29b1c:	2a80038b 	ldhu	r10,14(r5)
   29b20:	2a400717 	ldw	r9,28(r5)
   29b24:	2a000917 	ldw	r8,36(r5)
   29b28:	defee204 	addi	sp,sp,-1144
   29b2c:	00c10004 	movi	r3,1024
   29b30:	dc011a15 	stw	r16,1128(sp)
   29b34:	10bfff4c 	andi	r2,r2,65533
   29b38:	2821883a 	mov	r16,r5
   29b3c:	d8cb883a 	add	r5,sp,r3
   29b40:	dc811c15 	stw	r18,1136(sp)
   29b44:	dc411b15 	stw	r17,1132(sp)
   29b48:	dfc11d15 	stw	ra,1140(sp)
   29b4c:	2025883a 	mov	r18,r4
   29b50:	d881030d 	sth	r2,1036(sp)
   29b54:	dac11915 	stw	r11,1124(sp)
   29b58:	da81038d 	sth	r10,1038(sp)
   29b5c:	da410715 	stw	r9,1052(sp)
   29b60:	da010915 	stw	r8,1060(sp)
   29b64:	dec10015 	stw	sp,1024(sp)
   29b68:	dec10415 	stw	sp,1040(sp)
   29b6c:	d8c10215 	stw	r3,1032(sp)
   29b70:	d8c10515 	stw	r3,1044(sp)
   29b74:	d8010615 	stw	zero,1048(sp)
   29b78:	00279000 	call	27900 <___vfprintf_internal_r>
   29b7c:	1023883a 	mov	r17,r2
   29b80:	10000416 	blt	r2,zero,29b94 <__sbprintf+0x80>
   29b84:	d9410004 	addi	r5,sp,1024
   29b88:	9009883a 	mov	r4,r18
   29b8c:	002b7c80 	call	2b7c8 <_fflush_r>
   29b90:	10000d1e 	bne	r2,zero,29bc8 <__sbprintf+0xb4>
   29b94:	d881030b 	ldhu	r2,1036(sp)
   29b98:	1080100c 	andi	r2,r2,64
   29b9c:	10000326 	beq	r2,zero,29bac <__sbprintf+0x98>
   29ba0:	8080030b 	ldhu	r2,12(r16)
   29ba4:	10801014 	ori	r2,r2,64
   29ba8:	8080030d 	sth	r2,12(r16)
   29bac:	8805883a 	mov	r2,r17
   29bb0:	dfc11d17 	ldw	ra,1140(sp)
   29bb4:	dc811c17 	ldw	r18,1136(sp)
   29bb8:	dc411b17 	ldw	r17,1132(sp)
   29bbc:	dc011a17 	ldw	r16,1128(sp)
   29bc0:	dec11e04 	addi	sp,sp,1144
   29bc4:	f800283a 	ret
   29bc8:	047fffc4 	movi	r17,-1
   29bcc:	003ff106 	br	29b94 <__alt_mem_SDRAM_controller+0xfc029b94>

00029bd0 <__swsetup_r>:
   29bd0:	00800134 	movhi	r2,4
   29bd4:	defffd04 	addi	sp,sp,-12
   29bd8:	10a04f04 	addi	r2,r2,-32452
   29bdc:	dc400115 	stw	r17,4(sp)
   29be0:	2023883a 	mov	r17,r4
   29be4:	11000017 	ldw	r4,0(r2)
   29be8:	dc000015 	stw	r16,0(sp)
   29bec:	dfc00215 	stw	ra,8(sp)
   29bf0:	2821883a 	mov	r16,r5
   29bf4:	20000226 	beq	r4,zero,29c00 <__swsetup_r+0x30>
   29bf8:	20800e17 	ldw	r2,56(r4)
   29bfc:	10003126 	beq	r2,zero,29cc4 <__swsetup_r+0xf4>
   29c00:	8080030b 	ldhu	r2,12(r16)
   29c04:	10c0020c 	andi	r3,r2,8
   29c08:	1009883a 	mov	r4,r2
   29c0c:	18000f26 	beq	r3,zero,29c4c <__swsetup_r+0x7c>
   29c10:	80c00417 	ldw	r3,16(r16)
   29c14:	18001526 	beq	r3,zero,29c6c <__swsetup_r+0x9c>
   29c18:	1100004c 	andi	r4,r2,1
   29c1c:	20001c1e 	bne	r4,zero,29c90 <__swsetup_r+0xc0>
   29c20:	1080008c 	andi	r2,r2,2
   29c24:	1000291e 	bne	r2,zero,29ccc <__swsetup_r+0xfc>
   29c28:	80800517 	ldw	r2,20(r16)
   29c2c:	80800215 	stw	r2,8(r16)
   29c30:	18001c26 	beq	r3,zero,29ca4 <__swsetup_r+0xd4>
   29c34:	0005883a 	mov	r2,zero
   29c38:	dfc00217 	ldw	ra,8(sp)
   29c3c:	dc400117 	ldw	r17,4(sp)
   29c40:	dc000017 	ldw	r16,0(sp)
   29c44:	dec00304 	addi	sp,sp,12
   29c48:	f800283a 	ret
   29c4c:	2080040c 	andi	r2,r4,16
   29c50:	10002e26 	beq	r2,zero,29d0c <__swsetup_r+0x13c>
   29c54:	2080010c 	andi	r2,r4,4
   29c58:	10001e1e 	bne	r2,zero,29cd4 <__swsetup_r+0x104>
   29c5c:	80c00417 	ldw	r3,16(r16)
   29c60:	20800214 	ori	r2,r4,8
   29c64:	8080030d 	sth	r2,12(r16)
   29c68:	183feb1e 	bne	r3,zero,29c18 <__alt_mem_SDRAM_controller+0xfc029c18>
   29c6c:	1100a00c 	andi	r4,r2,640
   29c70:	01408004 	movi	r5,512
   29c74:	217fe826 	beq	r4,r5,29c18 <__alt_mem_SDRAM_controller+0xfc029c18>
   29c78:	800b883a 	mov	r5,r16
   29c7c:	8809883a 	mov	r4,r17
   29c80:	002c7480 	call	2c748 <__smakebuf_r>
   29c84:	8080030b 	ldhu	r2,12(r16)
   29c88:	80c00417 	ldw	r3,16(r16)
   29c8c:	003fe206 	br	29c18 <__alt_mem_SDRAM_controller+0xfc029c18>
   29c90:	80800517 	ldw	r2,20(r16)
   29c94:	80000215 	stw	zero,8(r16)
   29c98:	0085c83a 	sub	r2,zero,r2
   29c9c:	80800615 	stw	r2,24(r16)
   29ca0:	183fe41e 	bne	r3,zero,29c34 <__alt_mem_SDRAM_controller+0xfc029c34>
   29ca4:	80c0030b 	ldhu	r3,12(r16)
   29ca8:	0005883a 	mov	r2,zero
   29cac:	1900200c 	andi	r4,r3,128
   29cb0:	203fe126 	beq	r4,zero,29c38 <__alt_mem_SDRAM_controller+0xfc029c38>
   29cb4:	18c01014 	ori	r3,r3,64
   29cb8:	80c0030d 	sth	r3,12(r16)
   29cbc:	00bfffc4 	movi	r2,-1
   29cc0:	003fdd06 	br	29c38 <__alt_mem_SDRAM_controller+0xfc029c38>
   29cc4:	002bba40 	call	2bba4 <__sinit>
   29cc8:	003fcd06 	br	29c00 <__alt_mem_SDRAM_controller+0xfc029c00>
   29ccc:	0005883a 	mov	r2,zero
   29cd0:	003fd606 	br	29c2c <__alt_mem_SDRAM_controller+0xfc029c2c>
   29cd4:	81400c17 	ldw	r5,48(r16)
   29cd8:	28000626 	beq	r5,zero,29cf4 <__swsetup_r+0x124>
   29cdc:	80801004 	addi	r2,r16,64
   29ce0:	28800326 	beq	r5,r2,29cf0 <__swsetup_r+0x120>
   29ce4:	8809883a 	mov	r4,r17
   29ce8:	002bd180 	call	2bd18 <_free_r>
   29cec:	8100030b 	ldhu	r4,12(r16)
   29cf0:	80000c15 	stw	zero,48(r16)
   29cf4:	80c00417 	ldw	r3,16(r16)
   29cf8:	00bff6c4 	movi	r2,-37
   29cfc:	1108703a 	and	r4,r2,r4
   29d00:	80000115 	stw	zero,4(r16)
   29d04:	80c00015 	stw	r3,0(r16)
   29d08:	003fd506 	br	29c60 <__alt_mem_SDRAM_controller+0xfc029c60>
   29d0c:	00800244 	movi	r2,9
   29d10:	88800015 	stw	r2,0(r17)
   29d14:	20801014 	ori	r2,r4,64
   29d18:	8080030d 	sth	r2,12(r16)
   29d1c:	00bfffc4 	movi	r2,-1
   29d20:	003fc506 	br	29c38 <__alt_mem_SDRAM_controller+0xfc029c38>

00029d24 <quorem>:
   29d24:	defff704 	addi	sp,sp,-36
   29d28:	dc800215 	stw	r18,8(sp)
   29d2c:	20800417 	ldw	r2,16(r4)
   29d30:	2c800417 	ldw	r18,16(r5)
   29d34:	dfc00815 	stw	ra,32(sp)
   29d38:	ddc00715 	stw	r23,28(sp)
   29d3c:	dd800615 	stw	r22,24(sp)
   29d40:	dd400515 	stw	r21,20(sp)
   29d44:	dd000415 	stw	r20,16(sp)
   29d48:	dcc00315 	stw	r19,12(sp)
   29d4c:	dc400115 	stw	r17,4(sp)
   29d50:	dc000015 	stw	r16,0(sp)
   29d54:	14807116 	blt	r2,r18,29f1c <quorem+0x1f8>
   29d58:	94bfffc4 	addi	r18,r18,-1
   29d5c:	94ad883a 	add	r22,r18,r18
   29d60:	b5ad883a 	add	r22,r22,r22
   29d64:	2c400504 	addi	r17,r5,20
   29d68:	8da9883a 	add	r20,r17,r22
   29d6c:	25400504 	addi	r21,r4,20
   29d70:	282f883a 	mov	r23,r5
   29d74:	adad883a 	add	r22,r21,r22
   29d78:	a1400017 	ldw	r5,0(r20)
   29d7c:	2021883a 	mov	r16,r4
   29d80:	b1000017 	ldw	r4,0(r22)
   29d84:	29400044 	addi	r5,r5,1
   29d88:	00238e40 	call	238e4 <__udivsi3>
   29d8c:	1027883a 	mov	r19,r2
   29d90:	10002c26 	beq	r2,zero,29e44 <quorem+0x120>
   29d94:	a813883a 	mov	r9,r21
   29d98:	880b883a 	mov	r5,r17
   29d9c:	0009883a 	mov	r4,zero
   29da0:	000d883a 	mov	r6,zero
   29da4:	2a000017 	ldw	r8,0(r5)
   29da8:	49c00017 	ldw	r7,0(r9)
   29dac:	29400104 	addi	r5,r5,4
   29db0:	40bfffcc 	andi	r2,r8,65535
   29db4:	14c5383a 	mul	r2,r2,r19
   29db8:	4010d43a 	srli	r8,r8,16
   29dbc:	38ffffcc 	andi	r3,r7,65535
   29dc0:	1105883a 	add	r2,r2,r4
   29dc4:	1008d43a 	srli	r4,r2,16
   29dc8:	44d1383a 	mul	r8,r8,r19
   29dcc:	198d883a 	add	r6,r3,r6
   29dd0:	10ffffcc 	andi	r3,r2,65535
   29dd4:	30c7c83a 	sub	r3,r6,r3
   29dd8:	380ed43a 	srli	r7,r7,16
   29ddc:	4105883a 	add	r2,r8,r4
   29de0:	180dd43a 	srai	r6,r3,16
   29de4:	113fffcc 	andi	r4,r2,65535
   29de8:	390fc83a 	sub	r7,r7,r4
   29dec:	398d883a 	add	r6,r7,r6
   29df0:	300e943a 	slli	r7,r6,16
   29df4:	18ffffcc 	andi	r3,r3,65535
   29df8:	1008d43a 	srli	r4,r2,16
   29dfc:	38ceb03a 	or	r7,r7,r3
   29e00:	49c00015 	stw	r7,0(r9)
   29e04:	300dd43a 	srai	r6,r6,16
   29e08:	4a400104 	addi	r9,r9,4
   29e0c:	a17fe52e 	bgeu	r20,r5,29da4 <__alt_mem_SDRAM_controller+0xfc029da4>
   29e10:	b0800017 	ldw	r2,0(r22)
   29e14:	10000b1e 	bne	r2,zero,29e44 <quorem+0x120>
   29e18:	b0bfff04 	addi	r2,r22,-4
   29e1c:	a880082e 	bgeu	r21,r2,29e40 <quorem+0x11c>
   29e20:	b0ffff17 	ldw	r3,-4(r22)
   29e24:	18000326 	beq	r3,zero,29e34 <quorem+0x110>
   29e28:	00000506 	br	29e40 <quorem+0x11c>
   29e2c:	10c00017 	ldw	r3,0(r2)
   29e30:	1800031e 	bne	r3,zero,29e40 <quorem+0x11c>
   29e34:	10bfff04 	addi	r2,r2,-4
   29e38:	94bfffc4 	addi	r18,r18,-1
   29e3c:	a8bffb36 	bltu	r21,r2,29e2c <__alt_mem_SDRAM_controller+0xfc029e2c>
   29e40:	84800415 	stw	r18,16(r16)
   29e44:	b80b883a 	mov	r5,r23
   29e48:	8009883a 	mov	r4,r16
   29e4c:	002de880 	call	2de88 <__mcmp>
   29e50:	10002616 	blt	r2,zero,29eec <quorem+0x1c8>
   29e54:	9cc00044 	addi	r19,r19,1
   29e58:	a805883a 	mov	r2,r21
   29e5c:	000b883a 	mov	r5,zero
   29e60:	11000017 	ldw	r4,0(r2)
   29e64:	89800017 	ldw	r6,0(r17)
   29e68:	10800104 	addi	r2,r2,4
   29e6c:	20ffffcc 	andi	r3,r4,65535
   29e70:	194b883a 	add	r5,r3,r5
   29e74:	30ffffcc 	andi	r3,r6,65535
   29e78:	28c7c83a 	sub	r3,r5,r3
   29e7c:	300cd43a 	srli	r6,r6,16
   29e80:	2008d43a 	srli	r4,r4,16
   29e84:	180bd43a 	srai	r5,r3,16
   29e88:	18ffffcc 	andi	r3,r3,65535
   29e8c:	2189c83a 	sub	r4,r4,r6
   29e90:	2149883a 	add	r4,r4,r5
   29e94:	200c943a 	slli	r6,r4,16
   29e98:	8c400104 	addi	r17,r17,4
   29e9c:	200bd43a 	srai	r5,r4,16
   29ea0:	30c6b03a 	or	r3,r6,r3
   29ea4:	10ffff15 	stw	r3,-4(r2)
   29ea8:	a47fed2e 	bgeu	r20,r17,29e60 <__alt_mem_SDRAM_controller+0xfc029e60>
   29eac:	9485883a 	add	r2,r18,r18
   29eb0:	1085883a 	add	r2,r2,r2
   29eb4:	a887883a 	add	r3,r21,r2
   29eb8:	18800017 	ldw	r2,0(r3)
   29ebc:	10000b1e 	bne	r2,zero,29eec <quorem+0x1c8>
   29ec0:	18bfff04 	addi	r2,r3,-4
   29ec4:	a880082e 	bgeu	r21,r2,29ee8 <quorem+0x1c4>
   29ec8:	18ffff17 	ldw	r3,-4(r3)
   29ecc:	18000326 	beq	r3,zero,29edc <quorem+0x1b8>
   29ed0:	00000506 	br	29ee8 <quorem+0x1c4>
   29ed4:	10c00017 	ldw	r3,0(r2)
   29ed8:	1800031e 	bne	r3,zero,29ee8 <quorem+0x1c4>
   29edc:	10bfff04 	addi	r2,r2,-4
   29ee0:	94bfffc4 	addi	r18,r18,-1
   29ee4:	a8bffb36 	bltu	r21,r2,29ed4 <__alt_mem_SDRAM_controller+0xfc029ed4>
   29ee8:	84800415 	stw	r18,16(r16)
   29eec:	9805883a 	mov	r2,r19
   29ef0:	dfc00817 	ldw	ra,32(sp)
   29ef4:	ddc00717 	ldw	r23,28(sp)
   29ef8:	dd800617 	ldw	r22,24(sp)
   29efc:	dd400517 	ldw	r21,20(sp)
   29f00:	dd000417 	ldw	r20,16(sp)
   29f04:	dcc00317 	ldw	r19,12(sp)
   29f08:	dc800217 	ldw	r18,8(sp)
   29f0c:	dc400117 	ldw	r17,4(sp)
   29f10:	dc000017 	ldw	r16,0(sp)
   29f14:	dec00904 	addi	sp,sp,36
   29f18:	f800283a 	ret
   29f1c:	0005883a 	mov	r2,zero
   29f20:	003ff306 	br	29ef0 <__alt_mem_SDRAM_controller+0xfc029ef0>

00029f24 <_dtoa_r>:
   29f24:	20801017 	ldw	r2,64(r4)
   29f28:	deffde04 	addi	sp,sp,-136
   29f2c:	df002015 	stw	fp,128(sp)
   29f30:	dcc01b15 	stw	r19,108(sp)
   29f34:	dc801a15 	stw	r18,104(sp)
   29f38:	dc401915 	stw	r17,100(sp)
   29f3c:	dc001815 	stw	r16,96(sp)
   29f40:	dfc02115 	stw	ra,132(sp)
   29f44:	ddc01f15 	stw	r23,124(sp)
   29f48:	dd801e15 	stw	r22,120(sp)
   29f4c:	dd401d15 	stw	r21,116(sp)
   29f50:	dd001c15 	stw	r20,112(sp)
   29f54:	d9c00315 	stw	r7,12(sp)
   29f58:	2039883a 	mov	fp,r4
   29f5c:	3023883a 	mov	r17,r6
   29f60:	2825883a 	mov	r18,r5
   29f64:	dc002417 	ldw	r16,144(sp)
   29f68:	3027883a 	mov	r19,r6
   29f6c:	10000826 	beq	r2,zero,29f90 <_dtoa_r+0x6c>
   29f70:	21801117 	ldw	r6,68(r4)
   29f74:	00c00044 	movi	r3,1
   29f78:	100b883a 	mov	r5,r2
   29f7c:	1986983a 	sll	r3,r3,r6
   29f80:	11800115 	stw	r6,4(r2)
   29f84:	10c00215 	stw	r3,8(r2)
   29f88:	002d6680 	call	2d668 <_Bfree>
   29f8c:	e0001015 	stw	zero,64(fp)
   29f90:	88002e16 	blt	r17,zero,2a04c <_dtoa_r+0x128>
   29f94:	80000015 	stw	zero,0(r16)
   29f98:	889ffc2c 	andhi	r2,r17,32752
   29f9c:	00dffc34 	movhi	r3,32752
   29fa0:	10c01c26 	beq	r2,r3,2a014 <_dtoa_r+0xf0>
   29fa4:	000d883a 	mov	r6,zero
   29fa8:	000f883a 	mov	r7,zero
   29fac:	9009883a 	mov	r4,r18
   29fb0:	980b883a 	mov	r5,r19
   29fb4:	00260340 	call	26034 <__eqdf2>
   29fb8:	10002b1e 	bne	r2,zero,2a068 <_dtoa_r+0x144>
   29fbc:	d9c02317 	ldw	r7,140(sp)
   29fc0:	00800044 	movi	r2,1
   29fc4:	38800015 	stw	r2,0(r7)
   29fc8:	d8802517 	ldw	r2,148(sp)
   29fcc:	10019e26 	beq	r2,zero,2a648 <_dtoa_r+0x724>
   29fd0:	d8c02517 	ldw	r3,148(sp)
   29fd4:	008000f4 	movhi	r2,3
   29fd8:	1098d344 	addi	r2,r2,25421
   29fdc:	18800015 	stw	r2,0(r3)
   29fe0:	10bfffc4 	addi	r2,r2,-1
   29fe4:	dfc02117 	ldw	ra,132(sp)
   29fe8:	df002017 	ldw	fp,128(sp)
   29fec:	ddc01f17 	ldw	r23,124(sp)
   29ff0:	dd801e17 	ldw	r22,120(sp)
   29ff4:	dd401d17 	ldw	r21,116(sp)
   29ff8:	dd001c17 	ldw	r20,112(sp)
   29ffc:	dcc01b17 	ldw	r19,108(sp)
   2a000:	dc801a17 	ldw	r18,104(sp)
   2a004:	dc401917 	ldw	r17,100(sp)
   2a008:	dc001817 	ldw	r16,96(sp)
   2a00c:	dec02204 	addi	sp,sp,136
   2a010:	f800283a 	ret
   2a014:	d8c02317 	ldw	r3,140(sp)
   2a018:	0089c3c4 	movi	r2,9999
   2a01c:	18800015 	stw	r2,0(r3)
   2a020:	90017726 	beq	r18,zero,2a600 <_dtoa_r+0x6dc>
   2a024:	008000f4 	movhi	r2,3
   2a028:	1098df04 	addi	r2,r2,25468
   2a02c:	d9002517 	ldw	r4,148(sp)
   2a030:	203fec26 	beq	r4,zero,29fe4 <__alt_mem_SDRAM_controller+0xfc029fe4>
   2a034:	10c000c7 	ldb	r3,3(r2)
   2a038:	1801781e 	bne	r3,zero,2a61c <_dtoa_r+0x6f8>
   2a03c:	10c000c4 	addi	r3,r2,3
   2a040:	d9802517 	ldw	r6,148(sp)
   2a044:	30c00015 	stw	r3,0(r6)
   2a048:	003fe606 	br	29fe4 <__alt_mem_SDRAM_controller+0xfc029fe4>
   2a04c:	04e00034 	movhi	r19,32768
   2a050:	9cffffc4 	addi	r19,r19,-1
   2a054:	00800044 	movi	r2,1
   2a058:	8ce6703a 	and	r19,r17,r19
   2a05c:	80800015 	stw	r2,0(r16)
   2a060:	9823883a 	mov	r17,r19
   2a064:	003fcc06 	br	29f98 <__alt_mem_SDRAM_controller+0xfc029f98>
   2a068:	d8800204 	addi	r2,sp,8
   2a06c:	d8800015 	stw	r2,0(sp)
   2a070:	d9c00104 	addi	r7,sp,4
   2a074:	900b883a 	mov	r5,r18
   2a078:	980d883a 	mov	r6,r19
   2a07c:	e009883a 	mov	r4,fp
   2a080:	8820d53a 	srli	r16,r17,20
   2a084:	002e2540 	call	2e254 <__d2b>
   2a088:	d8800915 	stw	r2,36(sp)
   2a08c:	8001651e 	bne	r16,zero,2a624 <_dtoa_r+0x700>
   2a090:	dd800217 	ldw	r22,8(sp)
   2a094:	dc000117 	ldw	r16,4(sp)
   2a098:	00800804 	movi	r2,32
   2a09c:	b421883a 	add	r16,r22,r16
   2a0a0:	80c10c84 	addi	r3,r16,1074
   2a0a4:	10c2d10e 	bge	r2,r3,2abec <_dtoa_r+0xcc8>
   2a0a8:	00801004 	movi	r2,64
   2a0ac:	81010484 	addi	r4,r16,1042
   2a0b0:	10c7c83a 	sub	r3,r2,r3
   2a0b4:	9108d83a 	srl	r4,r18,r4
   2a0b8:	88e2983a 	sll	r17,r17,r3
   2a0bc:	2448b03a 	or	r4,r4,r17
   2a0c0:	00317b80 	call	317b8 <__floatunsidf>
   2a0c4:	017f8434 	movhi	r5,65040
   2a0c8:	01800044 	movi	r6,1
   2a0cc:	1009883a 	mov	r4,r2
   2a0d0:	194b883a 	add	r5,r3,r5
   2a0d4:	843fffc4 	addi	r16,r16,-1
   2a0d8:	d9801115 	stw	r6,68(sp)
   2a0dc:	000d883a 	mov	r6,zero
   2a0e0:	01cffe34 	movhi	r7,16376
   2a0e4:	00269a40 	call	269a4 <__subdf3>
   2a0e8:	0198dbf4 	movhi	r6,25455
   2a0ec:	01cff4f4 	movhi	r7,16339
   2a0f0:	3190d844 	addi	r6,r6,17249
   2a0f4:	39e1e9c4 	addi	r7,r7,-30809
   2a0f8:	1009883a 	mov	r4,r2
   2a0fc:	180b883a 	mov	r5,r3
   2a100:	002628c0 	call	2628c <__muldf3>
   2a104:	01a2d874 	movhi	r6,35681
   2a108:	01cff1f4 	movhi	r7,16327
   2a10c:	31b22cc4 	addi	r6,r6,-14157
   2a110:	39e28a04 	addi	r7,r7,-30168
   2a114:	180b883a 	mov	r5,r3
   2a118:	1009883a 	mov	r4,r2
   2a11c:	0024ea00 	call	24ea0 <__adddf3>
   2a120:	8009883a 	mov	r4,r16
   2a124:	1029883a 	mov	r20,r2
   2a128:	1823883a 	mov	r17,r3
   2a12c:	00273200 	call	27320 <__floatsidf>
   2a130:	019427f4 	movhi	r6,20639
   2a134:	01cff4f4 	movhi	r7,16339
   2a138:	319e7ec4 	addi	r6,r6,31227
   2a13c:	39d104c4 	addi	r7,r7,17427
   2a140:	1009883a 	mov	r4,r2
   2a144:	180b883a 	mov	r5,r3
   2a148:	002628c0 	call	2628c <__muldf3>
   2a14c:	100d883a 	mov	r6,r2
   2a150:	180f883a 	mov	r7,r3
   2a154:	a009883a 	mov	r4,r20
   2a158:	880b883a 	mov	r5,r17
   2a15c:	0024ea00 	call	24ea0 <__adddf3>
   2a160:	1009883a 	mov	r4,r2
   2a164:	180b883a 	mov	r5,r3
   2a168:	1029883a 	mov	r20,r2
   2a16c:	1823883a 	mov	r17,r3
   2a170:	00272a00 	call	272a0 <__fixdfsi>
   2a174:	000d883a 	mov	r6,zero
   2a178:	000f883a 	mov	r7,zero
   2a17c:	a009883a 	mov	r4,r20
   2a180:	880b883a 	mov	r5,r17
   2a184:	d8800515 	stw	r2,20(sp)
   2a188:	00261980 	call	26198 <__ledf2>
   2a18c:	10028716 	blt	r2,zero,2abac <_dtoa_r+0xc88>
   2a190:	d8c00517 	ldw	r3,20(sp)
   2a194:	00800584 	movi	r2,22
   2a198:	10c27536 	bltu	r2,r3,2ab70 <_dtoa_r+0xc4c>
   2a19c:	180490fa 	slli	r2,r3,3
   2a1a0:	00c000f4 	movhi	r3,3
   2a1a4:	18d8fa04 	addi	r3,r3,25576
   2a1a8:	1885883a 	add	r2,r3,r2
   2a1ac:	11000017 	ldw	r4,0(r2)
   2a1b0:	11400117 	ldw	r5,4(r2)
   2a1b4:	900d883a 	mov	r6,r18
   2a1b8:	980f883a 	mov	r7,r19
   2a1bc:	00260bc0 	call	260bc <__gedf2>
   2a1c0:	00828d0e 	bge	zero,r2,2abf8 <_dtoa_r+0xcd4>
   2a1c4:	d9000517 	ldw	r4,20(sp)
   2a1c8:	d8000e15 	stw	zero,56(sp)
   2a1cc:	213fffc4 	addi	r4,r4,-1
   2a1d0:	d9000515 	stw	r4,20(sp)
   2a1d4:	b42dc83a 	sub	r22,r22,r16
   2a1d8:	b5bfffc4 	addi	r22,r22,-1
   2a1dc:	b0026f16 	blt	r22,zero,2ab9c <_dtoa_r+0xc78>
   2a1e0:	d8000815 	stw	zero,32(sp)
   2a1e4:	d9c00517 	ldw	r7,20(sp)
   2a1e8:	38026416 	blt	r7,zero,2ab7c <_dtoa_r+0xc58>
   2a1ec:	b1ed883a 	add	r22,r22,r7
   2a1f0:	d9c00d15 	stw	r7,52(sp)
   2a1f4:	d8000a15 	stw	zero,40(sp)
   2a1f8:	d9800317 	ldw	r6,12(sp)
   2a1fc:	00800244 	movi	r2,9
   2a200:	11811436 	bltu	r2,r6,2a654 <_dtoa_r+0x730>
   2a204:	00800144 	movi	r2,5
   2a208:	1184e10e 	bge	r2,r6,2b590 <_dtoa_r+0x166c>
   2a20c:	31bfff04 	addi	r6,r6,-4
   2a210:	d9800315 	stw	r6,12(sp)
   2a214:	0023883a 	mov	r17,zero
   2a218:	d9800317 	ldw	r6,12(sp)
   2a21c:	008000c4 	movi	r2,3
   2a220:	30836726 	beq	r6,r2,2afc0 <_dtoa_r+0x109c>
   2a224:	1183410e 	bge	r2,r6,2af2c <_dtoa_r+0x1008>
   2a228:	d9c00317 	ldw	r7,12(sp)
   2a22c:	00800104 	movi	r2,4
   2a230:	38827c26 	beq	r7,r2,2ac24 <_dtoa_r+0xd00>
   2a234:	00800144 	movi	r2,5
   2a238:	3884c41e 	bne	r7,r2,2b54c <_dtoa_r+0x1628>
   2a23c:	00800044 	movi	r2,1
   2a240:	d8800b15 	stw	r2,44(sp)
   2a244:	d8c00517 	ldw	r3,20(sp)
   2a248:	d9002217 	ldw	r4,136(sp)
   2a24c:	1907883a 	add	r3,r3,r4
   2a250:	19800044 	addi	r6,r3,1
   2a254:	d8c00c15 	stw	r3,48(sp)
   2a258:	d9800615 	stw	r6,24(sp)
   2a25c:	0183a40e 	bge	zero,r6,2b0f0 <_dtoa_r+0x11cc>
   2a260:	d9800617 	ldw	r6,24(sp)
   2a264:	3021883a 	mov	r16,r6
   2a268:	e0001115 	stw	zero,68(fp)
   2a26c:	008005c4 	movi	r2,23
   2a270:	1184c92e 	bgeu	r2,r6,2b598 <_dtoa_r+0x1674>
   2a274:	00c00044 	movi	r3,1
   2a278:	00800104 	movi	r2,4
   2a27c:	1085883a 	add	r2,r2,r2
   2a280:	11000504 	addi	r4,r2,20
   2a284:	180b883a 	mov	r5,r3
   2a288:	18c00044 	addi	r3,r3,1
   2a28c:	313ffb2e 	bgeu	r6,r4,2a27c <__alt_mem_SDRAM_controller+0xfc02a27c>
   2a290:	e1401115 	stw	r5,68(fp)
   2a294:	e009883a 	mov	r4,fp
   2a298:	002d5c00 	call	2d5c0 <_Balloc>
   2a29c:	d8800715 	stw	r2,28(sp)
   2a2a0:	e0801015 	stw	r2,64(fp)
   2a2a4:	00800384 	movi	r2,14
   2a2a8:	1400f736 	bltu	r2,r16,2a688 <_dtoa_r+0x764>
   2a2ac:	8800f626 	beq	r17,zero,2a688 <_dtoa_r+0x764>
   2a2b0:	d9c00517 	ldw	r7,20(sp)
   2a2b4:	01c39a0e 	bge	zero,r7,2b120 <_dtoa_r+0x11fc>
   2a2b8:	388003cc 	andi	r2,r7,15
   2a2bc:	100490fa 	slli	r2,r2,3
   2a2c0:	382bd13a 	srai	r21,r7,4
   2a2c4:	00c000f4 	movhi	r3,3
   2a2c8:	18d8fa04 	addi	r3,r3,25576
   2a2cc:	1885883a 	add	r2,r3,r2
   2a2d0:	a8c0040c 	andi	r3,r21,16
   2a2d4:	12400017 	ldw	r9,0(r2)
   2a2d8:	12000117 	ldw	r8,4(r2)
   2a2dc:	18037926 	beq	r3,zero,2b0c4 <_dtoa_r+0x11a0>
   2a2e0:	008000f4 	movhi	r2,3
   2a2e4:	1098f004 	addi	r2,r2,25536
   2a2e8:	11800817 	ldw	r6,32(r2)
   2a2ec:	11c00917 	ldw	r7,36(r2)
   2a2f0:	9009883a 	mov	r4,r18
   2a2f4:	980b883a 	mov	r5,r19
   2a2f8:	da001715 	stw	r8,92(sp)
   2a2fc:	da401615 	stw	r9,88(sp)
   2a300:	002574c0 	call	2574c <__divdf3>
   2a304:	da001717 	ldw	r8,92(sp)
   2a308:	da401617 	ldw	r9,88(sp)
   2a30c:	ad4003cc 	andi	r21,r21,15
   2a310:	040000c4 	movi	r16,3
   2a314:	1023883a 	mov	r17,r2
   2a318:	1829883a 	mov	r20,r3
   2a31c:	a8001126 	beq	r21,zero,2a364 <_dtoa_r+0x440>
   2a320:	05c000f4 	movhi	r23,3
   2a324:	bdd8f004 	addi	r23,r23,25536
   2a328:	4805883a 	mov	r2,r9
   2a32c:	4007883a 	mov	r3,r8
   2a330:	a980004c 	andi	r6,r21,1
   2a334:	1009883a 	mov	r4,r2
   2a338:	a82bd07a 	srai	r21,r21,1
   2a33c:	180b883a 	mov	r5,r3
   2a340:	30000426 	beq	r6,zero,2a354 <_dtoa_r+0x430>
   2a344:	b9800017 	ldw	r6,0(r23)
   2a348:	b9c00117 	ldw	r7,4(r23)
   2a34c:	84000044 	addi	r16,r16,1
   2a350:	002628c0 	call	2628c <__muldf3>
   2a354:	bdc00204 	addi	r23,r23,8
   2a358:	a83ff51e 	bne	r21,zero,2a330 <__alt_mem_SDRAM_controller+0xfc02a330>
   2a35c:	1013883a 	mov	r9,r2
   2a360:	1811883a 	mov	r8,r3
   2a364:	480d883a 	mov	r6,r9
   2a368:	400f883a 	mov	r7,r8
   2a36c:	8809883a 	mov	r4,r17
   2a370:	a00b883a 	mov	r5,r20
   2a374:	002574c0 	call	2574c <__divdf3>
   2a378:	d8800f15 	stw	r2,60(sp)
   2a37c:	d8c01015 	stw	r3,64(sp)
   2a380:	d8c00e17 	ldw	r3,56(sp)
   2a384:	18000626 	beq	r3,zero,2a3a0 <_dtoa_r+0x47c>
   2a388:	d9000f17 	ldw	r4,60(sp)
   2a38c:	d9401017 	ldw	r5,64(sp)
   2a390:	000d883a 	mov	r6,zero
   2a394:	01cffc34 	movhi	r7,16368
   2a398:	00261980 	call	26198 <__ledf2>
   2a39c:	10040b16 	blt	r2,zero,2b3cc <_dtoa_r+0x14a8>
   2a3a0:	8009883a 	mov	r4,r16
   2a3a4:	00273200 	call	27320 <__floatsidf>
   2a3a8:	d9800f17 	ldw	r6,60(sp)
   2a3ac:	d9c01017 	ldw	r7,64(sp)
   2a3b0:	1009883a 	mov	r4,r2
   2a3b4:	180b883a 	mov	r5,r3
   2a3b8:	002628c0 	call	2628c <__muldf3>
   2a3bc:	000d883a 	mov	r6,zero
   2a3c0:	01d00734 	movhi	r7,16412
   2a3c4:	1009883a 	mov	r4,r2
   2a3c8:	180b883a 	mov	r5,r3
   2a3cc:	0024ea00 	call	24ea0 <__adddf3>
   2a3d0:	1021883a 	mov	r16,r2
   2a3d4:	d8800617 	ldw	r2,24(sp)
   2a3d8:	047f3034 	movhi	r17,64704
   2a3dc:	1c63883a 	add	r17,r3,r17
   2a3e0:	10031826 	beq	r2,zero,2b044 <_dtoa_r+0x1120>
   2a3e4:	d8c00517 	ldw	r3,20(sp)
   2a3e8:	db000617 	ldw	r12,24(sp)
   2a3ec:	d8c01315 	stw	r3,76(sp)
   2a3f0:	d9000b17 	ldw	r4,44(sp)
   2a3f4:	20038f26 	beq	r4,zero,2b234 <_dtoa_r+0x1310>
   2a3f8:	60bfffc4 	addi	r2,r12,-1
   2a3fc:	100490fa 	slli	r2,r2,3
   2a400:	00c000f4 	movhi	r3,3
   2a404:	18d8fa04 	addi	r3,r3,25576
   2a408:	1885883a 	add	r2,r3,r2
   2a40c:	11800017 	ldw	r6,0(r2)
   2a410:	11c00117 	ldw	r7,4(r2)
   2a414:	d8800717 	ldw	r2,28(sp)
   2a418:	0009883a 	mov	r4,zero
   2a41c:	014ff834 	movhi	r5,16352
   2a420:	db001615 	stw	r12,88(sp)
   2a424:	15c00044 	addi	r23,r2,1
   2a428:	002574c0 	call	2574c <__divdf3>
   2a42c:	800d883a 	mov	r6,r16
   2a430:	880f883a 	mov	r7,r17
   2a434:	1009883a 	mov	r4,r2
   2a438:	180b883a 	mov	r5,r3
   2a43c:	00269a40 	call	269a4 <__subdf3>
   2a440:	d9401017 	ldw	r5,64(sp)
   2a444:	d9000f17 	ldw	r4,60(sp)
   2a448:	102b883a 	mov	r21,r2
   2a44c:	d8c01215 	stw	r3,72(sp)
   2a450:	00272a00 	call	272a0 <__fixdfsi>
   2a454:	1009883a 	mov	r4,r2
   2a458:	1029883a 	mov	r20,r2
   2a45c:	00273200 	call	27320 <__floatsidf>
   2a460:	d9000f17 	ldw	r4,60(sp)
   2a464:	d9401017 	ldw	r5,64(sp)
   2a468:	100d883a 	mov	r6,r2
   2a46c:	180f883a 	mov	r7,r3
   2a470:	00269a40 	call	269a4 <__subdf3>
   2a474:	1823883a 	mov	r17,r3
   2a478:	d8c00717 	ldw	r3,28(sp)
   2a47c:	d9401217 	ldw	r5,72(sp)
   2a480:	a2000c04 	addi	r8,r20,48
   2a484:	1021883a 	mov	r16,r2
   2a488:	1a000005 	stb	r8,0(r3)
   2a48c:	800d883a 	mov	r6,r16
   2a490:	880f883a 	mov	r7,r17
   2a494:	a809883a 	mov	r4,r21
   2a498:	4029883a 	mov	r20,r8
   2a49c:	00260bc0 	call	260bc <__gedf2>
   2a4a0:	00841d16 	blt	zero,r2,2b518 <_dtoa_r+0x15f4>
   2a4a4:	800d883a 	mov	r6,r16
   2a4a8:	880f883a 	mov	r7,r17
   2a4ac:	0009883a 	mov	r4,zero
   2a4b0:	014ffc34 	movhi	r5,16368
   2a4b4:	00269a40 	call	269a4 <__subdf3>
   2a4b8:	d9401217 	ldw	r5,72(sp)
   2a4bc:	100d883a 	mov	r6,r2
   2a4c0:	180f883a 	mov	r7,r3
   2a4c4:	a809883a 	mov	r4,r21
   2a4c8:	00260bc0 	call	260bc <__gedf2>
   2a4cc:	db001617 	ldw	r12,88(sp)
   2a4d0:	00840e16 	blt	zero,r2,2b50c <_dtoa_r+0x15e8>
   2a4d4:	00800044 	movi	r2,1
   2a4d8:	13006b0e 	bge	r2,r12,2a688 <_dtoa_r+0x764>
   2a4dc:	d9000717 	ldw	r4,28(sp)
   2a4e0:	dd800f15 	stw	r22,60(sp)
   2a4e4:	dcc01015 	stw	r19,64(sp)
   2a4e8:	2319883a 	add	r12,r4,r12
   2a4ec:	dcc01217 	ldw	r19,72(sp)
   2a4f0:	602d883a 	mov	r22,r12
   2a4f4:	dc801215 	stw	r18,72(sp)
   2a4f8:	b825883a 	mov	r18,r23
   2a4fc:	00000906 	br	2a524 <_dtoa_r+0x600>
   2a500:	00269a40 	call	269a4 <__subdf3>
   2a504:	a80d883a 	mov	r6,r21
   2a508:	980f883a 	mov	r7,r19
   2a50c:	1009883a 	mov	r4,r2
   2a510:	180b883a 	mov	r5,r3
   2a514:	00261980 	call	26198 <__ledf2>
   2a518:	1003e816 	blt	r2,zero,2b4bc <_dtoa_r+0x1598>
   2a51c:	b825883a 	mov	r18,r23
   2a520:	bd83e926 	beq	r23,r22,2b4c8 <_dtoa_r+0x15a4>
   2a524:	a809883a 	mov	r4,r21
   2a528:	980b883a 	mov	r5,r19
   2a52c:	000d883a 	mov	r6,zero
   2a530:	01d00934 	movhi	r7,16420
   2a534:	002628c0 	call	2628c <__muldf3>
   2a538:	000d883a 	mov	r6,zero
   2a53c:	01d00934 	movhi	r7,16420
   2a540:	8009883a 	mov	r4,r16
   2a544:	880b883a 	mov	r5,r17
   2a548:	102b883a 	mov	r21,r2
   2a54c:	1827883a 	mov	r19,r3
   2a550:	002628c0 	call	2628c <__muldf3>
   2a554:	180b883a 	mov	r5,r3
   2a558:	1009883a 	mov	r4,r2
   2a55c:	1821883a 	mov	r16,r3
   2a560:	1023883a 	mov	r17,r2
   2a564:	00272a00 	call	272a0 <__fixdfsi>
   2a568:	1009883a 	mov	r4,r2
   2a56c:	1029883a 	mov	r20,r2
   2a570:	00273200 	call	27320 <__floatsidf>
   2a574:	8809883a 	mov	r4,r17
   2a578:	800b883a 	mov	r5,r16
   2a57c:	100d883a 	mov	r6,r2
   2a580:	180f883a 	mov	r7,r3
   2a584:	00269a40 	call	269a4 <__subdf3>
   2a588:	a5000c04 	addi	r20,r20,48
   2a58c:	a80d883a 	mov	r6,r21
   2a590:	980f883a 	mov	r7,r19
   2a594:	1009883a 	mov	r4,r2
   2a598:	180b883a 	mov	r5,r3
   2a59c:	95000005 	stb	r20,0(r18)
   2a5a0:	1021883a 	mov	r16,r2
   2a5a4:	1823883a 	mov	r17,r3
   2a5a8:	00261980 	call	26198 <__ledf2>
   2a5ac:	bdc00044 	addi	r23,r23,1
   2a5b0:	800d883a 	mov	r6,r16
   2a5b4:	880f883a 	mov	r7,r17
   2a5b8:	0009883a 	mov	r4,zero
   2a5bc:	014ffc34 	movhi	r5,16368
   2a5c0:	103fcf0e 	bge	r2,zero,2a500 <__alt_mem_SDRAM_controller+0xfc02a500>
   2a5c4:	d8c01317 	ldw	r3,76(sp)
   2a5c8:	d8c00515 	stw	r3,20(sp)
   2a5cc:	d9400917 	ldw	r5,36(sp)
   2a5d0:	e009883a 	mov	r4,fp
   2a5d4:	002d6680 	call	2d668 <_Bfree>
   2a5d8:	d9000517 	ldw	r4,20(sp)
   2a5dc:	d9802317 	ldw	r6,140(sp)
   2a5e0:	d9c02517 	ldw	r7,148(sp)
   2a5e4:	b8000005 	stb	zero,0(r23)
   2a5e8:	20800044 	addi	r2,r4,1
   2a5ec:	30800015 	stw	r2,0(r6)
   2a5f0:	3802aa26 	beq	r7,zero,2b09c <_dtoa_r+0x1178>
   2a5f4:	3dc00015 	stw	r23,0(r7)
   2a5f8:	d8800717 	ldw	r2,28(sp)
   2a5fc:	003e7906 	br	29fe4 <__alt_mem_SDRAM_controller+0xfc029fe4>
   2a600:	00800434 	movhi	r2,16
   2a604:	10bfffc4 	addi	r2,r2,-1
   2a608:	88a2703a 	and	r17,r17,r2
   2a60c:	883e851e 	bne	r17,zero,2a024 <__alt_mem_SDRAM_controller+0xfc02a024>
   2a610:	008000f4 	movhi	r2,3
   2a614:	1098dc04 	addi	r2,r2,25456
   2a618:	003e8406 	br	2a02c <__alt_mem_SDRAM_controller+0xfc02a02c>
   2a61c:	10c00204 	addi	r3,r2,8
   2a620:	003e8706 	br	2a040 <__alt_mem_SDRAM_controller+0xfc02a040>
   2a624:	01400434 	movhi	r5,16
   2a628:	297fffc4 	addi	r5,r5,-1
   2a62c:	994a703a 	and	r5,r19,r5
   2a630:	9009883a 	mov	r4,r18
   2a634:	843f0044 	addi	r16,r16,-1023
   2a638:	294ffc34 	orhi	r5,r5,16368
   2a63c:	dd800217 	ldw	r22,8(sp)
   2a640:	d8001115 	stw	zero,68(sp)
   2a644:	003ea506 	br	2a0dc <__alt_mem_SDRAM_controller+0xfc02a0dc>
   2a648:	008000f4 	movhi	r2,3
   2a64c:	1098d304 	addi	r2,r2,25420
   2a650:	003e6406 	br	29fe4 <__alt_mem_SDRAM_controller+0xfc029fe4>
   2a654:	e0001115 	stw	zero,68(fp)
   2a658:	000b883a 	mov	r5,zero
   2a65c:	e009883a 	mov	r4,fp
   2a660:	002d5c00 	call	2d5c0 <_Balloc>
   2a664:	01bfffc4 	movi	r6,-1
   2a668:	01c00044 	movi	r7,1
   2a66c:	d8800715 	stw	r2,28(sp)
   2a670:	d9800c15 	stw	r6,48(sp)
   2a674:	e0801015 	stw	r2,64(fp)
   2a678:	d8000315 	stw	zero,12(sp)
   2a67c:	d9c00b15 	stw	r7,44(sp)
   2a680:	d9800615 	stw	r6,24(sp)
   2a684:	d8002215 	stw	zero,136(sp)
   2a688:	d8800117 	ldw	r2,4(sp)
   2a68c:	10008916 	blt	r2,zero,2a8b4 <_dtoa_r+0x990>
   2a690:	d9000517 	ldw	r4,20(sp)
   2a694:	00c00384 	movi	r3,14
   2a698:	19008616 	blt	r3,r4,2a8b4 <_dtoa_r+0x990>
   2a69c:	200490fa 	slli	r2,r4,3
   2a6a0:	00c000f4 	movhi	r3,3
   2a6a4:	d9802217 	ldw	r6,136(sp)
   2a6a8:	18d8fa04 	addi	r3,r3,25576
   2a6ac:	1885883a 	add	r2,r3,r2
   2a6b0:	14000017 	ldw	r16,0(r2)
   2a6b4:	14400117 	ldw	r17,4(r2)
   2a6b8:	30016316 	blt	r6,zero,2ac48 <_dtoa_r+0xd24>
   2a6bc:	800d883a 	mov	r6,r16
   2a6c0:	880f883a 	mov	r7,r17
   2a6c4:	9009883a 	mov	r4,r18
   2a6c8:	980b883a 	mov	r5,r19
   2a6cc:	002574c0 	call	2574c <__divdf3>
   2a6d0:	180b883a 	mov	r5,r3
   2a6d4:	1009883a 	mov	r4,r2
   2a6d8:	00272a00 	call	272a0 <__fixdfsi>
   2a6dc:	1009883a 	mov	r4,r2
   2a6e0:	102b883a 	mov	r21,r2
   2a6e4:	00273200 	call	27320 <__floatsidf>
   2a6e8:	800d883a 	mov	r6,r16
   2a6ec:	880f883a 	mov	r7,r17
   2a6f0:	1009883a 	mov	r4,r2
   2a6f4:	180b883a 	mov	r5,r3
   2a6f8:	002628c0 	call	2628c <__muldf3>
   2a6fc:	100d883a 	mov	r6,r2
   2a700:	180f883a 	mov	r7,r3
   2a704:	9009883a 	mov	r4,r18
   2a708:	980b883a 	mov	r5,r19
   2a70c:	00269a40 	call	269a4 <__subdf3>
   2a710:	d9c00717 	ldw	r7,28(sp)
   2a714:	1009883a 	mov	r4,r2
   2a718:	a8800c04 	addi	r2,r21,48
   2a71c:	38800005 	stb	r2,0(r7)
   2a720:	3dc00044 	addi	r23,r7,1
   2a724:	d9c00617 	ldw	r7,24(sp)
   2a728:	01800044 	movi	r6,1
   2a72c:	180b883a 	mov	r5,r3
   2a730:	2005883a 	mov	r2,r4
   2a734:	39803826 	beq	r7,r6,2a818 <_dtoa_r+0x8f4>
   2a738:	000d883a 	mov	r6,zero
   2a73c:	01d00934 	movhi	r7,16420
   2a740:	002628c0 	call	2628c <__muldf3>
   2a744:	000d883a 	mov	r6,zero
   2a748:	000f883a 	mov	r7,zero
   2a74c:	1009883a 	mov	r4,r2
   2a750:	180b883a 	mov	r5,r3
   2a754:	1025883a 	mov	r18,r2
   2a758:	1827883a 	mov	r19,r3
   2a75c:	00260340 	call	26034 <__eqdf2>
   2a760:	103f9a26 	beq	r2,zero,2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2a764:	d9c00617 	ldw	r7,24(sp)
   2a768:	d8c00717 	ldw	r3,28(sp)
   2a76c:	b829883a 	mov	r20,r23
   2a770:	38bfffc4 	addi	r2,r7,-1
   2a774:	18ad883a 	add	r22,r3,r2
   2a778:	00000a06 	br	2a7a4 <_dtoa_r+0x880>
   2a77c:	002628c0 	call	2628c <__muldf3>
   2a780:	000d883a 	mov	r6,zero
   2a784:	000f883a 	mov	r7,zero
   2a788:	1009883a 	mov	r4,r2
   2a78c:	180b883a 	mov	r5,r3
   2a790:	1025883a 	mov	r18,r2
   2a794:	1827883a 	mov	r19,r3
   2a798:	b829883a 	mov	r20,r23
   2a79c:	00260340 	call	26034 <__eqdf2>
   2a7a0:	103f8a26 	beq	r2,zero,2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2a7a4:	800d883a 	mov	r6,r16
   2a7a8:	880f883a 	mov	r7,r17
   2a7ac:	9009883a 	mov	r4,r18
   2a7b0:	980b883a 	mov	r5,r19
   2a7b4:	002574c0 	call	2574c <__divdf3>
   2a7b8:	180b883a 	mov	r5,r3
   2a7bc:	1009883a 	mov	r4,r2
   2a7c0:	00272a00 	call	272a0 <__fixdfsi>
   2a7c4:	1009883a 	mov	r4,r2
   2a7c8:	102b883a 	mov	r21,r2
   2a7cc:	00273200 	call	27320 <__floatsidf>
   2a7d0:	800d883a 	mov	r6,r16
   2a7d4:	880f883a 	mov	r7,r17
   2a7d8:	1009883a 	mov	r4,r2
   2a7dc:	180b883a 	mov	r5,r3
   2a7e0:	002628c0 	call	2628c <__muldf3>
   2a7e4:	100d883a 	mov	r6,r2
   2a7e8:	180f883a 	mov	r7,r3
   2a7ec:	9009883a 	mov	r4,r18
   2a7f0:	980b883a 	mov	r5,r19
   2a7f4:	00269a40 	call	269a4 <__subdf3>
   2a7f8:	aa000c04 	addi	r8,r21,48
   2a7fc:	a2000005 	stb	r8,0(r20)
   2a800:	000d883a 	mov	r6,zero
   2a804:	01d00934 	movhi	r7,16420
   2a808:	1009883a 	mov	r4,r2
   2a80c:	180b883a 	mov	r5,r3
   2a810:	a5c00044 	addi	r23,r20,1
   2a814:	b53fd91e 	bne	r22,r20,2a77c <__alt_mem_SDRAM_controller+0xfc02a77c>
   2a818:	100d883a 	mov	r6,r2
   2a81c:	180f883a 	mov	r7,r3
   2a820:	1009883a 	mov	r4,r2
   2a824:	180b883a 	mov	r5,r3
   2a828:	0024ea00 	call	24ea0 <__adddf3>
   2a82c:	100d883a 	mov	r6,r2
   2a830:	180f883a 	mov	r7,r3
   2a834:	8009883a 	mov	r4,r16
   2a838:	880b883a 	mov	r5,r17
   2a83c:	1027883a 	mov	r19,r2
   2a840:	1825883a 	mov	r18,r3
   2a844:	00261980 	call	26198 <__ledf2>
   2a848:	10000816 	blt	r2,zero,2a86c <_dtoa_r+0x948>
   2a84c:	980d883a 	mov	r6,r19
   2a850:	900f883a 	mov	r7,r18
   2a854:	8009883a 	mov	r4,r16
   2a858:	880b883a 	mov	r5,r17
   2a85c:	00260340 	call	26034 <__eqdf2>
   2a860:	103f5a1e 	bne	r2,zero,2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2a864:	ad40004c 	andi	r21,r21,1
   2a868:	a83f5826 	beq	r21,zero,2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2a86c:	bd3fffc3 	ldbu	r20,-1(r23)
   2a870:	b8bfffc4 	addi	r2,r23,-1
   2a874:	1007883a 	mov	r3,r2
   2a878:	01400e44 	movi	r5,57
   2a87c:	d9800717 	ldw	r6,28(sp)
   2a880:	00000506 	br	2a898 <_dtoa_r+0x974>
   2a884:	18ffffc4 	addi	r3,r3,-1
   2a888:	11824726 	beq	r2,r6,2b1a8 <_dtoa_r+0x1284>
   2a88c:	1d000003 	ldbu	r20,0(r3)
   2a890:	102f883a 	mov	r23,r2
   2a894:	10bfffc4 	addi	r2,r2,-1
   2a898:	a1003fcc 	andi	r4,r20,255
   2a89c:	2100201c 	xori	r4,r4,128
   2a8a0:	213fe004 	addi	r4,r4,-128
   2a8a4:	217ff726 	beq	r4,r5,2a884 <__alt_mem_SDRAM_controller+0xfc02a884>
   2a8a8:	a2000044 	addi	r8,r20,1
   2a8ac:	12000005 	stb	r8,0(r2)
   2a8b0:	003f4606 	br	2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2a8b4:	d9000b17 	ldw	r4,44(sp)
   2a8b8:	2000c826 	beq	r4,zero,2abdc <_dtoa_r+0xcb8>
   2a8bc:	d9800317 	ldw	r6,12(sp)
   2a8c0:	00c00044 	movi	r3,1
   2a8c4:	1980f90e 	bge	r3,r6,2acac <_dtoa_r+0xd88>
   2a8c8:	d8800617 	ldw	r2,24(sp)
   2a8cc:	d8c00a17 	ldw	r3,40(sp)
   2a8d0:	157fffc4 	addi	r21,r2,-1
   2a8d4:	1d41f316 	blt	r3,r21,2b0a4 <_dtoa_r+0x1180>
   2a8d8:	1d6bc83a 	sub	r21,r3,r21
   2a8dc:	d9c00617 	ldw	r7,24(sp)
   2a8e0:	3802aa16 	blt	r7,zero,2b38c <_dtoa_r+0x1468>
   2a8e4:	dd000817 	ldw	r20,32(sp)
   2a8e8:	d8800617 	ldw	r2,24(sp)
   2a8ec:	d8c00817 	ldw	r3,32(sp)
   2a8f0:	01400044 	movi	r5,1
   2a8f4:	e009883a 	mov	r4,fp
   2a8f8:	1887883a 	add	r3,r3,r2
   2a8fc:	d8c00815 	stw	r3,32(sp)
   2a900:	b0ad883a 	add	r22,r22,r2
   2a904:	002d9cc0 	call	2d9cc <__i2b>
   2a908:	1023883a 	mov	r17,r2
   2a90c:	a0000826 	beq	r20,zero,2a930 <_dtoa_r+0xa0c>
   2a910:	0580070e 	bge	zero,r22,2a930 <_dtoa_r+0xa0c>
   2a914:	a005883a 	mov	r2,r20
   2a918:	b500b916 	blt	r22,r20,2ac00 <_dtoa_r+0xcdc>
   2a91c:	d9000817 	ldw	r4,32(sp)
   2a920:	a0a9c83a 	sub	r20,r20,r2
   2a924:	b0adc83a 	sub	r22,r22,r2
   2a928:	2089c83a 	sub	r4,r4,r2
   2a92c:	d9000815 	stw	r4,32(sp)
   2a930:	d9800a17 	ldw	r6,40(sp)
   2a934:	0181810e 	bge	zero,r6,2af3c <_dtoa_r+0x1018>
   2a938:	d9c00b17 	ldw	r7,44(sp)
   2a93c:	3800b326 	beq	r7,zero,2ac0c <_dtoa_r+0xce8>
   2a940:	a800b226 	beq	r21,zero,2ac0c <_dtoa_r+0xce8>
   2a944:	880b883a 	mov	r5,r17
   2a948:	a80d883a 	mov	r6,r21
   2a94c:	e009883a 	mov	r4,fp
   2a950:	002dc000 	call	2dc00 <__pow5mult>
   2a954:	d9800917 	ldw	r6,36(sp)
   2a958:	100b883a 	mov	r5,r2
   2a95c:	e009883a 	mov	r4,fp
   2a960:	1023883a 	mov	r17,r2
   2a964:	002da080 	call	2da08 <__multiply>
   2a968:	1021883a 	mov	r16,r2
   2a96c:	d8800a17 	ldw	r2,40(sp)
   2a970:	d9400917 	ldw	r5,36(sp)
   2a974:	e009883a 	mov	r4,fp
   2a978:	1545c83a 	sub	r2,r2,r21
   2a97c:	d8800a15 	stw	r2,40(sp)
   2a980:	002d6680 	call	2d668 <_Bfree>
   2a984:	d8c00a17 	ldw	r3,40(sp)
   2a988:	18009f1e 	bne	r3,zero,2ac08 <_dtoa_r+0xce4>
   2a98c:	05c00044 	movi	r23,1
   2a990:	e009883a 	mov	r4,fp
   2a994:	b80b883a 	mov	r5,r23
   2a998:	002d9cc0 	call	2d9cc <__i2b>
   2a99c:	d9000d17 	ldw	r4,52(sp)
   2a9a0:	102b883a 	mov	r21,r2
   2a9a4:	2000ce26 	beq	r4,zero,2ace0 <_dtoa_r+0xdbc>
   2a9a8:	200d883a 	mov	r6,r4
   2a9ac:	100b883a 	mov	r5,r2
   2a9b0:	e009883a 	mov	r4,fp
   2a9b4:	002dc000 	call	2dc00 <__pow5mult>
   2a9b8:	d9800317 	ldw	r6,12(sp)
   2a9bc:	102b883a 	mov	r21,r2
   2a9c0:	b981810e 	bge	r23,r6,2afc8 <_dtoa_r+0x10a4>
   2a9c4:	0027883a 	mov	r19,zero
   2a9c8:	a8800417 	ldw	r2,16(r21)
   2a9cc:	05c00804 	movi	r23,32
   2a9d0:	10800104 	addi	r2,r2,4
   2a9d4:	1085883a 	add	r2,r2,r2
   2a9d8:	1085883a 	add	r2,r2,r2
   2a9dc:	a885883a 	add	r2,r21,r2
   2a9e0:	11000017 	ldw	r4,0(r2)
   2a9e4:	002d8b40 	call	2d8b4 <__hi0bits>
   2a9e8:	b885c83a 	sub	r2,r23,r2
   2a9ec:	1585883a 	add	r2,r2,r22
   2a9f0:	108007cc 	andi	r2,r2,31
   2a9f4:	1000b326 	beq	r2,zero,2acc4 <_dtoa_r+0xda0>
   2a9f8:	00c00804 	movi	r3,32
   2a9fc:	1887c83a 	sub	r3,r3,r2
   2aa00:	01000104 	movi	r4,4
   2aa04:	20c2cd0e 	bge	r4,r3,2b53c <_dtoa_r+0x1618>
   2aa08:	00c00704 	movi	r3,28
   2aa0c:	1885c83a 	sub	r2,r3,r2
   2aa10:	d8c00817 	ldw	r3,32(sp)
   2aa14:	a0a9883a 	add	r20,r20,r2
   2aa18:	b0ad883a 	add	r22,r22,r2
   2aa1c:	1887883a 	add	r3,r3,r2
   2aa20:	d8c00815 	stw	r3,32(sp)
   2aa24:	d9800817 	ldw	r6,32(sp)
   2aa28:	0180040e 	bge	zero,r6,2aa3c <_dtoa_r+0xb18>
   2aa2c:	800b883a 	mov	r5,r16
   2aa30:	e009883a 	mov	r4,fp
   2aa34:	002dd400 	call	2dd40 <__lshift>
   2aa38:	1021883a 	mov	r16,r2
   2aa3c:	0580050e 	bge	zero,r22,2aa54 <_dtoa_r+0xb30>
   2aa40:	a80b883a 	mov	r5,r21
   2aa44:	b00d883a 	mov	r6,r22
   2aa48:	e009883a 	mov	r4,fp
   2aa4c:	002dd400 	call	2dd40 <__lshift>
   2aa50:	102b883a 	mov	r21,r2
   2aa54:	d9c00e17 	ldw	r7,56(sp)
   2aa58:	3801211e 	bne	r7,zero,2aee0 <_dtoa_r+0xfbc>
   2aa5c:	d9800617 	ldw	r6,24(sp)
   2aa60:	0181380e 	bge	zero,r6,2af44 <_dtoa_r+0x1020>
   2aa64:	d8c00b17 	ldw	r3,44(sp)
   2aa68:	1800ab1e 	bne	r3,zero,2ad18 <_dtoa_r+0xdf4>
   2aa6c:	dc800717 	ldw	r18,28(sp)
   2aa70:	dcc00617 	ldw	r19,24(sp)
   2aa74:	9029883a 	mov	r20,r18
   2aa78:	00000206 	br	2aa84 <_dtoa_r+0xb60>
   2aa7c:	002d6900 	call	2d690 <__multadd>
   2aa80:	1021883a 	mov	r16,r2
   2aa84:	a80b883a 	mov	r5,r21
   2aa88:	8009883a 	mov	r4,r16
   2aa8c:	0029d240 	call	29d24 <quorem>
   2aa90:	10800c04 	addi	r2,r2,48
   2aa94:	90800005 	stb	r2,0(r18)
   2aa98:	94800044 	addi	r18,r18,1
   2aa9c:	9507c83a 	sub	r3,r18,r20
   2aaa0:	000f883a 	mov	r7,zero
   2aaa4:	01800284 	movi	r6,10
   2aaa8:	800b883a 	mov	r5,r16
   2aaac:	e009883a 	mov	r4,fp
   2aab0:	1cfff216 	blt	r3,r19,2aa7c <__alt_mem_SDRAM_controller+0xfc02aa7c>
   2aab4:	1011883a 	mov	r8,r2
   2aab8:	d8800617 	ldw	r2,24(sp)
   2aabc:	0082370e 	bge	zero,r2,2b39c <_dtoa_r+0x1478>
   2aac0:	d9000717 	ldw	r4,28(sp)
   2aac4:	0025883a 	mov	r18,zero
   2aac8:	20af883a 	add	r23,r4,r2
   2aacc:	01800044 	movi	r6,1
   2aad0:	800b883a 	mov	r5,r16
   2aad4:	e009883a 	mov	r4,fp
   2aad8:	da001715 	stw	r8,92(sp)
   2aadc:	002dd400 	call	2dd40 <__lshift>
   2aae0:	a80b883a 	mov	r5,r21
   2aae4:	1009883a 	mov	r4,r2
   2aae8:	d8800915 	stw	r2,36(sp)
   2aaec:	002de880 	call	2de88 <__mcmp>
   2aaf0:	da001717 	ldw	r8,92(sp)
   2aaf4:	0081800e 	bge	zero,r2,2b0f8 <_dtoa_r+0x11d4>
   2aaf8:	b93fffc3 	ldbu	r4,-1(r23)
   2aafc:	b8bfffc4 	addi	r2,r23,-1
   2ab00:	1007883a 	mov	r3,r2
   2ab04:	01800e44 	movi	r6,57
   2ab08:	d9c00717 	ldw	r7,28(sp)
   2ab0c:	00000506 	br	2ab24 <_dtoa_r+0xc00>
   2ab10:	18ffffc4 	addi	r3,r3,-1
   2ab14:	11c12326 	beq	r2,r7,2afa4 <_dtoa_r+0x1080>
   2ab18:	19000003 	ldbu	r4,0(r3)
   2ab1c:	102f883a 	mov	r23,r2
   2ab20:	10bfffc4 	addi	r2,r2,-1
   2ab24:	21403fcc 	andi	r5,r4,255
   2ab28:	2940201c 	xori	r5,r5,128
   2ab2c:	297fe004 	addi	r5,r5,-128
   2ab30:	29bff726 	beq	r5,r6,2ab10 <__alt_mem_SDRAM_controller+0xfc02ab10>
   2ab34:	21000044 	addi	r4,r4,1
   2ab38:	11000005 	stb	r4,0(r2)
   2ab3c:	a80b883a 	mov	r5,r21
   2ab40:	e009883a 	mov	r4,fp
   2ab44:	002d6680 	call	2d668 <_Bfree>
   2ab48:	883ea026 	beq	r17,zero,2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2ab4c:	90000426 	beq	r18,zero,2ab60 <_dtoa_r+0xc3c>
   2ab50:	94400326 	beq	r18,r17,2ab60 <_dtoa_r+0xc3c>
   2ab54:	900b883a 	mov	r5,r18
   2ab58:	e009883a 	mov	r4,fp
   2ab5c:	002d6680 	call	2d668 <_Bfree>
   2ab60:	880b883a 	mov	r5,r17
   2ab64:	e009883a 	mov	r4,fp
   2ab68:	002d6680 	call	2d668 <_Bfree>
   2ab6c:	003e9706 	br	2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2ab70:	01800044 	movi	r6,1
   2ab74:	d9800e15 	stw	r6,56(sp)
   2ab78:	003d9606 	br	2a1d4 <__alt_mem_SDRAM_controller+0xfc02a1d4>
   2ab7c:	d8800817 	ldw	r2,32(sp)
   2ab80:	d8c00517 	ldw	r3,20(sp)
   2ab84:	d8000d15 	stw	zero,52(sp)
   2ab88:	10c5c83a 	sub	r2,r2,r3
   2ab8c:	00c9c83a 	sub	r4,zero,r3
   2ab90:	d8800815 	stw	r2,32(sp)
   2ab94:	d9000a15 	stw	r4,40(sp)
   2ab98:	003d9706 	br	2a1f8 <__alt_mem_SDRAM_controller+0xfc02a1f8>
   2ab9c:	05adc83a 	sub	r22,zero,r22
   2aba0:	dd800815 	stw	r22,32(sp)
   2aba4:	002d883a 	mov	r22,zero
   2aba8:	003d8e06 	br	2a1e4 <__alt_mem_SDRAM_controller+0xfc02a1e4>
   2abac:	d9000517 	ldw	r4,20(sp)
   2abb0:	00273200 	call	27320 <__floatsidf>
   2abb4:	100d883a 	mov	r6,r2
   2abb8:	180f883a 	mov	r7,r3
   2abbc:	a009883a 	mov	r4,r20
   2abc0:	880b883a 	mov	r5,r17
   2abc4:	00260340 	call	26034 <__eqdf2>
   2abc8:	103d7126 	beq	r2,zero,2a190 <__alt_mem_SDRAM_controller+0xfc02a190>
   2abcc:	d9c00517 	ldw	r7,20(sp)
   2abd0:	39ffffc4 	addi	r7,r7,-1
   2abd4:	d9c00515 	stw	r7,20(sp)
   2abd8:	003d6d06 	br	2a190 <__alt_mem_SDRAM_controller+0xfc02a190>
   2abdc:	dd400a17 	ldw	r21,40(sp)
   2abe0:	dd000817 	ldw	r20,32(sp)
   2abe4:	0023883a 	mov	r17,zero
   2abe8:	003f4806 	br	2a90c <__alt_mem_SDRAM_controller+0xfc02a90c>
   2abec:	10e3c83a 	sub	r17,r2,r3
   2abf0:	9448983a 	sll	r4,r18,r17
   2abf4:	003d3206 	br	2a0c0 <__alt_mem_SDRAM_controller+0xfc02a0c0>
   2abf8:	d8000e15 	stw	zero,56(sp)
   2abfc:	003d7506 	br	2a1d4 <__alt_mem_SDRAM_controller+0xfc02a1d4>
   2ac00:	b005883a 	mov	r2,r22
   2ac04:	003f4506 	br	2a91c <__alt_mem_SDRAM_controller+0xfc02a91c>
   2ac08:	dc000915 	stw	r16,36(sp)
   2ac0c:	d9800a17 	ldw	r6,40(sp)
   2ac10:	d9400917 	ldw	r5,36(sp)
   2ac14:	e009883a 	mov	r4,fp
   2ac18:	002dc000 	call	2dc00 <__pow5mult>
   2ac1c:	1021883a 	mov	r16,r2
   2ac20:	003f5a06 	br	2a98c <__alt_mem_SDRAM_controller+0xfc02a98c>
   2ac24:	01c00044 	movi	r7,1
   2ac28:	d9c00b15 	stw	r7,44(sp)
   2ac2c:	d8802217 	ldw	r2,136(sp)
   2ac30:	0081280e 	bge	zero,r2,2b0d4 <_dtoa_r+0x11b0>
   2ac34:	100d883a 	mov	r6,r2
   2ac38:	1021883a 	mov	r16,r2
   2ac3c:	d8800c15 	stw	r2,48(sp)
   2ac40:	d8800615 	stw	r2,24(sp)
   2ac44:	003d8806 	br	2a268 <__alt_mem_SDRAM_controller+0xfc02a268>
   2ac48:	d8800617 	ldw	r2,24(sp)
   2ac4c:	00be9b16 	blt	zero,r2,2a6bc <__alt_mem_SDRAM_controller+0xfc02a6bc>
   2ac50:	10010f1e 	bne	r2,zero,2b090 <_dtoa_r+0x116c>
   2ac54:	880b883a 	mov	r5,r17
   2ac58:	000d883a 	mov	r6,zero
   2ac5c:	01d00534 	movhi	r7,16404
   2ac60:	8009883a 	mov	r4,r16
   2ac64:	002628c0 	call	2628c <__muldf3>
   2ac68:	900d883a 	mov	r6,r18
   2ac6c:	980f883a 	mov	r7,r19
   2ac70:	1009883a 	mov	r4,r2
   2ac74:	180b883a 	mov	r5,r3
   2ac78:	00260bc0 	call	260bc <__gedf2>
   2ac7c:	002b883a 	mov	r21,zero
   2ac80:	0023883a 	mov	r17,zero
   2ac84:	1000bf16 	blt	r2,zero,2af84 <_dtoa_r+0x1060>
   2ac88:	d9802217 	ldw	r6,136(sp)
   2ac8c:	ddc00717 	ldw	r23,28(sp)
   2ac90:	018c303a 	nor	r6,zero,r6
   2ac94:	d9800515 	stw	r6,20(sp)
   2ac98:	a80b883a 	mov	r5,r21
   2ac9c:	e009883a 	mov	r4,fp
   2aca0:	002d6680 	call	2d668 <_Bfree>
   2aca4:	883e4926 	beq	r17,zero,2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2aca8:	003fad06 	br	2ab60 <__alt_mem_SDRAM_controller+0xfc02ab60>
   2acac:	d9c01117 	ldw	r7,68(sp)
   2acb0:	3801bc26 	beq	r7,zero,2b3a4 <_dtoa_r+0x1480>
   2acb4:	10810cc4 	addi	r2,r2,1075
   2acb8:	dd400a17 	ldw	r21,40(sp)
   2acbc:	dd000817 	ldw	r20,32(sp)
   2acc0:	003f0a06 	br	2a8ec <__alt_mem_SDRAM_controller+0xfc02a8ec>
   2acc4:	00800704 	movi	r2,28
   2acc8:	d9000817 	ldw	r4,32(sp)
   2accc:	a0a9883a 	add	r20,r20,r2
   2acd0:	b0ad883a 	add	r22,r22,r2
   2acd4:	2089883a 	add	r4,r4,r2
   2acd8:	d9000815 	stw	r4,32(sp)
   2acdc:	003f5106 	br	2aa24 <__alt_mem_SDRAM_controller+0xfc02aa24>
   2ace0:	d8c00317 	ldw	r3,12(sp)
   2ace4:	b8c1fc0e 	bge	r23,r3,2b4d8 <_dtoa_r+0x15b4>
   2ace8:	0027883a 	mov	r19,zero
   2acec:	b805883a 	mov	r2,r23
   2acf0:	003f3e06 	br	2a9ec <__alt_mem_SDRAM_controller+0xfc02a9ec>
   2acf4:	880b883a 	mov	r5,r17
   2acf8:	e009883a 	mov	r4,fp
   2acfc:	000f883a 	mov	r7,zero
   2ad00:	01800284 	movi	r6,10
   2ad04:	002d6900 	call	2d690 <__multadd>
   2ad08:	d9000c17 	ldw	r4,48(sp)
   2ad0c:	1023883a 	mov	r17,r2
   2ad10:	0102040e 	bge	zero,r4,2b524 <_dtoa_r+0x1600>
   2ad14:	d9000615 	stw	r4,24(sp)
   2ad18:	0500050e 	bge	zero,r20,2ad30 <_dtoa_r+0xe0c>
   2ad1c:	880b883a 	mov	r5,r17
   2ad20:	a00d883a 	mov	r6,r20
   2ad24:	e009883a 	mov	r4,fp
   2ad28:	002dd400 	call	2dd40 <__lshift>
   2ad2c:	1023883a 	mov	r17,r2
   2ad30:	9801241e 	bne	r19,zero,2b1c4 <_dtoa_r+0x12a0>
   2ad34:	8829883a 	mov	r20,r17
   2ad38:	d9000617 	ldw	r4,24(sp)
   2ad3c:	dcc00717 	ldw	r19,28(sp)
   2ad40:	9480004c 	andi	r18,r18,1
   2ad44:	20bfffc4 	addi	r2,r4,-1
   2ad48:	9885883a 	add	r2,r19,r2
   2ad4c:	d8800415 	stw	r2,16(sp)
   2ad50:	dc800615 	stw	r18,24(sp)
   2ad54:	a80b883a 	mov	r5,r21
   2ad58:	8009883a 	mov	r4,r16
   2ad5c:	0029d240 	call	29d24 <quorem>
   2ad60:	880b883a 	mov	r5,r17
   2ad64:	8009883a 	mov	r4,r16
   2ad68:	102f883a 	mov	r23,r2
   2ad6c:	002de880 	call	2de88 <__mcmp>
   2ad70:	a80b883a 	mov	r5,r21
   2ad74:	a00d883a 	mov	r6,r20
   2ad78:	e009883a 	mov	r4,fp
   2ad7c:	102d883a 	mov	r22,r2
   2ad80:	002dee80 	call	2dee8 <__mdiff>
   2ad84:	1007883a 	mov	r3,r2
   2ad88:	10800317 	ldw	r2,12(r2)
   2ad8c:	bc800c04 	addi	r18,r23,48
   2ad90:	180b883a 	mov	r5,r3
   2ad94:	10004e1e 	bne	r2,zero,2aed0 <_dtoa_r+0xfac>
   2ad98:	8009883a 	mov	r4,r16
   2ad9c:	d8c01615 	stw	r3,88(sp)
   2ada0:	002de880 	call	2de88 <__mcmp>
   2ada4:	d8c01617 	ldw	r3,88(sp)
   2ada8:	e009883a 	mov	r4,fp
   2adac:	d8801615 	stw	r2,88(sp)
   2adb0:	180b883a 	mov	r5,r3
   2adb4:	002d6680 	call	2d668 <_Bfree>
   2adb8:	d8801617 	ldw	r2,88(sp)
   2adbc:	1000041e 	bne	r2,zero,2add0 <_dtoa_r+0xeac>
   2adc0:	d9800317 	ldw	r6,12(sp)
   2adc4:	3000021e 	bne	r6,zero,2add0 <_dtoa_r+0xeac>
   2adc8:	d8c00617 	ldw	r3,24(sp)
   2adcc:	18003726 	beq	r3,zero,2aeac <_dtoa_r+0xf88>
   2add0:	b0002016 	blt	r22,zero,2ae54 <_dtoa_r+0xf30>
   2add4:	b000041e 	bne	r22,zero,2ade8 <_dtoa_r+0xec4>
   2add8:	d9000317 	ldw	r4,12(sp)
   2addc:	2000021e 	bne	r4,zero,2ade8 <_dtoa_r+0xec4>
   2ade0:	d8c00617 	ldw	r3,24(sp)
   2ade4:	18001b26 	beq	r3,zero,2ae54 <_dtoa_r+0xf30>
   2ade8:	00810716 	blt	zero,r2,2b208 <_dtoa_r+0x12e4>
   2adec:	d8c00417 	ldw	r3,16(sp)
   2adf0:	9d800044 	addi	r22,r19,1
   2adf4:	9c800005 	stb	r18,0(r19)
   2adf8:	b02f883a 	mov	r23,r22
   2adfc:	98c10626 	beq	r19,r3,2b218 <_dtoa_r+0x12f4>
   2ae00:	800b883a 	mov	r5,r16
   2ae04:	000f883a 	mov	r7,zero
   2ae08:	01800284 	movi	r6,10
   2ae0c:	e009883a 	mov	r4,fp
   2ae10:	002d6900 	call	2d690 <__multadd>
   2ae14:	1021883a 	mov	r16,r2
   2ae18:	000f883a 	mov	r7,zero
   2ae1c:	01800284 	movi	r6,10
   2ae20:	880b883a 	mov	r5,r17
   2ae24:	e009883a 	mov	r4,fp
   2ae28:	8d002526 	beq	r17,r20,2aec0 <_dtoa_r+0xf9c>
   2ae2c:	002d6900 	call	2d690 <__multadd>
   2ae30:	a00b883a 	mov	r5,r20
   2ae34:	000f883a 	mov	r7,zero
   2ae38:	01800284 	movi	r6,10
   2ae3c:	e009883a 	mov	r4,fp
   2ae40:	1023883a 	mov	r17,r2
   2ae44:	002d6900 	call	2d690 <__multadd>
   2ae48:	1029883a 	mov	r20,r2
   2ae4c:	b027883a 	mov	r19,r22
   2ae50:	003fc006 	br	2ad54 <__alt_mem_SDRAM_controller+0xfc02ad54>
   2ae54:	9011883a 	mov	r8,r18
   2ae58:	00800e0e 	bge	zero,r2,2ae94 <_dtoa_r+0xf70>
   2ae5c:	800b883a 	mov	r5,r16
   2ae60:	01800044 	movi	r6,1
   2ae64:	e009883a 	mov	r4,fp
   2ae68:	da001715 	stw	r8,92(sp)
   2ae6c:	002dd400 	call	2dd40 <__lshift>
   2ae70:	a80b883a 	mov	r5,r21
   2ae74:	1009883a 	mov	r4,r2
   2ae78:	1021883a 	mov	r16,r2
   2ae7c:	002de880 	call	2de88 <__mcmp>
   2ae80:	da001717 	ldw	r8,92(sp)
   2ae84:	0081960e 	bge	zero,r2,2b4e0 <_dtoa_r+0x15bc>
   2ae88:	00800e44 	movi	r2,57
   2ae8c:	40817026 	beq	r8,r2,2b450 <_dtoa_r+0x152c>
   2ae90:	ba000c44 	addi	r8,r23,49
   2ae94:	8825883a 	mov	r18,r17
   2ae98:	9dc00044 	addi	r23,r19,1
   2ae9c:	9a000005 	stb	r8,0(r19)
   2aea0:	a023883a 	mov	r17,r20
   2aea4:	dc000915 	stw	r16,36(sp)
   2aea8:	003f2406 	br	2ab3c <__alt_mem_SDRAM_controller+0xfc02ab3c>
   2aeac:	00800e44 	movi	r2,57
   2aeb0:	9011883a 	mov	r8,r18
   2aeb4:	90816626 	beq	r18,r2,2b450 <_dtoa_r+0x152c>
   2aeb8:	05bff516 	blt	zero,r22,2ae90 <__alt_mem_SDRAM_controller+0xfc02ae90>
   2aebc:	003ff506 	br	2ae94 <__alt_mem_SDRAM_controller+0xfc02ae94>
   2aec0:	002d6900 	call	2d690 <__multadd>
   2aec4:	1023883a 	mov	r17,r2
   2aec8:	1029883a 	mov	r20,r2
   2aecc:	003fdf06 	br	2ae4c <__alt_mem_SDRAM_controller+0xfc02ae4c>
   2aed0:	e009883a 	mov	r4,fp
   2aed4:	002d6680 	call	2d668 <_Bfree>
   2aed8:	00800044 	movi	r2,1
   2aedc:	003fbc06 	br	2add0 <__alt_mem_SDRAM_controller+0xfc02add0>
   2aee0:	a80b883a 	mov	r5,r21
   2aee4:	8009883a 	mov	r4,r16
   2aee8:	002de880 	call	2de88 <__mcmp>
   2aeec:	103edb0e 	bge	r2,zero,2aa5c <__alt_mem_SDRAM_controller+0xfc02aa5c>
   2aef0:	800b883a 	mov	r5,r16
   2aef4:	000f883a 	mov	r7,zero
   2aef8:	01800284 	movi	r6,10
   2aefc:	e009883a 	mov	r4,fp
   2af00:	002d6900 	call	2d690 <__multadd>
   2af04:	1021883a 	mov	r16,r2
   2af08:	d8800517 	ldw	r2,20(sp)
   2af0c:	d8c00b17 	ldw	r3,44(sp)
   2af10:	10bfffc4 	addi	r2,r2,-1
   2af14:	d8800515 	stw	r2,20(sp)
   2af18:	183f761e 	bne	r3,zero,2acf4 <__alt_mem_SDRAM_controller+0xfc02acf4>
   2af1c:	d9000c17 	ldw	r4,48(sp)
   2af20:	0101730e 	bge	zero,r4,2b4f0 <_dtoa_r+0x15cc>
   2af24:	d9000615 	stw	r4,24(sp)
   2af28:	003ed006 	br	2aa6c <__alt_mem_SDRAM_controller+0xfc02aa6c>
   2af2c:	00800084 	movi	r2,2
   2af30:	3081861e 	bne	r6,r2,2b54c <_dtoa_r+0x1628>
   2af34:	d8000b15 	stw	zero,44(sp)
   2af38:	003f3c06 	br	2ac2c <__alt_mem_SDRAM_controller+0xfc02ac2c>
   2af3c:	dc000917 	ldw	r16,36(sp)
   2af40:	003e9206 	br	2a98c <__alt_mem_SDRAM_controller+0xfc02a98c>
   2af44:	d9c00317 	ldw	r7,12(sp)
   2af48:	00800084 	movi	r2,2
   2af4c:	11fec50e 	bge	r2,r7,2aa64 <__alt_mem_SDRAM_controller+0xfc02aa64>
   2af50:	d9000617 	ldw	r4,24(sp)
   2af54:	20013c1e 	bne	r4,zero,2b448 <_dtoa_r+0x1524>
   2af58:	a80b883a 	mov	r5,r21
   2af5c:	000f883a 	mov	r7,zero
   2af60:	01800144 	movi	r6,5
   2af64:	e009883a 	mov	r4,fp
   2af68:	002d6900 	call	2d690 <__multadd>
   2af6c:	100b883a 	mov	r5,r2
   2af70:	8009883a 	mov	r4,r16
   2af74:	102b883a 	mov	r21,r2
   2af78:	002de880 	call	2de88 <__mcmp>
   2af7c:	dc000915 	stw	r16,36(sp)
   2af80:	00bf410e 	bge	zero,r2,2ac88 <__alt_mem_SDRAM_controller+0xfc02ac88>
   2af84:	d9c00717 	ldw	r7,28(sp)
   2af88:	00800c44 	movi	r2,49
   2af8c:	38800005 	stb	r2,0(r7)
   2af90:	d8800517 	ldw	r2,20(sp)
   2af94:	3dc00044 	addi	r23,r7,1
   2af98:	10800044 	addi	r2,r2,1
   2af9c:	d8800515 	stw	r2,20(sp)
   2afa0:	003f3d06 	br	2ac98 <__alt_mem_SDRAM_controller+0xfc02ac98>
   2afa4:	d9800517 	ldw	r6,20(sp)
   2afa8:	d9c00717 	ldw	r7,28(sp)
   2afac:	00800c44 	movi	r2,49
   2afb0:	31800044 	addi	r6,r6,1
   2afb4:	d9800515 	stw	r6,20(sp)
   2afb8:	38800005 	stb	r2,0(r7)
   2afbc:	003edf06 	br	2ab3c <__alt_mem_SDRAM_controller+0xfc02ab3c>
   2afc0:	d8000b15 	stw	zero,44(sp)
   2afc4:	003c9f06 	br	2a244 <__alt_mem_SDRAM_controller+0xfc02a244>
   2afc8:	903e7e1e 	bne	r18,zero,2a9c4 <__alt_mem_SDRAM_controller+0xfc02a9c4>
   2afcc:	00800434 	movhi	r2,16
   2afd0:	10bfffc4 	addi	r2,r2,-1
   2afd4:	9884703a 	and	r2,r19,r2
   2afd8:	1000ea1e 	bne	r2,zero,2b384 <_dtoa_r+0x1460>
   2afdc:	9cdffc2c 	andhi	r19,r19,32752
   2afe0:	9800e826 	beq	r19,zero,2b384 <_dtoa_r+0x1460>
   2afe4:	d9c00817 	ldw	r7,32(sp)
   2afe8:	b5800044 	addi	r22,r22,1
   2afec:	04c00044 	movi	r19,1
   2aff0:	39c00044 	addi	r7,r7,1
   2aff4:	d9c00815 	stw	r7,32(sp)
   2aff8:	d8800d17 	ldw	r2,52(sp)
   2affc:	103e721e 	bne	r2,zero,2a9c8 <__alt_mem_SDRAM_controller+0xfc02a9c8>
   2b000:	00800044 	movi	r2,1
   2b004:	003e7906 	br	2a9ec <__alt_mem_SDRAM_controller+0xfc02a9ec>
   2b008:	8009883a 	mov	r4,r16
   2b00c:	00273200 	call	27320 <__floatsidf>
   2b010:	d9800f17 	ldw	r6,60(sp)
   2b014:	d9c01017 	ldw	r7,64(sp)
   2b018:	1009883a 	mov	r4,r2
   2b01c:	180b883a 	mov	r5,r3
   2b020:	002628c0 	call	2628c <__muldf3>
   2b024:	000d883a 	mov	r6,zero
   2b028:	01d00734 	movhi	r7,16412
   2b02c:	1009883a 	mov	r4,r2
   2b030:	180b883a 	mov	r5,r3
   2b034:	0024ea00 	call	24ea0 <__adddf3>
   2b038:	047f3034 	movhi	r17,64704
   2b03c:	1021883a 	mov	r16,r2
   2b040:	1c63883a 	add	r17,r3,r17
   2b044:	d9000f17 	ldw	r4,60(sp)
   2b048:	d9401017 	ldw	r5,64(sp)
   2b04c:	000d883a 	mov	r6,zero
   2b050:	01d00534 	movhi	r7,16404
   2b054:	00269a40 	call	269a4 <__subdf3>
   2b058:	800d883a 	mov	r6,r16
   2b05c:	880f883a 	mov	r7,r17
   2b060:	1009883a 	mov	r4,r2
   2b064:	180b883a 	mov	r5,r3
   2b068:	102b883a 	mov	r21,r2
   2b06c:	1829883a 	mov	r20,r3
   2b070:	00260bc0 	call	260bc <__gedf2>
   2b074:	00806c16 	blt	zero,r2,2b228 <_dtoa_r+0x1304>
   2b078:	89e0003c 	xorhi	r7,r17,32768
   2b07c:	800d883a 	mov	r6,r16
   2b080:	a809883a 	mov	r4,r21
   2b084:	a00b883a 	mov	r5,r20
   2b088:	00261980 	call	26198 <__ledf2>
   2b08c:	103d7e0e 	bge	r2,zero,2a688 <__alt_mem_SDRAM_controller+0xfc02a688>
   2b090:	002b883a 	mov	r21,zero
   2b094:	0023883a 	mov	r17,zero
   2b098:	003efb06 	br	2ac88 <__alt_mem_SDRAM_controller+0xfc02ac88>
   2b09c:	d8800717 	ldw	r2,28(sp)
   2b0a0:	003bd006 	br	29fe4 <__alt_mem_SDRAM_controller+0xfc029fe4>
   2b0a4:	d9000a17 	ldw	r4,40(sp)
   2b0a8:	d9800d17 	ldw	r6,52(sp)
   2b0ac:	dd400a15 	stw	r21,40(sp)
   2b0b0:	a905c83a 	sub	r2,r21,r4
   2b0b4:	308d883a 	add	r6,r6,r2
   2b0b8:	d9800d15 	stw	r6,52(sp)
   2b0bc:	002b883a 	mov	r21,zero
   2b0c0:	003e0606 	br	2a8dc <__alt_mem_SDRAM_controller+0xfc02a8dc>
   2b0c4:	9023883a 	mov	r17,r18
   2b0c8:	9829883a 	mov	r20,r19
   2b0cc:	04000084 	movi	r16,2
   2b0d0:	003c9206 	br	2a31c <__alt_mem_SDRAM_controller+0xfc02a31c>
   2b0d4:	04000044 	movi	r16,1
   2b0d8:	dc000c15 	stw	r16,48(sp)
   2b0dc:	dc000615 	stw	r16,24(sp)
   2b0e0:	dc002215 	stw	r16,136(sp)
   2b0e4:	e0001115 	stw	zero,68(fp)
   2b0e8:	000b883a 	mov	r5,zero
   2b0ec:	003c6906 	br	2a294 <__alt_mem_SDRAM_controller+0xfc02a294>
   2b0f0:	3021883a 	mov	r16,r6
   2b0f4:	003ffb06 	br	2b0e4 <__alt_mem_SDRAM_controller+0xfc02b0e4>
   2b0f8:	1000021e 	bne	r2,zero,2b104 <_dtoa_r+0x11e0>
   2b0fc:	4200004c 	andi	r8,r8,1
   2b100:	403e7d1e 	bne	r8,zero,2aaf8 <__alt_mem_SDRAM_controller+0xfc02aaf8>
   2b104:	01000c04 	movi	r4,48
   2b108:	00000106 	br	2b110 <_dtoa_r+0x11ec>
   2b10c:	102f883a 	mov	r23,r2
   2b110:	b8bfffc4 	addi	r2,r23,-1
   2b114:	10c00007 	ldb	r3,0(r2)
   2b118:	193ffc26 	beq	r3,r4,2b10c <__alt_mem_SDRAM_controller+0xfc02b10c>
   2b11c:	003e8706 	br	2ab3c <__alt_mem_SDRAM_controller+0xfc02ab3c>
   2b120:	d8800517 	ldw	r2,20(sp)
   2b124:	00a3c83a 	sub	r17,zero,r2
   2b128:	8800a426 	beq	r17,zero,2b3bc <_dtoa_r+0x1498>
   2b12c:	888003cc 	andi	r2,r17,15
   2b130:	100490fa 	slli	r2,r2,3
   2b134:	00c000f4 	movhi	r3,3
   2b138:	18d8fa04 	addi	r3,r3,25576
   2b13c:	1885883a 	add	r2,r3,r2
   2b140:	11800017 	ldw	r6,0(r2)
   2b144:	11c00117 	ldw	r7,4(r2)
   2b148:	9009883a 	mov	r4,r18
   2b14c:	980b883a 	mov	r5,r19
   2b150:	8823d13a 	srai	r17,r17,4
   2b154:	002628c0 	call	2628c <__muldf3>
   2b158:	d8800f15 	stw	r2,60(sp)
   2b15c:	d8c01015 	stw	r3,64(sp)
   2b160:	8800e826 	beq	r17,zero,2b504 <_dtoa_r+0x15e0>
   2b164:	050000f4 	movhi	r20,3
   2b168:	a518f004 	addi	r20,r20,25536
   2b16c:	04000084 	movi	r16,2
   2b170:	8980004c 	andi	r6,r17,1
   2b174:	1009883a 	mov	r4,r2
   2b178:	8823d07a 	srai	r17,r17,1
   2b17c:	180b883a 	mov	r5,r3
   2b180:	30000426 	beq	r6,zero,2b194 <_dtoa_r+0x1270>
   2b184:	a1800017 	ldw	r6,0(r20)
   2b188:	a1c00117 	ldw	r7,4(r20)
   2b18c:	84000044 	addi	r16,r16,1
   2b190:	002628c0 	call	2628c <__muldf3>
   2b194:	a5000204 	addi	r20,r20,8
   2b198:	883ff51e 	bne	r17,zero,2b170 <__alt_mem_SDRAM_controller+0xfc02b170>
   2b19c:	d8800f15 	stw	r2,60(sp)
   2b1a0:	d8c01015 	stw	r3,64(sp)
   2b1a4:	003c7606 	br	2a380 <__alt_mem_SDRAM_controller+0xfc02a380>
   2b1a8:	00c00c04 	movi	r3,48
   2b1ac:	10c00005 	stb	r3,0(r2)
   2b1b0:	d8c00517 	ldw	r3,20(sp)
   2b1b4:	bd3fffc3 	ldbu	r20,-1(r23)
   2b1b8:	18c00044 	addi	r3,r3,1
   2b1bc:	d8c00515 	stw	r3,20(sp)
   2b1c0:	003db906 	br	2a8a8 <__alt_mem_SDRAM_controller+0xfc02a8a8>
   2b1c4:	89400117 	ldw	r5,4(r17)
   2b1c8:	e009883a 	mov	r4,fp
   2b1cc:	002d5c00 	call	2d5c0 <_Balloc>
   2b1d0:	89800417 	ldw	r6,16(r17)
   2b1d4:	89400304 	addi	r5,r17,12
   2b1d8:	11000304 	addi	r4,r2,12
   2b1dc:	31800084 	addi	r6,r6,2
   2b1e0:	318d883a 	add	r6,r6,r6
   2b1e4:	318d883a 	add	r6,r6,r6
   2b1e8:	1027883a 	mov	r19,r2
   2b1ec:	002d1f40 	call	2d1f4 <memcpy>
   2b1f0:	01800044 	movi	r6,1
   2b1f4:	980b883a 	mov	r5,r19
   2b1f8:	e009883a 	mov	r4,fp
   2b1fc:	002dd400 	call	2dd40 <__lshift>
   2b200:	1029883a 	mov	r20,r2
   2b204:	003ecc06 	br	2ad38 <__alt_mem_SDRAM_controller+0xfc02ad38>
   2b208:	00800e44 	movi	r2,57
   2b20c:	90809026 	beq	r18,r2,2b450 <_dtoa_r+0x152c>
   2b210:	92000044 	addi	r8,r18,1
   2b214:	003f1f06 	br	2ae94 <__alt_mem_SDRAM_controller+0xfc02ae94>
   2b218:	9011883a 	mov	r8,r18
   2b21c:	8825883a 	mov	r18,r17
   2b220:	a023883a 	mov	r17,r20
   2b224:	003e2906 	br	2aacc <__alt_mem_SDRAM_controller+0xfc02aacc>
   2b228:	002b883a 	mov	r21,zero
   2b22c:	0023883a 	mov	r17,zero
   2b230:	003f5406 	br	2af84 <__alt_mem_SDRAM_controller+0xfc02af84>
   2b234:	61bfffc4 	addi	r6,r12,-1
   2b238:	300490fa 	slli	r2,r6,3
   2b23c:	00c000f4 	movhi	r3,3
   2b240:	18d8fa04 	addi	r3,r3,25576
   2b244:	1885883a 	add	r2,r3,r2
   2b248:	11000017 	ldw	r4,0(r2)
   2b24c:	11400117 	ldw	r5,4(r2)
   2b250:	d8800717 	ldw	r2,28(sp)
   2b254:	880f883a 	mov	r7,r17
   2b258:	d9801215 	stw	r6,72(sp)
   2b25c:	800d883a 	mov	r6,r16
   2b260:	db001615 	stw	r12,88(sp)
   2b264:	15c00044 	addi	r23,r2,1
   2b268:	002628c0 	call	2628c <__muldf3>
   2b26c:	d9401017 	ldw	r5,64(sp)
   2b270:	d9000f17 	ldw	r4,60(sp)
   2b274:	d8c01515 	stw	r3,84(sp)
   2b278:	d8801415 	stw	r2,80(sp)
   2b27c:	00272a00 	call	272a0 <__fixdfsi>
   2b280:	1009883a 	mov	r4,r2
   2b284:	1021883a 	mov	r16,r2
   2b288:	00273200 	call	27320 <__floatsidf>
   2b28c:	d9000f17 	ldw	r4,60(sp)
   2b290:	d9401017 	ldw	r5,64(sp)
   2b294:	100d883a 	mov	r6,r2
   2b298:	180f883a 	mov	r7,r3
   2b29c:	00269a40 	call	269a4 <__subdf3>
   2b2a0:	1829883a 	mov	r20,r3
   2b2a4:	d8c00717 	ldw	r3,28(sp)
   2b2a8:	84000c04 	addi	r16,r16,48
   2b2ac:	1023883a 	mov	r17,r2
   2b2b0:	1c000005 	stb	r16,0(r3)
   2b2b4:	db001617 	ldw	r12,88(sp)
   2b2b8:	00800044 	movi	r2,1
   2b2bc:	60802226 	beq	r12,r2,2b348 <_dtoa_r+0x1424>
   2b2c0:	d9c00717 	ldw	r7,28(sp)
   2b2c4:	8805883a 	mov	r2,r17
   2b2c8:	b82b883a 	mov	r21,r23
   2b2cc:	3b19883a 	add	r12,r7,r12
   2b2d0:	6023883a 	mov	r17,r12
   2b2d4:	a007883a 	mov	r3,r20
   2b2d8:	dc800f15 	stw	r18,60(sp)
   2b2dc:	000d883a 	mov	r6,zero
   2b2e0:	01d00934 	movhi	r7,16420
   2b2e4:	1009883a 	mov	r4,r2
   2b2e8:	180b883a 	mov	r5,r3
   2b2ec:	002628c0 	call	2628c <__muldf3>
   2b2f0:	180b883a 	mov	r5,r3
   2b2f4:	1009883a 	mov	r4,r2
   2b2f8:	1829883a 	mov	r20,r3
   2b2fc:	1025883a 	mov	r18,r2
   2b300:	00272a00 	call	272a0 <__fixdfsi>
   2b304:	1009883a 	mov	r4,r2
   2b308:	1021883a 	mov	r16,r2
   2b30c:	00273200 	call	27320 <__floatsidf>
   2b310:	100d883a 	mov	r6,r2
   2b314:	180f883a 	mov	r7,r3
   2b318:	9009883a 	mov	r4,r18
   2b31c:	a00b883a 	mov	r5,r20
   2b320:	84000c04 	addi	r16,r16,48
   2b324:	00269a40 	call	269a4 <__subdf3>
   2b328:	ad400044 	addi	r21,r21,1
   2b32c:	ac3fffc5 	stb	r16,-1(r21)
   2b330:	ac7fea1e 	bne	r21,r17,2b2dc <__alt_mem_SDRAM_controller+0xfc02b2dc>
   2b334:	1023883a 	mov	r17,r2
   2b338:	d8801217 	ldw	r2,72(sp)
   2b33c:	dc800f17 	ldw	r18,60(sp)
   2b340:	1829883a 	mov	r20,r3
   2b344:	b8af883a 	add	r23,r23,r2
   2b348:	d9001417 	ldw	r4,80(sp)
   2b34c:	d9401517 	ldw	r5,84(sp)
   2b350:	000d883a 	mov	r6,zero
   2b354:	01cff834 	movhi	r7,16352
   2b358:	0024ea00 	call	24ea0 <__adddf3>
   2b35c:	880d883a 	mov	r6,r17
   2b360:	a00f883a 	mov	r7,r20
   2b364:	1009883a 	mov	r4,r2
   2b368:	180b883a 	mov	r5,r3
   2b36c:	00261980 	call	26198 <__ledf2>
   2b370:	10003e0e 	bge	r2,zero,2b46c <_dtoa_r+0x1548>
   2b374:	d9001317 	ldw	r4,76(sp)
   2b378:	bd3fffc3 	ldbu	r20,-1(r23)
   2b37c:	d9000515 	stw	r4,20(sp)
   2b380:	003d3b06 	br	2a870 <__alt_mem_SDRAM_controller+0xfc02a870>
   2b384:	0027883a 	mov	r19,zero
   2b388:	003f1b06 	br	2aff8 <__alt_mem_SDRAM_controller+0xfc02aff8>
   2b38c:	d8800817 	ldw	r2,32(sp)
   2b390:	11e9c83a 	sub	r20,r2,r7
   2b394:	0005883a 	mov	r2,zero
   2b398:	003d5406 	br	2a8ec <__alt_mem_SDRAM_controller+0xfc02a8ec>
   2b39c:	00800044 	movi	r2,1
   2b3a0:	003dc706 	br	2aac0 <__alt_mem_SDRAM_controller+0xfc02aac0>
   2b3a4:	d8c00217 	ldw	r3,8(sp)
   2b3a8:	00800d84 	movi	r2,54
   2b3ac:	dd400a17 	ldw	r21,40(sp)
   2b3b0:	10c5c83a 	sub	r2,r2,r3
   2b3b4:	dd000817 	ldw	r20,32(sp)
   2b3b8:	003d4c06 	br	2a8ec <__alt_mem_SDRAM_controller+0xfc02a8ec>
   2b3bc:	dc800f15 	stw	r18,60(sp)
   2b3c0:	dcc01015 	stw	r19,64(sp)
   2b3c4:	04000084 	movi	r16,2
   2b3c8:	003bed06 	br	2a380 <__alt_mem_SDRAM_controller+0xfc02a380>
   2b3cc:	d9000617 	ldw	r4,24(sp)
   2b3d0:	203f0d26 	beq	r4,zero,2b008 <__alt_mem_SDRAM_controller+0xfc02b008>
   2b3d4:	d9800c17 	ldw	r6,48(sp)
   2b3d8:	01bcab0e 	bge	zero,r6,2a688 <__alt_mem_SDRAM_controller+0xfc02a688>
   2b3dc:	d9401017 	ldw	r5,64(sp)
   2b3e0:	d9000f17 	ldw	r4,60(sp)
   2b3e4:	000d883a 	mov	r6,zero
   2b3e8:	01d00934 	movhi	r7,16420
   2b3ec:	002628c0 	call	2628c <__muldf3>
   2b3f0:	81000044 	addi	r4,r16,1
   2b3f4:	d8800f15 	stw	r2,60(sp)
   2b3f8:	d8c01015 	stw	r3,64(sp)
   2b3fc:	00273200 	call	27320 <__floatsidf>
   2b400:	d9800f17 	ldw	r6,60(sp)
   2b404:	d9c01017 	ldw	r7,64(sp)
   2b408:	1009883a 	mov	r4,r2
   2b40c:	180b883a 	mov	r5,r3
   2b410:	002628c0 	call	2628c <__muldf3>
   2b414:	01d00734 	movhi	r7,16412
   2b418:	000d883a 	mov	r6,zero
   2b41c:	1009883a 	mov	r4,r2
   2b420:	180b883a 	mov	r5,r3
   2b424:	0024ea00 	call	24ea0 <__adddf3>
   2b428:	d9c00517 	ldw	r7,20(sp)
   2b42c:	047f3034 	movhi	r17,64704
   2b430:	1021883a 	mov	r16,r2
   2b434:	39ffffc4 	addi	r7,r7,-1
   2b438:	d9c01315 	stw	r7,76(sp)
   2b43c:	1c63883a 	add	r17,r3,r17
   2b440:	db000c17 	ldw	r12,48(sp)
   2b444:	003bea06 	br	2a3f0 <__alt_mem_SDRAM_controller+0xfc02a3f0>
   2b448:	dc000915 	stw	r16,36(sp)
   2b44c:	003e0e06 	br	2ac88 <__alt_mem_SDRAM_controller+0xfc02ac88>
   2b450:	01000e44 	movi	r4,57
   2b454:	8825883a 	mov	r18,r17
   2b458:	9dc00044 	addi	r23,r19,1
   2b45c:	99000005 	stb	r4,0(r19)
   2b460:	a023883a 	mov	r17,r20
   2b464:	dc000915 	stw	r16,36(sp)
   2b468:	003da406 	br	2aafc <__alt_mem_SDRAM_controller+0xfc02aafc>
   2b46c:	d9801417 	ldw	r6,80(sp)
   2b470:	d9c01517 	ldw	r7,84(sp)
   2b474:	0009883a 	mov	r4,zero
   2b478:	014ff834 	movhi	r5,16352
   2b47c:	00269a40 	call	269a4 <__subdf3>
   2b480:	880d883a 	mov	r6,r17
   2b484:	a00f883a 	mov	r7,r20
   2b488:	1009883a 	mov	r4,r2
   2b48c:	180b883a 	mov	r5,r3
   2b490:	00260bc0 	call	260bc <__gedf2>
   2b494:	00bc7c0e 	bge	zero,r2,2a688 <__alt_mem_SDRAM_controller+0xfc02a688>
   2b498:	01000c04 	movi	r4,48
   2b49c:	00000106 	br	2b4a4 <_dtoa_r+0x1580>
   2b4a0:	102f883a 	mov	r23,r2
   2b4a4:	b8bfffc4 	addi	r2,r23,-1
   2b4a8:	10c00007 	ldb	r3,0(r2)
   2b4ac:	193ffc26 	beq	r3,r4,2b4a0 <__alt_mem_SDRAM_controller+0xfc02b4a0>
   2b4b0:	d9801317 	ldw	r6,76(sp)
   2b4b4:	d9800515 	stw	r6,20(sp)
   2b4b8:	003c4406 	br	2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2b4bc:	d9801317 	ldw	r6,76(sp)
   2b4c0:	d9800515 	stw	r6,20(sp)
   2b4c4:	003cea06 	br	2a870 <__alt_mem_SDRAM_controller+0xfc02a870>
   2b4c8:	dd800f17 	ldw	r22,60(sp)
   2b4cc:	dcc01017 	ldw	r19,64(sp)
   2b4d0:	dc801217 	ldw	r18,72(sp)
   2b4d4:	003c6c06 	br	2a688 <__alt_mem_SDRAM_controller+0xfc02a688>
   2b4d8:	903e031e 	bne	r18,zero,2ace8 <__alt_mem_SDRAM_controller+0xfc02ace8>
   2b4dc:	003ebb06 	br	2afcc <__alt_mem_SDRAM_controller+0xfc02afcc>
   2b4e0:	103e6c1e 	bne	r2,zero,2ae94 <__alt_mem_SDRAM_controller+0xfc02ae94>
   2b4e4:	4080004c 	andi	r2,r8,1
   2b4e8:	103e6a26 	beq	r2,zero,2ae94 <__alt_mem_SDRAM_controller+0xfc02ae94>
   2b4ec:	003e6606 	br	2ae88 <__alt_mem_SDRAM_controller+0xfc02ae88>
   2b4f0:	d8c00317 	ldw	r3,12(sp)
   2b4f4:	00800084 	movi	r2,2
   2b4f8:	10c02916 	blt	r2,r3,2b5a0 <_dtoa_r+0x167c>
   2b4fc:	d9000c17 	ldw	r4,48(sp)
   2b500:	003e8806 	br	2af24 <__alt_mem_SDRAM_controller+0xfc02af24>
   2b504:	04000084 	movi	r16,2
   2b508:	003b9d06 	br	2a380 <__alt_mem_SDRAM_controller+0xfc02a380>
   2b50c:	d9001317 	ldw	r4,76(sp)
   2b510:	d9000515 	stw	r4,20(sp)
   2b514:	003cd606 	br	2a870 <__alt_mem_SDRAM_controller+0xfc02a870>
   2b518:	d8801317 	ldw	r2,76(sp)
   2b51c:	d8800515 	stw	r2,20(sp)
   2b520:	003c2a06 	br	2a5cc <__alt_mem_SDRAM_controller+0xfc02a5cc>
   2b524:	d9800317 	ldw	r6,12(sp)
   2b528:	00800084 	movi	r2,2
   2b52c:	11801516 	blt	r2,r6,2b584 <_dtoa_r+0x1660>
   2b530:	d9c00c17 	ldw	r7,48(sp)
   2b534:	d9c00615 	stw	r7,24(sp)
   2b538:	003df706 	br	2ad18 <__alt_mem_SDRAM_controller+0xfc02ad18>
   2b53c:	193d3926 	beq	r3,r4,2aa24 <__alt_mem_SDRAM_controller+0xfc02aa24>
   2b540:	00c00f04 	movi	r3,60
   2b544:	1885c83a 	sub	r2,r3,r2
   2b548:	003ddf06 	br	2acc8 <__alt_mem_SDRAM_controller+0xfc02acc8>
   2b54c:	e009883a 	mov	r4,fp
   2b550:	e0001115 	stw	zero,68(fp)
   2b554:	000b883a 	mov	r5,zero
   2b558:	002d5c00 	call	2d5c0 <_Balloc>
   2b55c:	d8800715 	stw	r2,28(sp)
   2b560:	d8c00717 	ldw	r3,28(sp)
   2b564:	00bfffc4 	movi	r2,-1
   2b568:	01000044 	movi	r4,1
   2b56c:	d8800c15 	stw	r2,48(sp)
   2b570:	e0c01015 	stw	r3,64(fp)
   2b574:	d9000b15 	stw	r4,44(sp)
   2b578:	d8800615 	stw	r2,24(sp)
   2b57c:	d8002215 	stw	zero,136(sp)
   2b580:	003c4106 	br	2a688 <__alt_mem_SDRAM_controller+0xfc02a688>
   2b584:	d8c00c17 	ldw	r3,48(sp)
   2b588:	d8c00615 	stw	r3,24(sp)
   2b58c:	003e7006 	br	2af50 <__alt_mem_SDRAM_controller+0xfc02af50>
   2b590:	04400044 	movi	r17,1
   2b594:	003b2006 	br	2a218 <__alt_mem_SDRAM_controller+0xfc02a218>
   2b598:	000b883a 	mov	r5,zero
   2b59c:	003b3d06 	br	2a294 <__alt_mem_SDRAM_controller+0xfc02a294>
   2b5a0:	d8800c17 	ldw	r2,48(sp)
   2b5a4:	d8800615 	stw	r2,24(sp)
   2b5a8:	003e6906 	br	2af50 <__alt_mem_SDRAM_controller+0xfc02af50>

0002b5ac <__sflush_r>:
   2b5ac:	2880030b 	ldhu	r2,12(r5)
   2b5b0:	defffb04 	addi	sp,sp,-20
   2b5b4:	dcc00315 	stw	r19,12(sp)
   2b5b8:	dc400115 	stw	r17,4(sp)
   2b5bc:	dfc00415 	stw	ra,16(sp)
   2b5c0:	dc800215 	stw	r18,8(sp)
   2b5c4:	dc000015 	stw	r16,0(sp)
   2b5c8:	10c0020c 	andi	r3,r2,8
   2b5cc:	2823883a 	mov	r17,r5
   2b5d0:	2027883a 	mov	r19,r4
   2b5d4:	1800311e 	bne	r3,zero,2b69c <__sflush_r+0xf0>
   2b5d8:	28c00117 	ldw	r3,4(r5)
   2b5dc:	10820014 	ori	r2,r2,2048
   2b5e0:	2880030d 	sth	r2,12(r5)
   2b5e4:	00c04b0e 	bge	zero,r3,2b714 <__sflush_r+0x168>
   2b5e8:	8a000a17 	ldw	r8,40(r17)
   2b5ec:	40002326 	beq	r8,zero,2b67c <__sflush_r+0xd0>
   2b5f0:	9c000017 	ldw	r16,0(r19)
   2b5f4:	10c4000c 	andi	r3,r2,4096
   2b5f8:	98000015 	stw	zero,0(r19)
   2b5fc:	18004826 	beq	r3,zero,2b720 <__sflush_r+0x174>
   2b600:	89801417 	ldw	r6,80(r17)
   2b604:	10c0010c 	andi	r3,r2,4
   2b608:	18000626 	beq	r3,zero,2b624 <__sflush_r+0x78>
   2b60c:	88c00117 	ldw	r3,4(r17)
   2b610:	88800c17 	ldw	r2,48(r17)
   2b614:	30cdc83a 	sub	r6,r6,r3
   2b618:	10000226 	beq	r2,zero,2b624 <__sflush_r+0x78>
   2b61c:	88800f17 	ldw	r2,60(r17)
   2b620:	308dc83a 	sub	r6,r6,r2
   2b624:	89400717 	ldw	r5,28(r17)
   2b628:	000f883a 	mov	r7,zero
   2b62c:	9809883a 	mov	r4,r19
   2b630:	403ee83a 	callr	r8
   2b634:	00ffffc4 	movi	r3,-1
   2b638:	10c04426 	beq	r2,r3,2b74c <__sflush_r+0x1a0>
   2b63c:	88c0030b 	ldhu	r3,12(r17)
   2b640:	89000417 	ldw	r4,16(r17)
   2b644:	88000115 	stw	zero,4(r17)
   2b648:	197dffcc 	andi	r5,r3,63487
   2b64c:	8940030d 	sth	r5,12(r17)
   2b650:	89000015 	stw	r4,0(r17)
   2b654:	18c4000c 	andi	r3,r3,4096
   2b658:	18002c1e 	bne	r3,zero,2b70c <__sflush_r+0x160>
   2b65c:	89400c17 	ldw	r5,48(r17)
   2b660:	9c000015 	stw	r16,0(r19)
   2b664:	28000526 	beq	r5,zero,2b67c <__sflush_r+0xd0>
   2b668:	88801004 	addi	r2,r17,64
   2b66c:	28800226 	beq	r5,r2,2b678 <__sflush_r+0xcc>
   2b670:	9809883a 	mov	r4,r19
   2b674:	002bd180 	call	2bd18 <_free_r>
   2b678:	88000c15 	stw	zero,48(r17)
   2b67c:	0005883a 	mov	r2,zero
   2b680:	dfc00417 	ldw	ra,16(sp)
   2b684:	dcc00317 	ldw	r19,12(sp)
   2b688:	dc800217 	ldw	r18,8(sp)
   2b68c:	dc400117 	ldw	r17,4(sp)
   2b690:	dc000017 	ldw	r16,0(sp)
   2b694:	dec00504 	addi	sp,sp,20
   2b698:	f800283a 	ret
   2b69c:	2c800417 	ldw	r18,16(r5)
   2b6a0:	903ff626 	beq	r18,zero,2b67c <__alt_mem_SDRAM_controller+0xfc02b67c>
   2b6a4:	2c000017 	ldw	r16,0(r5)
   2b6a8:	108000cc 	andi	r2,r2,3
   2b6ac:	2c800015 	stw	r18,0(r5)
   2b6b0:	84a1c83a 	sub	r16,r16,r18
   2b6b4:	1000131e 	bne	r2,zero,2b704 <__sflush_r+0x158>
   2b6b8:	28800517 	ldw	r2,20(r5)
   2b6bc:	88800215 	stw	r2,8(r17)
   2b6c0:	04000316 	blt	zero,r16,2b6d0 <__sflush_r+0x124>
   2b6c4:	003fed06 	br	2b67c <__alt_mem_SDRAM_controller+0xfc02b67c>
   2b6c8:	90a5883a 	add	r18,r18,r2
   2b6cc:	043feb0e 	bge	zero,r16,2b67c <__alt_mem_SDRAM_controller+0xfc02b67c>
   2b6d0:	88800917 	ldw	r2,36(r17)
   2b6d4:	89400717 	ldw	r5,28(r17)
   2b6d8:	800f883a 	mov	r7,r16
   2b6dc:	900d883a 	mov	r6,r18
   2b6e0:	9809883a 	mov	r4,r19
   2b6e4:	103ee83a 	callr	r2
   2b6e8:	80a1c83a 	sub	r16,r16,r2
   2b6ec:	00bff616 	blt	zero,r2,2b6c8 <__alt_mem_SDRAM_controller+0xfc02b6c8>
   2b6f0:	88c0030b 	ldhu	r3,12(r17)
   2b6f4:	00bfffc4 	movi	r2,-1
   2b6f8:	18c01014 	ori	r3,r3,64
   2b6fc:	88c0030d 	sth	r3,12(r17)
   2b700:	003fdf06 	br	2b680 <__alt_mem_SDRAM_controller+0xfc02b680>
   2b704:	0005883a 	mov	r2,zero
   2b708:	003fec06 	br	2b6bc <__alt_mem_SDRAM_controller+0xfc02b6bc>
   2b70c:	88801415 	stw	r2,80(r17)
   2b710:	003fd206 	br	2b65c <__alt_mem_SDRAM_controller+0xfc02b65c>
   2b714:	28c00f17 	ldw	r3,60(r5)
   2b718:	00ffb316 	blt	zero,r3,2b5e8 <__alt_mem_SDRAM_controller+0xfc02b5e8>
   2b71c:	003fd706 	br	2b67c <__alt_mem_SDRAM_controller+0xfc02b67c>
   2b720:	89400717 	ldw	r5,28(r17)
   2b724:	000d883a 	mov	r6,zero
   2b728:	01c00044 	movi	r7,1
   2b72c:	9809883a 	mov	r4,r19
   2b730:	403ee83a 	callr	r8
   2b734:	100d883a 	mov	r6,r2
   2b738:	00bfffc4 	movi	r2,-1
   2b73c:	30801426 	beq	r6,r2,2b790 <__sflush_r+0x1e4>
   2b740:	8880030b 	ldhu	r2,12(r17)
   2b744:	8a000a17 	ldw	r8,40(r17)
   2b748:	003fae06 	br	2b604 <__alt_mem_SDRAM_controller+0xfc02b604>
   2b74c:	98c00017 	ldw	r3,0(r19)
   2b750:	183fba26 	beq	r3,zero,2b63c <__alt_mem_SDRAM_controller+0xfc02b63c>
   2b754:	01000744 	movi	r4,29
   2b758:	19000626 	beq	r3,r4,2b774 <__sflush_r+0x1c8>
   2b75c:	01000584 	movi	r4,22
   2b760:	19000426 	beq	r3,r4,2b774 <__sflush_r+0x1c8>
   2b764:	88c0030b 	ldhu	r3,12(r17)
   2b768:	18c01014 	ori	r3,r3,64
   2b76c:	88c0030d 	sth	r3,12(r17)
   2b770:	003fc306 	br	2b680 <__alt_mem_SDRAM_controller+0xfc02b680>
   2b774:	8880030b 	ldhu	r2,12(r17)
   2b778:	88c00417 	ldw	r3,16(r17)
   2b77c:	88000115 	stw	zero,4(r17)
   2b780:	10bdffcc 	andi	r2,r2,63487
   2b784:	8880030d 	sth	r2,12(r17)
   2b788:	88c00015 	stw	r3,0(r17)
   2b78c:	003fb306 	br	2b65c <__alt_mem_SDRAM_controller+0xfc02b65c>
   2b790:	98800017 	ldw	r2,0(r19)
   2b794:	103fea26 	beq	r2,zero,2b740 <__alt_mem_SDRAM_controller+0xfc02b740>
   2b798:	00c00744 	movi	r3,29
   2b79c:	10c00226 	beq	r2,r3,2b7a8 <__sflush_r+0x1fc>
   2b7a0:	00c00584 	movi	r3,22
   2b7a4:	10c0031e 	bne	r2,r3,2b7b4 <__sflush_r+0x208>
   2b7a8:	9c000015 	stw	r16,0(r19)
   2b7ac:	0005883a 	mov	r2,zero
   2b7b0:	003fb306 	br	2b680 <__alt_mem_SDRAM_controller+0xfc02b680>
   2b7b4:	88c0030b 	ldhu	r3,12(r17)
   2b7b8:	3005883a 	mov	r2,r6
   2b7bc:	18c01014 	ori	r3,r3,64
   2b7c0:	88c0030d 	sth	r3,12(r17)
   2b7c4:	003fae06 	br	2b680 <__alt_mem_SDRAM_controller+0xfc02b680>

0002b7c8 <_fflush_r>:
   2b7c8:	defffd04 	addi	sp,sp,-12
   2b7cc:	dc000115 	stw	r16,4(sp)
   2b7d0:	dfc00215 	stw	ra,8(sp)
   2b7d4:	2021883a 	mov	r16,r4
   2b7d8:	20000226 	beq	r4,zero,2b7e4 <_fflush_r+0x1c>
   2b7dc:	20800e17 	ldw	r2,56(r4)
   2b7e0:	10000c26 	beq	r2,zero,2b814 <_fflush_r+0x4c>
   2b7e4:	2880030f 	ldh	r2,12(r5)
   2b7e8:	1000051e 	bne	r2,zero,2b800 <_fflush_r+0x38>
   2b7ec:	0005883a 	mov	r2,zero
   2b7f0:	dfc00217 	ldw	ra,8(sp)
   2b7f4:	dc000117 	ldw	r16,4(sp)
   2b7f8:	dec00304 	addi	sp,sp,12
   2b7fc:	f800283a 	ret
   2b800:	8009883a 	mov	r4,r16
   2b804:	dfc00217 	ldw	ra,8(sp)
   2b808:	dc000117 	ldw	r16,4(sp)
   2b80c:	dec00304 	addi	sp,sp,12
   2b810:	002b5ac1 	jmpi	2b5ac <__sflush_r>
   2b814:	d9400015 	stw	r5,0(sp)
   2b818:	002bba40 	call	2bba4 <__sinit>
   2b81c:	d9400017 	ldw	r5,0(sp)
   2b820:	003ff006 	br	2b7e4 <__alt_mem_SDRAM_controller+0xfc02b7e4>

0002b824 <fflush>:
   2b824:	20000526 	beq	r4,zero,2b83c <fflush+0x18>
   2b828:	00800134 	movhi	r2,4
   2b82c:	10a04f04 	addi	r2,r2,-32452
   2b830:	200b883a 	mov	r5,r4
   2b834:	11000017 	ldw	r4,0(r2)
   2b838:	002b7c81 	jmpi	2b7c8 <_fflush_r>
   2b83c:	00800134 	movhi	r2,4
   2b840:	10a04e04 	addi	r2,r2,-32456
   2b844:	11000017 	ldw	r4,0(r2)
   2b848:	014000f4 	movhi	r5,3
   2b84c:	296df204 	addi	r5,r5,-18488
   2b850:	002c5a81 	jmpi	2c5a8 <_fwalk_reent>

0002b854 <__fp_unlock>:
   2b854:	0005883a 	mov	r2,zero
   2b858:	f800283a 	ret

0002b85c <_cleanup_r>:
   2b85c:	014000f4 	movhi	r5,3
   2b860:	29415304 	addi	r5,r5,1356
   2b864:	002c5a81 	jmpi	2c5a8 <_fwalk_reent>

0002b868 <__sinit.part.1>:
   2b868:	defff704 	addi	sp,sp,-36
   2b86c:	00c000f4 	movhi	r3,3
   2b870:	dfc00815 	stw	ra,32(sp)
   2b874:	ddc00715 	stw	r23,28(sp)
   2b878:	dd800615 	stw	r22,24(sp)
   2b87c:	dd400515 	stw	r21,20(sp)
   2b880:	dd000415 	stw	r20,16(sp)
   2b884:	dcc00315 	stw	r19,12(sp)
   2b888:	dc800215 	stw	r18,8(sp)
   2b88c:	dc400115 	stw	r17,4(sp)
   2b890:	dc000015 	stw	r16,0(sp)
   2b894:	18ee1704 	addi	r3,r3,-18340
   2b898:	24000117 	ldw	r16,4(r4)
   2b89c:	20c00f15 	stw	r3,60(r4)
   2b8a0:	2080bb04 	addi	r2,r4,748
   2b8a4:	00c000c4 	movi	r3,3
   2b8a8:	20c0b915 	stw	r3,740(r4)
   2b8ac:	2080ba15 	stw	r2,744(r4)
   2b8b0:	2000b815 	stw	zero,736(r4)
   2b8b4:	05c00204 	movi	r23,8
   2b8b8:	00800104 	movi	r2,4
   2b8bc:	2025883a 	mov	r18,r4
   2b8c0:	b80d883a 	mov	r6,r23
   2b8c4:	81001704 	addi	r4,r16,92
   2b8c8:	000b883a 	mov	r5,zero
   2b8cc:	80000015 	stw	zero,0(r16)
   2b8d0:	80000115 	stw	zero,4(r16)
   2b8d4:	80000215 	stw	zero,8(r16)
   2b8d8:	8080030d 	sth	r2,12(r16)
   2b8dc:	80001915 	stw	zero,100(r16)
   2b8e0:	8000038d 	sth	zero,14(r16)
   2b8e4:	80000415 	stw	zero,16(r16)
   2b8e8:	80000515 	stw	zero,20(r16)
   2b8ec:	80000615 	stw	zero,24(r16)
   2b8f0:	002d4980 	call	2d498 <memset>
   2b8f4:	058000f4 	movhi	r22,3
   2b8f8:	94400217 	ldw	r17,8(r18)
   2b8fc:	054000f4 	movhi	r21,3
   2b900:	050000f4 	movhi	r20,3
   2b904:	04c000f4 	movhi	r19,3
   2b908:	b5badd04 	addi	r22,r22,-5260
   2b90c:	ad7af404 	addi	r21,r21,-5168
   2b910:	a53b1304 	addi	r20,r20,-5044
   2b914:	9cfb2a04 	addi	r19,r19,-4952
   2b918:	85800815 	stw	r22,32(r16)
   2b91c:	85400915 	stw	r21,36(r16)
   2b920:	85000a15 	stw	r20,40(r16)
   2b924:	84c00b15 	stw	r19,44(r16)
   2b928:	84000715 	stw	r16,28(r16)
   2b92c:	00800284 	movi	r2,10
   2b930:	8880030d 	sth	r2,12(r17)
   2b934:	00800044 	movi	r2,1
   2b938:	b80d883a 	mov	r6,r23
   2b93c:	89001704 	addi	r4,r17,92
   2b940:	000b883a 	mov	r5,zero
   2b944:	88000015 	stw	zero,0(r17)
   2b948:	88000115 	stw	zero,4(r17)
   2b94c:	88000215 	stw	zero,8(r17)
   2b950:	88001915 	stw	zero,100(r17)
   2b954:	8880038d 	sth	r2,14(r17)
   2b958:	88000415 	stw	zero,16(r17)
   2b95c:	88000515 	stw	zero,20(r17)
   2b960:	88000615 	stw	zero,24(r17)
   2b964:	002d4980 	call	2d498 <memset>
   2b968:	94000317 	ldw	r16,12(r18)
   2b96c:	00800484 	movi	r2,18
   2b970:	8c400715 	stw	r17,28(r17)
   2b974:	8d800815 	stw	r22,32(r17)
   2b978:	8d400915 	stw	r21,36(r17)
   2b97c:	8d000a15 	stw	r20,40(r17)
   2b980:	8cc00b15 	stw	r19,44(r17)
   2b984:	8080030d 	sth	r2,12(r16)
   2b988:	00800084 	movi	r2,2
   2b98c:	80000015 	stw	zero,0(r16)
   2b990:	80000115 	stw	zero,4(r16)
   2b994:	80000215 	stw	zero,8(r16)
   2b998:	80001915 	stw	zero,100(r16)
   2b99c:	8080038d 	sth	r2,14(r16)
   2b9a0:	80000415 	stw	zero,16(r16)
   2b9a4:	80000515 	stw	zero,20(r16)
   2b9a8:	80000615 	stw	zero,24(r16)
   2b9ac:	b80d883a 	mov	r6,r23
   2b9b0:	000b883a 	mov	r5,zero
   2b9b4:	81001704 	addi	r4,r16,92
   2b9b8:	002d4980 	call	2d498 <memset>
   2b9bc:	00800044 	movi	r2,1
   2b9c0:	84000715 	stw	r16,28(r16)
   2b9c4:	85800815 	stw	r22,32(r16)
   2b9c8:	85400915 	stw	r21,36(r16)
   2b9cc:	85000a15 	stw	r20,40(r16)
   2b9d0:	84c00b15 	stw	r19,44(r16)
   2b9d4:	90800e15 	stw	r2,56(r18)
   2b9d8:	dfc00817 	ldw	ra,32(sp)
   2b9dc:	ddc00717 	ldw	r23,28(sp)
   2b9e0:	dd800617 	ldw	r22,24(sp)
   2b9e4:	dd400517 	ldw	r21,20(sp)
   2b9e8:	dd000417 	ldw	r20,16(sp)
   2b9ec:	dcc00317 	ldw	r19,12(sp)
   2b9f0:	dc800217 	ldw	r18,8(sp)
   2b9f4:	dc400117 	ldw	r17,4(sp)
   2b9f8:	dc000017 	ldw	r16,0(sp)
   2b9fc:	dec00904 	addi	sp,sp,36
   2ba00:	f800283a 	ret

0002ba04 <__fp_lock>:
   2ba04:	0005883a 	mov	r2,zero
   2ba08:	f800283a 	ret

0002ba0c <__sfmoreglue>:
   2ba0c:	defffc04 	addi	sp,sp,-16
   2ba10:	dc400115 	stw	r17,4(sp)
   2ba14:	2c7fffc4 	addi	r17,r5,-1
   2ba18:	8c401a24 	muli	r17,r17,104
   2ba1c:	dc800215 	stw	r18,8(sp)
   2ba20:	2825883a 	mov	r18,r5
   2ba24:	89401d04 	addi	r5,r17,116
   2ba28:	dc000015 	stw	r16,0(sp)
   2ba2c:	dfc00315 	stw	ra,12(sp)
   2ba30:	002c9040 	call	2c904 <_malloc_r>
   2ba34:	1021883a 	mov	r16,r2
   2ba38:	10000726 	beq	r2,zero,2ba58 <__sfmoreglue+0x4c>
   2ba3c:	11000304 	addi	r4,r2,12
   2ba40:	10000015 	stw	zero,0(r2)
   2ba44:	14800115 	stw	r18,4(r2)
   2ba48:	11000215 	stw	r4,8(r2)
   2ba4c:	89801a04 	addi	r6,r17,104
   2ba50:	000b883a 	mov	r5,zero
   2ba54:	002d4980 	call	2d498 <memset>
   2ba58:	8005883a 	mov	r2,r16
   2ba5c:	dfc00317 	ldw	ra,12(sp)
   2ba60:	dc800217 	ldw	r18,8(sp)
   2ba64:	dc400117 	ldw	r17,4(sp)
   2ba68:	dc000017 	ldw	r16,0(sp)
   2ba6c:	dec00404 	addi	sp,sp,16
   2ba70:	f800283a 	ret

0002ba74 <__sfp>:
   2ba74:	defffb04 	addi	sp,sp,-20
   2ba78:	dc000015 	stw	r16,0(sp)
   2ba7c:	04000134 	movhi	r16,4
   2ba80:	84204e04 	addi	r16,r16,-32456
   2ba84:	dcc00315 	stw	r19,12(sp)
   2ba88:	2027883a 	mov	r19,r4
   2ba8c:	81000017 	ldw	r4,0(r16)
   2ba90:	dfc00415 	stw	ra,16(sp)
   2ba94:	dc800215 	stw	r18,8(sp)
   2ba98:	20800e17 	ldw	r2,56(r4)
   2ba9c:	dc400115 	stw	r17,4(sp)
   2baa0:	1000021e 	bne	r2,zero,2baac <__sfp+0x38>
   2baa4:	002b8680 	call	2b868 <__sinit.part.1>
   2baa8:	81000017 	ldw	r4,0(r16)
   2baac:	2480b804 	addi	r18,r4,736
   2bab0:	047fffc4 	movi	r17,-1
   2bab4:	91000117 	ldw	r4,4(r18)
   2bab8:	94000217 	ldw	r16,8(r18)
   2babc:	213fffc4 	addi	r4,r4,-1
   2bac0:	20000a16 	blt	r4,zero,2baec <__sfp+0x78>
   2bac4:	8080030f 	ldh	r2,12(r16)
   2bac8:	10000c26 	beq	r2,zero,2bafc <__sfp+0x88>
   2bacc:	80c01d04 	addi	r3,r16,116
   2bad0:	00000206 	br	2badc <__sfp+0x68>
   2bad4:	18bfe60f 	ldh	r2,-104(r3)
   2bad8:	10000826 	beq	r2,zero,2bafc <__sfp+0x88>
   2badc:	213fffc4 	addi	r4,r4,-1
   2bae0:	1c3ffd04 	addi	r16,r3,-12
   2bae4:	18c01a04 	addi	r3,r3,104
   2bae8:	247ffa1e 	bne	r4,r17,2bad4 <__alt_mem_SDRAM_controller+0xfc02bad4>
   2baec:	90800017 	ldw	r2,0(r18)
   2baf0:	10001d26 	beq	r2,zero,2bb68 <__sfp+0xf4>
   2baf4:	1025883a 	mov	r18,r2
   2baf8:	003fee06 	br	2bab4 <__alt_mem_SDRAM_controller+0xfc02bab4>
   2bafc:	00bfffc4 	movi	r2,-1
   2bb00:	8080038d 	sth	r2,14(r16)
   2bb04:	00800044 	movi	r2,1
   2bb08:	8080030d 	sth	r2,12(r16)
   2bb0c:	80001915 	stw	zero,100(r16)
   2bb10:	80000015 	stw	zero,0(r16)
   2bb14:	80000215 	stw	zero,8(r16)
   2bb18:	80000115 	stw	zero,4(r16)
   2bb1c:	80000415 	stw	zero,16(r16)
   2bb20:	80000515 	stw	zero,20(r16)
   2bb24:	80000615 	stw	zero,24(r16)
   2bb28:	01800204 	movi	r6,8
   2bb2c:	000b883a 	mov	r5,zero
   2bb30:	81001704 	addi	r4,r16,92
   2bb34:	002d4980 	call	2d498 <memset>
   2bb38:	8005883a 	mov	r2,r16
   2bb3c:	80000c15 	stw	zero,48(r16)
   2bb40:	80000d15 	stw	zero,52(r16)
   2bb44:	80001115 	stw	zero,68(r16)
   2bb48:	80001215 	stw	zero,72(r16)
   2bb4c:	dfc00417 	ldw	ra,16(sp)
   2bb50:	dcc00317 	ldw	r19,12(sp)
   2bb54:	dc800217 	ldw	r18,8(sp)
   2bb58:	dc400117 	ldw	r17,4(sp)
   2bb5c:	dc000017 	ldw	r16,0(sp)
   2bb60:	dec00504 	addi	sp,sp,20
   2bb64:	f800283a 	ret
   2bb68:	01400104 	movi	r5,4
   2bb6c:	9809883a 	mov	r4,r19
   2bb70:	002ba0c0 	call	2ba0c <__sfmoreglue>
   2bb74:	90800015 	stw	r2,0(r18)
   2bb78:	103fde1e 	bne	r2,zero,2baf4 <__alt_mem_SDRAM_controller+0xfc02baf4>
   2bb7c:	00800304 	movi	r2,12
   2bb80:	98800015 	stw	r2,0(r19)
   2bb84:	0005883a 	mov	r2,zero
   2bb88:	003ff006 	br	2bb4c <__alt_mem_SDRAM_controller+0xfc02bb4c>

0002bb8c <_cleanup>:
   2bb8c:	00800134 	movhi	r2,4
   2bb90:	10a04e04 	addi	r2,r2,-32456
   2bb94:	11000017 	ldw	r4,0(r2)
   2bb98:	014000f4 	movhi	r5,3
   2bb9c:	29415304 	addi	r5,r5,1356
   2bba0:	002c5a81 	jmpi	2c5a8 <_fwalk_reent>

0002bba4 <__sinit>:
   2bba4:	20800e17 	ldw	r2,56(r4)
   2bba8:	10000126 	beq	r2,zero,2bbb0 <__sinit+0xc>
   2bbac:	f800283a 	ret
   2bbb0:	002b8681 	jmpi	2b868 <__sinit.part.1>

0002bbb4 <__sfp_lock_acquire>:
   2bbb4:	f800283a 	ret

0002bbb8 <__sfp_lock_release>:
   2bbb8:	f800283a 	ret

0002bbbc <__sinit_lock_acquire>:
   2bbbc:	f800283a 	ret

0002bbc0 <__sinit_lock_release>:
   2bbc0:	f800283a 	ret

0002bbc4 <__fp_lock_all>:
   2bbc4:	00800134 	movhi	r2,4
   2bbc8:	10a04f04 	addi	r2,r2,-32452
   2bbcc:	11000017 	ldw	r4,0(r2)
   2bbd0:	014000f4 	movhi	r5,3
   2bbd4:	296e8104 	addi	r5,r5,-17916
   2bbd8:	002c4e41 	jmpi	2c4e4 <_fwalk>

0002bbdc <__fp_unlock_all>:
   2bbdc:	00800134 	movhi	r2,4
   2bbe0:	10a04f04 	addi	r2,r2,-32452
   2bbe4:	11000017 	ldw	r4,0(r2)
   2bbe8:	014000f4 	movhi	r5,3
   2bbec:	296e1504 	addi	r5,r5,-18348
   2bbf0:	002c4e41 	jmpi	2c4e4 <_fwalk>

0002bbf4 <_malloc_trim_r>:
   2bbf4:	defffb04 	addi	sp,sp,-20
   2bbf8:	dcc00315 	stw	r19,12(sp)
   2bbfc:	04c000f4 	movhi	r19,3
   2bc00:	dc800215 	stw	r18,8(sp)
   2bc04:	dc400115 	stw	r17,4(sp)
   2bc08:	dc000015 	stw	r16,0(sp)
   2bc0c:	dfc00415 	stw	ra,16(sp)
   2bc10:	2821883a 	mov	r16,r5
   2bc14:	9cda8704 	addi	r19,r19,27164
   2bc18:	2025883a 	mov	r18,r4
   2bc1c:	0031ddc0 	call	31ddc <__malloc_lock>
   2bc20:	98800217 	ldw	r2,8(r19)
   2bc24:	14400117 	ldw	r17,4(r2)
   2bc28:	00bfff04 	movi	r2,-4
   2bc2c:	88a2703a 	and	r17,r17,r2
   2bc30:	8c21c83a 	sub	r16,r17,r16
   2bc34:	8403fbc4 	addi	r16,r16,4079
   2bc38:	8020d33a 	srli	r16,r16,12
   2bc3c:	0083ffc4 	movi	r2,4095
   2bc40:	843fffc4 	addi	r16,r16,-1
   2bc44:	8020933a 	slli	r16,r16,12
   2bc48:	1400060e 	bge	r2,r16,2bc64 <_malloc_trim_r+0x70>
   2bc4c:	000b883a 	mov	r5,zero
   2bc50:	9009883a 	mov	r4,r18
   2bc54:	002eb200 	call	2eb20 <_sbrk_r>
   2bc58:	98c00217 	ldw	r3,8(r19)
   2bc5c:	1c47883a 	add	r3,r3,r17
   2bc60:	10c00a26 	beq	r2,r3,2bc8c <_malloc_trim_r+0x98>
   2bc64:	9009883a 	mov	r4,r18
   2bc68:	0031e000 	call	31e00 <__malloc_unlock>
   2bc6c:	0005883a 	mov	r2,zero
   2bc70:	dfc00417 	ldw	ra,16(sp)
   2bc74:	dcc00317 	ldw	r19,12(sp)
   2bc78:	dc800217 	ldw	r18,8(sp)
   2bc7c:	dc400117 	ldw	r17,4(sp)
   2bc80:	dc000017 	ldw	r16,0(sp)
   2bc84:	dec00504 	addi	sp,sp,20
   2bc88:	f800283a 	ret
   2bc8c:	040bc83a 	sub	r5,zero,r16
   2bc90:	9009883a 	mov	r4,r18
   2bc94:	002eb200 	call	2eb20 <_sbrk_r>
   2bc98:	00ffffc4 	movi	r3,-1
   2bc9c:	10c00d26 	beq	r2,r3,2bcd4 <_malloc_trim_r+0xe0>
   2bca0:	00c00134 	movhi	r3,4
   2bca4:	18e77204 	addi	r3,r3,-25144
   2bca8:	18800017 	ldw	r2,0(r3)
   2bcac:	99000217 	ldw	r4,8(r19)
   2bcb0:	8c23c83a 	sub	r17,r17,r16
   2bcb4:	8c400054 	ori	r17,r17,1
   2bcb8:	1421c83a 	sub	r16,r2,r16
   2bcbc:	24400115 	stw	r17,4(r4)
   2bcc0:	9009883a 	mov	r4,r18
   2bcc4:	1c000015 	stw	r16,0(r3)
   2bcc8:	0031e000 	call	31e00 <__malloc_unlock>
   2bccc:	00800044 	movi	r2,1
   2bcd0:	003fe706 	br	2bc70 <__alt_mem_SDRAM_controller+0xfc02bc70>
   2bcd4:	000b883a 	mov	r5,zero
   2bcd8:	9009883a 	mov	r4,r18
   2bcdc:	002eb200 	call	2eb20 <_sbrk_r>
   2bce0:	99000217 	ldw	r4,8(r19)
   2bce4:	014003c4 	movi	r5,15
   2bce8:	1107c83a 	sub	r3,r2,r4
   2bcec:	28ffdd0e 	bge	r5,r3,2bc64 <__alt_mem_SDRAM_controller+0xfc02bc64>
   2bcf0:	01400134 	movhi	r5,4
   2bcf4:	29605104 	addi	r5,r5,-32444
   2bcf8:	29400017 	ldw	r5,0(r5)
   2bcfc:	18c00054 	ori	r3,r3,1
   2bd00:	20c00115 	stw	r3,4(r4)
   2bd04:	00c00134 	movhi	r3,4
   2bd08:	1145c83a 	sub	r2,r2,r5
   2bd0c:	18e77204 	addi	r3,r3,-25144
   2bd10:	18800015 	stw	r2,0(r3)
   2bd14:	003fd306 	br	2bc64 <__alt_mem_SDRAM_controller+0xfc02bc64>

0002bd18 <_free_r>:
   2bd18:	28004126 	beq	r5,zero,2be20 <_free_r+0x108>
   2bd1c:	defffd04 	addi	sp,sp,-12
   2bd20:	dc400115 	stw	r17,4(sp)
   2bd24:	dc000015 	stw	r16,0(sp)
   2bd28:	2023883a 	mov	r17,r4
   2bd2c:	2821883a 	mov	r16,r5
   2bd30:	dfc00215 	stw	ra,8(sp)
   2bd34:	0031ddc0 	call	31ddc <__malloc_lock>
   2bd38:	81ffff17 	ldw	r7,-4(r16)
   2bd3c:	00bfff84 	movi	r2,-2
   2bd40:	010000f4 	movhi	r4,3
   2bd44:	81bffe04 	addi	r6,r16,-8
   2bd48:	3884703a 	and	r2,r7,r2
   2bd4c:	211a8704 	addi	r4,r4,27164
   2bd50:	308b883a 	add	r5,r6,r2
   2bd54:	2a400117 	ldw	r9,4(r5)
   2bd58:	22000217 	ldw	r8,8(r4)
   2bd5c:	00ffff04 	movi	r3,-4
   2bd60:	48c6703a 	and	r3,r9,r3
   2bd64:	2a005726 	beq	r5,r8,2bec4 <_free_r+0x1ac>
   2bd68:	28c00115 	stw	r3,4(r5)
   2bd6c:	39c0004c 	andi	r7,r7,1
   2bd70:	3800091e 	bne	r7,zero,2bd98 <_free_r+0x80>
   2bd74:	823ffe17 	ldw	r8,-8(r16)
   2bd78:	22400204 	addi	r9,r4,8
   2bd7c:	320dc83a 	sub	r6,r6,r8
   2bd80:	31c00217 	ldw	r7,8(r6)
   2bd84:	1205883a 	add	r2,r2,r8
   2bd88:	3a406526 	beq	r7,r9,2bf20 <_free_r+0x208>
   2bd8c:	32000317 	ldw	r8,12(r6)
   2bd90:	3a000315 	stw	r8,12(r7)
   2bd94:	41c00215 	stw	r7,8(r8)
   2bd98:	28cf883a 	add	r7,r5,r3
   2bd9c:	39c00117 	ldw	r7,4(r7)
   2bda0:	39c0004c 	andi	r7,r7,1
   2bda4:	38003a26 	beq	r7,zero,2be90 <_free_r+0x178>
   2bda8:	10c00054 	ori	r3,r2,1
   2bdac:	30c00115 	stw	r3,4(r6)
   2bdb0:	3087883a 	add	r3,r6,r2
   2bdb4:	18800015 	stw	r2,0(r3)
   2bdb8:	00c07fc4 	movi	r3,511
   2bdbc:	18801936 	bltu	r3,r2,2be24 <_free_r+0x10c>
   2bdc0:	1004d0fa 	srli	r2,r2,3
   2bdc4:	01c00044 	movi	r7,1
   2bdc8:	21400117 	ldw	r5,4(r4)
   2bdcc:	10c00044 	addi	r3,r2,1
   2bdd0:	18c7883a 	add	r3,r3,r3
   2bdd4:	1005d0ba 	srai	r2,r2,2
   2bdd8:	18c7883a 	add	r3,r3,r3
   2bddc:	18c7883a 	add	r3,r3,r3
   2bde0:	1907883a 	add	r3,r3,r4
   2bde4:	3884983a 	sll	r2,r7,r2
   2bde8:	19c00017 	ldw	r7,0(r3)
   2bdec:	1a3ffe04 	addi	r8,r3,-8
   2bdf0:	1144b03a 	or	r2,r2,r5
   2bdf4:	32000315 	stw	r8,12(r6)
   2bdf8:	31c00215 	stw	r7,8(r6)
   2bdfc:	20800115 	stw	r2,4(r4)
   2be00:	19800015 	stw	r6,0(r3)
   2be04:	39800315 	stw	r6,12(r7)
   2be08:	8809883a 	mov	r4,r17
   2be0c:	dfc00217 	ldw	ra,8(sp)
   2be10:	dc400117 	ldw	r17,4(sp)
   2be14:	dc000017 	ldw	r16,0(sp)
   2be18:	dec00304 	addi	sp,sp,12
   2be1c:	0031e001 	jmpi	31e00 <__malloc_unlock>
   2be20:	f800283a 	ret
   2be24:	100ad27a 	srli	r5,r2,9
   2be28:	00c00104 	movi	r3,4
   2be2c:	19404a36 	bltu	r3,r5,2bf58 <_free_r+0x240>
   2be30:	100ad1ba 	srli	r5,r2,6
   2be34:	28c00e44 	addi	r3,r5,57
   2be38:	18c7883a 	add	r3,r3,r3
   2be3c:	29400e04 	addi	r5,r5,56
   2be40:	18c7883a 	add	r3,r3,r3
   2be44:	18c7883a 	add	r3,r3,r3
   2be48:	1909883a 	add	r4,r3,r4
   2be4c:	20c00017 	ldw	r3,0(r4)
   2be50:	01c000f4 	movhi	r7,3
   2be54:	213ffe04 	addi	r4,r4,-8
   2be58:	39da8704 	addi	r7,r7,27164
   2be5c:	20c04426 	beq	r4,r3,2bf70 <_free_r+0x258>
   2be60:	01ffff04 	movi	r7,-4
   2be64:	19400117 	ldw	r5,4(r3)
   2be68:	29ca703a 	and	r5,r5,r7
   2be6c:	1140022e 	bgeu	r2,r5,2be78 <_free_r+0x160>
   2be70:	18c00217 	ldw	r3,8(r3)
   2be74:	20fffb1e 	bne	r4,r3,2be64 <__alt_mem_SDRAM_controller+0xfc02be64>
   2be78:	19000317 	ldw	r4,12(r3)
   2be7c:	31000315 	stw	r4,12(r6)
   2be80:	30c00215 	stw	r3,8(r6)
   2be84:	21800215 	stw	r6,8(r4)
   2be88:	19800315 	stw	r6,12(r3)
   2be8c:	003fde06 	br	2be08 <__alt_mem_SDRAM_controller+0xfc02be08>
   2be90:	29c00217 	ldw	r7,8(r5)
   2be94:	10c5883a 	add	r2,r2,r3
   2be98:	00c000f4 	movhi	r3,3
   2be9c:	18da8904 	addi	r3,r3,27172
   2bea0:	38c03b26 	beq	r7,r3,2bf90 <_free_r+0x278>
   2bea4:	2a000317 	ldw	r8,12(r5)
   2bea8:	11400054 	ori	r5,r2,1
   2beac:	3087883a 	add	r3,r6,r2
   2beb0:	3a000315 	stw	r8,12(r7)
   2beb4:	41c00215 	stw	r7,8(r8)
   2beb8:	31400115 	stw	r5,4(r6)
   2bebc:	18800015 	stw	r2,0(r3)
   2bec0:	003fbd06 	br	2bdb8 <__alt_mem_SDRAM_controller+0xfc02bdb8>
   2bec4:	39c0004c 	andi	r7,r7,1
   2bec8:	10c5883a 	add	r2,r2,r3
   2becc:	3800071e 	bne	r7,zero,2beec <_free_r+0x1d4>
   2bed0:	81fffe17 	ldw	r7,-8(r16)
   2bed4:	31cdc83a 	sub	r6,r6,r7
   2bed8:	30c00317 	ldw	r3,12(r6)
   2bedc:	31400217 	ldw	r5,8(r6)
   2bee0:	11c5883a 	add	r2,r2,r7
   2bee4:	28c00315 	stw	r3,12(r5)
   2bee8:	19400215 	stw	r5,8(r3)
   2beec:	10c00054 	ori	r3,r2,1
   2bef0:	30c00115 	stw	r3,4(r6)
   2bef4:	00c00134 	movhi	r3,4
   2bef8:	18e05204 	addi	r3,r3,-32440
   2befc:	18c00017 	ldw	r3,0(r3)
   2bf00:	21800215 	stw	r6,8(r4)
   2bf04:	10ffc036 	bltu	r2,r3,2be08 <__alt_mem_SDRAM_controller+0xfc02be08>
   2bf08:	00800134 	movhi	r2,4
   2bf0c:	10a76904 	addi	r2,r2,-25180
   2bf10:	11400017 	ldw	r5,0(r2)
   2bf14:	8809883a 	mov	r4,r17
   2bf18:	002bbf40 	call	2bbf4 <_malloc_trim_r>
   2bf1c:	003fba06 	br	2be08 <__alt_mem_SDRAM_controller+0xfc02be08>
   2bf20:	28c9883a 	add	r4,r5,r3
   2bf24:	21000117 	ldw	r4,4(r4)
   2bf28:	2100004c 	andi	r4,r4,1
   2bf2c:	2000391e 	bne	r4,zero,2c014 <_free_r+0x2fc>
   2bf30:	29c00217 	ldw	r7,8(r5)
   2bf34:	29000317 	ldw	r4,12(r5)
   2bf38:	1885883a 	add	r2,r3,r2
   2bf3c:	10c00054 	ori	r3,r2,1
   2bf40:	39000315 	stw	r4,12(r7)
   2bf44:	21c00215 	stw	r7,8(r4)
   2bf48:	30c00115 	stw	r3,4(r6)
   2bf4c:	308d883a 	add	r6,r6,r2
   2bf50:	30800015 	stw	r2,0(r6)
   2bf54:	003fac06 	br	2be08 <__alt_mem_SDRAM_controller+0xfc02be08>
   2bf58:	00c00504 	movi	r3,20
   2bf5c:	19401536 	bltu	r3,r5,2bfb4 <_free_r+0x29c>
   2bf60:	28c01704 	addi	r3,r5,92
   2bf64:	18c7883a 	add	r3,r3,r3
   2bf68:	294016c4 	addi	r5,r5,91
   2bf6c:	003fb406 	br	2be40 <__alt_mem_SDRAM_controller+0xfc02be40>
   2bf70:	280bd0ba 	srai	r5,r5,2
   2bf74:	00c00044 	movi	r3,1
   2bf78:	38800117 	ldw	r2,4(r7)
   2bf7c:	194a983a 	sll	r5,r3,r5
   2bf80:	2007883a 	mov	r3,r4
   2bf84:	2884b03a 	or	r2,r5,r2
   2bf88:	38800115 	stw	r2,4(r7)
   2bf8c:	003fbb06 	br	2be7c <__alt_mem_SDRAM_controller+0xfc02be7c>
   2bf90:	21800515 	stw	r6,20(r4)
   2bf94:	21800415 	stw	r6,16(r4)
   2bf98:	10c00054 	ori	r3,r2,1
   2bf9c:	31c00315 	stw	r7,12(r6)
   2bfa0:	31c00215 	stw	r7,8(r6)
   2bfa4:	30c00115 	stw	r3,4(r6)
   2bfa8:	308d883a 	add	r6,r6,r2
   2bfac:	30800015 	stw	r2,0(r6)
   2bfb0:	003f9506 	br	2be08 <__alt_mem_SDRAM_controller+0xfc02be08>
   2bfb4:	00c01504 	movi	r3,84
   2bfb8:	19400536 	bltu	r3,r5,2bfd0 <_free_r+0x2b8>
   2bfbc:	100ad33a 	srli	r5,r2,12
   2bfc0:	28c01bc4 	addi	r3,r5,111
   2bfc4:	18c7883a 	add	r3,r3,r3
   2bfc8:	29401b84 	addi	r5,r5,110
   2bfcc:	003f9c06 	br	2be40 <__alt_mem_SDRAM_controller+0xfc02be40>
   2bfd0:	00c05504 	movi	r3,340
   2bfd4:	19400536 	bltu	r3,r5,2bfec <_free_r+0x2d4>
   2bfd8:	100ad3fa 	srli	r5,r2,15
   2bfdc:	28c01e04 	addi	r3,r5,120
   2bfe0:	18c7883a 	add	r3,r3,r3
   2bfe4:	29401dc4 	addi	r5,r5,119
   2bfe8:	003f9506 	br	2be40 <__alt_mem_SDRAM_controller+0xfc02be40>
   2bfec:	00c15504 	movi	r3,1364
   2bff0:	19400536 	bltu	r3,r5,2c008 <_free_r+0x2f0>
   2bff4:	100ad4ba 	srli	r5,r2,18
   2bff8:	28c01f44 	addi	r3,r5,125
   2bffc:	18c7883a 	add	r3,r3,r3
   2c000:	29401f04 	addi	r5,r5,124
   2c004:	003f8e06 	br	2be40 <__alt_mem_SDRAM_controller+0xfc02be40>
   2c008:	00c03f84 	movi	r3,254
   2c00c:	01401f84 	movi	r5,126
   2c010:	003f8b06 	br	2be40 <__alt_mem_SDRAM_controller+0xfc02be40>
   2c014:	10c00054 	ori	r3,r2,1
   2c018:	30c00115 	stw	r3,4(r6)
   2c01c:	308d883a 	add	r6,r6,r2
   2c020:	30800015 	stw	r2,0(r6)
   2c024:	003f7806 	br	2be08 <__alt_mem_SDRAM_controller+0xfc02be08>

0002c028 <__sfvwrite_r>:
   2c028:	30800217 	ldw	r2,8(r6)
   2c02c:	10006726 	beq	r2,zero,2c1cc <__sfvwrite_r+0x1a4>
   2c030:	28c0030b 	ldhu	r3,12(r5)
   2c034:	defff404 	addi	sp,sp,-48
   2c038:	dd400715 	stw	r21,28(sp)
   2c03c:	dd000615 	stw	r20,24(sp)
   2c040:	dc000215 	stw	r16,8(sp)
   2c044:	dfc00b15 	stw	ra,44(sp)
   2c048:	df000a15 	stw	fp,40(sp)
   2c04c:	ddc00915 	stw	r23,36(sp)
   2c050:	dd800815 	stw	r22,32(sp)
   2c054:	dcc00515 	stw	r19,20(sp)
   2c058:	dc800415 	stw	r18,16(sp)
   2c05c:	dc400315 	stw	r17,12(sp)
   2c060:	1880020c 	andi	r2,r3,8
   2c064:	2821883a 	mov	r16,r5
   2c068:	202b883a 	mov	r21,r4
   2c06c:	3029883a 	mov	r20,r6
   2c070:	10002726 	beq	r2,zero,2c110 <__sfvwrite_r+0xe8>
   2c074:	28800417 	ldw	r2,16(r5)
   2c078:	10002526 	beq	r2,zero,2c110 <__sfvwrite_r+0xe8>
   2c07c:	1880008c 	andi	r2,r3,2
   2c080:	a4400017 	ldw	r17,0(r20)
   2c084:	10002a26 	beq	r2,zero,2c130 <__sfvwrite_r+0x108>
   2c088:	05a00034 	movhi	r22,32768
   2c08c:	0027883a 	mov	r19,zero
   2c090:	0025883a 	mov	r18,zero
   2c094:	b5bf0004 	addi	r22,r22,-1024
   2c098:	980d883a 	mov	r6,r19
   2c09c:	a809883a 	mov	r4,r21
   2c0a0:	90004626 	beq	r18,zero,2c1bc <__sfvwrite_r+0x194>
   2c0a4:	900f883a 	mov	r7,r18
   2c0a8:	b480022e 	bgeu	r22,r18,2c0b4 <__sfvwrite_r+0x8c>
   2c0ac:	01e00034 	movhi	r7,32768
   2c0b0:	39ff0004 	addi	r7,r7,-1024
   2c0b4:	80800917 	ldw	r2,36(r16)
   2c0b8:	81400717 	ldw	r5,28(r16)
   2c0bc:	103ee83a 	callr	r2
   2c0c0:	0080570e 	bge	zero,r2,2c220 <__sfvwrite_r+0x1f8>
   2c0c4:	a0c00217 	ldw	r3,8(r20)
   2c0c8:	98a7883a 	add	r19,r19,r2
   2c0cc:	90a5c83a 	sub	r18,r18,r2
   2c0d0:	1885c83a 	sub	r2,r3,r2
   2c0d4:	a0800215 	stw	r2,8(r20)
   2c0d8:	103fef1e 	bne	r2,zero,2c098 <__alt_mem_SDRAM_controller+0xfc02c098>
   2c0dc:	0005883a 	mov	r2,zero
   2c0e0:	dfc00b17 	ldw	ra,44(sp)
   2c0e4:	df000a17 	ldw	fp,40(sp)
   2c0e8:	ddc00917 	ldw	r23,36(sp)
   2c0ec:	dd800817 	ldw	r22,32(sp)
   2c0f0:	dd400717 	ldw	r21,28(sp)
   2c0f4:	dd000617 	ldw	r20,24(sp)
   2c0f8:	dcc00517 	ldw	r19,20(sp)
   2c0fc:	dc800417 	ldw	r18,16(sp)
   2c100:	dc400317 	ldw	r17,12(sp)
   2c104:	dc000217 	ldw	r16,8(sp)
   2c108:	dec00c04 	addi	sp,sp,48
   2c10c:	f800283a 	ret
   2c110:	800b883a 	mov	r5,r16
   2c114:	a809883a 	mov	r4,r21
   2c118:	0029bd00 	call	29bd0 <__swsetup_r>
   2c11c:	1000eb1e 	bne	r2,zero,2c4cc <__sfvwrite_r+0x4a4>
   2c120:	80c0030b 	ldhu	r3,12(r16)
   2c124:	a4400017 	ldw	r17,0(r20)
   2c128:	1880008c 	andi	r2,r3,2
   2c12c:	103fd61e 	bne	r2,zero,2c088 <__alt_mem_SDRAM_controller+0xfc02c088>
   2c130:	1880004c 	andi	r2,r3,1
   2c134:	10003f1e 	bne	r2,zero,2c234 <__sfvwrite_r+0x20c>
   2c138:	0039883a 	mov	fp,zero
   2c13c:	0025883a 	mov	r18,zero
   2c140:	90001a26 	beq	r18,zero,2c1ac <__sfvwrite_r+0x184>
   2c144:	1880800c 	andi	r2,r3,512
   2c148:	84c00217 	ldw	r19,8(r16)
   2c14c:	10002126 	beq	r2,zero,2c1d4 <__sfvwrite_r+0x1ac>
   2c150:	982f883a 	mov	r23,r19
   2c154:	94c09336 	bltu	r18,r19,2c3a4 <__sfvwrite_r+0x37c>
   2c158:	1881200c 	andi	r2,r3,1152
   2c15c:	10009e1e 	bne	r2,zero,2c3d8 <__sfvwrite_r+0x3b0>
   2c160:	81000017 	ldw	r4,0(r16)
   2c164:	b80d883a 	mov	r6,r23
   2c168:	e00b883a 	mov	r5,fp
   2c16c:	002d33c0 	call	2d33c <memmove>
   2c170:	80c00217 	ldw	r3,8(r16)
   2c174:	81000017 	ldw	r4,0(r16)
   2c178:	9005883a 	mov	r2,r18
   2c17c:	1ce7c83a 	sub	r19,r3,r19
   2c180:	25cf883a 	add	r7,r4,r23
   2c184:	84c00215 	stw	r19,8(r16)
   2c188:	81c00015 	stw	r7,0(r16)
   2c18c:	a0c00217 	ldw	r3,8(r20)
   2c190:	e0b9883a 	add	fp,fp,r2
   2c194:	90a5c83a 	sub	r18,r18,r2
   2c198:	18a7c83a 	sub	r19,r3,r2
   2c19c:	a4c00215 	stw	r19,8(r20)
   2c1a0:	983fce26 	beq	r19,zero,2c0dc <__alt_mem_SDRAM_controller+0xfc02c0dc>
   2c1a4:	80c0030b 	ldhu	r3,12(r16)
   2c1a8:	903fe61e 	bne	r18,zero,2c144 <__alt_mem_SDRAM_controller+0xfc02c144>
   2c1ac:	8f000017 	ldw	fp,0(r17)
   2c1b0:	8c800117 	ldw	r18,4(r17)
   2c1b4:	8c400204 	addi	r17,r17,8
   2c1b8:	003fe106 	br	2c140 <__alt_mem_SDRAM_controller+0xfc02c140>
   2c1bc:	8cc00017 	ldw	r19,0(r17)
   2c1c0:	8c800117 	ldw	r18,4(r17)
   2c1c4:	8c400204 	addi	r17,r17,8
   2c1c8:	003fb306 	br	2c098 <__alt_mem_SDRAM_controller+0xfc02c098>
   2c1cc:	0005883a 	mov	r2,zero
   2c1d0:	f800283a 	ret
   2c1d4:	81000017 	ldw	r4,0(r16)
   2c1d8:	80800417 	ldw	r2,16(r16)
   2c1dc:	11005736 	bltu	r2,r4,2c33c <__sfvwrite_r+0x314>
   2c1e0:	85c00517 	ldw	r23,20(r16)
   2c1e4:	95c05536 	bltu	r18,r23,2c33c <__sfvwrite_r+0x314>
   2c1e8:	00a00034 	movhi	r2,32768
   2c1ec:	10bfffc4 	addi	r2,r2,-1
   2c1f0:	9009883a 	mov	r4,r18
   2c1f4:	1480012e 	bgeu	r2,r18,2c1fc <__sfvwrite_r+0x1d4>
   2c1f8:	1009883a 	mov	r4,r2
   2c1fc:	b80b883a 	mov	r5,r23
   2c200:	00237ec0 	call	237ec <__divsi3>
   2c204:	15cf383a 	mul	r7,r2,r23
   2c208:	81400717 	ldw	r5,28(r16)
   2c20c:	80800917 	ldw	r2,36(r16)
   2c210:	e00d883a 	mov	r6,fp
   2c214:	a809883a 	mov	r4,r21
   2c218:	103ee83a 	callr	r2
   2c21c:	00bfdb16 	blt	zero,r2,2c18c <__alt_mem_SDRAM_controller+0xfc02c18c>
   2c220:	8080030b 	ldhu	r2,12(r16)
   2c224:	10801014 	ori	r2,r2,64
   2c228:	8080030d 	sth	r2,12(r16)
   2c22c:	00bfffc4 	movi	r2,-1
   2c230:	003fab06 	br	2c0e0 <__alt_mem_SDRAM_controller+0xfc02c0e0>
   2c234:	0027883a 	mov	r19,zero
   2c238:	0011883a 	mov	r8,zero
   2c23c:	0039883a 	mov	fp,zero
   2c240:	0025883a 	mov	r18,zero
   2c244:	90001f26 	beq	r18,zero,2c2c4 <__sfvwrite_r+0x29c>
   2c248:	40005a26 	beq	r8,zero,2c3b4 <__sfvwrite_r+0x38c>
   2c24c:	982d883a 	mov	r22,r19
   2c250:	94c0012e 	bgeu	r18,r19,2c258 <__sfvwrite_r+0x230>
   2c254:	902d883a 	mov	r22,r18
   2c258:	81000017 	ldw	r4,0(r16)
   2c25c:	80800417 	ldw	r2,16(r16)
   2c260:	b02f883a 	mov	r23,r22
   2c264:	81c00517 	ldw	r7,20(r16)
   2c268:	1100032e 	bgeu	r2,r4,2c278 <__sfvwrite_r+0x250>
   2c26c:	80c00217 	ldw	r3,8(r16)
   2c270:	38c7883a 	add	r3,r7,r3
   2c274:	1d801816 	blt	r3,r22,2c2d8 <__sfvwrite_r+0x2b0>
   2c278:	b1c03e16 	blt	r22,r7,2c374 <__sfvwrite_r+0x34c>
   2c27c:	80800917 	ldw	r2,36(r16)
   2c280:	81400717 	ldw	r5,28(r16)
   2c284:	e00d883a 	mov	r6,fp
   2c288:	da000115 	stw	r8,4(sp)
   2c28c:	a809883a 	mov	r4,r21
   2c290:	103ee83a 	callr	r2
   2c294:	102f883a 	mov	r23,r2
   2c298:	da000117 	ldw	r8,4(sp)
   2c29c:	00bfe00e 	bge	zero,r2,2c220 <__alt_mem_SDRAM_controller+0xfc02c220>
   2c2a0:	9de7c83a 	sub	r19,r19,r23
   2c2a4:	98001f26 	beq	r19,zero,2c324 <__sfvwrite_r+0x2fc>
   2c2a8:	a0800217 	ldw	r2,8(r20)
   2c2ac:	e5f9883a 	add	fp,fp,r23
   2c2b0:	95e5c83a 	sub	r18,r18,r23
   2c2b4:	15efc83a 	sub	r23,r2,r23
   2c2b8:	a5c00215 	stw	r23,8(r20)
   2c2bc:	b83f8726 	beq	r23,zero,2c0dc <__alt_mem_SDRAM_controller+0xfc02c0dc>
   2c2c0:	903fe11e 	bne	r18,zero,2c248 <__alt_mem_SDRAM_controller+0xfc02c248>
   2c2c4:	8f000017 	ldw	fp,0(r17)
   2c2c8:	8c800117 	ldw	r18,4(r17)
   2c2cc:	0011883a 	mov	r8,zero
   2c2d0:	8c400204 	addi	r17,r17,8
   2c2d4:	003fdb06 	br	2c244 <__alt_mem_SDRAM_controller+0xfc02c244>
   2c2d8:	180d883a 	mov	r6,r3
   2c2dc:	e00b883a 	mov	r5,fp
   2c2e0:	da000115 	stw	r8,4(sp)
   2c2e4:	d8c00015 	stw	r3,0(sp)
   2c2e8:	002d33c0 	call	2d33c <memmove>
   2c2ec:	d8c00017 	ldw	r3,0(sp)
   2c2f0:	80800017 	ldw	r2,0(r16)
   2c2f4:	800b883a 	mov	r5,r16
   2c2f8:	a809883a 	mov	r4,r21
   2c2fc:	10c5883a 	add	r2,r2,r3
   2c300:	80800015 	stw	r2,0(r16)
   2c304:	d8c00015 	stw	r3,0(sp)
   2c308:	002b7c80 	call	2b7c8 <_fflush_r>
   2c30c:	d8c00017 	ldw	r3,0(sp)
   2c310:	da000117 	ldw	r8,4(sp)
   2c314:	103fc21e 	bne	r2,zero,2c220 <__alt_mem_SDRAM_controller+0xfc02c220>
   2c318:	182f883a 	mov	r23,r3
   2c31c:	9de7c83a 	sub	r19,r19,r23
   2c320:	983fe11e 	bne	r19,zero,2c2a8 <__alt_mem_SDRAM_controller+0xfc02c2a8>
   2c324:	800b883a 	mov	r5,r16
   2c328:	a809883a 	mov	r4,r21
   2c32c:	002b7c80 	call	2b7c8 <_fflush_r>
   2c330:	103fbb1e 	bne	r2,zero,2c220 <__alt_mem_SDRAM_controller+0xfc02c220>
   2c334:	0011883a 	mov	r8,zero
   2c338:	003fdb06 	br	2c2a8 <__alt_mem_SDRAM_controller+0xfc02c2a8>
   2c33c:	94c0012e 	bgeu	r18,r19,2c344 <__sfvwrite_r+0x31c>
   2c340:	9027883a 	mov	r19,r18
   2c344:	980d883a 	mov	r6,r19
   2c348:	e00b883a 	mov	r5,fp
   2c34c:	002d33c0 	call	2d33c <memmove>
   2c350:	80800217 	ldw	r2,8(r16)
   2c354:	80c00017 	ldw	r3,0(r16)
   2c358:	14c5c83a 	sub	r2,r2,r19
   2c35c:	1cc7883a 	add	r3,r3,r19
   2c360:	80800215 	stw	r2,8(r16)
   2c364:	80c00015 	stw	r3,0(r16)
   2c368:	10004326 	beq	r2,zero,2c478 <__sfvwrite_r+0x450>
   2c36c:	9805883a 	mov	r2,r19
   2c370:	003f8606 	br	2c18c <__alt_mem_SDRAM_controller+0xfc02c18c>
   2c374:	b00d883a 	mov	r6,r22
   2c378:	e00b883a 	mov	r5,fp
   2c37c:	da000115 	stw	r8,4(sp)
   2c380:	002d33c0 	call	2d33c <memmove>
   2c384:	80800217 	ldw	r2,8(r16)
   2c388:	80c00017 	ldw	r3,0(r16)
   2c38c:	da000117 	ldw	r8,4(sp)
   2c390:	1585c83a 	sub	r2,r2,r22
   2c394:	1dad883a 	add	r22,r3,r22
   2c398:	80800215 	stw	r2,8(r16)
   2c39c:	85800015 	stw	r22,0(r16)
   2c3a0:	003fbf06 	br	2c2a0 <__alt_mem_SDRAM_controller+0xfc02c2a0>
   2c3a4:	81000017 	ldw	r4,0(r16)
   2c3a8:	9027883a 	mov	r19,r18
   2c3ac:	902f883a 	mov	r23,r18
   2c3b0:	003f6c06 	br	2c164 <__alt_mem_SDRAM_controller+0xfc02c164>
   2c3b4:	900d883a 	mov	r6,r18
   2c3b8:	01400284 	movi	r5,10
   2c3bc:	e009883a 	mov	r4,fp
   2c3c0:	002d1100 	call	2d110 <memchr>
   2c3c4:	10003e26 	beq	r2,zero,2c4c0 <__sfvwrite_r+0x498>
   2c3c8:	10800044 	addi	r2,r2,1
   2c3cc:	1727c83a 	sub	r19,r2,fp
   2c3d0:	02000044 	movi	r8,1
   2c3d4:	003f9d06 	br	2c24c <__alt_mem_SDRAM_controller+0xfc02c24c>
   2c3d8:	80800517 	ldw	r2,20(r16)
   2c3dc:	81400417 	ldw	r5,16(r16)
   2c3e0:	81c00017 	ldw	r7,0(r16)
   2c3e4:	10a7883a 	add	r19,r2,r2
   2c3e8:	9885883a 	add	r2,r19,r2
   2c3ec:	1026d7fa 	srli	r19,r2,31
   2c3f0:	396dc83a 	sub	r22,r7,r5
   2c3f4:	b1000044 	addi	r4,r22,1
   2c3f8:	9885883a 	add	r2,r19,r2
   2c3fc:	1027d07a 	srai	r19,r2,1
   2c400:	2485883a 	add	r2,r4,r18
   2c404:	980d883a 	mov	r6,r19
   2c408:	9880022e 	bgeu	r19,r2,2c414 <__sfvwrite_r+0x3ec>
   2c40c:	1027883a 	mov	r19,r2
   2c410:	100d883a 	mov	r6,r2
   2c414:	18c1000c 	andi	r3,r3,1024
   2c418:	18001c26 	beq	r3,zero,2c48c <__sfvwrite_r+0x464>
   2c41c:	300b883a 	mov	r5,r6
   2c420:	a809883a 	mov	r4,r21
   2c424:	002c9040 	call	2c904 <_malloc_r>
   2c428:	102f883a 	mov	r23,r2
   2c42c:	10002926 	beq	r2,zero,2c4d4 <__sfvwrite_r+0x4ac>
   2c430:	81400417 	ldw	r5,16(r16)
   2c434:	b00d883a 	mov	r6,r22
   2c438:	1009883a 	mov	r4,r2
   2c43c:	002d1f40 	call	2d1f4 <memcpy>
   2c440:	8080030b 	ldhu	r2,12(r16)
   2c444:	00fedfc4 	movi	r3,-1153
   2c448:	10c4703a 	and	r2,r2,r3
   2c44c:	10802014 	ori	r2,r2,128
   2c450:	8080030d 	sth	r2,12(r16)
   2c454:	bd89883a 	add	r4,r23,r22
   2c458:	9d8fc83a 	sub	r7,r19,r22
   2c45c:	85c00415 	stw	r23,16(r16)
   2c460:	84c00515 	stw	r19,20(r16)
   2c464:	81000015 	stw	r4,0(r16)
   2c468:	9027883a 	mov	r19,r18
   2c46c:	81c00215 	stw	r7,8(r16)
   2c470:	902f883a 	mov	r23,r18
   2c474:	003f3b06 	br	2c164 <__alt_mem_SDRAM_controller+0xfc02c164>
   2c478:	800b883a 	mov	r5,r16
   2c47c:	a809883a 	mov	r4,r21
   2c480:	002b7c80 	call	2b7c8 <_fflush_r>
   2c484:	103fb926 	beq	r2,zero,2c36c <__alt_mem_SDRAM_controller+0xfc02c36c>
   2c488:	003f6506 	br	2c220 <__alt_mem_SDRAM_controller+0xfc02c220>
   2c48c:	a809883a 	mov	r4,r21
   2c490:	002e5bc0 	call	2e5bc <_realloc_r>
   2c494:	102f883a 	mov	r23,r2
   2c498:	103fee1e 	bne	r2,zero,2c454 <__alt_mem_SDRAM_controller+0xfc02c454>
   2c49c:	81400417 	ldw	r5,16(r16)
   2c4a0:	a809883a 	mov	r4,r21
   2c4a4:	002bd180 	call	2bd18 <_free_r>
   2c4a8:	8080030b 	ldhu	r2,12(r16)
   2c4ac:	00ffdfc4 	movi	r3,-129
   2c4b0:	1884703a 	and	r2,r3,r2
   2c4b4:	00c00304 	movi	r3,12
   2c4b8:	a8c00015 	stw	r3,0(r21)
   2c4bc:	003f5906 	br	2c224 <__alt_mem_SDRAM_controller+0xfc02c224>
   2c4c0:	94c00044 	addi	r19,r18,1
   2c4c4:	02000044 	movi	r8,1
   2c4c8:	003f6006 	br	2c24c <__alt_mem_SDRAM_controller+0xfc02c24c>
   2c4cc:	00bfffc4 	movi	r2,-1
   2c4d0:	003f0306 	br	2c0e0 <__alt_mem_SDRAM_controller+0xfc02c0e0>
   2c4d4:	00800304 	movi	r2,12
   2c4d8:	a8800015 	stw	r2,0(r21)
   2c4dc:	8080030b 	ldhu	r2,12(r16)
   2c4e0:	003f5006 	br	2c224 <__alt_mem_SDRAM_controller+0xfc02c224>

0002c4e4 <_fwalk>:
   2c4e4:	defff704 	addi	sp,sp,-36
   2c4e8:	dd000415 	stw	r20,16(sp)
   2c4ec:	dfc00815 	stw	ra,32(sp)
   2c4f0:	ddc00715 	stw	r23,28(sp)
   2c4f4:	dd800615 	stw	r22,24(sp)
   2c4f8:	dd400515 	stw	r21,20(sp)
   2c4fc:	dcc00315 	stw	r19,12(sp)
   2c500:	dc800215 	stw	r18,8(sp)
   2c504:	dc400115 	stw	r17,4(sp)
   2c508:	dc000015 	stw	r16,0(sp)
   2c50c:	2500b804 	addi	r20,r4,736
   2c510:	a0002326 	beq	r20,zero,2c5a0 <_fwalk+0xbc>
   2c514:	282b883a 	mov	r21,r5
   2c518:	002f883a 	mov	r23,zero
   2c51c:	05800044 	movi	r22,1
   2c520:	04ffffc4 	movi	r19,-1
   2c524:	a4400117 	ldw	r17,4(r20)
   2c528:	a4800217 	ldw	r18,8(r20)
   2c52c:	8c7fffc4 	addi	r17,r17,-1
   2c530:	88000d16 	blt	r17,zero,2c568 <_fwalk+0x84>
   2c534:	94000304 	addi	r16,r18,12
   2c538:	94800384 	addi	r18,r18,14
   2c53c:	8080000b 	ldhu	r2,0(r16)
   2c540:	8c7fffc4 	addi	r17,r17,-1
   2c544:	813ffd04 	addi	r4,r16,-12
   2c548:	b080042e 	bgeu	r22,r2,2c55c <_fwalk+0x78>
   2c54c:	9080000f 	ldh	r2,0(r18)
   2c550:	14c00226 	beq	r2,r19,2c55c <_fwalk+0x78>
   2c554:	a83ee83a 	callr	r21
   2c558:	b8aeb03a 	or	r23,r23,r2
   2c55c:	84001a04 	addi	r16,r16,104
   2c560:	94801a04 	addi	r18,r18,104
   2c564:	8cfff51e 	bne	r17,r19,2c53c <__alt_mem_SDRAM_controller+0xfc02c53c>
   2c568:	a5000017 	ldw	r20,0(r20)
   2c56c:	a03fed1e 	bne	r20,zero,2c524 <__alt_mem_SDRAM_controller+0xfc02c524>
   2c570:	b805883a 	mov	r2,r23
   2c574:	dfc00817 	ldw	ra,32(sp)
   2c578:	ddc00717 	ldw	r23,28(sp)
   2c57c:	dd800617 	ldw	r22,24(sp)
   2c580:	dd400517 	ldw	r21,20(sp)
   2c584:	dd000417 	ldw	r20,16(sp)
   2c588:	dcc00317 	ldw	r19,12(sp)
   2c58c:	dc800217 	ldw	r18,8(sp)
   2c590:	dc400117 	ldw	r17,4(sp)
   2c594:	dc000017 	ldw	r16,0(sp)
   2c598:	dec00904 	addi	sp,sp,36
   2c59c:	f800283a 	ret
   2c5a0:	002f883a 	mov	r23,zero
   2c5a4:	003ff206 	br	2c570 <__alt_mem_SDRAM_controller+0xfc02c570>

0002c5a8 <_fwalk_reent>:
   2c5a8:	defff704 	addi	sp,sp,-36
   2c5ac:	dd000415 	stw	r20,16(sp)
   2c5b0:	dfc00815 	stw	ra,32(sp)
   2c5b4:	ddc00715 	stw	r23,28(sp)
   2c5b8:	dd800615 	stw	r22,24(sp)
   2c5bc:	dd400515 	stw	r21,20(sp)
   2c5c0:	dcc00315 	stw	r19,12(sp)
   2c5c4:	dc800215 	stw	r18,8(sp)
   2c5c8:	dc400115 	stw	r17,4(sp)
   2c5cc:	dc000015 	stw	r16,0(sp)
   2c5d0:	2500b804 	addi	r20,r4,736
   2c5d4:	a0002326 	beq	r20,zero,2c664 <_fwalk_reent+0xbc>
   2c5d8:	282b883a 	mov	r21,r5
   2c5dc:	2027883a 	mov	r19,r4
   2c5e0:	002f883a 	mov	r23,zero
   2c5e4:	05800044 	movi	r22,1
   2c5e8:	04bfffc4 	movi	r18,-1
   2c5ec:	a4400117 	ldw	r17,4(r20)
   2c5f0:	a4000217 	ldw	r16,8(r20)
   2c5f4:	8c7fffc4 	addi	r17,r17,-1
   2c5f8:	88000c16 	blt	r17,zero,2c62c <_fwalk_reent+0x84>
   2c5fc:	84000304 	addi	r16,r16,12
   2c600:	8080000b 	ldhu	r2,0(r16)
   2c604:	8c7fffc4 	addi	r17,r17,-1
   2c608:	817ffd04 	addi	r5,r16,-12
   2c60c:	b080052e 	bgeu	r22,r2,2c624 <_fwalk_reent+0x7c>
   2c610:	8080008f 	ldh	r2,2(r16)
   2c614:	9809883a 	mov	r4,r19
   2c618:	14800226 	beq	r2,r18,2c624 <_fwalk_reent+0x7c>
   2c61c:	a83ee83a 	callr	r21
   2c620:	b8aeb03a 	or	r23,r23,r2
   2c624:	84001a04 	addi	r16,r16,104
   2c628:	8cbff51e 	bne	r17,r18,2c600 <__alt_mem_SDRAM_controller+0xfc02c600>
   2c62c:	a5000017 	ldw	r20,0(r20)
   2c630:	a03fee1e 	bne	r20,zero,2c5ec <__alt_mem_SDRAM_controller+0xfc02c5ec>
   2c634:	b805883a 	mov	r2,r23
   2c638:	dfc00817 	ldw	ra,32(sp)
   2c63c:	ddc00717 	ldw	r23,28(sp)
   2c640:	dd800617 	ldw	r22,24(sp)
   2c644:	dd400517 	ldw	r21,20(sp)
   2c648:	dd000417 	ldw	r20,16(sp)
   2c64c:	dcc00317 	ldw	r19,12(sp)
   2c650:	dc800217 	ldw	r18,8(sp)
   2c654:	dc400117 	ldw	r17,4(sp)
   2c658:	dc000017 	ldw	r16,0(sp)
   2c65c:	dec00904 	addi	sp,sp,36
   2c660:	f800283a 	ret
   2c664:	002f883a 	mov	r23,zero
   2c668:	003ff206 	br	2c634 <__alt_mem_SDRAM_controller+0xfc02c634>

0002c66c <_setlocale_r>:
   2c66c:	30001b26 	beq	r6,zero,2c6dc <_setlocale_r+0x70>
   2c670:	014000f4 	movhi	r5,3
   2c674:	defffe04 	addi	sp,sp,-8
   2c678:	2958e004 	addi	r5,r5,25472
   2c67c:	3009883a 	mov	r4,r6
   2c680:	dc000015 	stw	r16,0(sp)
   2c684:	dfc00115 	stw	ra,4(sp)
   2c688:	3021883a 	mov	r16,r6
   2c68c:	002ecb00 	call	2ecb0 <strcmp>
   2c690:	1000061e 	bne	r2,zero,2c6ac <_setlocale_r+0x40>
   2c694:	008000f4 	movhi	r2,3
   2c698:	1098c104 	addi	r2,r2,25348
   2c69c:	dfc00117 	ldw	ra,4(sp)
   2c6a0:	dc000017 	ldw	r16,0(sp)
   2c6a4:	dec00204 	addi	sp,sp,8
   2c6a8:	f800283a 	ret
   2c6ac:	014000f4 	movhi	r5,3
   2c6b0:	2958c104 	addi	r5,r5,25348
   2c6b4:	8009883a 	mov	r4,r16
   2c6b8:	002ecb00 	call	2ecb0 <strcmp>
   2c6bc:	103ff526 	beq	r2,zero,2c694 <__alt_mem_SDRAM_controller+0xfc02c694>
   2c6c0:	014000f4 	movhi	r5,3
   2c6c4:	2958cb04 	addi	r5,r5,25388
   2c6c8:	8009883a 	mov	r4,r16
   2c6cc:	002ecb00 	call	2ecb0 <strcmp>
   2c6d0:	103ff026 	beq	r2,zero,2c694 <__alt_mem_SDRAM_controller+0xfc02c694>
   2c6d4:	0005883a 	mov	r2,zero
   2c6d8:	003ff006 	br	2c69c <__alt_mem_SDRAM_controller+0xfc02c69c>
   2c6dc:	008000f4 	movhi	r2,3
   2c6e0:	1098c104 	addi	r2,r2,25348
   2c6e4:	f800283a 	ret

0002c6e8 <__locale_charset>:
   2c6e8:	008000f4 	movhi	r2,3
   2c6ec:	109a7104 	addi	r2,r2,27076
   2c6f0:	f800283a 	ret

0002c6f4 <__locale_mb_cur_max>:
   2c6f4:	00800134 	movhi	r2,4
   2c6f8:	10a05004 	addi	r2,r2,-32448
   2c6fc:	10800017 	ldw	r2,0(r2)
   2c700:	f800283a 	ret

0002c704 <__locale_msgcharset>:
   2c704:	008000f4 	movhi	r2,3
   2c708:	109a6904 	addi	r2,r2,27044
   2c70c:	f800283a 	ret

0002c710 <__locale_cjk_lang>:
   2c710:	0005883a 	mov	r2,zero
   2c714:	f800283a 	ret

0002c718 <_localeconv_r>:
   2c718:	008000f4 	movhi	r2,3
   2c71c:	109a7904 	addi	r2,r2,27108
   2c720:	f800283a 	ret

0002c724 <setlocale>:
   2c724:	00800134 	movhi	r2,4
   2c728:	10a04f04 	addi	r2,r2,-32452
   2c72c:	280d883a 	mov	r6,r5
   2c730:	200b883a 	mov	r5,r4
   2c734:	11000017 	ldw	r4,0(r2)
   2c738:	002c66c1 	jmpi	2c66c <_setlocale_r>

0002c73c <localeconv>:
   2c73c:	008000f4 	movhi	r2,3
   2c740:	109a7904 	addi	r2,r2,27108
   2c744:	f800283a 	ret

0002c748 <__smakebuf_r>:
   2c748:	2880030b 	ldhu	r2,12(r5)
   2c74c:	10c0008c 	andi	r3,r2,2
   2c750:	1800411e 	bne	r3,zero,2c858 <__smakebuf_r+0x110>
   2c754:	deffec04 	addi	sp,sp,-80
   2c758:	dc000f15 	stw	r16,60(sp)
   2c75c:	2821883a 	mov	r16,r5
   2c760:	2940038f 	ldh	r5,14(r5)
   2c764:	dc401015 	stw	r17,64(sp)
   2c768:	dfc01315 	stw	ra,76(sp)
   2c76c:	dcc01215 	stw	r19,72(sp)
   2c770:	dc801115 	stw	r18,68(sp)
   2c774:	2023883a 	mov	r17,r4
   2c778:	28001c16 	blt	r5,zero,2c7ec <__smakebuf_r+0xa4>
   2c77c:	d80d883a 	mov	r6,sp
   2c780:	00308580 	call	30858 <_fstat_r>
   2c784:	10001816 	blt	r2,zero,2c7e8 <__smakebuf_r+0xa0>
   2c788:	d8800117 	ldw	r2,4(sp)
   2c78c:	00e00014 	movui	r3,32768
   2c790:	10bc000c 	andi	r2,r2,61440
   2c794:	14c80020 	cmpeqi	r19,r2,8192
   2c798:	10c03726 	beq	r2,r3,2c878 <__smakebuf_r+0x130>
   2c79c:	80c0030b 	ldhu	r3,12(r16)
   2c7a0:	18c20014 	ori	r3,r3,2048
   2c7a4:	80c0030d 	sth	r3,12(r16)
   2c7a8:	00c80004 	movi	r3,8192
   2c7ac:	10c0521e 	bne	r2,r3,2c8f8 <__smakebuf_r+0x1b0>
   2c7b0:	8140038f 	ldh	r5,14(r16)
   2c7b4:	8809883a 	mov	r4,r17
   2c7b8:	00308b40 	call	308b4 <_isatty_r>
   2c7bc:	10004c26 	beq	r2,zero,2c8f0 <__smakebuf_r+0x1a8>
   2c7c0:	8080030b 	ldhu	r2,12(r16)
   2c7c4:	80c010c4 	addi	r3,r16,67
   2c7c8:	80c00015 	stw	r3,0(r16)
   2c7cc:	10800054 	ori	r2,r2,1
   2c7d0:	8080030d 	sth	r2,12(r16)
   2c7d4:	00800044 	movi	r2,1
   2c7d8:	80c00415 	stw	r3,16(r16)
   2c7dc:	80800515 	stw	r2,20(r16)
   2c7e0:	04810004 	movi	r18,1024
   2c7e4:	00000706 	br	2c804 <__smakebuf_r+0xbc>
   2c7e8:	8080030b 	ldhu	r2,12(r16)
   2c7ec:	10c0200c 	andi	r3,r2,128
   2c7f0:	18001f1e 	bne	r3,zero,2c870 <__smakebuf_r+0x128>
   2c7f4:	04810004 	movi	r18,1024
   2c7f8:	10820014 	ori	r2,r2,2048
   2c7fc:	8080030d 	sth	r2,12(r16)
   2c800:	0027883a 	mov	r19,zero
   2c804:	900b883a 	mov	r5,r18
   2c808:	8809883a 	mov	r4,r17
   2c80c:	002c9040 	call	2c904 <_malloc_r>
   2c810:	10002c26 	beq	r2,zero,2c8c4 <__smakebuf_r+0x17c>
   2c814:	80c0030b 	ldhu	r3,12(r16)
   2c818:	010000f4 	movhi	r4,3
   2c81c:	212e1704 	addi	r4,r4,-18340
   2c820:	89000f15 	stw	r4,60(r17)
   2c824:	18c02014 	ori	r3,r3,128
   2c828:	80c0030d 	sth	r3,12(r16)
   2c82c:	80800015 	stw	r2,0(r16)
   2c830:	80800415 	stw	r2,16(r16)
   2c834:	84800515 	stw	r18,20(r16)
   2c838:	98001a1e 	bne	r19,zero,2c8a4 <__smakebuf_r+0x15c>
   2c83c:	dfc01317 	ldw	ra,76(sp)
   2c840:	dcc01217 	ldw	r19,72(sp)
   2c844:	dc801117 	ldw	r18,68(sp)
   2c848:	dc401017 	ldw	r17,64(sp)
   2c84c:	dc000f17 	ldw	r16,60(sp)
   2c850:	dec01404 	addi	sp,sp,80
   2c854:	f800283a 	ret
   2c858:	288010c4 	addi	r2,r5,67
   2c85c:	28800015 	stw	r2,0(r5)
   2c860:	28800415 	stw	r2,16(r5)
   2c864:	00800044 	movi	r2,1
   2c868:	28800515 	stw	r2,20(r5)
   2c86c:	f800283a 	ret
   2c870:	04801004 	movi	r18,64
   2c874:	003fe006 	br	2c7f8 <__alt_mem_SDRAM_controller+0xfc02c7f8>
   2c878:	81000a17 	ldw	r4,40(r16)
   2c87c:	00c000f4 	movhi	r3,3
   2c880:	18fb1304 	addi	r3,r3,-5044
   2c884:	20ffc51e 	bne	r4,r3,2c79c <__alt_mem_SDRAM_controller+0xfc02c79c>
   2c888:	8080030b 	ldhu	r2,12(r16)
   2c88c:	04810004 	movi	r18,1024
   2c890:	84801315 	stw	r18,76(r16)
   2c894:	1484b03a 	or	r2,r2,r18
   2c898:	8080030d 	sth	r2,12(r16)
   2c89c:	0027883a 	mov	r19,zero
   2c8a0:	003fd806 	br	2c804 <__alt_mem_SDRAM_controller+0xfc02c804>
   2c8a4:	8140038f 	ldh	r5,14(r16)
   2c8a8:	8809883a 	mov	r4,r17
   2c8ac:	00308b40 	call	308b4 <_isatty_r>
   2c8b0:	103fe226 	beq	r2,zero,2c83c <__alt_mem_SDRAM_controller+0xfc02c83c>
   2c8b4:	8080030b 	ldhu	r2,12(r16)
   2c8b8:	10800054 	ori	r2,r2,1
   2c8bc:	8080030d 	sth	r2,12(r16)
   2c8c0:	003fde06 	br	2c83c <__alt_mem_SDRAM_controller+0xfc02c83c>
   2c8c4:	8080030b 	ldhu	r2,12(r16)
   2c8c8:	10c0800c 	andi	r3,r2,512
   2c8cc:	183fdb1e 	bne	r3,zero,2c83c <__alt_mem_SDRAM_controller+0xfc02c83c>
   2c8d0:	10800094 	ori	r2,r2,2
   2c8d4:	80c010c4 	addi	r3,r16,67
   2c8d8:	8080030d 	sth	r2,12(r16)
   2c8dc:	00800044 	movi	r2,1
   2c8e0:	80c00015 	stw	r3,0(r16)
   2c8e4:	80c00415 	stw	r3,16(r16)
   2c8e8:	80800515 	stw	r2,20(r16)
   2c8ec:	003fd306 	br	2c83c <__alt_mem_SDRAM_controller+0xfc02c83c>
   2c8f0:	04810004 	movi	r18,1024
   2c8f4:	003fc306 	br	2c804 <__alt_mem_SDRAM_controller+0xfc02c804>
   2c8f8:	0027883a 	mov	r19,zero
   2c8fc:	04810004 	movi	r18,1024
   2c900:	003fc006 	br	2c804 <__alt_mem_SDRAM_controller+0xfc02c804>

0002c904 <_malloc_r>:
   2c904:	defff504 	addi	sp,sp,-44
   2c908:	dc800315 	stw	r18,12(sp)
   2c90c:	dfc00a15 	stw	ra,40(sp)
   2c910:	df000915 	stw	fp,36(sp)
   2c914:	ddc00815 	stw	r23,32(sp)
   2c918:	dd800715 	stw	r22,28(sp)
   2c91c:	dd400615 	stw	r21,24(sp)
   2c920:	dd000515 	stw	r20,20(sp)
   2c924:	dcc00415 	stw	r19,16(sp)
   2c928:	dc400215 	stw	r17,8(sp)
   2c92c:	dc000115 	stw	r16,4(sp)
   2c930:	288002c4 	addi	r2,r5,11
   2c934:	00c00584 	movi	r3,22
   2c938:	2025883a 	mov	r18,r4
   2c93c:	18807f2e 	bgeu	r3,r2,2cb3c <_malloc_r+0x238>
   2c940:	047ffe04 	movi	r17,-8
   2c944:	1462703a 	and	r17,r2,r17
   2c948:	8800a316 	blt	r17,zero,2cbd8 <_malloc_r+0x2d4>
   2c94c:	8940a236 	bltu	r17,r5,2cbd8 <_malloc_r+0x2d4>
   2c950:	0031ddc0 	call	31ddc <__malloc_lock>
   2c954:	00807dc4 	movi	r2,503
   2c958:	1441e92e 	bgeu	r2,r17,2d100 <_malloc_r+0x7fc>
   2c95c:	8804d27a 	srli	r2,r17,9
   2c960:	1000a126 	beq	r2,zero,2cbe8 <_malloc_r+0x2e4>
   2c964:	00c00104 	movi	r3,4
   2c968:	18811e36 	bltu	r3,r2,2cde4 <_malloc_r+0x4e0>
   2c96c:	8804d1ba 	srli	r2,r17,6
   2c970:	12000e44 	addi	r8,r2,57
   2c974:	11c00e04 	addi	r7,r2,56
   2c978:	4209883a 	add	r4,r8,r8
   2c97c:	04c000f4 	movhi	r19,3
   2c980:	2109883a 	add	r4,r4,r4
   2c984:	9cda8704 	addi	r19,r19,27164
   2c988:	2109883a 	add	r4,r4,r4
   2c98c:	9909883a 	add	r4,r19,r4
   2c990:	24000117 	ldw	r16,4(r4)
   2c994:	213ffe04 	addi	r4,r4,-8
   2c998:	24009726 	beq	r4,r16,2cbf8 <_malloc_r+0x2f4>
   2c99c:	80800117 	ldw	r2,4(r16)
   2c9a0:	01bfff04 	movi	r6,-4
   2c9a4:	014003c4 	movi	r5,15
   2c9a8:	1184703a 	and	r2,r2,r6
   2c9ac:	1447c83a 	sub	r3,r2,r17
   2c9b0:	28c00716 	blt	r5,r3,2c9d0 <_malloc_r+0xcc>
   2c9b4:	1800920e 	bge	r3,zero,2cc00 <_malloc_r+0x2fc>
   2c9b8:	84000317 	ldw	r16,12(r16)
   2c9bc:	24008e26 	beq	r4,r16,2cbf8 <_malloc_r+0x2f4>
   2c9c0:	80800117 	ldw	r2,4(r16)
   2c9c4:	1184703a 	and	r2,r2,r6
   2c9c8:	1447c83a 	sub	r3,r2,r17
   2c9cc:	28fff90e 	bge	r5,r3,2c9b4 <__alt_mem_SDRAM_controller+0xfc02c9b4>
   2c9d0:	3809883a 	mov	r4,r7
   2c9d4:	018000f4 	movhi	r6,3
   2c9d8:	9c000417 	ldw	r16,16(r19)
   2c9dc:	319a8704 	addi	r6,r6,27164
   2c9e0:	32000204 	addi	r8,r6,8
   2c9e4:	82013426 	beq	r16,r8,2ceb8 <_malloc_r+0x5b4>
   2c9e8:	80c00117 	ldw	r3,4(r16)
   2c9ec:	00bfff04 	movi	r2,-4
   2c9f0:	188e703a 	and	r7,r3,r2
   2c9f4:	3c45c83a 	sub	r2,r7,r17
   2c9f8:	00c003c4 	movi	r3,15
   2c9fc:	18811f16 	blt	r3,r2,2ce7c <_malloc_r+0x578>
   2ca00:	32000515 	stw	r8,20(r6)
   2ca04:	32000415 	stw	r8,16(r6)
   2ca08:	10007f0e 	bge	r2,zero,2cc08 <_malloc_r+0x304>
   2ca0c:	00807fc4 	movi	r2,511
   2ca10:	11c0fd36 	bltu	r2,r7,2ce08 <_malloc_r+0x504>
   2ca14:	3806d0fa 	srli	r3,r7,3
   2ca18:	01c00044 	movi	r7,1
   2ca1c:	30800117 	ldw	r2,4(r6)
   2ca20:	19400044 	addi	r5,r3,1
   2ca24:	294b883a 	add	r5,r5,r5
   2ca28:	1807d0ba 	srai	r3,r3,2
   2ca2c:	294b883a 	add	r5,r5,r5
   2ca30:	294b883a 	add	r5,r5,r5
   2ca34:	298b883a 	add	r5,r5,r6
   2ca38:	38c6983a 	sll	r3,r7,r3
   2ca3c:	29c00017 	ldw	r7,0(r5)
   2ca40:	2a7ffe04 	addi	r9,r5,-8
   2ca44:	1886b03a 	or	r3,r3,r2
   2ca48:	82400315 	stw	r9,12(r16)
   2ca4c:	81c00215 	stw	r7,8(r16)
   2ca50:	30c00115 	stw	r3,4(r6)
   2ca54:	2c000015 	stw	r16,0(r5)
   2ca58:	3c000315 	stw	r16,12(r7)
   2ca5c:	2005d0ba 	srai	r2,r4,2
   2ca60:	01400044 	movi	r5,1
   2ca64:	288a983a 	sll	r5,r5,r2
   2ca68:	19406f36 	bltu	r3,r5,2cc28 <_malloc_r+0x324>
   2ca6c:	28c4703a 	and	r2,r5,r3
   2ca70:	10000a1e 	bne	r2,zero,2ca9c <_malloc_r+0x198>
   2ca74:	00bfff04 	movi	r2,-4
   2ca78:	294b883a 	add	r5,r5,r5
   2ca7c:	2088703a 	and	r4,r4,r2
   2ca80:	28c4703a 	and	r2,r5,r3
   2ca84:	21000104 	addi	r4,r4,4
   2ca88:	1000041e 	bne	r2,zero,2ca9c <_malloc_r+0x198>
   2ca8c:	294b883a 	add	r5,r5,r5
   2ca90:	28c4703a 	and	r2,r5,r3
   2ca94:	21000104 	addi	r4,r4,4
   2ca98:	103ffc26 	beq	r2,zero,2ca8c <__alt_mem_SDRAM_controller+0xfc02ca8c>
   2ca9c:	02bfff04 	movi	r10,-4
   2caa0:	024003c4 	movi	r9,15
   2caa4:	21800044 	addi	r6,r4,1
   2caa8:	318d883a 	add	r6,r6,r6
   2caac:	318d883a 	add	r6,r6,r6
   2cab0:	318d883a 	add	r6,r6,r6
   2cab4:	998d883a 	add	r6,r19,r6
   2cab8:	333ffe04 	addi	r12,r6,-8
   2cabc:	2017883a 	mov	r11,r4
   2cac0:	31800104 	addi	r6,r6,4
   2cac4:	34000017 	ldw	r16,0(r6)
   2cac8:	31fffd04 	addi	r7,r6,-12
   2cacc:	81c0041e 	bne	r16,r7,2cae0 <_malloc_r+0x1dc>
   2cad0:	0000fb06 	br	2cec0 <_malloc_r+0x5bc>
   2cad4:	1801030e 	bge	r3,zero,2cee4 <_malloc_r+0x5e0>
   2cad8:	84000317 	ldw	r16,12(r16)
   2cadc:	81c0f826 	beq	r16,r7,2cec0 <_malloc_r+0x5bc>
   2cae0:	80800117 	ldw	r2,4(r16)
   2cae4:	1284703a 	and	r2,r2,r10
   2cae8:	1447c83a 	sub	r3,r2,r17
   2caec:	48fff90e 	bge	r9,r3,2cad4 <__alt_mem_SDRAM_controller+0xfc02cad4>
   2caf0:	80800317 	ldw	r2,12(r16)
   2caf4:	81000217 	ldw	r4,8(r16)
   2caf8:	89400054 	ori	r5,r17,1
   2cafc:	81400115 	stw	r5,4(r16)
   2cb00:	20800315 	stw	r2,12(r4)
   2cb04:	11000215 	stw	r4,8(r2)
   2cb08:	8463883a 	add	r17,r16,r17
   2cb0c:	9c400515 	stw	r17,20(r19)
   2cb10:	9c400415 	stw	r17,16(r19)
   2cb14:	18800054 	ori	r2,r3,1
   2cb18:	88800115 	stw	r2,4(r17)
   2cb1c:	8a000315 	stw	r8,12(r17)
   2cb20:	8a000215 	stw	r8,8(r17)
   2cb24:	88e3883a 	add	r17,r17,r3
   2cb28:	88c00015 	stw	r3,0(r17)
   2cb2c:	9009883a 	mov	r4,r18
   2cb30:	0031e000 	call	31e00 <__malloc_unlock>
   2cb34:	80800204 	addi	r2,r16,8
   2cb38:	00001b06 	br	2cba8 <_malloc_r+0x2a4>
   2cb3c:	04400404 	movi	r17,16
   2cb40:	89402536 	bltu	r17,r5,2cbd8 <_malloc_r+0x2d4>
   2cb44:	0031ddc0 	call	31ddc <__malloc_lock>
   2cb48:	00800184 	movi	r2,6
   2cb4c:	01000084 	movi	r4,2
   2cb50:	04c000f4 	movhi	r19,3
   2cb54:	1085883a 	add	r2,r2,r2
   2cb58:	9cda8704 	addi	r19,r19,27164
   2cb5c:	1085883a 	add	r2,r2,r2
   2cb60:	9885883a 	add	r2,r19,r2
   2cb64:	14000117 	ldw	r16,4(r2)
   2cb68:	10fffe04 	addi	r3,r2,-8
   2cb6c:	80c0d926 	beq	r16,r3,2ced4 <_malloc_r+0x5d0>
   2cb70:	80c00117 	ldw	r3,4(r16)
   2cb74:	81000317 	ldw	r4,12(r16)
   2cb78:	00bfff04 	movi	r2,-4
   2cb7c:	1884703a 	and	r2,r3,r2
   2cb80:	81400217 	ldw	r5,8(r16)
   2cb84:	8085883a 	add	r2,r16,r2
   2cb88:	10c00117 	ldw	r3,4(r2)
   2cb8c:	29000315 	stw	r4,12(r5)
   2cb90:	21400215 	stw	r5,8(r4)
   2cb94:	18c00054 	ori	r3,r3,1
   2cb98:	10c00115 	stw	r3,4(r2)
   2cb9c:	9009883a 	mov	r4,r18
   2cba0:	0031e000 	call	31e00 <__malloc_unlock>
   2cba4:	80800204 	addi	r2,r16,8
   2cba8:	dfc00a17 	ldw	ra,40(sp)
   2cbac:	df000917 	ldw	fp,36(sp)
   2cbb0:	ddc00817 	ldw	r23,32(sp)
   2cbb4:	dd800717 	ldw	r22,28(sp)
   2cbb8:	dd400617 	ldw	r21,24(sp)
   2cbbc:	dd000517 	ldw	r20,20(sp)
   2cbc0:	dcc00417 	ldw	r19,16(sp)
   2cbc4:	dc800317 	ldw	r18,12(sp)
   2cbc8:	dc400217 	ldw	r17,8(sp)
   2cbcc:	dc000117 	ldw	r16,4(sp)
   2cbd0:	dec00b04 	addi	sp,sp,44
   2cbd4:	f800283a 	ret
   2cbd8:	00800304 	movi	r2,12
   2cbdc:	90800015 	stw	r2,0(r18)
   2cbe0:	0005883a 	mov	r2,zero
   2cbe4:	003ff006 	br	2cba8 <__alt_mem_SDRAM_controller+0xfc02cba8>
   2cbe8:	01002004 	movi	r4,128
   2cbec:	02001004 	movi	r8,64
   2cbf0:	01c00fc4 	movi	r7,63
   2cbf4:	003f6106 	br	2c97c <__alt_mem_SDRAM_controller+0xfc02c97c>
   2cbf8:	4009883a 	mov	r4,r8
   2cbfc:	003f7506 	br	2c9d4 <__alt_mem_SDRAM_controller+0xfc02c9d4>
   2cc00:	81000317 	ldw	r4,12(r16)
   2cc04:	003fde06 	br	2cb80 <__alt_mem_SDRAM_controller+0xfc02cb80>
   2cc08:	81c5883a 	add	r2,r16,r7
   2cc0c:	11400117 	ldw	r5,4(r2)
   2cc10:	9009883a 	mov	r4,r18
   2cc14:	29400054 	ori	r5,r5,1
   2cc18:	11400115 	stw	r5,4(r2)
   2cc1c:	0031e000 	call	31e00 <__malloc_unlock>
   2cc20:	80800204 	addi	r2,r16,8
   2cc24:	003fe006 	br	2cba8 <__alt_mem_SDRAM_controller+0xfc02cba8>
   2cc28:	9c000217 	ldw	r16,8(r19)
   2cc2c:	00bfff04 	movi	r2,-4
   2cc30:	85800117 	ldw	r22,4(r16)
   2cc34:	b0ac703a 	and	r22,r22,r2
   2cc38:	b4400336 	bltu	r22,r17,2cc48 <_malloc_r+0x344>
   2cc3c:	b445c83a 	sub	r2,r22,r17
   2cc40:	00c003c4 	movi	r3,15
   2cc44:	18805d16 	blt	r3,r2,2cdbc <_malloc_r+0x4b8>
   2cc48:	05c00134 	movhi	r23,4
   2cc4c:	00800134 	movhi	r2,4
   2cc50:	10a76904 	addi	r2,r2,-25180
   2cc54:	bde05104 	addi	r23,r23,-32444
   2cc58:	15400017 	ldw	r21,0(r2)
   2cc5c:	b8c00017 	ldw	r3,0(r23)
   2cc60:	00bfffc4 	movi	r2,-1
   2cc64:	858d883a 	add	r6,r16,r22
   2cc68:	8d6b883a 	add	r21,r17,r21
   2cc6c:	1880ea26 	beq	r3,r2,2d018 <_malloc_r+0x714>
   2cc70:	ad4403c4 	addi	r21,r21,4111
   2cc74:	00bc0004 	movi	r2,-4096
   2cc78:	a8aa703a 	and	r21,r21,r2
   2cc7c:	a80b883a 	mov	r5,r21
   2cc80:	9009883a 	mov	r4,r18
   2cc84:	d9800015 	stw	r6,0(sp)
   2cc88:	002eb200 	call	2eb20 <_sbrk_r>
   2cc8c:	1029883a 	mov	r20,r2
   2cc90:	00bfffc4 	movi	r2,-1
   2cc94:	d9800017 	ldw	r6,0(sp)
   2cc98:	a080e826 	beq	r20,r2,2d03c <_malloc_r+0x738>
   2cc9c:	a180a636 	bltu	r20,r6,2cf38 <_malloc_r+0x634>
   2cca0:	07000134 	movhi	fp,4
   2cca4:	e7277204 	addi	fp,fp,-25144
   2cca8:	e0800017 	ldw	r2,0(fp)
   2ccac:	a887883a 	add	r3,r21,r2
   2ccb0:	e0c00015 	stw	r3,0(fp)
   2ccb4:	3500e626 	beq	r6,r20,2d050 <_malloc_r+0x74c>
   2ccb8:	b9000017 	ldw	r4,0(r23)
   2ccbc:	00bfffc4 	movi	r2,-1
   2ccc0:	2080ee26 	beq	r4,r2,2d07c <_malloc_r+0x778>
   2ccc4:	a185c83a 	sub	r2,r20,r6
   2ccc8:	10c5883a 	add	r2,r2,r3
   2cccc:	e0800015 	stw	r2,0(fp)
   2ccd0:	a0c001cc 	andi	r3,r20,7
   2ccd4:	1800bc26 	beq	r3,zero,2cfc8 <_malloc_r+0x6c4>
   2ccd8:	a0e9c83a 	sub	r20,r20,r3
   2ccdc:	00840204 	movi	r2,4104
   2cce0:	a5000204 	addi	r20,r20,8
   2cce4:	10c7c83a 	sub	r3,r2,r3
   2cce8:	a545883a 	add	r2,r20,r21
   2ccec:	1083ffcc 	andi	r2,r2,4095
   2ccf0:	18abc83a 	sub	r21,r3,r2
   2ccf4:	a80b883a 	mov	r5,r21
   2ccf8:	9009883a 	mov	r4,r18
   2ccfc:	002eb200 	call	2eb20 <_sbrk_r>
   2cd00:	00ffffc4 	movi	r3,-1
   2cd04:	10c0e126 	beq	r2,r3,2d08c <_malloc_r+0x788>
   2cd08:	1505c83a 	sub	r2,r2,r20
   2cd0c:	1545883a 	add	r2,r2,r21
   2cd10:	10800054 	ori	r2,r2,1
   2cd14:	e0c00017 	ldw	r3,0(fp)
   2cd18:	9d000215 	stw	r20,8(r19)
   2cd1c:	a0800115 	stw	r2,4(r20)
   2cd20:	a8c7883a 	add	r3,r21,r3
   2cd24:	e0c00015 	stw	r3,0(fp)
   2cd28:	84c00e26 	beq	r16,r19,2cd64 <_malloc_r+0x460>
   2cd2c:	018003c4 	movi	r6,15
   2cd30:	3580a72e 	bgeu	r6,r22,2cfd0 <_malloc_r+0x6cc>
   2cd34:	81400117 	ldw	r5,4(r16)
   2cd38:	013ffe04 	movi	r4,-8
   2cd3c:	b0bffd04 	addi	r2,r22,-12
   2cd40:	1104703a 	and	r2,r2,r4
   2cd44:	2900004c 	andi	r4,r5,1
   2cd48:	2088b03a 	or	r4,r4,r2
   2cd4c:	81000115 	stw	r4,4(r16)
   2cd50:	01400144 	movi	r5,5
   2cd54:	8089883a 	add	r4,r16,r2
   2cd58:	21400115 	stw	r5,4(r4)
   2cd5c:	21400215 	stw	r5,8(r4)
   2cd60:	3080cd36 	bltu	r6,r2,2d098 <_malloc_r+0x794>
   2cd64:	00800134 	movhi	r2,4
   2cd68:	10a76804 	addi	r2,r2,-25184
   2cd6c:	11000017 	ldw	r4,0(r2)
   2cd70:	20c0012e 	bgeu	r4,r3,2cd78 <_malloc_r+0x474>
   2cd74:	10c00015 	stw	r3,0(r2)
   2cd78:	00800134 	movhi	r2,4
   2cd7c:	10a76704 	addi	r2,r2,-25188
   2cd80:	11000017 	ldw	r4,0(r2)
   2cd84:	9c000217 	ldw	r16,8(r19)
   2cd88:	20c0012e 	bgeu	r4,r3,2cd90 <_malloc_r+0x48c>
   2cd8c:	10c00015 	stw	r3,0(r2)
   2cd90:	80c00117 	ldw	r3,4(r16)
   2cd94:	00bfff04 	movi	r2,-4
   2cd98:	1886703a 	and	r3,r3,r2
   2cd9c:	1c45c83a 	sub	r2,r3,r17
   2cda0:	1c400236 	bltu	r3,r17,2cdac <_malloc_r+0x4a8>
   2cda4:	00c003c4 	movi	r3,15
   2cda8:	18800416 	blt	r3,r2,2cdbc <_malloc_r+0x4b8>
   2cdac:	9009883a 	mov	r4,r18
   2cdb0:	0031e000 	call	31e00 <__malloc_unlock>
   2cdb4:	0005883a 	mov	r2,zero
   2cdb8:	003f7b06 	br	2cba8 <__alt_mem_SDRAM_controller+0xfc02cba8>
   2cdbc:	88c00054 	ori	r3,r17,1
   2cdc0:	80c00115 	stw	r3,4(r16)
   2cdc4:	8463883a 	add	r17,r16,r17
   2cdc8:	10800054 	ori	r2,r2,1
   2cdcc:	9c400215 	stw	r17,8(r19)
   2cdd0:	88800115 	stw	r2,4(r17)
   2cdd4:	9009883a 	mov	r4,r18
   2cdd8:	0031e000 	call	31e00 <__malloc_unlock>
   2cddc:	80800204 	addi	r2,r16,8
   2cde0:	003f7106 	br	2cba8 <__alt_mem_SDRAM_controller+0xfc02cba8>
   2cde4:	00c00504 	movi	r3,20
   2cde8:	18804a2e 	bgeu	r3,r2,2cf14 <_malloc_r+0x610>
   2cdec:	00c01504 	movi	r3,84
   2cdf0:	18806e36 	bltu	r3,r2,2cfac <_malloc_r+0x6a8>
   2cdf4:	8804d33a 	srli	r2,r17,12
   2cdf8:	12001bc4 	addi	r8,r2,111
   2cdfc:	11c01b84 	addi	r7,r2,110
   2ce00:	4209883a 	add	r4,r8,r8
   2ce04:	003edd06 	br	2c97c <__alt_mem_SDRAM_controller+0xfc02c97c>
   2ce08:	3804d27a 	srli	r2,r7,9
   2ce0c:	00c00104 	movi	r3,4
   2ce10:	1880442e 	bgeu	r3,r2,2cf24 <_malloc_r+0x620>
   2ce14:	00c00504 	movi	r3,20
   2ce18:	18808136 	bltu	r3,r2,2d020 <_malloc_r+0x71c>
   2ce1c:	11401704 	addi	r5,r2,92
   2ce20:	10c016c4 	addi	r3,r2,91
   2ce24:	294b883a 	add	r5,r5,r5
   2ce28:	294b883a 	add	r5,r5,r5
   2ce2c:	294b883a 	add	r5,r5,r5
   2ce30:	994b883a 	add	r5,r19,r5
   2ce34:	28800017 	ldw	r2,0(r5)
   2ce38:	018000f4 	movhi	r6,3
   2ce3c:	297ffe04 	addi	r5,r5,-8
   2ce40:	319a8704 	addi	r6,r6,27164
   2ce44:	28806526 	beq	r5,r2,2cfdc <_malloc_r+0x6d8>
   2ce48:	01bfff04 	movi	r6,-4
   2ce4c:	10c00117 	ldw	r3,4(r2)
   2ce50:	1986703a 	and	r3,r3,r6
   2ce54:	38c0022e 	bgeu	r7,r3,2ce60 <_malloc_r+0x55c>
   2ce58:	10800217 	ldw	r2,8(r2)
   2ce5c:	28bffb1e 	bne	r5,r2,2ce4c <__alt_mem_SDRAM_controller+0xfc02ce4c>
   2ce60:	11400317 	ldw	r5,12(r2)
   2ce64:	98c00117 	ldw	r3,4(r19)
   2ce68:	81400315 	stw	r5,12(r16)
   2ce6c:	80800215 	stw	r2,8(r16)
   2ce70:	2c000215 	stw	r16,8(r5)
   2ce74:	14000315 	stw	r16,12(r2)
   2ce78:	003ef806 	br	2ca5c <__alt_mem_SDRAM_controller+0xfc02ca5c>
   2ce7c:	88c00054 	ori	r3,r17,1
   2ce80:	80c00115 	stw	r3,4(r16)
   2ce84:	8463883a 	add	r17,r16,r17
   2ce88:	34400515 	stw	r17,20(r6)
   2ce8c:	34400415 	stw	r17,16(r6)
   2ce90:	10c00054 	ori	r3,r2,1
   2ce94:	8a000315 	stw	r8,12(r17)
   2ce98:	8a000215 	stw	r8,8(r17)
   2ce9c:	88c00115 	stw	r3,4(r17)
   2cea0:	88a3883a 	add	r17,r17,r2
   2cea4:	88800015 	stw	r2,0(r17)
   2cea8:	9009883a 	mov	r4,r18
   2ceac:	0031e000 	call	31e00 <__malloc_unlock>
   2ceb0:	80800204 	addi	r2,r16,8
   2ceb4:	003f3c06 	br	2cba8 <__alt_mem_SDRAM_controller+0xfc02cba8>
   2ceb8:	30c00117 	ldw	r3,4(r6)
   2cebc:	003ee706 	br	2ca5c <__alt_mem_SDRAM_controller+0xfc02ca5c>
   2cec0:	5ac00044 	addi	r11,r11,1
   2cec4:	588000cc 	andi	r2,r11,3
   2cec8:	31800204 	addi	r6,r6,8
   2cecc:	103efd1e 	bne	r2,zero,2cac4 <__alt_mem_SDRAM_controller+0xfc02cac4>
   2ced0:	00002406 	br	2cf64 <_malloc_r+0x660>
   2ced4:	14000317 	ldw	r16,12(r2)
   2ced8:	143f251e 	bne	r2,r16,2cb70 <__alt_mem_SDRAM_controller+0xfc02cb70>
   2cedc:	21000084 	addi	r4,r4,2
   2cee0:	003ebc06 	br	2c9d4 <__alt_mem_SDRAM_controller+0xfc02c9d4>
   2cee4:	8085883a 	add	r2,r16,r2
   2cee8:	10c00117 	ldw	r3,4(r2)
   2ceec:	81000317 	ldw	r4,12(r16)
   2cef0:	81400217 	ldw	r5,8(r16)
   2cef4:	18c00054 	ori	r3,r3,1
   2cef8:	10c00115 	stw	r3,4(r2)
   2cefc:	29000315 	stw	r4,12(r5)
   2cf00:	21400215 	stw	r5,8(r4)
   2cf04:	9009883a 	mov	r4,r18
   2cf08:	0031e000 	call	31e00 <__malloc_unlock>
   2cf0c:	80800204 	addi	r2,r16,8
   2cf10:	003f2506 	br	2cba8 <__alt_mem_SDRAM_controller+0xfc02cba8>
   2cf14:	12001704 	addi	r8,r2,92
   2cf18:	11c016c4 	addi	r7,r2,91
   2cf1c:	4209883a 	add	r4,r8,r8
   2cf20:	003e9606 	br	2c97c <__alt_mem_SDRAM_controller+0xfc02c97c>
   2cf24:	3804d1ba 	srli	r2,r7,6
   2cf28:	11400e44 	addi	r5,r2,57
   2cf2c:	10c00e04 	addi	r3,r2,56
   2cf30:	294b883a 	add	r5,r5,r5
   2cf34:	003fbc06 	br	2ce28 <__alt_mem_SDRAM_controller+0xfc02ce28>
   2cf38:	84ff5926 	beq	r16,r19,2cca0 <__alt_mem_SDRAM_controller+0xfc02cca0>
   2cf3c:	008000f4 	movhi	r2,3
   2cf40:	109a8704 	addi	r2,r2,27164
   2cf44:	14000217 	ldw	r16,8(r2)
   2cf48:	00bfff04 	movi	r2,-4
   2cf4c:	80c00117 	ldw	r3,4(r16)
   2cf50:	1886703a 	and	r3,r3,r2
   2cf54:	003f9106 	br	2cd9c <__alt_mem_SDRAM_controller+0xfc02cd9c>
   2cf58:	60800217 	ldw	r2,8(r12)
   2cf5c:	213fffc4 	addi	r4,r4,-1
   2cf60:	1300651e 	bne	r2,r12,2d0f8 <_malloc_r+0x7f4>
   2cf64:	208000cc 	andi	r2,r4,3
   2cf68:	633ffe04 	addi	r12,r12,-8
   2cf6c:	103ffa1e 	bne	r2,zero,2cf58 <__alt_mem_SDRAM_controller+0xfc02cf58>
   2cf70:	98800117 	ldw	r2,4(r19)
   2cf74:	0146303a 	nor	r3,zero,r5
   2cf78:	1884703a 	and	r2,r3,r2
   2cf7c:	98800115 	stw	r2,4(r19)
   2cf80:	294b883a 	add	r5,r5,r5
   2cf84:	117f2836 	bltu	r2,r5,2cc28 <__alt_mem_SDRAM_controller+0xfc02cc28>
   2cf88:	283f2726 	beq	r5,zero,2cc28 <__alt_mem_SDRAM_controller+0xfc02cc28>
   2cf8c:	2886703a 	and	r3,r5,r2
   2cf90:	5809883a 	mov	r4,r11
   2cf94:	183ec31e 	bne	r3,zero,2caa4 <__alt_mem_SDRAM_controller+0xfc02caa4>
   2cf98:	294b883a 	add	r5,r5,r5
   2cf9c:	2886703a 	and	r3,r5,r2
   2cfa0:	21000104 	addi	r4,r4,4
   2cfa4:	183ffc26 	beq	r3,zero,2cf98 <__alt_mem_SDRAM_controller+0xfc02cf98>
   2cfa8:	003ebe06 	br	2caa4 <__alt_mem_SDRAM_controller+0xfc02caa4>
   2cfac:	00c05504 	movi	r3,340
   2cfb0:	18801236 	bltu	r3,r2,2cffc <_malloc_r+0x6f8>
   2cfb4:	8804d3fa 	srli	r2,r17,15
   2cfb8:	12001e04 	addi	r8,r2,120
   2cfbc:	11c01dc4 	addi	r7,r2,119
   2cfc0:	4209883a 	add	r4,r8,r8
   2cfc4:	003e6d06 	br	2c97c <__alt_mem_SDRAM_controller+0xfc02c97c>
   2cfc8:	00c40004 	movi	r3,4096
   2cfcc:	003f4606 	br	2cce8 <__alt_mem_SDRAM_controller+0xfc02cce8>
   2cfd0:	00800044 	movi	r2,1
   2cfd4:	a0800115 	stw	r2,4(r20)
   2cfd8:	003f7406 	br	2cdac <__alt_mem_SDRAM_controller+0xfc02cdac>
   2cfdc:	1805d0ba 	srai	r2,r3,2
   2cfe0:	01c00044 	movi	r7,1
   2cfe4:	30c00117 	ldw	r3,4(r6)
   2cfe8:	388e983a 	sll	r7,r7,r2
   2cfec:	2805883a 	mov	r2,r5
   2cff0:	38c6b03a 	or	r3,r7,r3
   2cff4:	30c00115 	stw	r3,4(r6)
   2cff8:	003f9b06 	br	2ce68 <__alt_mem_SDRAM_controller+0xfc02ce68>
   2cffc:	00c15504 	movi	r3,1364
   2d000:	18801a36 	bltu	r3,r2,2d06c <_malloc_r+0x768>
   2d004:	8804d4ba 	srli	r2,r17,18
   2d008:	12001f44 	addi	r8,r2,125
   2d00c:	11c01f04 	addi	r7,r2,124
   2d010:	4209883a 	add	r4,r8,r8
   2d014:	003e5906 	br	2c97c <__alt_mem_SDRAM_controller+0xfc02c97c>
   2d018:	ad400404 	addi	r21,r21,16
   2d01c:	003f1706 	br	2cc7c <__alt_mem_SDRAM_controller+0xfc02cc7c>
   2d020:	00c01504 	movi	r3,84
   2d024:	18802336 	bltu	r3,r2,2d0b4 <_malloc_r+0x7b0>
   2d028:	3804d33a 	srli	r2,r7,12
   2d02c:	11401bc4 	addi	r5,r2,111
   2d030:	10c01b84 	addi	r3,r2,110
   2d034:	294b883a 	add	r5,r5,r5
   2d038:	003f7b06 	br	2ce28 <__alt_mem_SDRAM_controller+0xfc02ce28>
   2d03c:	9c000217 	ldw	r16,8(r19)
   2d040:	00bfff04 	movi	r2,-4
   2d044:	80c00117 	ldw	r3,4(r16)
   2d048:	1886703a 	and	r3,r3,r2
   2d04c:	003f5306 	br	2cd9c <__alt_mem_SDRAM_controller+0xfc02cd9c>
   2d050:	3083ffcc 	andi	r2,r6,4095
   2d054:	103f181e 	bne	r2,zero,2ccb8 <__alt_mem_SDRAM_controller+0xfc02ccb8>
   2d058:	99000217 	ldw	r4,8(r19)
   2d05c:	b545883a 	add	r2,r22,r21
   2d060:	10800054 	ori	r2,r2,1
   2d064:	20800115 	stw	r2,4(r4)
   2d068:	003f3e06 	br	2cd64 <__alt_mem_SDRAM_controller+0xfc02cd64>
   2d06c:	01003f84 	movi	r4,254
   2d070:	02001fc4 	movi	r8,127
   2d074:	01c01f84 	movi	r7,126
   2d078:	003e4006 	br	2c97c <__alt_mem_SDRAM_controller+0xfc02c97c>
   2d07c:	00800134 	movhi	r2,4
   2d080:	10a05104 	addi	r2,r2,-32444
   2d084:	15000015 	stw	r20,0(r2)
   2d088:	003f1106 	br	2ccd0 <__alt_mem_SDRAM_controller+0xfc02ccd0>
   2d08c:	00800044 	movi	r2,1
   2d090:	002b883a 	mov	r21,zero
   2d094:	003f1f06 	br	2cd14 <__alt_mem_SDRAM_controller+0xfc02cd14>
   2d098:	81400204 	addi	r5,r16,8
   2d09c:	9009883a 	mov	r4,r18
   2d0a0:	002bd180 	call	2bd18 <_free_r>
   2d0a4:	00800134 	movhi	r2,4
   2d0a8:	10a77204 	addi	r2,r2,-25144
   2d0ac:	10c00017 	ldw	r3,0(r2)
   2d0b0:	003f2c06 	br	2cd64 <__alt_mem_SDRAM_controller+0xfc02cd64>
   2d0b4:	00c05504 	movi	r3,340
   2d0b8:	18800536 	bltu	r3,r2,2d0d0 <_malloc_r+0x7cc>
   2d0bc:	3804d3fa 	srli	r2,r7,15
   2d0c0:	11401e04 	addi	r5,r2,120
   2d0c4:	10c01dc4 	addi	r3,r2,119
   2d0c8:	294b883a 	add	r5,r5,r5
   2d0cc:	003f5606 	br	2ce28 <__alt_mem_SDRAM_controller+0xfc02ce28>
   2d0d0:	00c15504 	movi	r3,1364
   2d0d4:	18800536 	bltu	r3,r2,2d0ec <_malloc_r+0x7e8>
   2d0d8:	3804d4ba 	srli	r2,r7,18
   2d0dc:	11401f44 	addi	r5,r2,125
   2d0e0:	10c01f04 	addi	r3,r2,124
   2d0e4:	294b883a 	add	r5,r5,r5
   2d0e8:	003f4f06 	br	2ce28 <__alt_mem_SDRAM_controller+0xfc02ce28>
   2d0ec:	01403f84 	movi	r5,254
   2d0f0:	00c01f84 	movi	r3,126
   2d0f4:	003f4c06 	br	2ce28 <__alt_mem_SDRAM_controller+0xfc02ce28>
   2d0f8:	98800117 	ldw	r2,4(r19)
   2d0fc:	003fa006 	br	2cf80 <__alt_mem_SDRAM_controller+0xfc02cf80>
   2d100:	8808d0fa 	srli	r4,r17,3
   2d104:	20800044 	addi	r2,r4,1
   2d108:	1085883a 	add	r2,r2,r2
   2d10c:	003e9006 	br	2cb50 <__alt_mem_SDRAM_controller+0xfc02cb50>

0002d110 <memchr>:
   2d110:	208000cc 	andi	r2,r4,3
   2d114:	280f883a 	mov	r7,r5
   2d118:	10003426 	beq	r2,zero,2d1ec <memchr+0xdc>
   2d11c:	30bfffc4 	addi	r2,r6,-1
   2d120:	30001a26 	beq	r6,zero,2d18c <memchr+0x7c>
   2d124:	20c00003 	ldbu	r3,0(r4)
   2d128:	29803fcc 	andi	r6,r5,255
   2d12c:	30c0051e 	bne	r6,r3,2d144 <memchr+0x34>
   2d130:	00001806 	br	2d194 <memchr+0x84>
   2d134:	10001526 	beq	r2,zero,2d18c <memchr+0x7c>
   2d138:	20c00003 	ldbu	r3,0(r4)
   2d13c:	10bfffc4 	addi	r2,r2,-1
   2d140:	30c01426 	beq	r6,r3,2d194 <memchr+0x84>
   2d144:	21000044 	addi	r4,r4,1
   2d148:	20c000cc 	andi	r3,r4,3
   2d14c:	183ff91e 	bne	r3,zero,2d134 <__alt_mem_SDRAM_controller+0xfc02d134>
   2d150:	020000c4 	movi	r8,3
   2d154:	40801136 	bltu	r8,r2,2d19c <memchr+0x8c>
   2d158:	10000c26 	beq	r2,zero,2d18c <memchr+0x7c>
   2d15c:	20c00003 	ldbu	r3,0(r4)
   2d160:	29403fcc 	andi	r5,r5,255
   2d164:	28c00b26 	beq	r5,r3,2d194 <memchr+0x84>
   2d168:	20c00044 	addi	r3,r4,1
   2d16c:	39803fcc 	andi	r6,r7,255
   2d170:	2089883a 	add	r4,r4,r2
   2d174:	00000306 	br	2d184 <memchr+0x74>
   2d178:	18c00044 	addi	r3,r3,1
   2d17c:	197fffc3 	ldbu	r5,-1(r3)
   2d180:	31400526 	beq	r6,r5,2d198 <memchr+0x88>
   2d184:	1805883a 	mov	r2,r3
   2d188:	20fffb1e 	bne	r4,r3,2d178 <__alt_mem_SDRAM_controller+0xfc02d178>
   2d18c:	0005883a 	mov	r2,zero
   2d190:	f800283a 	ret
   2d194:	2005883a 	mov	r2,r4
   2d198:	f800283a 	ret
   2d19c:	28c03fcc 	andi	r3,r5,255
   2d1a0:	1812923a 	slli	r9,r3,8
   2d1a4:	02ffbff4 	movhi	r11,65279
   2d1a8:	02a02074 	movhi	r10,32897
   2d1ac:	48d2b03a 	or	r9,r9,r3
   2d1b0:	4806943a 	slli	r3,r9,16
   2d1b4:	5affbfc4 	addi	r11,r11,-257
   2d1b8:	52a02004 	addi	r10,r10,-32640
   2d1bc:	48d2b03a 	or	r9,r9,r3
   2d1c0:	20c00017 	ldw	r3,0(r4)
   2d1c4:	48c6f03a 	xor	r3,r9,r3
   2d1c8:	1acd883a 	add	r6,r3,r11
   2d1cc:	00c6303a 	nor	r3,zero,r3
   2d1d0:	30c6703a 	and	r3,r6,r3
   2d1d4:	1a86703a 	and	r3,r3,r10
   2d1d8:	183fe01e 	bne	r3,zero,2d15c <__alt_mem_SDRAM_controller+0xfc02d15c>
   2d1dc:	10bfff04 	addi	r2,r2,-4
   2d1e0:	21000104 	addi	r4,r4,4
   2d1e4:	40bff636 	bltu	r8,r2,2d1c0 <__alt_mem_SDRAM_controller+0xfc02d1c0>
   2d1e8:	003fdb06 	br	2d158 <__alt_mem_SDRAM_controller+0xfc02d158>
   2d1ec:	3005883a 	mov	r2,r6
   2d1f0:	003fd706 	br	2d150 <__alt_mem_SDRAM_controller+0xfc02d150>

0002d1f4 <memcpy>:
   2d1f4:	defffd04 	addi	sp,sp,-12
   2d1f8:	dfc00215 	stw	ra,8(sp)
   2d1fc:	dc400115 	stw	r17,4(sp)
   2d200:	dc000015 	stw	r16,0(sp)
   2d204:	00c003c4 	movi	r3,15
   2d208:	2005883a 	mov	r2,r4
   2d20c:	1980452e 	bgeu	r3,r6,2d324 <memcpy+0x130>
   2d210:	2906b03a 	or	r3,r5,r4
   2d214:	18c000cc 	andi	r3,r3,3
   2d218:	1800441e 	bne	r3,zero,2d32c <memcpy+0x138>
   2d21c:	347ffc04 	addi	r17,r6,-16
   2d220:	8822d13a 	srli	r17,r17,4
   2d224:	28c00104 	addi	r3,r5,4
   2d228:	23400104 	addi	r13,r4,4
   2d22c:	8820913a 	slli	r16,r17,4
   2d230:	2b000204 	addi	r12,r5,8
   2d234:	22c00204 	addi	r11,r4,8
   2d238:	84000504 	addi	r16,r16,20
   2d23c:	2a800304 	addi	r10,r5,12
   2d240:	22400304 	addi	r9,r4,12
   2d244:	2c21883a 	add	r16,r5,r16
   2d248:	2811883a 	mov	r8,r5
   2d24c:	200f883a 	mov	r7,r4
   2d250:	41000017 	ldw	r4,0(r8)
   2d254:	1fc00017 	ldw	ra,0(r3)
   2d258:	63c00017 	ldw	r15,0(r12)
   2d25c:	39000015 	stw	r4,0(r7)
   2d260:	53800017 	ldw	r14,0(r10)
   2d264:	6fc00015 	stw	ra,0(r13)
   2d268:	5bc00015 	stw	r15,0(r11)
   2d26c:	4b800015 	stw	r14,0(r9)
   2d270:	18c00404 	addi	r3,r3,16
   2d274:	39c00404 	addi	r7,r7,16
   2d278:	42000404 	addi	r8,r8,16
   2d27c:	6b400404 	addi	r13,r13,16
   2d280:	63000404 	addi	r12,r12,16
   2d284:	5ac00404 	addi	r11,r11,16
   2d288:	52800404 	addi	r10,r10,16
   2d28c:	4a400404 	addi	r9,r9,16
   2d290:	1c3fef1e 	bne	r3,r16,2d250 <__alt_mem_SDRAM_controller+0xfc02d250>
   2d294:	89c00044 	addi	r7,r17,1
   2d298:	380e913a 	slli	r7,r7,4
   2d29c:	310003cc 	andi	r4,r6,15
   2d2a0:	02c000c4 	movi	r11,3
   2d2a4:	11c7883a 	add	r3,r2,r7
   2d2a8:	29cb883a 	add	r5,r5,r7
   2d2ac:	5900212e 	bgeu	r11,r4,2d334 <memcpy+0x140>
   2d2b0:	1813883a 	mov	r9,r3
   2d2b4:	2811883a 	mov	r8,r5
   2d2b8:	200f883a 	mov	r7,r4
   2d2bc:	42800017 	ldw	r10,0(r8)
   2d2c0:	4a400104 	addi	r9,r9,4
   2d2c4:	39ffff04 	addi	r7,r7,-4
   2d2c8:	4abfff15 	stw	r10,-4(r9)
   2d2cc:	42000104 	addi	r8,r8,4
   2d2d0:	59fffa36 	bltu	r11,r7,2d2bc <__alt_mem_SDRAM_controller+0xfc02d2bc>
   2d2d4:	213fff04 	addi	r4,r4,-4
   2d2d8:	2008d0ba 	srli	r4,r4,2
   2d2dc:	318000cc 	andi	r6,r6,3
   2d2e0:	21000044 	addi	r4,r4,1
   2d2e4:	2109883a 	add	r4,r4,r4
   2d2e8:	2109883a 	add	r4,r4,r4
   2d2ec:	1907883a 	add	r3,r3,r4
   2d2f0:	290b883a 	add	r5,r5,r4
   2d2f4:	30000626 	beq	r6,zero,2d310 <memcpy+0x11c>
   2d2f8:	198d883a 	add	r6,r3,r6
   2d2fc:	29c00003 	ldbu	r7,0(r5)
   2d300:	18c00044 	addi	r3,r3,1
   2d304:	29400044 	addi	r5,r5,1
   2d308:	19ffffc5 	stb	r7,-1(r3)
   2d30c:	19bffb1e 	bne	r3,r6,2d2fc <__alt_mem_SDRAM_controller+0xfc02d2fc>
   2d310:	dfc00217 	ldw	ra,8(sp)
   2d314:	dc400117 	ldw	r17,4(sp)
   2d318:	dc000017 	ldw	r16,0(sp)
   2d31c:	dec00304 	addi	sp,sp,12
   2d320:	f800283a 	ret
   2d324:	2007883a 	mov	r3,r4
   2d328:	003ff206 	br	2d2f4 <__alt_mem_SDRAM_controller+0xfc02d2f4>
   2d32c:	2007883a 	mov	r3,r4
   2d330:	003ff106 	br	2d2f8 <__alt_mem_SDRAM_controller+0xfc02d2f8>
   2d334:	200d883a 	mov	r6,r4
   2d338:	003fee06 	br	2d2f4 <__alt_mem_SDRAM_controller+0xfc02d2f4>

0002d33c <memmove>:
   2d33c:	2005883a 	mov	r2,r4
   2d340:	29000b2e 	bgeu	r5,r4,2d370 <memmove+0x34>
   2d344:	298f883a 	add	r7,r5,r6
   2d348:	21c0092e 	bgeu	r4,r7,2d370 <memmove+0x34>
   2d34c:	2187883a 	add	r3,r4,r6
   2d350:	198bc83a 	sub	r5,r3,r6
   2d354:	30004826 	beq	r6,zero,2d478 <memmove+0x13c>
   2d358:	39ffffc4 	addi	r7,r7,-1
   2d35c:	39000003 	ldbu	r4,0(r7)
   2d360:	18ffffc4 	addi	r3,r3,-1
   2d364:	19000005 	stb	r4,0(r3)
   2d368:	28fffb1e 	bne	r5,r3,2d358 <__alt_mem_SDRAM_controller+0xfc02d358>
   2d36c:	f800283a 	ret
   2d370:	00c003c4 	movi	r3,15
   2d374:	1980412e 	bgeu	r3,r6,2d47c <memmove+0x140>
   2d378:	2886b03a 	or	r3,r5,r2
   2d37c:	18c000cc 	andi	r3,r3,3
   2d380:	1800401e 	bne	r3,zero,2d484 <memmove+0x148>
   2d384:	33fffc04 	addi	r15,r6,-16
   2d388:	781ed13a 	srli	r15,r15,4
   2d38c:	28c00104 	addi	r3,r5,4
   2d390:	13400104 	addi	r13,r2,4
   2d394:	781c913a 	slli	r14,r15,4
   2d398:	2b000204 	addi	r12,r5,8
   2d39c:	12c00204 	addi	r11,r2,8
   2d3a0:	73800504 	addi	r14,r14,20
   2d3a4:	2a800304 	addi	r10,r5,12
   2d3a8:	12400304 	addi	r9,r2,12
   2d3ac:	2b9d883a 	add	r14,r5,r14
   2d3b0:	2811883a 	mov	r8,r5
   2d3b4:	100f883a 	mov	r7,r2
   2d3b8:	41000017 	ldw	r4,0(r8)
   2d3bc:	39c00404 	addi	r7,r7,16
   2d3c0:	18c00404 	addi	r3,r3,16
   2d3c4:	393ffc15 	stw	r4,-16(r7)
   2d3c8:	193ffc17 	ldw	r4,-16(r3)
   2d3cc:	6b400404 	addi	r13,r13,16
   2d3d0:	5ac00404 	addi	r11,r11,16
   2d3d4:	693ffc15 	stw	r4,-16(r13)
   2d3d8:	61000017 	ldw	r4,0(r12)
   2d3dc:	4a400404 	addi	r9,r9,16
   2d3e0:	42000404 	addi	r8,r8,16
   2d3e4:	593ffc15 	stw	r4,-16(r11)
   2d3e8:	51000017 	ldw	r4,0(r10)
   2d3ec:	63000404 	addi	r12,r12,16
   2d3f0:	52800404 	addi	r10,r10,16
   2d3f4:	493ffc15 	stw	r4,-16(r9)
   2d3f8:	1bbfef1e 	bne	r3,r14,2d3b8 <__alt_mem_SDRAM_controller+0xfc02d3b8>
   2d3fc:	79000044 	addi	r4,r15,1
   2d400:	2008913a 	slli	r4,r4,4
   2d404:	328003cc 	andi	r10,r6,15
   2d408:	02c000c4 	movi	r11,3
   2d40c:	1107883a 	add	r3,r2,r4
   2d410:	290b883a 	add	r5,r5,r4
   2d414:	5a801e2e 	bgeu	r11,r10,2d490 <memmove+0x154>
   2d418:	1813883a 	mov	r9,r3
   2d41c:	2811883a 	mov	r8,r5
   2d420:	500f883a 	mov	r7,r10
   2d424:	41000017 	ldw	r4,0(r8)
   2d428:	4a400104 	addi	r9,r9,4
   2d42c:	39ffff04 	addi	r7,r7,-4
   2d430:	493fff15 	stw	r4,-4(r9)
   2d434:	42000104 	addi	r8,r8,4
   2d438:	59fffa36 	bltu	r11,r7,2d424 <__alt_mem_SDRAM_controller+0xfc02d424>
   2d43c:	513fff04 	addi	r4,r10,-4
   2d440:	2008d0ba 	srli	r4,r4,2
   2d444:	318000cc 	andi	r6,r6,3
   2d448:	21000044 	addi	r4,r4,1
   2d44c:	2109883a 	add	r4,r4,r4
   2d450:	2109883a 	add	r4,r4,r4
   2d454:	1907883a 	add	r3,r3,r4
   2d458:	290b883a 	add	r5,r5,r4
   2d45c:	30000b26 	beq	r6,zero,2d48c <memmove+0x150>
   2d460:	198d883a 	add	r6,r3,r6
   2d464:	29c00003 	ldbu	r7,0(r5)
   2d468:	18c00044 	addi	r3,r3,1
   2d46c:	29400044 	addi	r5,r5,1
   2d470:	19ffffc5 	stb	r7,-1(r3)
   2d474:	19bffb1e 	bne	r3,r6,2d464 <__alt_mem_SDRAM_controller+0xfc02d464>
   2d478:	f800283a 	ret
   2d47c:	1007883a 	mov	r3,r2
   2d480:	003ff606 	br	2d45c <__alt_mem_SDRAM_controller+0xfc02d45c>
   2d484:	1007883a 	mov	r3,r2
   2d488:	003ff506 	br	2d460 <__alt_mem_SDRAM_controller+0xfc02d460>
   2d48c:	f800283a 	ret
   2d490:	500d883a 	mov	r6,r10
   2d494:	003ff106 	br	2d45c <__alt_mem_SDRAM_controller+0xfc02d45c>

0002d498 <memset>:
   2d498:	20c000cc 	andi	r3,r4,3
   2d49c:	2005883a 	mov	r2,r4
   2d4a0:	18004426 	beq	r3,zero,2d5b4 <memset+0x11c>
   2d4a4:	31ffffc4 	addi	r7,r6,-1
   2d4a8:	30004026 	beq	r6,zero,2d5ac <memset+0x114>
   2d4ac:	2813883a 	mov	r9,r5
   2d4b0:	200d883a 	mov	r6,r4
   2d4b4:	2007883a 	mov	r3,r4
   2d4b8:	00000406 	br	2d4cc <memset+0x34>
   2d4bc:	3a3fffc4 	addi	r8,r7,-1
   2d4c0:	31800044 	addi	r6,r6,1
   2d4c4:	38003926 	beq	r7,zero,2d5ac <memset+0x114>
   2d4c8:	400f883a 	mov	r7,r8
   2d4cc:	18c00044 	addi	r3,r3,1
   2d4d0:	32400005 	stb	r9,0(r6)
   2d4d4:	1a0000cc 	andi	r8,r3,3
   2d4d8:	403ff81e 	bne	r8,zero,2d4bc <__alt_mem_SDRAM_controller+0xfc02d4bc>
   2d4dc:	010000c4 	movi	r4,3
   2d4e0:	21c02d2e 	bgeu	r4,r7,2d598 <memset+0x100>
   2d4e4:	29003fcc 	andi	r4,r5,255
   2d4e8:	200c923a 	slli	r6,r4,8
   2d4ec:	3108b03a 	or	r4,r6,r4
   2d4f0:	200c943a 	slli	r6,r4,16
   2d4f4:	218cb03a 	or	r6,r4,r6
   2d4f8:	010003c4 	movi	r4,15
   2d4fc:	21c0182e 	bgeu	r4,r7,2d560 <memset+0xc8>
   2d500:	3b3ffc04 	addi	r12,r7,-16
   2d504:	6018d13a 	srli	r12,r12,4
   2d508:	1a000104 	addi	r8,r3,4
   2d50c:	1ac00204 	addi	r11,r3,8
   2d510:	6008913a 	slli	r4,r12,4
   2d514:	1a800304 	addi	r10,r3,12
   2d518:	1813883a 	mov	r9,r3
   2d51c:	21000504 	addi	r4,r4,20
   2d520:	1909883a 	add	r4,r3,r4
   2d524:	49800015 	stw	r6,0(r9)
   2d528:	41800015 	stw	r6,0(r8)
   2d52c:	59800015 	stw	r6,0(r11)
   2d530:	51800015 	stw	r6,0(r10)
   2d534:	42000404 	addi	r8,r8,16
   2d538:	4a400404 	addi	r9,r9,16
   2d53c:	5ac00404 	addi	r11,r11,16
   2d540:	52800404 	addi	r10,r10,16
   2d544:	413ff71e 	bne	r8,r4,2d524 <__alt_mem_SDRAM_controller+0xfc02d524>
   2d548:	63000044 	addi	r12,r12,1
   2d54c:	6018913a 	slli	r12,r12,4
   2d550:	39c003cc 	andi	r7,r7,15
   2d554:	010000c4 	movi	r4,3
   2d558:	1b07883a 	add	r3,r3,r12
   2d55c:	21c00e2e 	bgeu	r4,r7,2d598 <memset+0x100>
   2d560:	1813883a 	mov	r9,r3
   2d564:	3811883a 	mov	r8,r7
   2d568:	010000c4 	movi	r4,3
   2d56c:	49800015 	stw	r6,0(r9)
   2d570:	423fff04 	addi	r8,r8,-4
   2d574:	4a400104 	addi	r9,r9,4
   2d578:	223ffc36 	bltu	r4,r8,2d56c <__alt_mem_SDRAM_controller+0xfc02d56c>
   2d57c:	393fff04 	addi	r4,r7,-4
   2d580:	2008d0ba 	srli	r4,r4,2
   2d584:	39c000cc 	andi	r7,r7,3
   2d588:	21000044 	addi	r4,r4,1
   2d58c:	2109883a 	add	r4,r4,r4
   2d590:	2109883a 	add	r4,r4,r4
   2d594:	1907883a 	add	r3,r3,r4
   2d598:	38000526 	beq	r7,zero,2d5b0 <memset+0x118>
   2d59c:	19cf883a 	add	r7,r3,r7
   2d5a0:	19400005 	stb	r5,0(r3)
   2d5a4:	18c00044 	addi	r3,r3,1
   2d5a8:	38fffd1e 	bne	r7,r3,2d5a0 <__alt_mem_SDRAM_controller+0xfc02d5a0>
   2d5ac:	f800283a 	ret
   2d5b0:	f800283a 	ret
   2d5b4:	2007883a 	mov	r3,r4
   2d5b8:	300f883a 	mov	r7,r6
   2d5bc:	003fc706 	br	2d4dc <__alt_mem_SDRAM_controller+0xfc02d4dc>

0002d5c0 <_Balloc>:
   2d5c0:	20801317 	ldw	r2,76(r4)
   2d5c4:	defffc04 	addi	sp,sp,-16
   2d5c8:	dc400115 	stw	r17,4(sp)
   2d5cc:	dc000015 	stw	r16,0(sp)
   2d5d0:	dfc00315 	stw	ra,12(sp)
   2d5d4:	dc800215 	stw	r18,8(sp)
   2d5d8:	2023883a 	mov	r17,r4
   2d5dc:	2821883a 	mov	r16,r5
   2d5e0:	10000f26 	beq	r2,zero,2d620 <_Balloc+0x60>
   2d5e4:	8407883a 	add	r3,r16,r16
   2d5e8:	18c7883a 	add	r3,r3,r3
   2d5ec:	10c7883a 	add	r3,r2,r3
   2d5f0:	18800017 	ldw	r2,0(r3)
   2d5f4:	10001126 	beq	r2,zero,2d63c <_Balloc+0x7c>
   2d5f8:	11000017 	ldw	r4,0(r2)
   2d5fc:	19000015 	stw	r4,0(r3)
   2d600:	10000415 	stw	zero,16(r2)
   2d604:	10000315 	stw	zero,12(r2)
   2d608:	dfc00317 	ldw	ra,12(sp)
   2d60c:	dc800217 	ldw	r18,8(sp)
   2d610:	dc400117 	ldw	r17,4(sp)
   2d614:	dc000017 	ldw	r16,0(sp)
   2d618:	dec00404 	addi	sp,sp,16
   2d61c:	f800283a 	ret
   2d620:	01800844 	movi	r6,33
   2d624:	01400104 	movi	r5,4
   2d628:	00304880 	call	30488 <_calloc_r>
   2d62c:	88801315 	stw	r2,76(r17)
   2d630:	103fec1e 	bne	r2,zero,2d5e4 <__alt_mem_SDRAM_controller+0xfc02d5e4>
   2d634:	0005883a 	mov	r2,zero
   2d638:	003ff306 	br	2d608 <__alt_mem_SDRAM_controller+0xfc02d608>
   2d63c:	01400044 	movi	r5,1
   2d640:	2c24983a 	sll	r18,r5,r16
   2d644:	8809883a 	mov	r4,r17
   2d648:	91800144 	addi	r6,r18,5
   2d64c:	318d883a 	add	r6,r6,r6
   2d650:	318d883a 	add	r6,r6,r6
   2d654:	00304880 	call	30488 <_calloc_r>
   2d658:	103ff626 	beq	r2,zero,2d634 <__alt_mem_SDRAM_controller+0xfc02d634>
   2d65c:	14000115 	stw	r16,4(r2)
   2d660:	14800215 	stw	r18,8(r2)
   2d664:	003fe606 	br	2d600 <__alt_mem_SDRAM_controller+0xfc02d600>

0002d668 <_Bfree>:
   2d668:	28000826 	beq	r5,zero,2d68c <_Bfree+0x24>
   2d66c:	28c00117 	ldw	r3,4(r5)
   2d670:	20801317 	ldw	r2,76(r4)
   2d674:	18c7883a 	add	r3,r3,r3
   2d678:	18c7883a 	add	r3,r3,r3
   2d67c:	10c5883a 	add	r2,r2,r3
   2d680:	10c00017 	ldw	r3,0(r2)
   2d684:	28c00015 	stw	r3,0(r5)
   2d688:	11400015 	stw	r5,0(r2)
   2d68c:	f800283a 	ret

0002d690 <__multadd>:
   2d690:	defffa04 	addi	sp,sp,-24
   2d694:	dc800315 	stw	r18,12(sp)
   2d698:	dc400215 	stw	r17,8(sp)
   2d69c:	dc000115 	stw	r16,4(sp)
   2d6a0:	2823883a 	mov	r17,r5
   2d6a4:	2c000417 	ldw	r16,16(r5)
   2d6a8:	dfc00515 	stw	ra,20(sp)
   2d6ac:	dcc00415 	stw	r19,16(sp)
   2d6b0:	2025883a 	mov	r18,r4
   2d6b4:	29400504 	addi	r5,r5,20
   2d6b8:	0011883a 	mov	r8,zero
   2d6bc:	28c00017 	ldw	r3,0(r5)
   2d6c0:	29400104 	addi	r5,r5,4
   2d6c4:	42000044 	addi	r8,r8,1
   2d6c8:	18bfffcc 	andi	r2,r3,65535
   2d6cc:	1185383a 	mul	r2,r2,r6
   2d6d0:	1806d43a 	srli	r3,r3,16
   2d6d4:	11cf883a 	add	r7,r2,r7
   2d6d8:	3808d43a 	srli	r4,r7,16
   2d6dc:	1987383a 	mul	r3,r3,r6
   2d6e0:	38bfffcc 	andi	r2,r7,65535
   2d6e4:	1907883a 	add	r3,r3,r4
   2d6e8:	1808943a 	slli	r4,r3,16
   2d6ec:	180ed43a 	srli	r7,r3,16
   2d6f0:	2085883a 	add	r2,r4,r2
   2d6f4:	28bfff15 	stw	r2,-4(r5)
   2d6f8:	443ff016 	blt	r8,r16,2d6bc <__alt_mem_SDRAM_controller+0xfc02d6bc>
   2d6fc:	38000926 	beq	r7,zero,2d724 <__multadd+0x94>
   2d700:	88800217 	ldw	r2,8(r17)
   2d704:	80800f0e 	bge	r16,r2,2d744 <__multadd+0xb4>
   2d708:	80800144 	addi	r2,r16,5
   2d70c:	1085883a 	add	r2,r2,r2
   2d710:	1085883a 	add	r2,r2,r2
   2d714:	8885883a 	add	r2,r17,r2
   2d718:	11c00015 	stw	r7,0(r2)
   2d71c:	84000044 	addi	r16,r16,1
   2d720:	8c000415 	stw	r16,16(r17)
   2d724:	8805883a 	mov	r2,r17
   2d728:	dfc00517 	ldw	ra,20(sp)
   2d72c:	dcc00417 	ldw	r19,16(sp)
   2d730:	dc800317 	ldw	r18,12(sp)
   2d734:	dc400217 	ldw	r17,8(sp)
   2d738:	dc000117 	ldw	r16,4(sp)
   2d73c:	dec00604 	addi	sp,sp,24
   2d740:	f800283a 	ret
   2d744:	89400117 	ldw	r5,4(r17)
   2d748:	9009883a 	mov	r4,r18
   2d74c:	d9c00015 	stw	r7,0(sp)
   2d750:	29400044 	addi	r5,r5,1
   2d754:	002d5c00 	call	2d5c0 <_Balloc>
   2d758:	89800417 	ldw	r6,16(r17)
   2d75c:	89400304 	addi	r5,r17,12
   2d760:	11000304 	addi	r4,r2,12
   2d764:	31800084 	addi	r6,r6,2
   2d768:	318d883a 	add	r6,r6,r6
   2d76c:	318d883a 	add	r6,r6,r6
   2d770:	1027883a 	mov	r19,r2
   2d774:	002d1f40 	call	2d1f4 <memcpy>
   2d778:	d9c00017 	ldw	r7,0(sp)
   2d77c:	88000a26 	beq	r17,zero,2d7a8 <__multadd+0x118>
   2d780:	88c00117 	ldw	r3,4(r17)
   2d784:	90801317 	ldw	r2,76(r18)
   2d788:	18c7883a 	add	r3,r3,r3
   2d78c:	18c7883a 	add	r3,r3,r3
   2d790:	10c5883a 	add	r2,r2,r3
   2d794:	10c00017 	ldw	r3,0(r2)
   2d798:	88c00015 	stw	r3,0(r17)
   2d79c:	14400015 	stw	r17,0(r2)
   2d7a0:	9823883a 	mov	r17,r19
   2d7a4:	003fd806 	br	2d708 <__alt_mem_SDRAM_controller+0xfc02d708>
   2d7a8:	9823883a 	mov	r17,r19
   2d7ac:	003fd606 	br	2d708 <__alt_mem_SDRAM_controller+0xfc02d708>

0002d7b0 <__s2b>:
   2d7b0:	defff904 	addi	sp,sp,-28
   2d7b4:	dc400115 	stw	r17,4(sp)
   2d7b8:	dc000015 	stw	r16,0(sp)
   2d7bc:	2023883a 	mov	r17,r4
   2d7c0:	2821883a 	mov	r16,r5
   2d7c4:	39000204 	addi	r4,r7,8
   2d7c8:	01400244 	movi	r5,9
   2d7cc:	dcc00315 	stw	r19,12(sp)
   2d7d0:	dc800215 	stw	r18,8(sp)
   2d7d4:	dfc00615 	stw	ra,24(sp)
   2d7d8:	dd400515 	stw	r21,20(sp)
   2d7dc:	dd000415 	stw	r20,16(sp)
   2d7e0:	3825883a 	mov	r18,r7
   2d7e4:	3027883a 	mov	r19,r6
   2d7e8:	00237ec0 	call	237ec <__divsi3>
   2d7ec:	00c00044 	movi	r3,1
   2d7f0:	000b883a 	mov	r5,zero
   2d7f4:	1880030e 	bge	r3,r2,2d804 <__s2b+0x54>
   2d7f8:	18c7883a 	add	r3,r3,r3
   2d7fc:	29400044 	addi	r5,r5,1
   2d800:	18bffd16 	blt	r3,r2,2d7f8 <__alt_mem_SDRAM_controller+0xfc02d7f8>
   2d804:	8809883a 	mov	r4,r17
   2d808:	002d5c00 	call	2d5c0 <_Balloc>
   2d80c:	d8c00717 	ldw	r3,28(sp)
   2d810:	10c00515 	stw	r3,20(r2)
   2d814:	00c00044 	movi	r3,1
   2d818:	10c00415 	stw	r3,16(r2)
   2d81c:	00c00244 	movi	r3,9
   2d820:	1cc0210e 	bge	r3,r19,2d8a8 <__s2b+0xf8>
   2d824:	80eb883a 	add	r21,r16,r3
   2d828:	a829883a 	mov	r20,r21
   2d82c:	84e1883a 	add	r16,r16,r19
   2d830:	a1c00007 	ldb	r7,0(r20)
   2d834:	01800284 	movi	r6,10
   2d838:	a5000044 	addi	r20,r20,1
   2d83c:	100b883a 	mov	r5,r2
   2d840:	39fff404 	addi	r7,r7,-48
   2d844:	8809883a 	mov	r4,r17
   2d848:	002d6900 	call	2d690 <__multadd>
   2d84c:	a43ff81e 	bne	r20,r16,2d830 <__alt_mem_SDRAM_controller+0xfc02d830>
   2d850:	ace1883a 	add	r16,r21,r19
   2d854:	843ffe04 	addi	r16,r16,-8
   2d858:	9c800a0e 	bge	r19,r18,2d884 <__s2b+0xd4>
   2d85c:	94e5c83a 	sub	r18,r18,r19
   2d860:	84a5883a 	add	r18,r16,r18
   2d864:	81c00007 	ldb	r7,0(r16)
   2d868:	01800284 	movi	r6,10
   2d86c:	84000044 	addi	r16,r16,1
   2d870:	100b883a 	mov	r5,r2
   2d874:	39fff404 	addi	r7,r7,-48
   2d878:	8809883a 	mov	r4,r17
   2d87c:	002d6900 	call	2d690 <__multadd>
   2d880:	84bff81e 	bne	r16,r18,2d864 <__alt_mem_SDRAM_controller+0xfc02d864>
   2d884:	dfc00617 	ldw	ra,24(sp)
   2d888:	dd400517 	ldw	r21,20(sp)
   2d88c:	dd000417 	ldw	r20,16(sp)
   2d890:	dcc00317 	ldw	r19,12(sp)
   2d894:	dc800217 	ldw	r18,8(sp)
   2d898:	dc400117 	ldw	r17,4(sp)
   2d89c:	dc000017 	ldw	r16,0(sp)
   2d8a0:	dec00704 	addi	sp,sp,28
   2d8a4:	f800283a 	ret
   2d8a8:	84000284 	addi	r16,r16,10
   2d8ac:	1827883a 	mov	r19,r3
   2d8b0:	003fe906 	br	2d858 <__alt_mem_SDRAM_controller+0xfc02d858>

0002d8b4 <__hi0bits>:
   2d8b4:	20bfffec 	andhi	r2,r4,65535
   2d8b8:	1000141e 	bne	r2,zero,2d90c <__hi0bits+0x58>
   2d8bc:	2008943a 	slli	r4,r4,16
   2d8c0:	00800404 	movi	r2,16
   2d8c4:	20ffc02c 	andhi	r3,r4,65280
   2d8c8:	1800021e 	bne	r3,zero,2d8d4 <__hi0bits+0x20>
   2d8cc:	2008923a 	slli	r4,r4,8
   2d8d0:	10800204 	addi	r2,r2,8
   2d8d4:	20fc002c 	andhi	r3,r4,61440
   2d8d8:	1800021e 	bne	r3,zero,2d8e4 <__hi0bits+0x30>
   2d8dc:	2008913a 	slli	r4,r4,4
   2d8e0:	10800104 	addi	r2,r2,4
   2d8e4:	20f0002c 	andhi	r3,r4,49152
   2d8e8:	1800031e 	bne	r3,zero,2d8f8 <__hi0bits+0x44>
   2d8ec:	2109883a 	add	r4,r4,r4
   2d8f0:	10800084 	addi	r2,r2,2
   2d8f4:	2109883a 	add	r4,r4,r4
   2d8f8:	20000316 	blt	r4,zero,2d908 <__hi0bits+0x54>
   2d8fc:	2110002c 	andhi	r4,r4,16384
   2d900:	2000041e 	bne	r4,zero,2d914 <__hi0bits+0x60>
   2d904:	00800804 	movi	r2,32
   2d908:	f800283a 	ret
   2d90c:	0005883a 	mov	r2,zero
   2d910:	003fec06 	br	2d8c4 <__alt_mem_SDRAM_controller+0xfc02d8c4>
   2d914:	10800044 	addi	r2,r2,1
   2d918:	f800283a 	ret

0002d91c <__lo0bits>:
   2d91c:	20c00017 	ldw	r3,0(r4)
   2d920:	188001cc 	andi	r2,r3,7
   2d924:	10000826 	beq	r2,zero,2d948 <__lo0bits+0x2c>
   2d928:	1880004c 	andi	r2,r3,1
   2d92c:	1000211e 	bne	r2,zero,2d9b4 <__lo0bits+0x98>
   2d930:	1880008c 	andi	r2,r3,2
   2d934:	1000211e 	bne	r2,zero,2d9bc <__lo0bits+0xa0>
   2d938:	1806d0ba 	srli	r3,r3,2
   2d93c:	00800084 	movi	r2,2
   2d940:	20c00015 	stw	r3,0(r4)
   2d944:	f800283a 	ret
   2d948:	18bfffcc 	andi	r2,r3,65535
   2d94c:	10001326 	beq	r2,zero,2d99c <__lo0bits+0x80>
   2d950:	0005883a 	mov	r2,zero
   2d954:	19403fcc 	andi	r5,r3,255
   2d958:	2800021e 	bne	r5,zero,2d964 <__lo0bits+0x48>
   2d95c:	1806d23a 	srli	r3,r3,8
   2d960:	10800204 	addi	r2,r2,8
   2d964:	194003cc 	andi	r5,r3,15
   2d968:	2800021e 	bne	r5,zero,2d974 <__lo0bits+0x58>
   2d96c:	1806d13a 	srli	r3,r3,4
   2d970:	10800104 	addi	r2,r2,4
   2d974:	194000cc 	andi	r5,r3,3
   2d978:	2800021e 	bne	r5,zero,2d984 <__lo0bits+0x68>
   2d97c:	1806d0ba 	srli	r3,r3,2
   2d980:	10800084 	addi	r2,r2,2
   2d984:	1940004c 	andi	r5,r3,1
   2d988:	2800081e 	bne	r5,zero,2d9ac <__lo0bits+0x90>
   2d98c:	1806d07a 	srli	r3,r3,1
   2d990:	1800051e 	bne	r3,zero,2d9a8 <__lo0bits+0x8c>
   2d994:	00800804 	movi	r2,32
   2d998:	f800283a 	ret
   2d99c:	1806d43a 	srli	r3,r3,16
   2d9a0:	00800404 	movi	r2,16
   2d9a4:	003feb06 	br	2d954 <__alt_mem_SDRAM_controller+0xfc02d954>
   2d9a8:	10800044 	addi	r2,r2,1
   2d9ac:	20c00015 	stw	r3,0(r4)
   2d9b0:	f800283a 	ret
   2d9b4:	0005883a 	mov	r2,zero
   2d9b8:	f800283a 	ret
   2d9bc:	1806d07a 	srli	r3,r3,1
   2d9c0:	00800044 	movi	r2,1
   2d9c4:	20c00015 	stw	r3,0(r4)
   2d9c8:	f800283a 	ret

0002d9cc <__i2b>:
   2d9cc:	defffd04 	addi	sp,sp,-12
   2d9d0:	dc000015 	stw	r16,0(sp)
   2d9d4:	04000044 	movi	r16,1
   2d9d8:	dc400115 	stw	r17,4(sp)
   2d9dc:	2823883a 	mov	r17,r5
   2d9e0:	800b883a 	mov	r5,r16
   2d9e4:	dfc00215 	stw	ra,8(sp)
   2d9e8:	002d5c00 	call	2d5c0 <_Balloc>
   2d9ec:	14400515 	stw	r17,20(r2)
   2d9f0:	14000415 	stw	r16,16(r2)
   2d9f4:	dfc00217 	ldw	ra,8(sp)
   2d9f8:	dc400117 	ldw	r17,4(sp)
   2d9fc:	dc000017 	ldw	r16,0(sp)
   2da00:	dec00304 	addi	sp,sp,12
   2da04:	f800283a 	ret

0002da08 <__multiply>:
   2da08:	defffa04 	addi	sp,sp,-24
   2da0c:	dcc00315 	stw	r19,12(sp)
   2da10:	dc800215 	stw	r18,8(sp)
   2da14:	34c00417 	ldw	r19,16(r6)
   2da18:	2c800417 	ldw	r18,16(r5)
   2da1c:	dd000415 	stw	r20,16(sp)
   2da20:	dc400115 	stw	r17,4(sp)
   2da24:	dfc00515 	stw	ra,20(sp)
   2da28:	dc000015 	stw	r16,0(sp)
   2da2c:	2829883a 	mov	r20,r5
   2da30:	3023883a 	mov	r17,r6
   2da34:	94c0050e 	bge	r18,r19,2da4c <__multiply+0x44>
   2da38:	9007883a 	mov	r3,r18
   2da3c:	3029883a 	mov	r20,r6
   2da40:	9825883a 	mov	r18,r19
   2da44:	2823883a 	mov	r17,r5
   2da48:	1827883a 	mov	r19,r3
   2da4c:	a0800217 	ldw	r2,8(r20)
   2da50:	94e1883a 	add	r16,r18,r19
   2da54:	a1400117 	ldw	r5,4(r20)
   2da58:	1400010e 	bge	r2,r16,2da60 <__multiply+0x58>
   2da5c:	29400044 	addi	r5,r5,1
   2da60:	002d5c00 	call	2d5c0 <_Balloc>
   2da64:	8415883a 	add	r10,r16,r16
   2da68:	12c00504 	addi	r11,r2,20
   2da6c:	5295883a 	add	r10,r10,r10
   2da70:	5a95883a 	add	r10,r11,r10
   2da74:	5807883a 	mov	r3,r11
   2da78:	5a80032e 	bgeu	r11,r10,2da88 <__multiply+0x80>
   2da7c:	18000015 	stw	zero,0(r3)
   2da80:	18c00104 	addi	r3,r3,4
   2da84:	1abffd36 	bltu	r3,r10,2da7c <__alt_mem_SDRAM_controller+0xfc02da7c>
   2da88:	9ce7883a 	add	r19,r19,r19
   2da8c:	94a5883a 	add	r18,r18,r18
   2da90:	89800504 	addi	r6,r17,20
   2da94:	9ce7883a 	add	r19,r19,r19
   2da98:	a3400504 	addi	r13,r20,20
   2da9c:	94a5883a 	add	r18,r18,r18
   2daa0:	34d9883a 	add	r12,r6,r19
   2daa4:	6c93883a 	add	r9,r13,r18
   2daa8:	3300422e 	bgeu	r6,r12,2dbb4 <__multiply+0x1ac>
   2daac:	37c00017 	ldw	ra,0(r6)
   2dab0:	fbffffcc 	andi	r15,ra,65535
   2dab4:	78001b26 	beq	r15,zero,2db24 <__multiply+0x11c>
   2dab8:	5811883a 	mov	r8,r11
   2dabc:	681d883a 	mov	r14,r13
   2dac0:	000f883a 	mov	r7,zero
   2dac4:	71000017 	ldw	r4,0(r14)
   2dac8:	40c00017 	ldw	r3,0(r8)
   2dacc:	73800104 	addi	r14,r14,4
   2dad0:	217fffcc 	andi	r5,r4,65535
   2dad4:	2bcb383a 	mul	r5,r5,r15
   2dad8:	2008d43a 	srli	r4,r4,16
   2dadc:	1c7fffcc 	andi	r17,r3,65535
   2dae0:	2c4b883a 	add	r5,r5,r17
   2dae4:	29cb883a 	add	r5,r5,r7
   2dae8:	23c9383a 	mul	r4,r4,r15
   2daec:	1806d43a 	srli	r3,r3,16
   2daf0:	280ed43a 	srli	r7,r5,16
   2daf4:	297fffcc 	andi	r5,r5,65535
   2daf8:	20c7883a 	add	r3,r4,r3
   2dafc:	19c7883a 	add	r3,r3,r7
   2db00:	1808943a 	slli	r4,r3,16
   2db04:	4023883a 	mov	r17,r8
   2db08:	180ed43a 	srli	r7,r3,16
   2db0c:	214ab03a 	or	r5,r4,r5
   2db10:	41400015 	stw	r5,0(r8)
   2db14:	42000104 	addi	r8,r8,4
   2db18:	727fea36 	bltu	r14,r9,2dac4 <__alt_mem_SDRAM_controller+0xfc02dac4>
   2db1c:	89c00115 	stw	r7,4(r17)
   2db20:	37c00017 	ldw	ra,0(r6)
   2db24:	f83ed43a 	srli	ra,ra,16
   2db28:	f8001f26 	beq	ra,zero,2dba8 <__multiply+0x1a0>
   2db2c:	58c00017 	ldw	r3,0(r11)
   2db30:	681d883a 	mov	r14,r13
   2db34:	581f883a 	mov	r15,r11
   2db38:	1811883a 	mov	r8,r3
   2db3c:	5825883a 	mov	r18,r11
   2db40:	000f883a 	mov	r7,zero
   2db44:	00000106 	br	2db4c <__multiply+0x144>
   2db48:	8825883a 	mov	r18,r17
   2db4c:	7140000b 	ldhu	r5,0(r14)
   2db50:	4010d43a 	srli	r8,r8,16
   2db54:	193fffcc 	andi	r4,r3,65535
   2db58:	2fcb383a 	mul	r5,r5,ra
   2db5c:	7bc00104 	addi	r15,r15,4
   2db60:	73800104 	addi	r14,r14,4
   2db64:	2a0b883a 	add	r5,r5,r8
   2db68:	29cb883a 	add	r5,r5,r7
   2db6c:	2806943a 	slli	r3,r5,16
   2db70:	94400104 	addi	r17,r18,4
   2db74:	280ad43a 	srli	r5,r5,16
   2db78:	1908b03a 	or	r4,r3,r4
   2db7c:	793fff15 	stw	r4,-4(r15)
   2db80:	70ffff17 	ldw	r3,-4(r14)
   2db84:	8a000017 	ldw	r8,0(r17)
   2db88:	1806d43a 	srli	r3,r3,16
   2db8c:	413fffcc 	andi	r4,r8,65535
   2db90:	1fc7383a 	mul	r3,r3,ra
   2db94:	1907883a 	add	r3,r3,r4
   2db98:	1947883a 	add	r3,r3,r5
   2db9c:	180ed43a 	srli	r7,r3,16
   2dba0:	727fe936 	bltu	r14,r9,2db48 <__alt_mem_SDRAM_controller+0xfc02db48>
   2dba4:	90c00115 	stw	r3,4(r18)
   2dba8:	31800104 	addi	r6,r6,4
   2dbac:	5ac00104 	addi	r11,r11,4
   2dbb0:	333fbe36 	bltu	r6,r12,2daac <__alt_mem_SDRAM_controller+0xfc02daac>
   2dbb4:	0400090e 	bge	zero,r16,2dbdc <__multiply+0x1d4>
   2dbb8:	50ffff17 	ldw	r3,-4(r10)
   2dbbc:	52bfff04 	addi	r10,r10,-4
   2dbc0:	18000326 	beq	r3,zero,2dbd0 <__multiply+0x1c8>
   2dbc4:	00000506 	br	2dbdc <__multiply+0x1d4>
   2dbc8:	50c00017 	ldw	r3,0(r10)
   2dbcc:	1800031e 	bne	r3,zero,2dbdc <__multiply+0x1d4>
   2dbd0:	843fffc4 	addi	r16,r16,-1
   2dbd4:	52bfff04 	addi	r10,r10,-4
   2dbd8:	803ffb1e 	bne	r16,zero,2dbc8 <__alt_mem_SDRAM_controller+0xfc02dbc8>
   2dbdc:	14000415 	stw	r16,16(r2)
   2dbe0:	dfc00517 	ldw	ra,20(sp)
   2dbe4:	dd000417 	ldw	r20,16(sp)
   2dbe8:	dcc00317 	ldw	r19,12(sp)
   2dbec:	dc800217 	ldw	r18,8(sp)
   2dbf0:	dc400117 	ldw	r17,4(sp)
   2dbf4:	dc000017 	ldw	r16,0(sp)
   2dbf8:	dec00604 	addi	sp,sp,24
   2dbfc:	f800283a 	ret

0002dc00 <__pow5mult>:
   2dc00:	defffa04 	addi	sp,sp,-24
   2dc04:	dcc00315 	stw	r19,12(sp)
   2dc08:	dc000015 	stw	r16,0(sp)
   2dc0c:	dfc00515 	stw	ra,20(sp)
   2dc10:	dd000415 	stw	r20,16(sp)
   2dc14:	dc800215 	stw	r18,8(sp)
   2dc18:	dc400115 	stw	r17,4(sp)
   2dc1c:	308000cc 	andi	r2,r6,3
   2dc20:	3021883a 	mov	r16,r6
   2dc24:	2027883a 	mov	r19,r4
   2dc28:	10002f1e 	bne	r2,zero,2dce8 <__pow5mult+0xe8>
   2dc2c:	2825883a 	mov	r18,r5
   2dc30:	8021d0ba 	srai	r16,r16,2
   2dc34:	80001a26 	beq	r16,zero,2dca0 <__pow5mult+0xa0>
   2dc38:	9c401217 	ldw	r17,72(r19)
   2dc3c:	8800061e 	bne	r17,zero,2dc58 <__pow5mult+0x58>
   2dc40:	00003406 	br	2dd14 <__pow5mult+0x114>
   2dc44:	8021d07a 	srai	r16,r16,1
   2dc48:	80001526 	beq	r16,zero,2dca0 <__pow5mult+0xa0>
   2dc4c:	88800017 	ldw	r2,0(r17)
   2dc50:	10001c26 	beq	r2,zero,2dcc4 <__pow5mult+0xc4>
   2dc54:	1023883a 	mov	r17,r2
   2dc58:	8080004c 	andi	r2,r16,1
   2dc5c:	103ff926 	beq	r2,zero,2dc44 <__alt_mem_SDRAM_controller+0xfc02dc44>
   2dc60:	880d883a 	mov	r6,r17
   2dc64:	900b883a 	mov	r5,r18
   2dc68:	9809883a 	mov	r4,r19
   2dc6c:	002da080 	call	2da08 <__multiply>
   2dc70:	90001b26 	beq	r18,zero,2dce0 <__pow5mult+0xe0>
   2dc74:	91000117 	ldw	r4,4(r18)
   2dc78:	98c01317 	ldw	r3,76(r19)
   2dc7c:	8021d07a 	srai	r16,r16,1
   2dc80:	2109883a 	add	r4,r4,r4
   2dc84:	2109883a 	add	r4,r4,r4
   2dc88:	1907883a 	add	r3,r3,r4
   2dc8c:	19000017 	ldw	r4,0(r3)
   2dc90:	91000015 	stw	r4,0(r18)
   2dc94:	1c800015 	stw	r18,0(r3)
   2dc98:	1025883a 	mov	r18,r2
   2dc9c:	803feb1e 	bne	r16,zero,2dc4c <__alt_mem_SDRAM_controller+0xfc02dc4c>
   2dca0:	9005883a 	mov	r2,r18
   2dca4:	dfc00517 	ldw	ra,20(sp)
   2dca8:	dd000417 	ldw	r20,16(sp)
   2dcac:	dcc00317 	ldw	r19,12(sp)
   2dcb0:	dc800217 	ldw	r18,8(sp)
   2dcb4:	dc400117 	ldw	r17,4(sp)
   2dcb8:	dc000017 	ldw	r16,0(sp)
   2dcbc:	dec00604 	addi	sp,sp,24
   2dcc0:	f800283a 	ret
   2dcc4:	880d883a 	mov	r6,r17
   2dcc8:	880b883a 	mov	r5,r17
   2dccc:	9809883a 	mov	r4,r19
   2dcd0:	002da080 	call	2da08 <__multiply>
   2dcd4:	88800015 	stw	r2,0(r17)
   2dcd8:	10000015 	stw	zero,0(r2)
   2dcdc:	003fdd06 	br	2dc54 <__alt_mem_SDRAM_controller+0xfc02dc54>
   2dce0:	1025883a 	mov	r18,r2
   2dce4:	003fd706 	br	2dc44 <__alt_mem_SDRAM_controller+0xfc02dc44>
   2dce8:	10bfffc4 	addi	r2,r2,-1
   2dcec:	1085883a 	add	r2,r2,r2
   2dcf0:	00c000f4 	movhi	r3,3
   2dcf4:	18d8e304 	addi	r3,r3,25484
   2dcf8:	1085883a 	add	r2,r2,r2
   2dcfc:	1885883a 	add	r2,r3,r2
   2dd00:	11800017 	ldw	r6,0(r2)
   2dd04:	000f883a 	mov	r7,zero
   2dd08:	002d6900 	call	2d690 <__multadd>
   2dd0c:	1025883a 	mov	r18,r2
   2dd10:	003fc706 	br	2dc30 <__alt_mem_SDRAM_controller+0xfc02dc30>
   2dd14:	05000044 	movi	r20,1
   2dd18:	a00b883a 	mov	r5,r20
   2dd1c:	9809883a 	mov	r4,r19
   2dd20:	002d5c00 	call	2d5c0 <_Balloc>
   2dd24:	1023883a 	mov	r17,r2
   2dd28:	00809c44 	movi	r2,625
   2dd2c:	88800515 	stw	r2,20(r17)
   2dd30:	8d000415 	stw	r20,16(r17)
   2dd34:	9c401215 	stw	r17,72(r19)
   2dd38:	88000015 	stw	zero,0(r17)
   2dd3c:	003fc606 	br	2dc58 <__alt_mem_SDRAM_controller+0xfc02dc58>

0002dd40 <__lshift>:
   2dd40:	defff904 	addi	sp,sp,-28
   2dd44:	dd400515 	stw	r21,20(sp)
   2dd48:	dcc00315 	stw	r19,12(sp)
   2dd4c:	302bd17a 	srai	r21,r6,5
   2dd50:	2cc00417 	ldw	r19,16(r5)
   2dd54:	28800217 	ldw	r2,8(r5)
   2dd58:	dd000415 	stw	r20,16(sp)
   2dd5c:	ace7883a 	add	r19,r21,r19
   2dd60:	dc800215 	stw	r18,8(sp)
   2dd64:	dc400115 	stw	r17,4(sp)
   2dd68:	dc000015 	stw	r16,0(sp)
   2dd6c:	dfc00615 	stw	ra,24(sp)
   2dd70:	9c000044 	addi	r16,r19,1
   2dd74:	2823883a 	mov	r17,r5
   2dd78:	3029883a 	mov	r20,r6
   2dd7c:	2025883a 	mov	r18,r4
   2dd80:	29400117 	ldw	r5,4(r5)
   2dd84:	1400030e 	bge	r2,r16,2dd94 <__lshift+0x54>
   2dd88:	1085883a 	add	r2,r2,r2
   2dd8c:	29400044 	addi	r5,r5,1
   2dd90:	143ffd16 	blt	r2,r16,2dd88 <__alt_mem_SDRAM_controller+0xfc02dd88>
   2dd94:	9009883a 	mov	r4,r18
   2dd98:	002d5c00 	call	2d5c0 <_Balloc>
   2dd9c:	10c00504 	addi	r3,r2,20
   2dda0:	0540070e 	bge	zero,r21,2ddc0 <__lshift+0x80>
   2dda4:	ad6b883a 	add	r21,r21,r21
   2dda8:	ad6b883a 	add	r21,r21,r21
   2ddac:	1809883a 	mov	r4,r3
   2ddb0:	1d47883a 	add	r3,r3,r21
   2ddb4:	20000015 	stw	zero,0(r4)
   2ddb8:	21000104 	addi	r4,r4,4
   2ddbc:	193ffd1e 	bne	r3,r4,2ddb4 <__alt_mem_SDRAM_controller+0xfc02ddb4>
   2ddc0:	8a000417 	ldw	r8,16(r17)
   2ddc4:	89000504 	addi	r4,r17,20
   2ddc8:	a18007cc 	andi	r6,r20,31
   2ddcc:	4211883a 	add	r8,r8,r8
   2ddd0:	4211883a 	add	r8,r8,r8
   2ddd4:	2211883a 	add	r8,r4,r8
   2ddd8:	30002326 	beq	r6,zero,2de68 <__lshift+0x128>
   2dddc:	02400804 	movi	r9,32
   2dde0:	4993c83a 	sub	r9,r9,r6
   2dde4:	000b883a 	mov	r5,zero
   2dde8:	21c00017 	ldw	r7,0(r4)
   2ddec:	1815883a 	mov	r10,r3
   2ddf0:	18c00104 	addi	r3,r3,4
   2ddf4:	398e983a 	sll	r7,r7,r6
   2ddf8:	21000104 	addi	r4,r4,4
   2ddfc:	394ab03a 	or	r5,r7,r5
   2de00:	197fff15 	stw	r5,-4(r3)
   2de04:	217fff17 	ldw	r5,-4(r4)
   2de08:	2a4ad83a 	srl	r5,r5,r9
   2de0c:	223ff636 	bltu	r4,r8,2dde8 <__alt_mem_SDRAM_controller+0xfc02dde8>
   2de10:	51400115 	stw	r5,4(r10)
   2de14:	28001a1e 	bne	r5,zero,2de80 <__lshift+0x140>
   2de18:	843fffc4 	addi	r16,r16,-1
   2de1c:	14000415 	stw	r16,16(r2)
   2de20:	88000826 	beq	r17,zero,2de44 <__lshift+0x104>
   2de24:	89000117 	ldw	r4,4(r17)
   2de28:	90c01317 	ldw	r3,76(r18)
   2de2c:	2109883a 	add	r4,r4,r4
   2de30:	2109883a 	add	r4,r4,r4
   2de34:	1907883a 	add	r3,r3,r4
   2de38:	19000017 	ldw	r4,0(r3)
   2de3c:	89000015 	stw	r4,0(r17)
   2de40:	1c400015 	stw	r17,0(r3)
   2de44:	dfc00617 	ldw	ra,24(sp)
   2de48:	dd400517 	ldw	r21,20(sp)
   2de4c:	dd000417 	ldw	r20,16(sp)
   2de50:	dcc00317 	ldw	r19,12(sp)
   2de54:	dc800217 	ldw	r18,8(sp)
   2de58:	dc400117 	ldw	r17,4(sp)
   2de5c:	dc000017 	ldw	r16,0(sp)
   2de60:	dec00704 	addi	sp,sp,28
   2de64:	f800283a 	ret
   2de68:	21400017 	ldw	r5,0(r4)
   2de6c:	18c00104 	addi	r3,r3,4
   2de70:	21000104 	addi	r4,r4,4
   2de74:	197fff15 	stw	r5,-4(r3)
   2de78:	223ffb36 	bltu	r4,r8,2de68 <__alt_mem_SDRAM_controller+0xfc02de68>
   2de7c:	003fe606 	br	2de18 <__alt_mem_SDRAM_controller+0xfc02de18>
   2de80:	9c000084 	addi	r16,r19,2
   2de84:	003fe406 	br	2de18 <__alt_mem_SDRAM_controller+0xfc02de18>

0002de88 <__mcmp>:
   2de88:	20800417 	ldw	r2,16(r4)
   2de8c:	28c00417 	ldw	r3,16(r5)
   2de90:	10c5c83a 	sub	r2,r2,r3
   2de94:	1000111e 	bne	r2,zero,2dedc <__mcmp+0x54>
   2de98:	18c7883a 	add	r3,r3,r3
   2de9c:	18c7883a 	add	r3,r3,r3
   2dea0:	21000504 	addi	r4,r4,20
   2dea4:	29400504 	addi	r5,r5,20
   2dea8:	20c5883a 	add	r2,r4,r3
   2deac:	28cb883a 	add	r5,r5,r3
   2deb0:	00000106 	br	2deb8 <__mcmp+0x30>
   2deb4:	20800a2e 	bgeu	r4,r2,2dee0 <__mcmp+0x58>
   2deb8:	10bfff04 	addi	r2,r2,-4
   2debc:	297fff04 	addi	r5,r5,-4
   2dec0:	11800017 	ldw	r6,0(r2)
   2dec4:	28c00017 	ldw	r3,0(r5)
   2dec8:	30fffa26 	beq	r6,r3,2deb4 <__alt_mem_SDRAM_controller+0xfc02deb4>
   2decc:	30c00236 	bltu	r6,r3,2ded8 <__mcmp+0x50>
   2ded0:	00800044 	movi	r2,1
   2ded4:	f800283a 	ret
   2ded8:	00bfffc4 	movi	r2,-1
   2dedc:	f800283a 	ret
   2dee0:	0005883a 	mov	r2,zero
   2dee4:	f800283a 	ret

0002dee8 <__mdiff>:
   2dee8:	28c00417 	ldw	r3,16(r5)
   2deec:	30800417 	ldw	r2,16(r6)
   2def0:	defffa04 	addi	sp,sp,-24
   2def4:	dcc00315 	stw	r19,12(sp)
   2def8:	dc800215 	stw	r18,8(sp)
   2defc:	dfc00515 	stw	ra,20(sp)
   2df00:	dd000415 	stw	r20,16(sp)
   2df04:	dc400115 	stw	r17,4(sp)
   2df08:	dc000015 	stw	r16,0(sp)
   2df0c:	1887c83a 	sub	r3,r3,r2
   2df10:	2825883a 	mov	r18,r5
   2df14:	3027883a 	mov	r19,r6
   2df18:	1800141e 	bne	r3,zero,2df6c <__mdiff+0x84>
   2df1c:	1085883a 	add	r2,r2,r2
   2df20:	1085883a 	add	r2,r2,r2
   2df24:	2a000504 	addi	r8,r5,20
   2df28:	34000504 	addi	r16,r6,20
   2df2c:	4087883a 	add	r3,r8,r2
   2df30:	8085883a 	add	r2,r16,r2
   2df34:	00000106 	br	2df3c <__mdiff+0x54>
   2df38:	40c0592e 	bgeu	r8,r3,2e0a0 <__mdiff+0x1b8>
   2df3c:	18ffff04 	addi	r3,r3,-4
   2df40:	10bfff04 	addi	r2,r2,-4
   2df44:	19c00017 	ldw	r7,0(r3)
   2df48:	11400017 	ldw	r5,0(r2)
   2df4c:	397ffa26 	beq	r7,r5,2df38 <__alt_mem_SDRAM_controller+0xfc02df38>
   2df50:	3940592e 	bgeu	r7,r5,2e0b8 <__mdiff+0x1d0>
   2df54:	9005883a 	mov	r2,r18
   2df58:	4023883a 	mov	r17,r8
   2df5c:	9825883a 	mov	r18,r19
   2df60:	05000044 	movi	r20,1
   2df64:	1027883a 	mov	r19,r2
   2df68:	00000406 	br	2df7c <__mdiff+0x94>
   2df6c:	18005616 	blt	r3,zero,2e0c8 <__mdiff+0x1e0>
   2df70:	34400504 	addi	r17,r6,20
   2df74:	2c000504 	addi	r16,r5,20
   2df78:	0029883a 	mov	r20,zero
   2df7c:	91400117 	ldw	r5,4(r18)
   2df80:	002d5c00 	call	2d5c0 <_Balloc>
   2df84:	92400417 	ldw	r9,16(r18)
   2df88:	9b000417 	ldw	r12,16(r19)
   2df8c:	12c00504 	addi	r11,r2,20
   2df90:	4a51883a 	add	r8,r9,r9
   2df94:	6319883a 	add	r12,r12,r12
   2df98:	4211883a 	add	r8,r8,r8
   2df9c:	6319883a 	add	r12,r12,r12
   2dfa0:	15000315 	stw	r20,12(r2)
   2dfa4:	8211883a 	add	r8,r16,r8
   2dfa8:	8b19883a 	add	r12,r17,r12
   2dfac:	0007883a 	mov	r3,zero
   2dfb0:	81400017 	ldw	r5,0(r16)
   2dfb4:	89c00017 	ldw	r7,0(r17)
   2dfb8:	59800104 	addi	r6,r11,4
   2dfbc:	293fffcc 	andi	r4,r5,65535
   2dfc0:	20c7883a 	add	r3,r4,r3
   2dfc4:	393fffcc 	andi	r4,r7,65535
   2dfc8:	1909c83a 	sub	r4,r3,r4
   2dfcc:	280ad43a 	srli	r5,r5,16
   2dfd0:	380ed43a 	srli	r7,r7,16
   2dfd4:	2007d43a 	srai	r3,r4,16
   2dfd8:	213fffcc 	andi	r4,r4,65535
   2dfdc:	29cbc83a 	sub	r5,r5,r7
   2dfe0:	28c7883a 	add	r3,r5,r3
   2dfe4:	180a943a 	slli	r5,r3,16
   2dfe8:	8c400104 	addi	r17,r17,4
   2dfec:	84000104 	addi	r16,r16,4
   2dff0:	2908b03a 	or	r4,r5,r4
   2dff4:	59000015 	stw	r4,0(r11)
   2dff8:	1807d43a 	srai	r3,r3,16
   2dffc:	3015883a 	mov	r10,r6
   2e000:	3017883a 	mov	r11,r6
   2e004:	8b3fea36 	bltu	r17,r12,2dfb0 <__alt_mem_SDRAM_controller+0xfc02dfb0>
   2e008:	8200162e 	bgeu	r16,r8,2e064 <__mdiff+0x17c>
   2e00c:	8017883a 	mov	r11,r16
   2e010:	59400017 	ldw	r5,0(r11)
   2e014:	31800104 	addi	r6,r6,4
   2e018:	5ac00104 	addi	r11,r11,4
   2e01c:	293fffcc 	andi	r4,r5,65535
   2e020:	20c7883a 	add	r3,r4,r3
   2e024:	280ed43a 	srli	r7,r5,16
   2e028:	180bd43a 	srai	r5,r3,16
   2e02c:	193fffcc 	andi	r4,r3,65535
   2e030:	3947883a 	add	r3,r7,r5
   2e034:	180a943a 	slli	r5,r3,16
   2e038:	1807d43a 	srai	r3,r3,16
   2e03c:	2908b03a 	or	r4,r5,r4
   2e040:	313fff15 	stw	r4,-4(r6)
   2e044:	5a3ff236 	bltu	r11,r8,2e010 <__alt_mem_SDRAM_controller+0xfc02e010>
   2e048:	0406303a 	nor	r3,zero,r16
   2e04c:	1a07883a 	add	r3,r3,r8
   2e050:	1806d0ba 	srli	r3,r3,2
   2e054:	18c00044 	addi	r3,r3,1
   2e058:	18c7883a 	add	r3,r3,r3
   2e05c:	18c7883a 	add	r3,r3,r3
   2e060:	50d5883a 	add	r10,r10,r3
   2e064:	50ffff04 	addi	r3,r10,-4
   2e068:	2000041e 	bne	r4,zero,2e07c <__mdiff+0x194>
   2e06c:	18ffff04 	addi	r3,r3,-4
   2e070:	19000017 	ldw	r4,0(r3)
   2e074:	4a7fffc4 	addi	r9,r9,-1
   2e078:	203ffc26 	beq	r4,zero,2e06c <__alt_mem_SDRAM_controller+0xfc02e06c>
   2e07c:	12400415 	stw	r9,16(r2)
   2e080:	dfc00517 	ldw	ra,20(sp)
   2e084:	dd000417 	ldw	r20,16(sp)
   2e088:	dcc00317 	ldw	r19,12(sp)
   2e08c:	dc800217 	ldw	r18,8(sp)
   2e090:	dc400117 	ldw	r17,4(sp)
   2e094:	dc000017 	ldw	r16,0(sp)
   2e098:	dec00604 	addi	sp,sp,24
   2e09c:	f800283a 	ret
   2e0a0:	000b883a 	mov	r5,zero
   2e0a4:	002d5c00 	call	2d5c0 <_Balloc>
   2e0a8:	00c00044 	movi	r3,1
   2e0ac:	10c00415 	stw	r3,16(r2)
   2e0b0:	10000515 	stw	zero,20(r2)
   2e0b4:	003ff206 	br	2e080 <__alt_mem_SDRAM_controller+0xfc02e080>
   2e0b8:	8023883a 	mov	r17,r16
   2e0bc:	0029883a 	mov	r20,zero
   2e0c0:	4021883a 	mov	r16,r8
   2e0c4:	003fad06 	br	2df7c <__alt_mem_SDRAM_controller+0xfc02df7c>
   2e0c8:	9005883a 	mov	r2,r18
   2e0cc:	94400504 	addi	r17,r18,20
   2e0d0:	9c000504 	addi	r16,r19,20
   2e0d4:	9825883a 	mov	r18,r19
   2e0d8:	05000044 	movi	r20,1
   2e0dc:	1027883a 	mov	r19,r2
   2e0e0:	003fa606 	br	2df7c <__alt_mem_SDRAM_controller+0xfc02df7c>

0002e0e4 <__ulp>:
   2e0e4:	295ffc2c 	andhi	r5,r5,32752
   2e0e8:	00bf3034 	movhi	r2,64704
   2e0ec:	2887883a 	add	r3,r5,r2
   2e0f0:	00c0020e 	bge	zero,r3,2e0fc <__ulp+0x18>
   2e0f4:	0005883a 	mov	r2,zero
   2e0f8:	f800283a 	ret
   2e0fc:	00c7c83a 	sub	r3,zero,r3
   2e100:	1807d53a 	srai	r3,r3,20
   2e104:	008004c4 	movi	r2,19
   2e108:	10c00b0e 	bge	r2,r3,2e138 <__ulp+0x54>
   2e10c:	18bffb04 	addi	r2,r3,-20
   2e110:	01000784 	movi	r4,30
   2e114:	0007883a 	mov	r3,zero
   2e118:	20800516 	blt	r4,r2,2e130 <__ulp+0x4c>
   2e11c:	010007c4 	movi	r4,31
   2e120:	2089c83a 	sub	r4,r4,r2
   2e124:	00800044 	movi	r2,1
   2e128:	1104983a 	sll	r2,r2,r4
   2e12c:	f800283a 	ret
   2e130:	00800044 	movi	r2,1
   2e134:	f800283a 	ret
   2e138:	01400234 	movhi	r5,8
   2e13c:	28c7d83a 	sra	r3,r5,r3
   2e140:	0005883a 	mov	r2,zero
   2e144:	f800283a 	ret

0002e148 <__b2d>:
   2e148:	defffa04 	addi	sp,sp,-24
   2e14c:	dc000015 	stw	r16,0(sp)
   2e150:	24000417 	ldw	r16,16(r4)
   2e154:	dc400115 	stw	r17,4(sp)
   2e158:	24400504 	addi	r17,r4,20
   2e15c:	8421883a 	add	r16,r16,r16
   2e160:	8421883a 	add	r16,r16,r16
   2e164:	8c21883a 	add	r16,r17,r16
   2e168:	dc800215 	stw	r18,8(sp)
   2e16c:	84bfff17 	ldw	r18,-4(r16)
   2e170:	dd000415 	stw	r20,16(sp)
   2e174:	dcc00315 	stw	r19,12(sp)
   2e178:	9009883a 	mov	r4,r18
   2e17c:	2829883a 	mov	r20,r5
   2e180:	dfc00515 	stw	ra,20(sp)
   2e184:	002d8b40 	call	2d8b4 <__hi0bits>
   2e188:	00c00804 	movi	r3,32
   2e18c:	1889c83a 	sub	r4,r3,r2
   2e190:	a1000015 	stw	r4,0(r20)
   2e194:	01000284 	movi	r4,10
   2e198:	84ffff04 	addi	r19,r16,-4
   2e19c:	20801216 	blt	r4,r2,2e1e8 <__b2d+0xa0>
   2e1a0:	018002c4 	movi	r6,11
   2e1a4:	308dc83a 	sub	r6,r6,r2
   2e1a8:	9186d83a 	srl	r3,r18,r6
   2e1ac:	18cffc34 	orhi	r3,r3,16368
   2e1b0:	8cc0212e 	bgeu	r17,r19,2e238 <__b2d+0xf0>
   2e1b4:	813ffe17 	ldw	r4,-8(r16)
   2e1b8:	218cd83a 	srl	r6,r4,r6
   2e1bc:	10800544 	addi	r2,r2,21
   2e1c0:	9084983a 	sll	r2,r18,r2
   2e1c4:	1184b03a 	or	r2,r2,r6
   2e1c8:	dfc00517 	ldw	ra,20(sp)
   2e1cc:	dd000417 	ldw	r20,16(sp)
   2e1d0:	dcc00317 	ldw	r19,12(sp)
   2e1d4:	dc800217 	ldw	r18,8(sp)
   2e1d8:	dc400117 	ldw	r17,4(sp)
   2e1dc:	dc000017 	ldw	r16,0(sp)
   2e1e0:	dec00604 	addi	sp,sp,24
   2e1e4:	f800283a 	ret
   2e1e8:	8cc00f2e 	bgeu	r17,r19,2e228 <__b2d+0xe0>
   2e1ec:	117ffd44 	addi	r5,r2,-11
   2e1f0:	80bffe17 	ldw	r2,-8(r16)
   2e1f4:	28000e26 	beq	r5,zero,2e230 <__b2d+0xe8>
   2e1f8:	1949c83a 	sub	r4,r3,r5
   2e1fc:	9164983a 	sll	r18,r18,r5
   2e200:	1106d83a 	srl	r3,r2,r4
   2e204:	81bffe04 	addi	r6,r16,-8
   2e208:	948ffc34 	orhi	r18,r18,16368
   2e20c:	90c6b03a 	or	r3,r18,r3
   2e210:	89800e2e 	bgeu	r17,r6,2e24c <__b2d+0x104>
   2e214:	81bffd17 	ldw	r6,-12(r16)
   2e218:	1144983a 	sll	r2,r2,r5
   2e21c:	310ad83a 	srl	r5,r6,r4
   2e220:	2884b03a 	or	r2,r5,r2
   2e224:	003fe806 	br	2e1c8 <__alt_mem_SDRAM_controller+0xfc02e1c8>
   2e228:	10bffd44 	addi	r2,r2,-11
   2e22c:	1000041e 	bne	r2,zero,2e240 <__b2d+0xf8>
   2e230:	90cffc34 	orhi	r3,r18,16368
   2e234:	003fe406 	br	2e1c8 <__alt_mem_SDRAM_controller+0xfc02e1c8>
   2e238:	000d883a 	mov	r6,zero
   2e23c:	003fdf06 	br	2e1bc <__alt_mem_SDRAM_controller+0xfc02e1bc>
   2e240:	90a4983a 	sll	r18,r18,r2
   2e244:	0005883a 	mov	r2,zero
   2e248:	003ff906 	br	2e230 <__alt_mem_SDRAM_controller+0xfc02e230>
   2e24c:	1144983a 	sll	r2,r2,r5
   2e250:	003fdd06 	br	2e1c8 <__alt_mem_SDRAM_controller+0xfc02e1c8>

0002e254 <__d2b>:
   2e254:	defff804 	addi	sp,sp,-32
   2e258:	dc000215 	stw	r16,8(sp)
   2e25c:	3021883a 	mov	r16,r6
   2e260:	dc400315 	stw	r17,12(sp)
   2e264:	8022907a 	slli	r17,r16,1
   2e268:	dd000615 	stw	r20,24(sp)
   2e26c:	2829883a 	mov	r20,r5
   2e270:	01400044 	movi	r5,1
   2e274:	dcc00515 	stw	r19,20(sp)
   2e278:	dc800415 	stw	r18,16(sp)
   2e27c:	dfc00715 	stw	ra,28(sp)
   2e280:	3825883a 	mov	r18,r7
   2e284:	8822d57a 	srli	r17,r17,21
   2e288:	002d5c00 	call	2d5c0 <_Balloc>
   2e28c:	1027883a 	mov	r19,r2
   2e290:	00800434 	movhi	r2,16
   2e294:	10bfffc4 	addi	r2,r2,-1
   2e298:	808c703a 	and	r6,r16,r2
   2e29c:	88000126 	beq	r17,zero,2e2a4 <__d2b+0x50>
   2e2a0:	31800434 	orhi	r6,r6,16
   2e2a4:	d9800015 	stw	r6,0(sp)
   2e2a8:	a0002426 	beq	r20,zero,2e33c <__d2b+0xe8>
   2e2ac:	d9000104 	addi	r4,sp,4
   2e2b0:	dd000115 	stw	r20,4(sp)
   2e2b4:	002d91c0 	call	2d91c <__lo0bits>
   2e2b8:	d8c00017 	ldw	r3,0(sp)
   2e2bc:	10002f1e 	bne	r2,zero,2e37c <__d2b+0x128>
   2e2c0:	d9000117 	ldw	r4,4(sp)
   2e2c4:	99000515 	stw	r4,20(r19)
   2e2c8:	1821003a 	cmpeq	r16,r3,zero
   2e2cc:	01000084 	movi	r4,2
   2e2d0:	2421c83a 	sub	r16,r4,r16
   2e2d4:	98c00615 	stw	r3,24(r19)
   2e2d8:	9c000415 	stw	r16,16(r19)
   2e2dc:	88001f1e 	bne	r17,zero,2e35c <__d2b+0x108>
   2e2e0:	10bef384 	addi	r2,r2,-1074
   2e2e4:	90800015 	stw	r2,0(r18)
   2e2e8:	00900034 	movhi	r2,16384
   2e2ec:	10bfffc4 	addi	r2,r2,-1
   2e2f0:	8085883a 	add	r2,r16,r2
   2e2f4:	1085883a 	add	r2,r2,r2
   2e2f8:	1085883a 	add	r2,r2,r2
   2e2fc:	9885883a 	add	r2,r19,r2
   2e300:	11000517 	ldw	r4,20(r2)
   2e304:	8020917a 	slli	r16,r16,5
   2e308:	002d8b40 	call	2d8b4 <__hi0bits>
   2e30c:	d8c00817 	ldw	r3,32(sp)
   2e310:	8085c83a 	sub	r2,r16,r2
   2e314:	18800015 	stw	r2,0(r3)
   2e318:	9805883a 	mov	r2,r19
   2e31c:	dfc00717 	ldw	ra,28(sp)
   2e320:	dd000617 	ldw	r20,24(sp)
   2e324:	dcc00517 	ldw	r19,20(sp)
   2e328:	dc800417 	ldw	r18,16(sp)
   2e32c:	dc400317 	ldw	r17,12(sp)
   2e330:	dc000217 	ldw	r16,8(sp)
   2e334:	dec00804 	addi	sp,sp,32
   2e338:	f800283a 	ret
   2e33c:	d809883a 	mov	r4,sp
   2e340:	002d91c0 	call	2d91c <__lo0bits>
   2e344:	d8c00017 	ldw	r3,0(sp)
   2e348:	04000044 	movi	r16,1
   2e34c:	9c000415 	stw	r16,16(r19)
   2e350:	98c00515 	stw	r3,20(r19)
   2e354:	10800804 	addi	r2,r2,32
   2e358:	883fe126 	beq	r17,zero,2e2e0 <__alt_mem_SDRAM_controller+0xfc02e2e0>
   2e35c:	00c00d44 	movi	r3,53
   2e360:	8c7ef344 	addi	r17,r17,-1075
   2e364:	88a3883a 	add	r17,r17,r2
   2e368:	1885c83a 	sub	r2,r3,r2
   2e36c:	d8c00817 	ldw	r3,32(sp)
   2e370:	94400015 	stw	r17,0(r18)
   2e374:	18800015 	stw	r2,0(r3)
   2e378:	003fe706 	br	2e318 <__alt_mem_SDRAM_controller+0xfc02e318>
   2e37c:	01000804 	movi	r4,32
   2e380:	2089c83a 	sub	r4,r4,r2
   2e384:	1908983a 	sll	r4,r3,r4
   2e388:	d9400117 	ldw	r5,4(sp)
   2e38c:	1886d83a 	srl	r3,r3,r2
   2e390:	2148b03a 	or	r4,r4,r5
   2e394:	99000515 	stw	r4,20(r19)
   2e398:	d8c00015 	stw	r3,0(sp)
   2e39c:	003fca06 	br	2e2c8 <__alt_mem_SDRAM_controller+0xfc02e2c8>

0002e3a0 <__ratio>:
   2e3a0:	defff904 	addi	sp,sp,-28
   2e3a4:	dc400315 	stw	r17,12(sp)
   2e3a8:	2823883a 	mov	r17,r5
   2e3ac:	d9400104 	addi	r5,sp,4
   2e3b0:	dfc00615 	stw	ra,24(sp)
   2e3b4:	dcc00515 	stw	r19,20(sp)
   2e3b8:	dc800415 	stw	r18,16(sp)
   2e3bc:	2027883a 	mov	r19,r4
   2e3c0:	dc000215 	stw	r16,8(sp)
   2e3c4:	002e1480 	call	2e148 <__b2d>
   2e3c8:	d80b883a 	mov	r5,sp
   2e3cc:	8809883a 	mov	r4,r17
   2e3d0:	1025883a 	mov	r18,r2
   2e3d4:	1821883a 	mov	r16,r3
   2e3d8:	002e1480 	call	2e148 <__b2d>
   2e3dc:	8a000417 	ldw	r8,16(r17)
   2e3e0:	99000417 	ldw	r4,16(r19)
   2e3e4:	d9400117 	ldw	r5,4(sp)
   2e3e8:	2209c83a 	sub	r4,r4,r8
   2e3ec:	2010917a 	slli	r8,r4,5
   2e3f0:	d9000017 	ldw	r4,0(sp)
   2e3f4:	2909c83a 	sub	r4,r5,r4
   2e3f8:	4109883a 	add	r4,r8,r4
   2e3fc:	01000e0e 	bge	zero,r4,2e438 <__ratio+0x98>
   2e400:	2008953a 	slli	r4,r4,20
   2e404:	2421883a 	add	r16,r4,r16
   2e408:	100d883a 	mov	r6,r2
   2e40c:	180f883a 	mov	r7,r3
   2e410:	9009883a 	mov	r4,r18
   2e414:	800b883a 	mov	r5,r16
   2e418:	002574c0 	call	2574c <__divdf3>
   2e41c:	dfc00617 	ldw	ra,24(sp)
   2e420:	dcc00517 	ldw	r19,20(sp)
   2e424:	dc800417 	ldw	r18,16(sp)
   2e428:	dc400317 	ldw	r17,12(sp)
   2e42c:	dc000217 	ldw	r16,8(sp)
   2e430:	dec00704 	addi	sp,sp,28
   2e434:	f800283a 	ret
   2e438:	2008953a 	slli	r4,r4,20
   2e43c:	1907c83a 	sub	r3,r3,r4
   2e440:	003ff106 	br	2e408 <__alt_mem_SDRAM_controller+0xfc02e408>

0002e444 <_mprec_log10>:
   2e444:	defffe04 	addi	sp,sp,-8
   2e448:	dc000015 	stw	r16,0(sp)
   2e44c:	dfc00115 	stw	ra,4(sp)
   2e450:	008005c4 	movi	r2,23
   2e454:	2021883a 	mov	r16,r4
   2e458:	11000d0e 	bge	r2,r4,2e490 <_mprec_log10+0x4c>
   2e45c:	0005883a 	mov	r2,zero
   2e460:	00cffc34 	movhi	r3,16368
   2e464:	843fffc4 	addi	r16,r16,-1
   2e468:	000d883a 	mov	r6,zero
   2e46c:	01d00934 	movhi	r7,16420
   2e470:	1009883a 	mov	r4,r2
   2e474:	180b883a 	mov	r5,r3
   2e478:	002628c0 	call	2628c <__muldf3>
   2e47c:	803ff91e 	bne	r16,zero,2e464 <__alt_mem_SDRAM_controller+0xfc02e464>
   2e480:	dfc00117 	ldw	ra,4(sp)
   2e484:	dc000017 	ldw	r16,0(sp)
   2e488:	dec00204 	addi	sp,sp,8
   2e48c:	f800283a 	ret
   2e490:	202090fa 	slli	r16,r4,3
   2e494:	008000f4 	movhi	r2,3
   2e498:	1098fa04 	addi	r2,r2,25576
   2e49c:	1421883a 	add	r16,r2,r16
   2e4a0:	80800017 	ldw	r2,0(r16)
   2e4a4:	80c00117 	ldw	r3,4(r16)
   2e4a8:	dfc00117 	ldw	ra,4(sp)
   2e4ac:	dc000017 	ldw	r16,0(sp)
   2e4b0:	dec00204 	addi	sp,sp,8
   2e4b4:	f800283a 	ret

0002e4b8 <__copybits>:
   2e4b8:	297fffc4 	addi	r5,r5,-1
   2e4bc:	280fd17a 	srai	r7,r5,5
   2e4c0:	30c00417 	ldw	r3,16(r6)
   2e4c4:	30800504 	addi	r2,r6,20
   2e4c8:	39c00044 	addi	r7,r7,1
   2e4cc:	18c7883a 	add	r3,r3,r3
   2e4d0:	39cf883a 	add	r7,r7,r7
   2e4d4:	18c7883a 	add	r3,r3,r3
   2e4d8:	39cf883a 	add	r7,r7,r7
   2e4dc:	10c7883a 	add	r3,r2,r3
   2e4e0:	21cf883a 	add	r7,r4,r7
   2e4e4:	10c00d2e 	bgeu	r2,r3,2e51c <__copybits+0x64>
   2e4e8:	200b883a 	mov	r5,r4
   2e4ec:	12000017 	ldw	r8,0(r2)
   2e4f0:	29400104 	addi	r5,r5,4
   2e4f4:	10800104 	addi	r2,r2,4
   2e4f8:	2a3fff15 	stw	r8,-4(r5)
   2e4fc:	10fffb36 	bltu	r2,r3,2e4ec <__alt_mem_SDRAM_controller+0xfc02e4ec>
   2e500:	1985c83a 	sub	r2,r3,r6
   2e504:	10bffac4 	addi	r2,r2,-21
   2e508:	1004d0ba 	srli	r2,r2,2
   2e50c:	10800044 	addi	r2,r2,1
   2e510:	1085883a 	add	r2,r2,r2
   2e514:	1085883a 	add	r2,r2,r2
   2e518:	2089883a 	add	r4,r4,r2
   2e51c:	21c0032e 	bgeu	r4,r7,2e52c <__copybits+0x74>
   2e520:	20000015 	stw	zero,0(r4)
   2e524:	21000104 	addi	r4,r4,4
   2e528:	21fffd36 	bltu	r4,r7,2e520 <__alt_mem_SDRAM_controller+0xfc02e520>
   2e52c:	f800283a 	ret

0002e530 <__any_on>:
   2e530:	20c00417 	ldw	r3,16(r4)
   2e534:	2805d17a 	srai	r2,r5,5
   2e538:	21000504 	addi	r4,r4,20
   2e53c:	18800d0e 	bge	r3,r2,2e574 <__any_on+0x44>
   2e540:	18c7883a 	add	r3,r3,r3
   2e544:	18c7883a 	add	r3,r3,r3
   2e548:	20c7883a 	add	r3,r4,r3
   2e54c:	20c0192e 	bgeu	r4,r3,2e5b4 <__any_on+0x84>
   2e550:	18bfff17 	ldw	r2,-4(r3)
   2e554:	18ffff04 	addi	r3,r3,-4
   2e558:	1000041e 	bne	r2,zero,2e56c <__any_on+0x3c>
   2e55c:	20c0142e 	bgeu	r4,r3,2e5b0 <__any_on+0x80>
   2e560:	18ffff04 	addi	r3,r3,-4
   2e564:	19400017 	ldw	r5,0(r3)
   2e568:	283ffc26 	beq	r5,zero,2e55c <__alt_mem_SDRAM_controller+0xfc02e55c>
   2e56c:	00800044 	movi	r2,1
   2e570:	f800283a 	ret
   2e574:	10c00a0e 	bge	r2,r3,2e5a0 <__any_on+0x70>
   2e578:	1085883a 	add	r2,r2,r2
   2e57c:	1085883a 	add	r2,r2,r2
   2e580:	294007cc 	andi	r5,r5,31
   2e584:	2087883a 	add	r3,r4,r2
   2e588:	283ff026 	beq	r5,zero,2e54c <__alt_mem_SDRAM_controller+0xfc02e54c>
   2e58c:	19800017 	ldw	r6,0(r3)
   2e590:	3144d83a 	srl	r2,r6,r5
   2e594:	114a983a 	sll	r5,r2,r5
   2e598:	317ff41e 	bne	r6,r5,2e56c <__alt_mem_SDRAM_controller+0xfc02e56c>
   2e59c:	003feb06 	br	2e54c <__alt_mem_SDRAM_controller+0xfc02e54c>
   2e5a0:	1085883a 	add	r2,r2,r2
   2e5a4:	1085883a 	add	r2,r2,r2
   2e5a8:	2087883a 	add	r3,r4,r2
   2e5ac:	003fe706 	br	2e54c <__alt_mem_SDRAM_controller+0xfc02e54c>
   2e5b0:	f800283a 	ret
   2e5b4:	0005883a 	mov	r2,zero
   2e5b8:	f800283a 	ret

0002e5bc <_realloc_r>:
   2e5bc:	defff604 	addi	sp,sp,-40
   2e5c0:	dc800215 	stw	r18,8(sp)
   2e5c4:	dfc00915 	stw	ra,36(sp)
   2e5c8:	df000815 	stw	fp,32(sp)
   2e5cc:	ddc00715 	stw	r23,28(sp)
   2e5d0:	dd800615 	stw	r22,24(sp)
   2e5d4:	dd400515 	stw	r21,20(sp)
   2e5d8:	dd000415 	stw	r20,16(sp)
   2e5dc:	dcc00315 	stw	r19,12(sp)
   2e5e0:	dc400115 	stw	r17,4(sp)
   2e5e4:	dc000015 	stw	r16,0(sp)
   2e5e8:	3025883a 	mov	r18,r6
   2e5ec:	2800b726 	beq	r5,zero,2e8cc <_realloc_r+0x310>
   2e5f0:	282b883a 	mov	r21,r5
   2e5f4:	2029883a 	mov	r20,r4
   2e5f8:	0031ddc0 	call	31ddc <__malloc_lock>
   2e5fc:	a8bfff17 	ldw	r2,-4(r21)
   2e600:	043fff04 	movi	r16,-4
   2e604:	90c002c4 	addi	r3,r18,11
   2e608:	01000584 	movi	r4,22
   2e60c:	acfffe04 	addi	r19,r21,-8
   2e610:	1420703a 	and	r16,r2,r16
   2e614:	20c0332e 	bgeu	r4,r3,2e6e4 <_realloc_r+0x128>
   2e618:	047ffe04 	movi	r17,-8
   2e61c:	1c62703a 	and	r17,r3,r17
   2e620:	8807883a 	mov	r3,r17
   2e624:	88005816 	blt	r17,zero,2e788 <_realloc_r+0x1cc>
   2e628:	8c805736 	bltu	r17,r18,2e788 <_realloc_r+0x1cc>
   2e62c:	80c0300e 	bge	r16,r3,2e6f0 <_realloc_r+0x134>
   2e630:	070000f4 	movhi	fp,3
   2e634:	e71a8704 	addi	fp,fp,27164
   2e638:	e1c00217 	ldw	r7,8(fp)
   2e63c:	9c09883a 	add	r4,r19,r16
   2e640:	22000117 	ldw	r8,4(r4)
   2e644:	21c06326 	beq	r4,r7,2e7d4 <_realloc_r+0x218>
   2e648:	017fff84 	movi	r5,-2
   2e64c:	414a703a 	and	r5,r8,r5
   2e650:	214b883a 	add	r5,r4,r5
   2e654:	29800117 	ldw	r6,4(r5)
   2e658:	3180004c 	andi	r6,r6,1
   2e65c:	30003f26 	beq	r6,zero,2e75c <_realloc_r+0x1a0>
   2e660:	1080004c 	andi	r2,r2,1
   2e664:	10008326 	beq	r2,zero,2e874 <_realloc_r+0x2b8>
   2e668:	900b883a 	mov	r5,r18
   2e66c:	a009883a 	mov	r4,r20
   2e670:	002c9040 	call	2c904 <_malloc_r>
   2e674:	1025883a 	mov	r18,r2
   2e678:	10011e26 	beq	r2,zero,2eaf4 <_realloc_r+0x538>
   2e67c:	a93fff17 	ldw	r4,-4(r21)
   2e680:	10fffe04 	addi	r3,r2,-8
   2e684:	00bfff84 	movi	r2,-2
   2e688:	2084703a 	and	r2,r4,r2
   2e68c:	9885883a 	add	r2,r19,r2
   2e690:	1880ee26 	beq	r3,r2,2ea4c <_realloc_r+0x490>
   2e694:	81bfff04 	addi	r6,r16,-4
   2e698:	00800904 	movi	r2,36
   2e69c:	1180b836 	bltu	r2,r6,2e980 <_realloc_r+0x3c4>
   2e6a0:	00c004c4 	movi	r3,19
   2e6a4:	19809636 	bltu	r3,r6,2e900 <_realloc_r+0x344>
   2e6a8:	9005883a 	mov	r2,r18
   2e6ac:	a807883a 	mov	r3,r21
   2e6b0:	19000017 	ldw	r4,0(r3)
   2e6b4:	11000015 	stw	r4,0(r2)
   2e6b8:	19000117 	ldw	r4,4(r3)
   2e6bc:	11000115 	stw	r4,4(r2)
   2e6c0:	18c00217 	ldw	r3,8(r3)
   2e6c4:	10c00215 	stw	r3,8(r2)
   2e6c8:	a80b883a 	mov	r5,r21
   2e6cc:	a009883a 	mov	r4,r20
   2e6d0:	002bd180 	call	2bd18 <_free_r>
   2e6d4:	a009883a 	mov	r4,r20
   2e6d8:	0031e000 	call	31e00 <__malloc_unlock>
   2e6dc:	9005883a 	mov	r2,r18
   2e6e0:	00001206 	br	2e72c <_realloc_r+0x170>
   2e6e4:	00c00404 	movi	r3,16
   2e6e8:	1823883a 	mov	r17,r3
   2e6ec:	003fce06 	br	2e628 <__alt_mem_SDRAM_controller+0xfc02e628>
   2e6f0:	a825883a 	mov	r18,r21
   2e6f4:	8445c83a 	sub	r2,r16,r17
   2e6f8:	00c003c4 	movi	r3,15
   2e6fc:	18802636 	bltu	r3,r2,2e798 <_realloc_r+0x1dc>
   2e700:	99800117 	ldw	r6,4(r19)
   2e704:	9c07883a 	add	r3,r19,r16
   2e708:	3180004c 	andi	r6,r6,1
   2e70c:	3420b03a 	or	r16,r6,r16
   2e710:	9c000115 	stw	r16,4(r19)
   2e714:	18800117 	ldw	r2,4(r3)
   2e718:	10800054 	ori	r2,r2,1
   2e71c:	18800115 	stw	r2,4(r3)
   2e720:	a009883a 	mov	r4,r20
   2e724:	0031e000 	call	31e00 <__malloc_unlock>
   2e728:	9005883a 	mov	r2,r18
   2e72c:	dfc00917 	ldw	ra,36(sp)
   2e730:	df000817 	ldw	fp,32(sp)
   2e734:	ddc00717 	ldw	r23,28(sp)
   2e738:	dd800617 	ldw	r22,24(sp)
   2e73c:	dd400517 	ldw	r21,20(sp)
   2e740:	dd000417 	ldw	r20,16(sp)
   2e744:	dcc00317 	ldw	r19,12(sp)
   2e748:	dc800217 	ldw	r18,8(sp)
   2e74c:	dc400117 	ldw	r17,4(sp)
   2e750:	dc000017 	ldw	r16,0(sp)
   2e754:	dec00a04 	addi	sp,sp,40
   2e758:	f800283a 	ret
   2e75c:	017fff04 	movi	r5,-4
   2e760:	414a703a 	and	r5,r8,r5
   2e764:	814d883a 	add	r6,r16,r5
   2e768:	30c01f16 	blt	r6,r3,2e7e8 <_realloc_r+0x22c>
   2e76c:	20800317 	ldw	r2,12(r4)
   2e770:	20c00217 	ldw	r3,8(r4)
   2e774:	a825883a 	mov	r18,r21
   2e778:	3021883a 	mov	r16,r6
   2e77c:	18800315 	stw	r2,12(r3)
   2e780:	10c00215 	stw	r3,8(r2)
   2e784:	003fdb06 	br	2e6f4 <__alt_mem_SDRAM_controller+0xfc02e6f4>
   2e788:	00800304 	movi	r2,12
   2e78c:	a0800015 	stw	r2,0(r20)
   2e790:	0005883a 	mov	r2,zero
   2e794:	003fe506 	br	2e72c <__alt_mem_SDRAM_controller+0xfc02e72c>
   2e798:	98c00117 	ldw	r3,4(r19)
   2e79c:	9c4b883a 	add	r5,r19,r17
   2e7a0:	11000054 	ori	r4,r2,1
   2e7a4:	18c0004c 	andi	r3,r3,1
   2e7a8:	1c62b03a 	or	r17,r3,r17
   2e7ac:	9c400115 	stw	r17,4(r19)
   2e7b0:	29000115 	stw	r4,4(r5)
   2e7b4:	2885883a 	add	r2,r5,r2
   2e7b8:	10c00117 	ldw	r3,4(r2)
   2e7bc:	29400204 	addi	r5,r5,8
   2e7c0:	a009883a 	mov	r4,r20
   2e7c4:	18c00054 	ori	r3,r3,1
   2e7c8:	10c00115 	stw	r3,4(r2)
   2e7cc:	002bd180 	call	2bd18 <_free_r>
   2e7d0:	003fd306 	br	2e720 <__alt_mem_SDRAM_controller+0xfc02e720>
   2e7d4:	017fff04 	movi	r5,-4
   2e7d8:	414a703a 	and	r5,r8,r5
   2e7dc:	89800404 	addi	r6,r17,16
   2e7e0:	8151883a 	add	r8,r16,r5
   2e7e4:	4180590e 	bge	r8,r6,2e94c <_realloc_r+0x390>
   2e7e8:	1080004c 	andi	r2,r2,1
   2e7ec:	103f9e1e 	bne	r2,zero,2e668 <__alt_mem_SDRAM_controller+0xfc02e668>
   2e7f0:	adbffe17 	ldw	r22,-8(r21)
   2e7f4:	00bfff04 	movi	r2,-4
   2e7f8:	9dadc83a 	sub	r22,r19,r22
   2e7fc:	b1800117 	ldw	r6,4(r22)
   2e800:	3084703a 	and	r2,r6,r2
   2e804:	20002026 	beq	r4,zero,2e888 <_realloc_r+0x2cc>
   2e808:	80af883a 	add	r23,r16,r2
   2e80c:	b96f883a 	add	r23,r23,r5
   2e810:	21c05f26 	beq	r4,r7,2e990 <_realloc_r+0x3d4>
   2e814:	b8c01c16 	blt	r23,r3,2e888 <_realloc_r+0x2cc>
   2e818:	20800317 	ldw	r2,12(r4)
   2e81c:	20c00217 	ldw	r3,8(r4)
   2e820:	81bfff04 	addi	r6,r16,-4
   2e824:	01000904 	movi	r4,36
   2e828:	18800315 	stw	r2,12(r3)
   2e82c:	10c00215 	stw	r3,8(r2)
   2e830:	b0c00217 	ldw	r3,8(r22)
   2e834:	b0800317 	ldw	r2,12(r22)
   2e838:	b4800204 	addi	r18,r22,8
   2e83c:	18800315 	stw	r2,12(r3)
   2e840:	10c00215 	stw	r3,8(r2)
   2e844:	21801b36 	bltu	r4,r6,2e8b4 <_realloc_r+0x2f8>
   2e848:	008004c4 	movi	r2,19
   2e84c:	1180352e 	bgeu	r2,r6,2e924 <_realloc_r+0x368>
   2e850:	a8800017 	ldw	r2,0(r21)
   2e854:	b0800215 	stw	r2,8(r22)
   2e858:	a8800117 	ldw	r2,4(r21)
   2e85c:	b0800315 	stw	r2,12(r22)
   2e860:	008006c4 	movi	r2,27
   2e864:	11807f36 	bltu	r2,r6,2ea64 <_realloc_r+0x4a8>
   2e868:	b0800404 	addi	r2,r22,16
   2e86c:	ad400204 	addi	r21,r21,8
   2e870:	00002d06 	br	2e928 <_realloc_r+0x36c>
   2e874:	adbffe17 	ldw	r22,-8(r21)
   2e878:	00bfff04 	movi	r2,-4
   2e87c:	9dadc83a 	sub	r22,r19,r22
   2e880:	b1000117 	ldw	r4,4(r22)
   2e884:	2084703a 	and	r2,r4,r2
   2e888:	b03f7726 	beq	r22,zero,2e668 <__alt_mem_SDRAM_controller+0xfc02e668>
   2e88c:	80af883a 	add	r23,r16,r2
   2e890:	b8ff7516 	blt	r23,r3,2e668 <__alt_mem_SDRAM_controller+0xfc02e668>
   2e894:	b0800317 	ldw	r2,12(r22)
   2e898:	b0c00217 	ldw	r3,8(r22)
   2e89c:	81bfff04 	addi	r6,r16,-4
   2e8a0:	01000904 	movi	r4,36
   2e8a4:	18800315 	stw	r2,12(r3)
   2e8a8:	10c00215 	stw	r3,8(r2)
   2e8ac:	b4800204 	addi	r18,r22,8
   2e8b0:	21bfe52e 	bgeu	r4,r6,2e848 <__alt_mem_SDRAM_controller+0xfc02e848>
   2e8b4:	a80b883a 	mov	r5,r21
   2e8b8:	9009883a 	mov	r4,r18
   2e8bc:	002d33c0 	call	2d33c <memmove>
   2e8c0:	b821883a 	mov	r16,r23
   2e8c4:	b027883a 	mov	r19,r22
   2e8c8:	003f8a06 	br	2e6f4 <__alt_mem_SDRAM_controller+0xfc02e6f4>
   2e8cc:	300b883a 	mov	r5,r6
   2e8d0:	dfc00917 	ldw	ra,36(sp)
   2e8d4:	df000817 	ldw	fp,32(sp)
   2e8d8:	ddc00717 	ldw	r23,28(sp)
   2e8dc:	dd800617 	ldw	r22,24(sp)
   2e8e0:	dd400517 	ldw	r21,20(sp)
   2e8e4:	dd000417 	ldw	r20,16(sp)
   2e8e8:	dcc00317 	ldw	r19,12(sp)
   2e8ec:	dc800217 	ldw	r18,8(sp)
   2e8f0:	dc400117 	ldw	r17,4(sp)
   2e8f4:	dc000017 	ldw	r16,0(sp)
   2e8f8:	dec00a04 	addi	sp,sp,40
   2e8fc:	002c9041 	jmpi	2c904 <_malloc_r>
   2e900:	a8c00017 	ldw	r3,0(r21)
   2e904:	90c00015 	stw	r3,0(r18)
   2e908:	a8c00117 	ldw	r3,4(r21)
   2e90c:	90c00115 	stw	r3,4(r18)
   2e910:	00c006c4 	movi	r3,27
   2e914:	19804536 	bltu	r3,r6,2ea2c <_realloc_r+0x470>
   2e918:	90800204 	addi	r2,r18,8
   2e91c:	a8c00204 	addi	r3,r21,8
   2e920:	003f6306 	br	2e6b0 <__alt_mem_SDRAM_controller+0xfc02e6b0>
   2e924:	9005883a 	mov	r2,r18
   2e928:	a8c00017 	ldw	r3,0(r21)
   2e92c:	b821883a 	mov	r16,r23
   2e930:	b027883a 	mov	r19,r22
   2e934:	10c00015 	stw	r3,0(r2)
   2e938:	a8c00117 	ldw	r3,4(r21)
   2e93c:	10c00115 	stw	r3,4(r2)
   2e940:	a8c00217 	ldw	r3,8(r21)
   2e944:	10c00215 	stw	r3,8(r2)
   2e948:	003f6a06 	br	2e6f4 <__alt_mem_SDRAM_controller+0xfc02e6f4>
   2e94c:	9c67883a 	add	r19,r19,r17
   2e950:	4445c83a 	sub	r2,r8,r17
   2e954:	e4c00215 	stw	r19,8(fp)
   2e958:	10800054 	ori	r2,r2,1
   2e95c:	98800115 	stw	r2,4(r19)
   2e960:	a8bfff17 	ldw	r2,-4(r21)
   2e964:	a009883a 	mov	r4,r20
   2e968:	1080004c 	andi	r2,r2,1
   2e96c:	1462b03a 	or	r17,r2,r17
   2e970:	ac7fff15 	stw	r17,-4(r21)
   2e974:	0031e000 	call	31e00 <__malloc_unlock>
   2e978:	a805883a 	mov	r2,r21
   2e97c:	003f6b06 	br	2e72c <__alt_mem_SDRAM_controller+0xfc02e72c>
   2e980:	a80b883a 	mov	r5,r21
   2e984:	9009883a 	mov	r4,r18
   2e988:	002d33c0 	call	2d33c <memmove>
   2e98c:	003f4e06 	br	2e6c8 <__alt_mem_SDRAM_controller+0xfc02e6c8>
   2e990:	89000404 	addi	r4,r17,16
   2e994:	b93fbc16 	blt	r23,r4,2e888 <__alt_mem_SDRAM_controller+0xfc02e888>
   2e998:	b0800317 	ldw	r2,12(r22)
   2e99c:	b0c00217 	ldw	r3,8(r22)
   2e9a0:	81bfff04 	addi	r6,r16,-4
   2e9a4:	01000904 	movi	r4,36
   2e9a8:	18800315 	stw	r2,12(r3)
   2e9ac:	10c00215 	stw	r3,8(r2)
   2e9b0:	b4800204 	addi	r18,r22,8
   2e9b4:	21804336 	bltu	r4,r6,2eac4 <_realloc_r+0x508>
   2e9b8:	008004c4 	movi	r2,19
   2e9bc:	11803f2e 	bgeu	r2,r6,2eabc <_realloc_r+0x500>
   2e9c0:	a8800017 	ldw	r2,0(r21)
   2e9c4:	b0800215 	stw	r2,8(r22)
   2e9c8:	a8800117 	ldw	r2,4(r21)
   2e9cc:	b0800315 	stw	r2,12(r22)
   2e9d0:	008006c4 	movi	r2,27
   2e9d4:	11803f36 	bltu	r2,r6,2ead4 <_realloc_r+0x518>
   2e9d8:	b0800404 	addi	r2,r22,16
   2e9dc:	ad400204 	addi	r21,r21,8
   2e9e0:	a8c00017 	ldw	r3,0(r21)
   2e9e4:	10c00015 	stw	r3,0(r2)
   2e9e8:	a8c00117 	ldw	r3,4(r21)
   2e9ec:	10c00115 	stw	r3,4(r2)
   2e9f0:	a8c00217 	ldw	r3,8(r21)
   2e9f4:	10c00215 	stw	r3,8(r2)
   2e9f8:	b447883a 	add	r3,r22,r17
   2e9fc:	bc45c83a 	sub	r2,r23,r17
   2ea00:	e0c00215 	stw	r3,8(fp)
   2ea04:	10800054 	ori	r2,r2,1
   2ea08:	18800115 	stw	r2,4(r3)
   2ea0c:	b0800117 	ldw	r2,4(r22)
   2ea10:	a009883a 	mov	r4,r20
   2ea14:	1080004c 	andi	r2,r2,1
   2ea18:	1462b03a 	or	r17,r2,r17
   2ea1c:	b4400115 	stw	r17,4(r22)
   2ea20:	0031e000 	call	31e00 <__malloc_unlock>
   2ea24:	9005883a 	mov	r2,r18
   2ea28:	003f4006 	br	2e72c <__alt_mem_SDRAM_controller+0xfc02e72c>
   2ea2c:	a8c00217 	ldw	r3,8(r21)
   2ea30:	90c00215 	stw	r3,8(r18)
   2ea34:	a8c00317 	ldw	r3,12(r21)
   2ea38:	90c00315 	stw	r3,12(r18)
   2ea3c:	30801126 	beq	r6,r2,2ea84 <_realloc_r+0x4c8>
   2ea40:	90800404 	addi	r2,r18,16
   2ea44:	a8c00404 	addi	r3,r21,16
   2ea48:	003f1906 	br	2e6b0 <__alt_mem_SDRAM_controller+0xfc02e6b0>
   2ea4c:	90ffff17 	ldw	r3,-4(r18)
   2ea50:	00bfff04 	movi	r2,-4
   2ea54:	a825883a 	mov	r18,r21
   2ea58:	1884703a 	and	r2,r3,r2
   2ea5c:	80a1883a 	add	r16,r16,r2
   2ea60:	003f2406 	br	2e6f4 <__alt_mem_SDRAM_controller+0xfc02e6f4>
   2ea64:	a8800217 	ldw	r2,8(r21)
   2ea68:	b0800415 	stw	r2,16(r22)
   2ea6c:	a8800317 	ldw	r2,12(r21)
   2ea70:	b0800515 	stw	r2,20(r22)
   2ea74:	31000a26 	beq	r6,r4,2eaa0 <_realloc_r+0x4e4>
   2ea78:	b0800604 	addi	r2,r22,24
   2ea7c:	ad400404 	addi	r21,r21,16
   2ea80:	003fa906 	br	2e928 <__alt_mem_SDRAM_controller+0xfc02e928>
   2ea84:	a9000417 	ldw	r4,16(r21)
   2ea88:	90800604 	addi	r2,r18,24
   2ea8c:	a8c00604 	addi	r3,r21,24
   2ea90:	91000415 	stw	r4,16(r18)
   2ea94:	a9000517 	ldw	r4,20(r21)
   2ea98:	91000515 	stw	r4,20(r18)
   2ea9c:	003f0406 	br	2e6b0 <__alt_mem_SDRAM_controller+0xfc02e6b0>
   2eaa0:	a8c00417 	ldw	r3,16(r21)
   2eaa4:	ad400604 	addi	r21,r21,24
   2eaa8:	b0800804 	addi	r2,r22,32
   2eaac:	b0c00615 	stw	r3,24(r22)
   2eab0:	a8ffff17 	ldw	r3,-4(r21)
   2eab4:	b0c00715 	stw	r3,28(r22)
   2eab8:	003f9b06 	br	2e928 <__alt_mem_SDRAM_controller+0xfc02e928>
   2eabc:	9005883a 	mov	r2,r18
   2eac0:	003fc706 	br	2e9e0 <__alt_mem_SDRAM_controller+0xfc02e9e0>
   2eac4:	a80b883a 	mov	r5,r21
   2eac8:	9009883a 	mov	r4,r18
   2eacc:	002d33c0 	call	2d33c <memmove>
   2ead0:	003fc906 	br	2e9f8 <__alt_mem_SDRAM_controller+0xfc02e9f8>
   2ead4:	a8800217 	ldw	r2,8(r21)
   2ead8:	b0800415 	stw	r2,16(r22)
   2eadc:	a8800317 	ldw	r2,12(r21)
   2eae0:	b0800515 	stw	r2,20(r22)
   2eae4:	31000726 	beq	r6,r4,2eb04 <_realloc_r+0x548>
   2eae8:	b0800604 	addi	r2,r22,24
   2eaec:	ad400404 	addi	r21,r21,16
   2eaf0:	003fbb06 	br	2e9e0 <__alt_mem_SDRAM_controller+0xfc02e9e0>
   2eaf4:	a009883a 	mov	r4,r20
   2eaf8:	0031e000 	call	31e00 <__malloc_unlock>
   2eafc:	0005883a 	mov	r2,zero
   2eb00:	003f0a06 	br	2e72c <__alt_mem_SDRAM_controller+0xfc02e72c>
   2eb04:	a8c00417 	ldw	r3,16(r21)
   2eb08:	ad400604 	addi	r21,r21,24
   2eb0c:	b0800804 	addi	r2,r22,32
   2eb10:	b0c00615 	stw	r3,24(r22)
   2eb14:	a8ffff17 	ldw	r3,-4(r21)
   2eb18:	b0c00715 	stw	r3,28(r22)
   2eb1c:	003fb006 	br	2e9e0 <__alt_mem_SDRAM_controller+0xfc02e9e0>

0002eb20 <_sbrk_r>:
   2eb20:	defffd04 	addi	sp,sp,-12
   2eb24:	dc000015 	stw	r16,0(sp)
   2eb28:	04000134 	movhi	r16,4
   2eb2c:	dc400115 	stw	r17,4(sp)
   2eb30:	84276a04 	addi	r16,r16,-25176
   2eb34:	2023883a 	mov	r17,r4
   2eb38:	2809883a 	mov	r4,r5
   2eb3c:	dfc00215 	stw	ra,8(sp)
   2eb40:	80000015 	stw	zero,0(r16)
   2eb44:	0031fc00 	call	31fc0 <sbrk>
   2eb48:	00ffffc4 	movi	r3,-1
   2eb4c:	10c00526 	beq	r2,r3,2eb64 <_sbrk_r+0x44>
   2eb50:	dfc00217 	ldw	ra,8(sp)
   2eb54:	dc400117 	ldw	r17,4(sp)
   2eb58:	dc000017 	ldw	r16,0(sp)
   2eb5c:	dec00304 	addi	sp,sp,12
   2eb60:	f800283a 	ret
   2eb64:	80c00017 	ldw	r3,0(r16)
   2eb68:	183ff926 	beq	r3,zero,2eb50 <__alt_mem_SDRAM_controller+0xfc02eb50>
   2eb6c:	88c00015 	stw	r3,0(r17)
   2eb70:	003ff706 	br	2eb50 <__alt_mem_SDRAM_controller+0xfc02eb50>

0002eb74 <__sread>:
   2eb74:	defffe04 	addi	sp,sp,-8
   2eb78:	dc000015 	stw	r16,0(sp)
   2eb7c:	2821883a 	mov	r16,r5
   2eb80:	2940038f 	ldh	r5,14(r5)
   2eb84:	dfc00115 	stw	ra,4(sp)
   2eb88:	00309680 	call	30968 <_read_r>
   2eb8c:	10000716 	blt	r2,zero,2ebac <__sread+0x38>
   2eb90:	80c01417 	ldw	r3,80(r16)
   2eb94:	1887883a 	add	r3,r3,r2
   2eb98:	80c01415 	stw	r3,80(r16)
   2eb9c:	dfc00117 	ldw	ra,4(sp)
   2eba0:	dc000017 	ldw	r16,0(sp)
   2eba4:	dec00204 	addi	sp,sp,8
   2eba8:	f800283a 	ret
   2ebac:	80c0030b 	ldhu	r3,12(r16)
   2ebb0:	18fbffcc 	andi	r3,r3,61439
   2ebb4:	80c0030d 	sth	r3,12(r16)
   2ebb8:	dfc00117 	ldw	ra,4(sp)
   2ebbc:	dc000017 	ldw	r16,0(sp)
   2ebc0:	dec00204 	addi	sp,sp,8
   2ebc4:	f800283a 	ret

0002ebc8 <__seofread>:
   2ebc8:	0005883a 	mov	r2,zero
   2ebcc:	f800283a 	ret

0002ebd0 <__swrite>:
   2ebd0:	2880030b 	ldhu	r2,12(r5)
   2ebd4:	defffb04 	addi	sp,sp,-20
   2ebd8:	dcc00315 	stw	r19,12(sp)
   2ebdc:	dc800215 	stw	r18,8(sp)
   2ebe0:	dc400115 	stw	r17,4(sp)
   2ebe4:	dc000015 	stw	r16,0(sp)
   2ebe8:	dfc00415 	stw	ra,16(sp)
   2ebec:	10c0400c 	andi	r3,r2,256
   2ebf0:	2821883a 	mov	r16,r5
   2ebf4:	2023883a 	mov	r17,r4
   2ebf8:	3025883a 	mov	r18,r6
   2ebfc:	3827883a 	mov	r19,r7
   2ec00:	18000526 	beq	r3,zero,2ec18 <__swrite+0x48>
   2ec04:	2940038f 	ldh	r5,14(r5)
   2ec08:	01c00084 	movi	r7,2
   2ec0c:	000d883a 	mov	r6,zero
   2ec10:	00309080 	call	30908 <_lseek_r>
   2ec14:	8080030b 	ldhu	r2,12(r16)
   2ec18:	8140038f 	ldh	r5,14(r16)
   2ec1c:	10bbffcc 	andi	r2,r2,61439
   2ec20:	980f883a 	mov	r7,r19
   2ec24:	900d883a 	mov	r6,r18
   2ec28:	8809883a 	mov	r4,r17
   2ec2c:	8080030d 	sth	r2,12(r16)
   2ec30:	dfc00417 	ldw	ra,16(sp)
   2ec34:	dcc00317 	ldw	r19,12(sp)
   2ec38:	dc800217 	ldw	r18,8(sp)
   2ec3c:	dc400117 	ldw	r17,4(sp)
   2ec40:	dc000017 	ldw	r16,0(sp)
   2ec44:	dec00504 	addi	sp,sp,20
   2ec48:	00303d41 	jmpi	303d4 <_write_r>

0002ec4c <__sseek>:
   2ec4c:	defffe04 	addi	sp,sp,-8
   2ec50:	dc000015 	stw	r16,0(sp)
   2ec54:	2821883a 	mov	r16,r5
   2ec58:	2940038f 	ldh	r5,14(r5)
   2ec5c:	dfc00115 	stw	ra,4(sp)
   2ec60:	00309080 	call	30908 <_lseek_r>
   2ec64:	00ffffc4 	movi	r3,-1
   2ec68:	10c00826 	beq	r2,r3,2ec8c <__sseek+0x40>
   2ec6c:	80c0030b 	ldhu	r3,12(r16)
   2ec70:	80801415 	stw	r2,80(r16)
   2ec74:	18c40014 	ori	r3,r3,4096
   2ec78:	80c0030d 	sth	r3,12(r16)
   2ec7c:	dfc00117 	ldw	ra,4(sp)
   2ec80:	dc000017 	ldw	r16,0(sp)
   2ec84:	dec00204 	addi	sp,sp,8
   2ec88:	f800283a 	ret
   2ec8c:	80c0030b 	ldhu	r3,12(r16)
   2ec90:	18fbffcc 	andi	r3,r3,61439
   2ec94:	80c0030d 	sth	r3,12(r16)
   2ec98:	dfc00117 	ldw	ra,4(sp)
   2ec9c:	dc000017 	ldw	r16,0(sp)
   2eca0:	dec00204 	addi	sp,sp,8
   2eca4:	f800283a 	ret

0002eca8 <__sclose>:
   2eca8:	2940038f 	ldh	r5,14(r5)
   2ecac:	00304341 	jmpi	30434 <_close_r>

0002ecb0 <strcmp>:
   2ecb0:	2144b03a 	or	r2,r4,r5
   2ecb4:	108000cc 	andi	r2,r2,3
   2ecb8:	1000171e 	bne	r2,zero,2ed18 <strcmp+0x68>
   2ecbc:	20800017 	ldw	r2,0(r4)
   2ecc0:	28c00017 	ldw	r3,0(r5)
   2ecc4:	10c0141e 	bne	r2,r3,2ed18 <strcmp+0x68>
   2ecc8:	027fbff4 	movhi	r9,65279
   2eccc:	4a7fbfc4 	addi	r9,r9,-257
   2ecd0:	0086303a 	nor	r3,zero,r2
   2ecd4:	02202074 	movhi	r8,32897
   2ecd8:	1245883a 	add	r2,r2,r9
   2ecdc:	42202004 	addi	r8,r8,-32640
   2ece0:	10c4703a 	and	r2,r2,r3
   2ece4:	1204703a 	and	r2,r2,r8
   2ece8:	10000226 	beq	r2,zero,2ecf4 <strcmp+0x44>
   2ecec:	00002306 	br	2ed7c <strcmp+0xcc>
   2ecf0:	1000221e 	bne	r2,zero,2ed7c <strcmp+0xcc>
   2ecf4:	21000104 	addi	r4,r4,4
   2ecf8:	20c00017 	ldw	r3,0(r4)
   2ecfc:	29400104 	addi	r5,r5,4
   2ed00:	29800017 	ldw	r6,0(r5)
   2ed04:	1a4f883a 	add	r7,r3,r9
   2ed08:	00c4303a 	nor	r2,zero,r3
   2ed0c:	3884703a 	and	r2,r7,r2
   2ed10:	1204703a 	and	r2,r2,r8
   2ed14:	19bff626 	beq	r3,r6,2ecf0 <__alt_mem_SDRAM_controller+0xfc02ecf0>
   2ed18:	20800003 	ldbu	r2,0(r4)
   2ed1c:	10c03fcc 	andi	r3,r2,255
   2ed20:	18c0201c 	xori	r3,r3,128
   2ed24:	18ffe004 	addi	r3,r3,-128
   2ed28:	18000c26 	beq	r3,zero,2ed5c <strcmp+0xac>
   2ed2c:	29800007 	ldb	r6,0(r5)
   2ed30:	19800326 	beq	r3,r6,2ed40 <strcmp+0x90>
   2ed34:	00001306 	br	2ed84 <strcmp+0xd4>
   2ed38:	29800007 	ldb	r6,0(r5)
   2ed3c:	11800b1e 	bne	r2,r6,2ed6c <strcmp+0xbc>
   2ed40:	21000044 	addi	r4,r4,1
   2ed44:	20c00003 	ldbu	r3,0(r4)
   2ed48:	29400044 	addi	r5,r5,1
   2ed4c:	18803fcc 	andi	r2,r3,255
   2ed50:	1080201c 	xori	r2,r2,128
   2ed54:	10bfe004 	addi	r2,r2,-128
   2ed58:	103ff71e 	bne	r2,zero,2ed38 <__alt_mem_SDRAM_controller+0xfc02ed38>
   2ed5c:	0007883a 	mov	r3,zero
   2ed60:	28800003 	ldbu	r2,0(r5)
   2ed64:	1885c83a 	sub	r2,r3,r2
   2ed68:	f800283a 	ret
   2ed6c:	28800003 	ldbu	r2,0(r5)
   2ed70:	18c03fcc 	andi	r3,r3,255
   2ed74:	1885c83a 	sub	r2,r3,r2
   2ed78:	f800283a 	ret
   2ed7c:	0005883a 	mov	r2,zero
   2ed80:	f800283a 	ret
   2ed84:	10c03fcc 	andi	r3,r2,255
   2ed88:	003ff506 	br	2ed60 <__alt_mem_SDRAM_controller+0xfc02ed60>

0002ed8c <__sprint_r.part.0>:
   2ed8c:	28801917 	ldw	r2,100(r5)
   2ed90:	defff604 	addi	sp,sp,-40
   2ed94:	dd400515 	stw	r21,20(sp)
   2ed98:	dfc00915 	stw	ra,36(sp)
   2ed9c:	df000815 	stw	fp,32(sp)
   2eda0:	ddc00715 	stw	r23,28(sp)
   2eda4:	dd800615 	stw	r22,24(sp)
   2eda8:	dd000415 	stw	r20,16(sp)
   2edac:	dcc00315 	stw	r19,12(sp)
   2edb0:	dc800215 	stw	r18,8(sp)
   2edb4:	dc400115 	stw	r17,4(sp)
   2edb8:	dc000015 	stw	r16,0(sp)
   2edbc:	1088000c 	andi	r2,r2,8192
   2edc0:	302b883a 	mov	r21,r6
   2edc4:	10002e26 	beq	r2,zero,2ee80 <__sprint_r.part.0+0xf4>
   2edc8:	30800217 	ldw	r2,8(r6)
   2edcc:	35800017 	ldw	r22,0(r6)
   2edd0:	10002926 	beq	r2,zero,2ee78 <__sprint_r.part.0+0xec>
   2edd4:	2827883a 	mov	r19,r5
   2edd8:	2029883a 	mov	r20,r4
   2eddc:	b5c00104 	addi	r23,r22,4
   2ede0:	04bfffc4 	movi	r18,-1
   2ede4:	bc400017 	ldw	r17,0(r23)
   2ede8:	b4000017 	ldw	r16,0(r22)
   2edec:	0039883a 	mov	fp,zero
   2edf0:	8822d0ba 	srli	r17,r17,2
   2edf4:	8800031e 	bne	r17,zero,2ee04 <__sprint_r.part.0+0x78>
   2edf8:	00001806 	br	2ee5c <__sprint_r.part.0+0xd0>
   2edfc:	84000104 	addi	r16,r16,4
   2ee00:	8f001526 	beq	r17,fp,2ee58 <__sprint_r.part.0+0xcc>
   2ee04:	81400017 	ldw	r5,0(r16)
   2ee08:	980d883a 	mov	r6,r19
   2ee0c:	a009883a 	mov	r4,r20
   2ee10:	00307b40 	call	307b4 <_fputwc_r>
   2ee14:	e7000044 	addi	fp,fp,1
   2ee18:	14bff81e 	bne	r2,r18,2edfc <__alt_mem_SDRAM_controller+0xfc02edfc>
   2ee1c:	9005883a 	mov	r2,r18
   2ee20:	a8000215 	stw	zero,8(r21)
   2ee24:	a8000115 	stw	zero,4(r21)
   2ee28:	dfc00917 	ldw	ra,36(sp)
   2ee2c:	df000817 	ldw	fp,32(sp)
   2ee30:	ddc00717 	ldw	r23,28(sp)
   2ee34:	dd800617 	ldw	r22,24(sp)
   2ee38:	dd400517 	ldw	r21,20(sp)
   2ee3c:	dd000417 	ldw	r20,16(sp)
   2ee40:	dcc00317 	ldw	r19,12(sp)
   2ee44:	dc800217 	ldw	r18,8(sp)
   2ee48:	dc400117 	ldw	r17,4(sp)
   2ee4c:	dc000017 	ldw	r16,0(sp)
   2ee50:	dec00a04 	addi	sp,sp,40
   2ee54:	f800283a 	ret
   2ee58:	a8800217 	ldw	r2,8(r21)
   2ee5c:	8c63883a 	add	r17,r17,r17
   2ee60:	8c63883a 	add	r17,r17,r17
   2ee64:	1445c83a 	sub	r2,r2,r17
   2ee68:	a8800215 	stw	r2,8(r21)
   2ee6c:	b5800204 	addi	r22,r22,8
   2ee70:	bdc00204 	addi	r23,r23,8
   2ee74:	103fdb1e 	bne	r2,zero,2ede4 <__alt_mem_SDRAM_controller+0xfc02ede4>
   2ee78:	0005883a 	mov	r2,zero
   2ee7c:	003fe806 	br	2ee20 <__alt_mem_SDRAM_controller+0xfc02ee20>
   2ee80:	002c0280 	call	2c028 <__sfvwrite_r>
   2ee84:	003fe606 	br	2ee20 <__alt_mem_SDRAM_controller+0xfc02ee20>

0002ee88 <__sprint_r>:
   2ee88:	30c00217 	ldw	r3,8(r6)
   2ee8c:	18000126 	beq	r3,zero,2ee94 <__sprint_r+0xc>
   2ee90:	002ed8c1 	jmpi	2ed8c <__sprint_r.part.0>
   2ee94:	30000115 	stw	zero,4(r6)
   2ee98:	0005883a 	mov	r2,zero
   2ee9c:	f800283a 	ret

0002eea0 <___vfiprintf_internal_r>:
   2eea0:	deffc904 	addi	sp,sp,-220
   2eea4:	df003515 	stw	fp,212(sp)
   2eea8:	dd003115 	stw	r20,196(sp)
   2eeac:	dfc03615 	stw	ra,216(sp)
   2eeb0:	ddc03415 	stw	r23,208(sp)
   2eeb4:	dd803315 	stw	r22,204(sp)
   2eeb8:	dd403215 	stw	r21,200(sp)
   2eebc:	dcc03015 	stw	r19,192(sp)
   2eec0:	dc802f15 	stw	r18,188(sp)
   2eec4:	dc402e15 	stw	r17,184(sp)
   2eec8:	dc002d15 	stw	r16,180(sp)
   2eecc:	d9002015 	stw	r4,128(sp)
   2eed0:	d9c02215 	stw	r7,136(sp)
   2eed4:	2829883a 	mov	r20,r5
   2eed8:	3039883a 	mov	fp,r6
   2eedc:	20000226 	beq	r4,zero,2eee8 <___vfiprintf_internal_r+0x48>
   2eee0:	20800e17 	ldw	r2,56(r4)
   2eee4:	1000cf26 	beq	r2,zero,2f224 <___vfiprintf_internal_r+0x384>
   2eee8:	a080030b 	ldhu	r2,12(r20)
   2eeec:	10c8000c 	andi	r3,r2,8192
   2eef0:	1800061e 	bne	r3,zero,2ef0c <___vfiprintf_internal_r+0x6c>
   2eef4:	a1001917 	ldw	r4,100(r20)
   2eef8:	00f7ffc4 	movi	r3,-8193
   2eefc:	10880014 	ori	r2,r2,8192
   2ef00:	20c6703a 	and	r3,r4,r3
   2ef04:	a080030d 	sth	r2,12(r20)
   2ef08:	a0c01915 	stw	r3,100(r20)
   2ef0c:	10c0020c 	andi	r3,r2,8
   2ef10:	1800a926 	beq	r3,zero,2f1b8 <___vfiprintf_internal_r+0x318>
   2ef14:	a0c00417 	ldw	r3,16(r20)
   2ef18:	1800a726 	beq	r3,zero,2f1b8 <___vfiprintf_internal_r+0x318>
   2ef1c:	1080068c 	andi	r2,r2,26
   2ef20:	00c00284 	movi	r3,10
   2ef24:	10c0ac26 	beq	r2,r3,2f1d8 <___vfiprintf_internal_r+0x338>
   2ef28:	da801a04 	addi	r10,sp,104
   2ef2c:	da801e15 	stw	r10,120(sp)
   2ef30:	d8801e17 	ldw	r2,120(sp)
   2ef34:	da8019c4 	addi	r10,sp,103
   2ef38:	058000f4 	movhi	r22,3
   2ef3c:	05c000f4 	movhi	r23,3
   2ef40:	da801f15 	stw	r10,124(sp)
   2ef44:	1295c83a 	sub	r10,r2,r10
   2ef48:	b5993004 	addi	r22,r22,25792
   2ef4c:	bdd92c04 	addi	r23,r23,25776
   2ef50:	dec01a15 	stw	sp,104(sp)
   2ef54:	d8001c15 	stw	zero,112(sp)
   2ef58:	d8001b15 	stw	zero,108(sp)
   2ef5c:	d8002615 	stw	zero,152(sp)
   2ef60:	d8002315 	stw	zero,140(sp)
   2ef64:	da802715 	stw	r10,156(sp)
   2ef68:	d811883a 	mov	r8,sp
   2ef6c:	dd002115 	stw	r20,132(sp)
   2ef70:	e021883a 	mov	r16,fp
   2ef74:	80800007 	ldb	r2,0(r16)
   2ef78:	1003ea26 	beq	r2,zero,2ff24 <___vfiprintf_internal_r+0x1084>
   2ef7c:	00c00944 	movi	r3,37
   2ef80:	8025883a 	mov	r18,r16
   2ef84:	10c0021e 	bne	r2,r3,2ef90 <___vfiprintf_internal_r+0xf0>
   2ef88:	00001606 	br	2efe4 <___vfiprintf_internal_r+0x144>
   2ef8c:	10c00326 	beq	r2,r3,2ef9c <___vfiprintf_internal_r+0xfc>
   2ef90:	94800044 	addi	r18,r18,1
   2ef94:	90800007 	ldb	r2,0(r18)
   2ef98:	103ffc1e 	bne	r2,zero,2ef8c <__alt_mem_SDRAM_controller+0xfc02ef8c>
   2ef9c:	9423c83a 	sub	r17,r18,r16
   2efa0:	88001026 	beq	r17,zero,2efe4 <___vfiprintf_internal_r+0x144>
   2efa4:	d8c01c17 	ldw	r3,112(sp)
   2efa8:	d8801b17 	ldw	r2,108(sp)
   2efac:	44000015 	stw	r16,0(r8)
   2efb0:	88c7883a 	add	r3,r17,r3
   2efb4:	10800044 	addi	r2,r2,1
   2efb8:	44400115 	stw	r17,4(r8)
   2efbc:	d8c01c15 	stw	r3,112(sp)
   2efc0:	d8801b15 	stw	r2,108(sp)
   2efc4:	010001c4 	movi	r4,7
   2efc8:	2080760e 	bge	r4,r2,2f1a4 <___vfiprintf_internal_r+0x304>
   2efcc:	1803821e 	bne	r3,zero,2fdd8 <___vfiprintf_internal_r+0xf38>
   2efd0:	da802317 	ldw	r10,140(sp)
   2efd4:	d8001b15 	stw	zero,108(sp)
   2efd8:	d811883a 	mov	r8,sp
   2efdc:	5455883a 	add	r10,r10,r17
   2efe0:	da802315 	stw	r10,140(sp)
   2efe4:	90800007 	ldb	r2,0(r18)
   2efe8:	10044626 	beq	r2,zero,30104 <___vfiprintf_internal_r+0x1264>
   2efec:	90c00047 	ldb	r3,1(r18)
   2eff0:	94000044 	addi	r16,r18,1
   2eff4:	d8001d85 	stb	zero,118(sp)
   2eff8:	0009883a 	mov	r4,zero
   2effc:	000f883a 	mov	r7,zero
   2f000:	027fffc4 	movi	r9,-1
   2f004:	0023883a 	mov	r17,zero
   2f008:	0029883a 	mov	r20,zero
   2f00c:	01401604 	movi	r5,88
   2f010:	01800244 	movi	r6,9
   2f014:	03400a84 	movi	r13,42
   2f018:	03001b04 	movi	r12,108
   2f01c:	84000044 	addi	r16,r16,1
   2f020:	18bff804 	addi	r2,r3,-32
   2f024:	28827336 	bltu	r5,r2,2f9f4 <___vfiprintf_internal_r+0xb54>
   2f028:	100490ba 	slli	r2,r2,2
   2f02c:	028000f4 	movhi	r10,3
   2f030:	52bc1004 	addi	r10,r10,-4032
   2f034:	1285883a 	add	r2,r2,r10
   2f038:	10800017 	ldw	r2,0(r2)
   2f03c:	1000683a 	jmp	r2
   2f040:	0002f728 	cmpgeui	zero,zero,3036
   2f044:	0002f9f4 	movhi	zero,3047
   2f048:	0002f9f4 	movhi	zero,3047
   2f04c:	0002f748 	cmpgei	zero,zero,3037
   2f050:	0002f9f4 	movhi	zero,3047
   2f054:	0002f9f4 	movhi	zero,3047
   2f058:	0002f9f4 	movhi	zero,3047
   2f05c:	0002f9f4 	movhi	zero,3047
   2f060:	0002f9f4 	movhi	zero,3047
   2f064:	0002f9f4 	movhi	zero,3047
   2f068:	0002f930 	cmpltui	zero,zero,3044
   2f06c:	0002f94c 	andi	zero,zero,3045
   2f070:	0002f9f4 	movhi	zero,3047
   2f074:	0002f234 	movhi	zero,3016
   2f078:	0002f95c 	xori	zero,zero,3045
   2f07c:	0002f9f4 	movhi	zero,3047
   2f080:	0002f754 	movui	zero,3037
   2f084:	0002f760 	cmpeqi	zero,zero,3037
   2f088:	0002f760 	cmpeqi	zero,zero,3037
   2f08c:	0002f760 	cmpeqi	zero,zero,3037
   2f090:	0002f760 	cmpeqi	zero,zero,3037
   2f094:	0002f760 	cmpeqi	zero,zero,3037
   2f098:	0002f760 	cmpeqi	zero,zero,3037
   2f09c:	0002f760 	cmpeqi	zero,zero,3037
   2f0a0:	0002f760 	cmpeqi	zero,zero,3037
   2f0a4:	0002f760 	cmpeqi	zero,zero,3037
   2f0a8:	0002f9f4 	movhi	zero,3047
   2f0ac:	0002f9f4 	movhi	zero,3047
   2f0b0:	0002f9f4 	movhi	zero,3047
   2f0b4:	0002f9f4 	movhi	zero,3047
   2f0b8:	0002f9f4 	movhi	zero,3047
   2f0bc:	0002f9f4 	movhi	zero,3047
   2f0c0:	0002f9f4 	movhi	zero,3047
   2f0c4:	0002f9f4 	movhi	zero,3047
   2f0c8:	0002f9f4 	movhi	zero,3047
   2f0cc:	0002f9f4 	movhi	zero,3047
   2f0d0:	0002f78c 	andi	zero,zero,3038
   2f0d4:	0002f9f4 	movhi	zero,3047
   2f0d8:	0002f9f4 	movhi	zero,3047
   2f0dc:	0002f9f4 	movhi	zero,3047
   2f0e0:	0002f9f4 	movhi	zero,3047
   2f0e4:	0002f9f4 	movhi	zero,3047
   2f0e8:	0002f9f4 	movhi	zero,3047
   2f0ec:	0002f9f4 	movhi	zero,3047
   2f0f0:	0002f9f4 	movhi	zero,3047
   2f0f4:	0002f9f4 	movhi	zero,3047
   2f0f8:	0002f9f4 	movhi	zero,3047
   2f0fc:	0002f7c4 	movi	zero,3039
   2f100:	0002f9f4 	movhi	zero,3047
   2f104:	0002f9f4 	movhi	zero,3047
   2f108:	0002f9f4 	movhi	zero,3047
   2f10c:	0002f9f4 	movhi	zero,3047
   2f110:	0002f9f4 	movhi	zero,3047
   2f114:	0002f81c 	xori	zero,zero,3040
   2f118:	0002f9f4 	movhi	zero,3047
   2f11c:	0002f9f4 	movhi	zero,3047
   2f120:	0002f88c 	andi	zero,zero,3042
   2f124:	0002f9f4 	movhi	zero,3047
   2f128:	0002f9f4 	movhi	zero,3047
   2f12c:	0002f9f4 	movhi	zero,3047
   2f130:	0002f9f4 	movhi	zero,3047
   2f134:	0002f9f4 	movhi	zero,3047
   2f138:	0002f9f4 	movhi	zero,3047
   2f13c:	0002f9f4 	movhi	zero,3047
   2f140:	0002f9f4 	movhi	zero,3047
   2f144:	0002f9f4 	movhi	zero,3047
   2f148:	0002f9f4 	movhi	zero,3047
   2f14c:	0002f638 	rdprs	zero,zero,3032
   2f150:	0002f664 	muli	zero,zero,3033
   2f154:	0002f9f4 	movhi	zero,3047
   2f158:	0002f9f4 	movhi	zero,3047
   2f15c:	0002f9f4 	movhi	zero,3047
   2f160:	0002f99c 	xori	zero,zero,3046
   2f164:	0002f664 	muli	zero,zero,3033
   2f168:	0002f9f4 	movhi	zero,3047
   2f16c:	0002f9f4 	movhi	zero,3047
   2f170:	0002f4f8 	rdprs	zero,zero,3027
   2f174:	0002f9f4 	movhi	zero,3047
   2f178:	0002f508 	cmpgei	zero,zero,3028
   2f17c:	0002f544 	movi	zero,3029
   2f180:	0002f240 	call	2f24 <__alt_mem_onchip_memory-0x1d0dc>
   2f184:	0002f4ec 	andhi	zero,zero,3027
   2f188:	0002f9f4 	movhi	zero,3047
   2f18c:	0002f8c8 	cmpgei	zero,zero,3043
   2f190:	0002f9f4 	movhi	zero,3047
   2f194:	0002f920 	cmpeqi	zero,zero,3044
   2f198:	0002f9f4 	movhi	zero,3047
   2f19c:	0002f9f4 	movhi	zero,3047
   2f1a0:	0002f5e4 	muli	zero,zero,3031
   2f1a4:	42000204 	addi	r8,r8,8
   2f1a8:	da802317 	ldw	r10,140(sp)
   2f1ac:	5455883a 	add	r10,r10,r17
   2f1b0:	da802315 	stw	r10,140(sp)
   2f1b4:	003f8b06 	br	2efe4 <__alt_mem_SDRAM_controller+0xfc02efe4>
   2f1b8:	d9002017 	ldw	r4,128(sp)
   2f1bc:	a00b883a 	mov	r5,r20
   2f1c0:	0029bd00 	call	29bd0 <__swsetup_r>
   2f1c4:	1003b11e 	bne	r2,zero,3008c <___vfiprintf_internal_r+0x11ec>
   2f1c8:	a080030b 	ldhu	r2,12(r20)
   2f1cc:	00c00284 	movi	r3,10
   2f1d0:	1080068c 	andi	r2,r2,26
   2f1d4:	10ff541e 	bne	r2,r3,2ef28 <__alt_mem_SDRAM_controller+0xfc02ef28>
   2f1d8:	a080038f 	ldh	r2,14(r20)
   2f1dc:	103f5216 	blt	r2,zero,2ef28 <__alt_mem_SDRAM_controller+0xfc02ef28>
   2f1e0:	d9c02217 	ldw	r7,136(sp)
   2f1e4:	d9002017 	ldw	r4,128(sp)
   2f1e8:	e00d883a 	mov	r6,fp
   2f1ec:	a00b883a 	mov	r5,r20
   2f1f0:	00303180 	call	30318 <__sbprintf>
   2f1f4:	dfc03617 	ldw	ra,216(sp)
   2f1f8:	df003517 	ldw	fp,212(sp)
   2f1fc:	ddc03417 	ldw	r23,208(sp)
   2f200:	dd803317 	ldw	r22,204(sp)
   2f204:	dd403217 	ldw	r21,200(sp)
   2f208:	dd003117 	ldw	r20,196(sp)
   2f20c:	dcc03017 	ldw	r19,192(sp)
   2f210:	dc802f17 	ldw	r18,188(sp)
   2f214:	dc402e17 	ldw	r17,184(sp)
   2f218:	dc002d17 	ldw	r16,180(sp)
   2f21c:	dec03704 	addi	sp,sp,220
   2f220:	f800283a 	ret
   2f224:	002bba40 	call	2bba4 <__sinit>
   2f228:	003f2f06 	br	2eee8 <__alt_mem_SDRAM_controller+0xfc02eee8>
   2f22c:	0463c83a 	sub	r17,zero,r17
   2f230:	d8802215 	stw	r2,136(sp)
   2f234:	a5000114 	ori	r20,r20,4
   2f238:	80c00007 	ldb	r3,0(r16)
   2f23c:	003f7706 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f240:	00800c04 	movi	r2,48
   2f244:	da802217 	ldw	r10,136(sp)
   2f248:	d8801d05 	stb	r2,116(sp)
   2f24c:	00801e04 	movi	r2,120
   2f250:	d8801d45 	stb	r2,117(sp)
   2f254:	d8001d85 	stb	zero,118(sp)
   2f258:	50c00104 	addi	r3,r10,4
   2f25c:	54800017 	ldw	r18,0(r10)
   2f260:	0027883a 	mov	r19,zero
   2f264:	a0800094 	ori	r2,r20,2
   2f268:	48030b16 	blt	r9,zero,2fe98 <___vfiprintf_internal_r+0xff8>
   2f26c:	00bfdfc4 	movi	r2,-129
   2f270:	a096703a 	and	r11,r20,r2
   2f274:	d8c02215 	stw	r3,136(sp)
   2f278:	5d000094 	ori	r20,r11,2
   2f27c:	90032b1e 	bne	r18,zero,2ff2c <___vfiprintf_internal_r+0x108c>
   2f280:	008000f4 	movhi	r2,3
   2f284:	1098cc04 	addi	r2,r2,25392
   2f288:	d8802615 	stw	r2,152(sp)
   2f28c:	0039883a 	mov	fp,zero
   2f290:	48017b1e 	bne	r9,zero,2f880 <___vfiprintf_internal_r+0x9e0>
   2f294:	0013883a 	mov	r9,zero
   2f298:	0027883a 	mov	r19,zero
   2f29c:	dd401a04 	addi	r21,sp,104
   2f2a0:	4825883a 	mov	r18,r9
   2f2a4:	4cc0010e 	bge	r9,r19,2f2ac <___vfiprintf_internal_r+0x40c>
   2f2a8:	9825883a 	mov	r18,r19
   2f2ac:	e7003fcc 	andi	fp,fp,255
   2f2b0:	e700201c 	xori	fp,fp,128
   2f2b4:	e73fe004 	addi	fp,fp,-128
   2f2b8:	e0000126 	beq	fp,zero,2f2c0 <___vfiprintf_internal_r+0x420>
   2f2bc:	94800044 	addi	r18,r18,1
   2f2c0:	a380008c 	andi	r14,r20,2
   2f2c4:	70000126 	beq	r14,zero,2f2cc <___vfiprintf_internal_r+0x42c>
   2f2c8:	94800084 	addi	r18,r18,2
   2f2cc:	a700210c 	andi	fp,r20,132
   2f2d0:	e001df1e 	bne	fp,zero,2fa50 <___vfiprintf_internal_r+0xbb0>
   2f2d4:	8c87c83a 	sub	r3,r17,r18
   2f2d8:	00c1dd0e 	bge	zero,r3,2fa50 <___vfiprintf_internal_r+0xbb0>
   2f2dc:	01c00404 	movi	r7,16
   2f2e0:	d8801c17 	ldw	r2,112(sp)
   2f2e4:	38c3ad0e 	bge	r7,r3,3019c <___vfiprintf_internal_r+0x12fc>
   2f2e8:	028000f4 	movhi	r10,3
   2f2ec:	52993004 	addi	r10,r10,25792
   2f2f0:	dc002915 	stw	r16,164(sp)
   2f2f4:	d9801b17 	ldw	r6,108(sp)
   2f2f8:	da802415 	stw	r10,144(sp)
   2f2fc:	03c001c4 	movi	r15,7
   2f300:	da402515 	stw	r9,148(sp)
   2f304:	db802815 	stw	r14,160(sp)
   2f308:	1821883a 	mov	r16,r3
   2f30c:	00000506 	br	2f324 <___vfiprintf_internal_r+0x484>
   2f310:	31400084 	addi	r5,r6,2
   2f314:	42000204 	addi	r8,r8,8
   2f318:	200d883a 	mov	r6,r4
   2f31c:	843ffc04 	addi	r16,r16,-16
   2f320:	3c000d0e 	bge	r7,r16,2f358 <___vfiprintf_internal_r+0x4b8>
   2f324:	10800404 	addi	r2,r2,16
   2f328:	31000044 	addi	r4,r6,1
   2f32c:	45800015 	stw	r22,0(r8)
   2f330:	41c00115 	stw	r7,4(r8)
   2f334:	d8801c15 	stw	r2,112(sp)
   2f338:	d9001b15 	stw	r4,108(sp)
   2f33c:	793ff40e 	bge	r15,r4,2f310 <__alt_mem_SDRAM_controller+0xfc02f310>
   2f340:	1001b51e 	bne	r2,zero,2fa18 <___vfiprintf_internal_r+0xb78>
   2f344:	843ffc04 	addi	r16,r16,-16
   2f348:	000d883a 	mov	r6,zero
   2f34c:	01400044 	movi	r5,1
   2f350:	d811883a 	mov	r8,sp
   2f354:	3c3ff316 	blt	r7,r16,2f324 <__alt_mem_SDRAM_controller+0xfc02f324>
   2f358:	8007883a 	mov	r3,r16
   2f35c:	da402517 	ldw	r9,148(sp)
   2f360:	db802817 	ldw	r14,160(sp)
   2f364:	dc002917 	ldw	r16,164(sp)
   2f368:	da802417 	ldw	r10,144(sp)
   2f36c:	1885883a 	add	r2,r3,r2
   2f370:	40c00115 	stw	r3,4(r8)
   2f374:	42800015 	stw	r10,0(r8)
   2f378:	d8801c15 	stw	r2,112(sp)
   2f37c:	d9401b15 	stw	r5,108(sp)
   2f380:	00c001c4 	movi	r3,7
   2f384:	19426016 	blt	r3,r5,2fd08 <___vfiprintf_internal_r+0xe68>
   2f388:	d8c01d87 	ldb	r3,118(sp)
   2f38c:	42000204 	addi	r8,r8,8
   2f390:	29000044 	addi	r4,r5,1
   2f394:	1801b31e 	bne	r3,zero,2fa64 <___vfiprintf_internal_r+0xbc4>
   2f398:	7001c026 	beq	r14,zero,2fa9c <___vfiprintf_internal_r+0xbfc>
   2f39c:	d8c01d04 	addi	r3,sp,116
   2f3a0:	10800084 	addi	r2,r2,2
   2f3a4:	40c00015 	stw	r3,0(r8)
   2f3a8:	00c00084 	movi	r3,2
   2f3ac:	40c00115 	stw	r3,4(r8)
   2f3b0:	d8801c15 	stw	r2,112(sp)
   2f3b4:	d9001b15 	stw	r4,108(sp)
   2f3b8:	00c001c4 	movi	r3,7
   2f3bc:	1902650e 	bge	r3,r4,2fd54 <___vfiprintf_internal_r+0xeb4>
   2f3c0:	10029a1e 	bne	r2,zero,2fe2c <___vfiprintf_internal_r+0xf8c>
   2f3c4:	00c02004 	movi	r3,128
   2f3c8:	01000044 	movi	r4,1
   2f3cc:	000b883a 	mov	r5,zero
   2f3d0:	d811883a 	mov	r8,sp
   2f3d4:	e0c1b31e 	bne	fp,r3,2faa4 <___vfiprintf_internal_r+0xc04>
   2f3d8:	8cb9c83a 	sub	fp,r17,r18
   2f3dc:	0701b10e 	bge	zero,fp,2faa4 <___vfiprintf_internal_r+0xc04>
   2f3e0:	01c00404 	movi	r7,16
   2f3e4:	3f03890e 	bge	r7,fp,3020c <___vfiprintf_internal_r+0x136c>
   2f3e8:	00c000f4 	movhi	r3,3
   2f3ec:	18d92c04 	addi	r3,r3,25776
   2f3f0:	d8c02415 	stw	r3,144(sp)
   2f3f4:	8007883a 	mov	r3,r16
   2f3f8:	034001c4 	movi	r13,7
   2f3fc:	e021883a 	mov	r16,fp
   2f400:	da402515 	stw	r9,148(sp)
   2f404:	1839883a 	mov	fp,r3
   2f408:	00000506 	br	2f420 <___vfiprintf_internal_r+0x580>
   2f40c:	29800084 	addi	r6,r5,2
   2f410:	42000204 	addi	r8,r8,8
   2f414:	180b883a 	mov	r5,r3
   2f418:	843ffc04 	addi	r16,r16,-16
   2f41c:	3c000d0e 	bge	r7,r16,2f454 <___vfiprintf_internal_r+0x5b4>
   2f420:	10800404 	addi	r2,r2,16
   2f424:	28c00044 	addi	r3,r5,1
   2f428:	45c00015 	stw	r23,0(r8)
   2f42c:	41c00115 	stw	r7,4(r8)
   2f430:	d8801c15 	stw	r2,112(sp)
   2f434:	d8c01b15 	stw	r3,108(sp)
   2f438:	68fff40e 	bge	r13,r3,2f40c <__alt_mem_SDRAM_controller+0xfc02f40c>
   2f43c:	1002241e 	bne	r2,zero,2fcd0 <___vfiprintf_internal_r+0xe30>
   2f440:	843ffc04 	addi	r16,r16,-16
   2f444:	01800044 	movi	r6,1
   2f448:	000b883a 	mov	r5,zero
   2f44c:	d811883a 	mov	r8,sp
   2f450:	3c3ff316 	blt	r7,r16,2f420 <__alt_mem_SDRAM_controller+0xfc02f420>
   2f454:	da402517 	ldw	r9,148(sp)
   2f458:	e007883a 	mov	r3,fp
   2f45c:	8039883a 	mov	fp,r16
   2f460:	1821883a 	mov	r16,r3
   2f464:	d8c02417 	ldw	r3,144(sp)
   2f468:	1705883a 	add	r2,r2,fp
   2f46c:	47000115 	stw	fp,4(r8)
   2f470:	40c00015 	stw	r3,0(r8)
   2f474:	d8801c15 	stw	r2,112(sp)
   2f478:	d9801b15 	stw	r6,108(sp)
   2f47c:	00c001c4 	movi	r3,7
   2f480:	19827616 	blt	r3,r6,2fe5c <___vfiprintf_internal_r+0xfbc>
   2f484:	4cf9c83a 	sub	fp,r9,r19
   2f488:	42000204 	addi	r8,r8,8
   2f48c:	31000044 	addi	r4,r6,1
   2f490:	300b883a 	mov	r5,r6
   2f494:	07018516 	blt	zero,fp,2faac <___vfiprintf_internal_r+0xc0c>
   2f498:	9885883a 	add	r2,r19,r2
   2f49c:	45400015 	stw	r21,0(r8)
   2f4a0:	44c00115 	stw	r19,4(r8)
   2f4a4:	d8801c15 	stw	r2,112(sp)
   2f4a8:	d9001b15 	stw	r4,108(sp)
   2f4ac:	00c001c4 	movi	r3,7
   2f4b0:	1901dd0e 	bge	r3,r4,2fc28 <___vfiprintf_internal_r+0xd88>
   2f4b4:	1002401e 	bne	r2,zero,2fdb8 <___vfiprintf_internal_r+0xf18>
   2f4b8:	d8001b15 	stw	zero,108(sp)
   2f4bc:	a2c0010c 	andi	r11,r20,4
   2f4c0:	58000226 	beq	r11,zero,2f4cc <___vfiprintf_internal_r+0x62c>
   2f4c4:	8ca7c83a 	sub	r19,r17,r18
   2f4c8:	04c2f216 	blt	zero,r19,30094 <___vfiprintf_internal_r+0x11f4>
   2f4cc:	8c80010e 	bge	r17,r18,2f4d4 <___vfiprintf_internal_r+0x634>
   2f4d0:	9023883a 	mov	r17,r18
   2f4d4:	da802317 	ldw	r10,140(sp)
   2f4d8:	5455883a 	add	r10,r10,r17
   2f4dc:	da802315 	stw	r10,140(sp)
   2f4e0:	d8001b15 	stw	zero,108(sp)
   2f4e4:	d811883a 	mov	r8,sp
   2f4e8:	003ea206 	br	2ef74 <__alt_mem_SDRAM_controller+0xfc02ef74>
   2f4ec:	a5000814 	ori	r20,r20,32
   2f4f0:	80c00007 	ldb	r3,0(r16)
   2f4f4:	003ec906 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f4f8:	80c00007 	ldb	r3,0(r16)
   2f4fc:	1b030926 	beq	r3,r12,30124 <___vfiprintf_internal_r+0x1284>
   2f500:	a5000414 	ori	r20,r20,16
   2f504:	003ec506 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f508:	21003fcc 	andi	r4,r4,255
   2f50c:	20035e1e 	bne	r4,zero,30288 <___vfiprintf_internal_r+0x13e8>
   2f510:	a080080c 	andi	r2,r20,32
   2f514:	1002a526 	beq	r2,zero,2ffac <___vfiprintf_internal_r+0x110c>
   2f518:	da802217 	ldw	r10,136(sp)
   2f51c:	50800017 	ldw	r2,0(r10)
   2f520:	da802317 	ldw	r10,140(sp)
   2f524:	5007d7fa 	srai	r3,r10,31
   2f528:	da802217 	ldw	r10,136(sp)
   2f52c:	10c00115 	stw	r3,4(r2)
   2f530:	52800104 	addi	r10,r10,4
   2f534:	da802215 	stw	r10,136(sp)
   2f538:	da802317 	ldw	r10,140(sp)
   2f53c:	12800015 	stw	r10,0(r2)
   2f540:	003e8c06 	br	2ef74 <__alt_mem_SDRAM_controller+0xfc02ef74>
   2f544:	21003fcc 	andi	r4,r4,255
   2f548:	2003511e 	bne	r4,zero,30290 <___vfiprintf_internal_r+0x13f0>
   2f54c:	a080080c 	andi	r2,r20,32
   2f550:	1000a126 	beq	r2,zero,2f7d8 <___vfiprintf_internal_r+0x938>
   2f554:	da802217 	ldw	r10,136(sp)
   2f558:	d8001d85 	stb	zero,118(sp)
   2f55c:	50800204 	addi	r2,r10,8
   2f560:	54800017 	ldw	r18,0(r10)
   2f564:	54c00117 	ldw	r19,4(r10)
   2f568:	4802b416 	blt	r9,zero,3003c <___vfiprintf_internal_r+0x119c>
   2f56c:	013fdfc4 	movi	r4,-129
   2f570:	94c6b03a 	or	r3,r18,r19
   2f574:	d8802215 	stw	r2,136(sp)
   2f578:	a128703a 	and	r20,r20,r4
   2f57c:	1800a226 	beq	r3,zero,2f808 <___vfiprintf_internal_r+0x968>
   2f580:	0039883a 	mov	fp,zero
   2f584:	dd401a04 	addi	r21,sp,104
   2f588:	9006d0fa 	srli	r3,r18,3
   2f58c:	9808977a 	slli	r4,r19,29
   2f590:	9826d0fa 	srli	r19,r19,3
   2f594:	948001cc 	andi	r18,r18,7
   2f598:	90800c04 	addi	r2,r18,48
   2f59c:	ad7fffc4 	addi	r21,r21,-1
   2f5a0:	20e4b03a 	or	r18,r4,r3
   2f5a4:	a8800005 	stb	r2,0(r21)
   2f5a8:	94c6b03a 	or	r3,r18,r19
   2f5ac:	183ff61e 	bne	r3,zero,2f588 <__alt_mem_SDRAM_controller+0xfc02f588>
   2f5b0:	a0c0004c 	andi	r3,r20,1
   2f5b4:	18005926 	beq	r3,zero,2f71c <___vfiprintf_internal_r+0x87c>
   2f5b8:	10803fcc 	andi	r2,r2,255
   2f5bc:	1080201c 	xori	r2,r2,128
   2f5c0:	10bfe004 	addi	r2,r2,-128
   2f5c4:	00c00c04 	movi	r3,48
   2f5c8:	10c05426 	beq	r2,r3,2f71c <___vfiprintf_internal_r+0x87c>
   2f5cc:	da801e17 	ldw	r10,120(sp)
   2f5d0:	a8bfffc4 	addi	r2,r21,-1
   2f5d4:	a8ffffc5 	stb	r3,-1(r21)
   2f5d8:	50a7c83a 	sub	r19,r10,r2
   2f5dc:	102b883a 	mov	r21,r2
   2f5e0:	003f2f06 	br	2f2a0 <__alt_mem_SDRAM_controller+0xfc02f2a0>
   2f5e4:	21003fcc 	andi	r4,r4,255
   2f5e8:	2003421e 	bne	r4,zero,302f4 <___vfiprintf_internal_r+0x1454>
   2f5ec:	008000f4 	movhi	r2,3
   2f5f0:	1098cc04 	addi	r2,r2,25392
   2f5f4:	d8802615 	stw	r2,152(sp)
   2f5f8:	a080080c 	andi	r2,r20,32
   2f5fc:	1000aa26 	beq	r2,zero,2f8a8 <___vfiprintf_internal_r+0xa08>
   2f600:	da802217 	ldw	r10,136(sp)
   2f604:	54800017 	ldw	r18,0(r10)
   2f608:	54c00117 	ldw	r19,4(r10)
   2f60c:	52800204 	addi	r10,r10,8
   2f610:	da802215 	stw	r10,136(sp)
   2f614:	a080004c 	andi	r2,r20,1
   2f618:	1001d226 	beq	r2,zero,2fd64 <___vfiprintf_internal_r+0xec4>
   2f61c:	94c4b03a 	or	r2,r18,r19
   2f620:	1002351e 	bne	r2,zero,2fef8 <___vfiprintf_internal_r+0x1058>
   2f624:	d8001d85 	stb	zero,118(sp)
   2f628:	48022216 	blt	r9,zero,2feb4 <___vfiprintf_internal_r+0x1014>
   2f62c:	00bfdfc4 	movi	r2,-129
   2f630:	a0a8703a 	and	r20,r20,r2
   2f634:	003f1506 	br	2f28c <__alt_mem_SDRAM_controller+0xfc02f28c>
   2f638:	da802217 	ldw	r10,136(sp)
   2f63c:	04800044 	movi	r18,1
   2f640:	d8001d85 	stb	zero,118(sp)
   2f644:	50800017 	ldw	r2,0(r10)
   2f648:	52800104 	addi	r10,r10,4
   2f64c:	da802215 	stw	r10,136(sp)
   2f650:	d8801005 	stb	r2,64(sp)
   2f654:	9027883a 	mov	r19,r18
   2f658:	dd401004 	addi	r21,sp,64
   2f65c:	0013883a 	mov	r9,zero
   2f660:	003f1706 	br	2f2c0 <__alt_mem_SDRAM_controller+0xfc02f2c0>
   2f664:	21003fcc 	andi	r4,r4,255
   2f668:	2003201e 	bne	r4,zero,302ec <___vfiprintf_internal_r+0x144c>
   2f66c:	a080080c 	andi	r2,r20,32
   2f670:	10004b26 	beq	r2,zero,2f7a0 <___vfiprintf_internal_r+0x900>
   2f674:	da802217 	ldw	r10,136(sp)
   2f678:	50800117 	ldw	r2,4(r10)
   2f67c:	54800017 	ldw	r18,0(r10)
   2f680:	52800204 	addi	r10,r10,8
   2f684:	da802215 	stw	r10,136(sp)
   2f688:	1027883a 	mov	r19,r2
   2f68c:	10022c16 	blt	r2,zero,2ff40 <___vfiprintf_internal_r+0x10a0>
   2f690:	df001d83 	ldbu	fp,118(sp)
   2f694:	48007216 	blt	r9,zero,2f860 <___vfiprintf_internal_r+0x9c0>
   2f698:	00ffdfc4 	movi	r3,-129
   2f69c:	94c4b03a 	or	r2,r18,r19
   2f6a0:	a0e8703a 	and	r20,r20,r3
   2f6a4:	1000cc26 	beq	r2,zero,2f9d8 <___vfiprintf_internal_r+0xb38>
   2f6a8:	98021026 	beq	r19,zero,2feec <___vfiprintf_internal_r+0x104c>
   2f6ac:	dc402415 	stw	r17,144(sp)
   2f6b0:	dc002515 	stw	r16,148(sp)
   2f6b4:	9823883a 	mov	r17,r19
   2f6b8:	9021883a 	mov	r16,r18
   2f6bc:	dd401a04 	addi	r21,sp,104
   2f6c0:	4825883a 	mov	r18,r9
   2f6c4:	4027883a 	mov	r19,r8
   2f6c8:	8009883a 	mov	r4,r16
   2f6cc:	880b883a 	mov	r5,r17
   2f6d0:	01800284 	movi	r6,10
   2f6d4:	000f883a 	mov	r7,zero
   2f6d8:	00312800 	call	31280 <__umoddi3>
   2f6dc:	10800c04 	addi	r2,r2,48
   2f6e0:	ad7fffc4 	addi	r21,r21,-1
   2f6e4:	8009883a 	mov	r4,r16
   2f6e8:	880b883a 	mov	r5,r17
   2f6ec:	a8800005 	stb	r2,0(r21)
   2f6f0:	01800284 	movi	r6,10
   2f6f4:	000f883a 	mov	r7,zero
   2f6f8:	0030d080 	call	30d08 <__udivdi3>
   2f6fc:	1021883a 	mov	r16,r2
   2f700:	10c4b03a 	or	r2,r2,r3
   2f704:	1823883a 	mov	r17,r3
   2f708:	103fef1e 	bne	r2,zero,2f6c8 <__alt_mem_SDRAM_controller+0xfc02f6c8>
   2f70c:	dc402417 	ldw	r17,144(sp)
   2f710:	dc002517 	ldw	r16,148(sp)
   2f714:	9013883a 	mov	r9,r18
   2f718:	9811883a 	mov	r8,r19
   2f71c:	da801e17 	ldw	r10,120(sp)
   2f720:	5567c83a 	sub	r19,r10,r21
   2f724:	003ede06 	br	2f2a0 <__alt_mem_SDRAM_controller+0xfc02f2a0>
   2f728:	38803fcc 	andi	r2,r7,255
   2f72c:	1080201c 	xori	r2,r2,128
   2f730:	10bfe004 	addi	r2,r2,-128
   2f734:	1002371e 	bne	r2,zero,30014 <___vfiprintf_internal_r+0x1174>
   2f738:	01000044 	movi	r4,1
   2f73c:	01c00804 	movi	r7,32
   2f740:	80c00007 	ldb	r3,0(r16)
   2f744:	003e3506 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f748:	a5000054 	ori	r20,r20,1
   2f74c:	80c00007 	ldb	r3,0(r16)
   2f750:	003e3206 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f754:	a5002014 	ori	r20,r20,128
   2f758:	80c00007 	ldb	r3,0(r16)
   2f75c:	003e2f06 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f760:	8015883a 	mov	r10,r16
   2f764:	0023883a 	mov	r17,zero
   2f768:	18bff404 	addi	r2,r3,-48
   2f76c:	50c00007 	ldb	r3,0(r10)
   2f770:	8c4002a4 	muli	r17,r17,10
   2f774:	84000044 	addi	r16,r16,1
   2f778:	8015883a 	mov	r10,r16
   2f77c:	1463883a 	add	r17,r2,r17
   2f780:	18bff404 	addi	r2,r3,-48
   2f784:	30bff92e 	bgeu	r6,r2,2f76c <__alt_mem_SDRAM_controller+0xfc02f76c>
   2f788:	003e2506 	br	2f020 <__alt_mem_SDRAM_controller+0xfc02f020>
   2f78c:	21003fcc 	andi	r4,r4,255
   2f790:	2002d41e 	bne	r4,zero,302e4 <___vfiprintf_internal_r+0x1444>
   2f794:	a5000414 	ori	r20,r20,16
   2f798:	a080080c 	andi	r2,r20,32
   2f79c:	103fb51e 	bne	r2,zero,2f674 <__alt_mem_SDRAM_controller+0xfc02f674>
   2f7a0:	a080040c 	andi	r2,r20,16
   2f7a4:	1001f826 	beq	r2,zero,2ff88 <___vfiprintf_internal_r+0x10e8>
   2f7a8:	da802217 	ldw	r10,136(sp)
   2f7ac:	54800017 	ldw	r18,0(r10)
   2f7b0:	52800104 	addi	r10,r10,4
   2f7b4:	da802215 	stw	r10,136(sp)
   2f7b8:	9027d7fa 	srai	r19,r18,31
   2f7bc:	9805883a 	mov	r2,r19
   2f7c0:	003fb206 	br	2f68c <__alt_mem_SDRAM_controller+0xfc02f68c>
   2f7c4:	21003fcc 	andi	r4,r4,255
   2f7c8:	2002c41e 	bne	r4,zero,302dc <___vfiprintf_internal_r+0x143c>
   2f7cc:	a5000414 	ori	r20,r20,16
   2f7d0:	a080080c 	andi	r2,r20,32
   2f7d4:	103f5f1e 	bne	r2,zero,2f554 <__alt_mem_SDRAM_controller+0xfc02f554>
   2f7d8:	a080040c 	andi	r2,r20,16
   2f7dc:	10020f26 	beq	r2,zero,3001c <___vfiprintf_internal_r+0x117c>
   2f7e0:	da802217 	ldw	r10,136(sp)
   2f7e4:	d8001d85 	stb	zero,118(sp)
   2f7e8:	0027883a 	mov	r19,zero
   2f7ec:	50800104 	addi	r2,r10,4
   2f7f0:	54800017 	ldw	r18,0(r10)
   2f7f4:	48021116 	blt	r9,zero,3003c <___vfiprintf_internal_r+0x119c>
   2f7f8:	00ffdfc4 	movi	r3,-129
   2f7fc:	d8802215 	stw	r2,136(sp)
   2f800:	a0e8703a 	and	r20,r20,r3
   2f804:	903f5e1e 	bne	r18,zero,2f580 <__alt_mem_SDRAM_controller+0xfc02f580>
   2f808:	0039883a 	mov	fp,zero
   2f80c:	4802a626 	beq	r9,zero,302a8 <___vfiprintf_internal_r+0x1408>
   2f810:	0025883a 	mov	r18,zero
   2f814:	0027883a 	mov	r19,zero
   2f818:	003f5a06 	br	2f584 <__alt_mem_SDRAM_controller+0xfc02f584>
   2f81c:	21003fcc 	andi	r4,r4,255
   2f820:	20029f1e 	bne	r4,zero,302a0 <___vfiprintf_internal_r+0x1400>
   2f824:	a5000414 	ori	r20,r20,16
   2f828:	a080080c 	andi	r2,r20,32
   2f82c:	10005e1e 	bne	r2,zero,2f9a8 <___vfiprintf_internal_r+0xb08>
   2f830:	a080040c 	andi	r2,r20,16
   2f834:	1001a21e 	bne	r2,zero,2fec0 <___vfiprintf_internal_r+0x1020>
   2f838:	a080100c 	andi	r2,r20,64
   2f83c:	d8001d85 	stb	zero,118(sp)
   2f840:	da802217 	ldw	r10,136(sp)
   2f844:	1002231e 	bne	r2,zero,300d4 <___vfiprintf_internal_r+0x1234>
   2f848:	50800104 	addi	r2,r10,4
   2f84c:	54800017 	ldw	r18,0(r10)
   2f850:	0027883a 	mov	r19,zero
   2f854:	4801a00e 	bge	r9,zero,2fed8 <___vfiprintf_internal_r+0x1038>
   2f858:	d8802215 	stw	r2,136(sp)
   2f85c:	0039883a 	mov	fp,zero
   2f860:	94c4b03a 	or	r2,r18,r19
   2f864:	103f901e 	bne	r2,zero,2f6a8 <__alt_mem_SDRAM_controller+0xfc02f6a8>
   2f868:	00800044 	movi	r2,1
   2f86c:	10803fcc 	andi	r2,r2,255
   2f870:	00c00044 	movi	r3,1
   2f874:	10c05926 	beq	r2,r3,2f9dc <___vfiprintf_internal_r+0xb3c>
   2f878:	00c00084 	movi	r3,2
   2f87c:	10ffe41e 	bne	r2,r3,2f810 <__alt_mem_SDRAM_controller+0xfc02f810>
   2f880:	0025883a 	mov	r18,zero
   2f884:	0027883a 	mov	r19,zero
   2f888:	00013d06 	br	2fd80 <___vfiprintf_internal_r+0xee0>
   2f88c:	21003fcc 	andi	r4,r4,255
   2f890:	2002811e 	bne	r4,zero,30298 <___vfiprintf_internal_r+0x13f8>
   2f894:	008000f4 	movhi	r2,3
   2f898:	1098c704 	addi	r2,r2,25372
   2f89c:	d8802615 	stw	r2,152(sp)
   2f8a0:	a080080c 	andi	r2,r20,32
   2f8a4:	103f561e 	bne	r2,zero,2f600 <__alt_mem_SDRAM_controller+0xfc02f600>
   2f8a8:	a080040c 	andi	r2,r20,16
   2f8ac:	1001d126 	beq	r2,zero,2fff4 <___vfiprintf_internal_r+0x1154>
   2f8b0:	da802217 	ldw	r10,136(sp)
   2f8b4:	0027883a 	mov	r19,zero
   2f8b8:	54800017 	ldw	r18,0(r10)
   2f8bc:	52800104 	addi	r10,r10,4
   2f8c0:	da802215 	stw	r10,136(sp)
   2f8c4:	003f5306 	br	2f614 <__alt_mem_SDRAM_controller+0xfc02f614>
   2f8c8:	da802217 	ldw	r10,136(sp)
   2f8cc:	d8001d85 	stb	zero,118(sp)
   2f8d0:	55400017 	ldw	r21,0(r10)
   2f8d4:	50c00104 	addi	r3,r10,4
   2f8d8:	a8024226 	beq	r21,zero,301e4 <___vfiprintf_internal_r+0x1344>
   2f8dc:	48021816 	blt	r9,zero,30140 <___vfiprintf_internal_r+0x12a0>
   2f8e0:	480d883a 	mov	r6,r9
   2f8e4:	000b883a 	mov	r5,zero
   2f8e8:	a809883a 	mov	r4,r21
   2f8ec:	d8c02a15 	stw	r3,168(sp)
   2f8f0:	da002b15 	stw	r8,172(sp)
   2f8f4:	da402c15 	stw	r9,176(sp)
   2f8f8:	002d1100 	call	2d110 <memchr>
   2f8fc:	d8c02a17 	ldw	r3,168(sp)
   2f900:	da002b17 	ldw	r8,172(sp)
   2f904:	da402c17 	ldw	r9,176(sp)
   2f908:	10024826 	beq	r2,zero,3022c <___vfiprintf_internal_r+0x138c>
   2f90c:	1567c83a 	sub	r19,r2,r21
   2f910:	df001d83 	ldbu	fp,118(sp)
   2f914:	d8c02215 	stw	r3,136(sp)
   2f918:	0013883a 	mov	r9,zero
   2f91c:	003e6006 	br	2f2a0 <__alt_mem_SDRAM_controller+0xfc02f2a0>
   2f920:	21003fcc 	andi	r4,r4,255
   2f924:	203fc026 	beq	r4,zero,2f828 <__alt_mem_SDRAM_controller+0xfc02f828>
   2f928:	d9c01d85 	stb	r7,118(sp)
   2f92c:	003fbe06 	br	2f828 <__alt_mem_SDRAM_controller+0xfc02f828>
   2f930:	da802217 	ldw	r10,136(sp)
   2f934:	54400017 	ldw	r17,0(r10)
   2f938:	50800104 	addi	r2,r10,4
   2f93c:	883e3b16 	blt	r17,zero,2f22c <__alt_mem_SDRAM_controller+0xfc02f22c>
   2f940:	d8802215 	stw	r2,136(sp)
   2f944:	80c00007 	ldb	r3,0(r16)
   2f948:	003db406 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f94c:	01000044 	movi	r4,1
   2f950:	01c00ac4 	movi	r7,43
   2f954:	80c00007 	ldb	r3,0(r16)
   2f958:	003db006 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f95c:	80c00007 	ldb	r3,0(r16)
   2f960:	82800044 	addi	r10,r16,1
   2f964:	1b423c26 	beq	r3,r13,30258 <___vfiprintf_internal_r+0x13b8>
   2f968:	18bff404 	addi	r2,r3,-48
   2f96c:	0013883a 	mov	r9,zero
   2f970:	30822b36 	bltu	r6,r2,30220 <___vfiprintf_internal_r+0x1380>
   2f974:	50c00007 	ldb	r3,0(r10)
   2f978:	4a4002a4 	muli	r9,r9,10
   2f97c:	54000044 	addi	r16,r10,1
   2f980:	8015883a 	mov	r10,r16
   2f984:	4893883a 	add	r9,r9,r2
   2f988:	18bff404 	addi	r2,r3,-48
   2f98c:	30bff92e 	bgeu	r6,r2,2f974 <__alt_mem_SDRAM_controller+0xfc02f974>
   2f990:	483da30e 	bge	r9,zero,2f020 <__alt_mem_SDRAM_controller+0xfc02f020>
   2f994:	027fffc4 	movi	r9,-1
   2f998:	003da106 	br	2f020 <__alt_mem_SDRAM_controller+0xfc02f020>
   2f99c:	a5001014 	ori	r20,r20,64
   2f9a0:	80c00007 	ldb	r3,0(r16)
   2f9a4:	003d9d06 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   2f9a8:	da802217 	ldw	r10,136(sp)
   2f9ac:	d8001d85 	stb	zero,118(sp)
   2f9b0:	50c00204 	addi	r3,r10,8
   2f9b4:	54800017 	ldw	r18,0(r10)
   2f9b8:	54c00117 	ldw	r19,4(r10)
   2f9bc:	4801ca16 	blt	r9,zero,300e8 <___vfiprintf_internal_r+0x1248>
   2f9c0:	013fdfc4 	movi	r4,-129
   2f9c4:	94c4b03a 	or	r2,r18,r19
   2f9c8:	d8c02215 	stw	r3,136(sp)
   2f9cc:	a128703a 	and	r20,r20,r4
   2f9d0:	0039883a 	mov	fp,zero
   2f9d4:	103f341e 	bne	r2,zero,2f6a8 <__alt_mem_SDRAM_controller+0xfc02f6a8>
   2f9d8:	483e2e26 	beq	r9,zero,2f294 <__alt_mem_SDRAM_controller+0xfc02f294>
   2f9dc:	0025883a 	mov	r18,zero
   2f9e0:	94800c04 	addi	r18,r18,48
   2f9e4:	dc8019c5 	stb	r18,103(sp)
   2f9e8:	dcc02717 	ldw	r19,156(sp)
   2f9ec:	dd4019c4 	addi	r21,sp,103
   2f9f0:	003e2b06 	br	2f2a0 <__alt_mem_SDRAM_controller+0xfc02f2a0>
   2f9f4:	21003fcc 	andi	r4,r4,255
   2f9f8:	2002361e 	bne	r4,zero,302d4 <___vfiprintf_internal_r+0x1434>
   2f9fc:	1801c126 	beq	r3,zero,30104 <___vfiprintf_internal_r+0x1264>
   2fa00:	04800044 	movi	r18,1
   2fa04:	d8c01005 	stb	r3,64(sp)
   2fa08:	d8001d85 	stb	zero,118(sp)
   2fa0c:	9027883a 	mov	r19,r18
   2fa10:	dd401004 	addi	r21,sp,64
   2fa14:	003f1106 	br	2f65c <__alt_mem_SDRAM_controller+0xfc02f65c>
   2fa18:	d9402117 	ldw	r5,132(sp)
   2fa1c:	d9002017 	ldw	r4,128(sp)
   2fa20:	d9801a04 	addi	r6,sp,104
   2fa24:	d9c02b15 	stw	r7,172(sp)
   2fa28:	dbc02a15 	stw	r15,168(sp)
   2fa2c:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fa30:	d9c02b17 	ldw	r7,172(sp)
   2fa34:	dbc02a17 	ldw	r15,168(sp)
   2fa38:	10006d1e 	bne	r2,zero,2fbf0 <___vfiprintf_internal_r+0xd50>
   2fa3c:	d9801b17 	ldw	r6,108(sp)
   2fa40:	d8801c17 	ldw	r2,112(sp)
   2fa44:	d811883a 	mov	r8,sp
   2fa48:	31400044 	addi	r5,r6,1
   2fa4c:	003e3306 	br	2f31c <__alt_mem_SDRAM_controller+0xfc02f31c>
   2fa50:	d9401b17 	ldw	r5,108(sp)
   2fa54:	d8801c17 	ldw	r2,112(sp)
   2fa58:	29000044 	addi	r4,r5,1
   2fa5c:	d8c01d87 	ldb	r3,118(sp)
   2fa60:	183e4d26 	beq	r3,zero,2f398 <__alt_mem_SDRAM_controller+0xfc02f398>
   2fa64:	00c00044 	movi	r3,1
   2fa68:	d9401d84 	addi	r5,sp,118
   2fa6c:	10c5883a 	add	r2,r2,r3
   2fa70:	41400015 	stw	r5,0(r8)
   2fa74:	40c00115 	stw	r3,4(r8)
   2fa78:	d8801c15 	stw	r2,112(sp)
   2fa7c:	d9001b15 	stw	r4,108(sp)
   2fa80:	014001c4 	movi	r5,7
   2fa84:	2900a90e 	bge	r5,r4,2fd2c <___vfiprintf_internal_r+0xe8c>
   2fa88:	1000da1e 	bne	r2,zero,2fdf4 <___vfiprintf_internal_r+0xf54>
   2fa8c:	7000ab1e 	bne	r14,zero,2fd3c <___vfiprintf_internal_r+0xe9c>
   2fa90:	000b883a 	mov	r5,zero
   2fa94:	1809883a 	mov	r4,r3
   2fa98:	d811883a 	mov	r8,sp
   2fa9c:	00c02004 	movi	r3,128
   2faa0:	e0fe4d26 	beq	fp,r3,2f3d8 <__alt_mem_SDRAM_controller+0xfc02f3d8>
   2faa4:	4cf9c83a 	sub	fp,r9,r19
   2faa8:	073e7b0e 	bge	zero,fp,2f498 <__alt_mem_SDRAM_controller+0xfc02f498>
   2faac:	01c00404 	movi	r7,16
   2fab0:	3f01900e 	bge	r7,fp,300f4 <___vfiprintf_internal_r+0x1254>
   2fab4:	00c000f4 	movhi	r3,3
   2fab8:	18d92c04 	addi	r3,r3,25776
   2fabc:	d8c02415 	stw	r3,144(sp)
   2fac0:	034001c4 	movi	r13,7
   2fac4:	00000506 	br	2fadc <___vfiprintf_internal_r+0xc3c>
   2fac8:	29000084 	addi	r4,r5,2
   2facc:	42000204 	addi	r8,r8,8
   2fad0:	180b883a 	mov	r5,r3
   2fad4:	e73ffc04 	addi	fp,fp,-16
   2fad8:	3f000d0e 	bge	r7,fp,2fb10 <___vfiprintf_internal_r+0xc70>
   2fadc:	10800404 	addi	r2,r2,16
   2fae0:	28c00044 	addi	r3,r5,1
   2fae4:	45c00015 	stw	r23,0(r8)
   2fae8:	41c00115 	stw	r7,4(r8)
   2faec:	d8801c15 	stw	r2,112(sp)
   2faf0:	d8c01b15 	stw	r3,108(sp)
   2faf4:	68fff40e 	bge	r13,r3,2fac8 <__alt_mem_SDRAM_controller+0xfc02fac8>
   2faf8:	1000101e 	bne	r2,zero,2fb3c <___vfiprintf_internal_r+0xc9c>
   2fafc:	e73ffc04 	addi	fp,fp,-16
   2fb00:	01000044 	movi	r4,1
   2fb04:	000b883a 	mov	r5,zero
   2fb08:	d811883a 	mov	r8,sp
   2fb0c:	3f3ff316 	blt	r7,fp,2fadc <__alt_mem_SDRAM_controller+0xfc02fadc>
   2fb10:	da802417 	ldw	r10,144(sp)
   2fb14:	1705883a 	add	r2,r2,fp
   2fb18:	47000115 	stw	fp,4(r8)
   2fb1c:	42800015 	stw	r10,0(r8)
   2fb20:	d8801c15 	stw	r2,112(sp)
   2fb24:	d9001b15 	stw	r4,108(sp)
   2fb28:	00c001c4 	movi	r3,7
   2fb2c:	19003616 	blt	r3,r4,2fc08 <___vfiprintf_internal_r+0xd68>
   2fb30:	42000204 	addi	r8,r8,8
   2fb34:	21000044 	addi	r4,r4,1
   2fb38:	003e5706 	br	2f498 <__alt_mem_SDRAM_controller+0xfc02f498>
   2fb3c:	d9402117 	ldw	r5,132(sp)
   2fb40:	d9002017 	ldw	r4,128(sp)
   2fb44:	d9801a04 	addi	r6,sp,104
   2fb48:	d9c02b15 	stw	r7,172(sp)
   2fb4c:	db402a15 	stw	r13,168(sp)
   2fb50:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fb54:	d9c02b17 	ldw	r7,172(sp)
   2fb58:	db402a17 	ldw	r13,168(sp)
   2fb5c:	1000241e 	bne	r2,zero,2fbf0 <___vfiprintf_internal_r+0xd50>
   2fb60:	d9401b17 	ldw	r5,108(sp)
   2fb64:	d8801c17 	ldw	r2,112(sp)
   2fb68:	d811883a 	mov	r8,sp
   2fb6c:	29000044 	addi	r4,r5,1
   2fb70:	003fd806 	br	2fad4 <__alt_mem_SDRAM_controller+0xfc02fad4>
   2fb74:	d9401b17 	ldw	r5,108(sp)
   2fb78:	00c000f4 	movhi	r3,3
   2fb7c:	18d93004 	addi	r3,r3,25792
   2fb80:	d8c02415 	stw	r3,144(sp)
   2fb84:	29400044 	addi	r5,r5,1
   2fb88:	d8c02417 	ldw	r3,144(sp)
   2fb8c:	14c5883a 	add	r2,r2,r19
   2fb90:	44c00115 	stw	r19,4(r8)
   2fb94:	40c00015 	stw	r3,0(r8)
   2fb98:	d8801c15 	stw	r2,112(sp)
   2fb9c:	d9401b15 	stw	r5,108(sp)
   2fba0:	00c001c4 	movi	r3,7
   2fba4:	1940070e 	bge	r3,r5,2fbc4 <___vfiprintf_internal_r+0xd24>
   2fba8:	103e4826 	beq	r2,zero,2f4cc <__alt_mem_SDRAM_controller+0xfc02f4cc>
   2fbac:	d9402117 	ldw	r5,132(sp)
   2fbb0:	d9002017 	ldw	r4,128(sp)
   2fbb4:	d9801a04 	addi	r6,sp,104
   2fbb8:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fbbc:	10000c1e 	bne	r2,zero,2fbf0 <___vfiprintf_internal_r+0xd50>
   2fbc0:	d8801c17 	ldw	r2,112(sp)
   2fbc4:	8c80010e 	bge	r17,r18,2fbcc <___vfiprintf_internal_r+0xd2c>
   2fbc8:	9023883a 	mov	r17,r18
   2fbcc:	da802317 	ldw	r10,140(sp)
   2fbd0:	5455883a 	add	r10,r10,r17
   2fbd4:	da802315 	stw	r10,140(sp)
   2fbd8:	103e4126 	beq	r2,zero,2f4e0 <__alt_mem_SDRAM_controller+0xfc02f4e0>
   2fbdc:	d9402117 	ldw	r5,132(sp)
   2fbe0:	d9002017 	ldw	r4,128(sp)
   2fbe4:	d9801a04 	addi	r6,sp,104
   2fbe8:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fbec:	103e3c26 	beq	r2,zero,2f4e0 <__alt_mem_SDRAM_controller+0xfc02f4e0>
   2fbf0:	dd002117 	ldw	r20,132(sp)
   2fbf4:	a080030b 	ldhu	r2,12(r20)
   2fbf8:	1080100c 	andi	r2,r2,64
   2fbfc:	1001231e 	bne	r2,zero,3008c <___vfiprintf_internal_r+0x11ec>
   2fc00:	d8802317 	ldw	r2,140(sp)
   2fc04:	003d7b06 	br	2f1f4 <__alt_mem_SDRAM_controller+0xfc02f1f4>
   2fc08:	1000991e 	bne	r2,zero,2fe70 <___vfiprintf_internal_r+0xfd0>
   2fc0c:	00c00044 	movi	r3,1
   2fc10:	9805883a 	mov	r2,r19
   2fc14:	dd400015 	stw	r21,0(sp)
   2fc18:	dcc00115 	stw	r19,4(sp)
   2fc1c:	dcc01c15 	stw	r19,112(sp)
   2fc20:	d8c01b15 	stw	r3,108(sp)
   2fc24:	d811883a 	mov	r8,sp
   2fc28:	42000204 	addi	r8,r8,8
   2fc2c:	a2c0010c 	andi	r11,r20,4
   2fc30:	583fe426 	beq	r11,zero,2fbc4 <__alt_mem_SDRAM_controller+0xfc02fbc4>
   2fc34:	8ca7c83a 	sub	r19,r17,r18
   2fc38:	04ffe20e 	bge	zero,r19,2fbc4 <__alt_mem_SDRAM_controller+0xfc02fbc4>
   2fc3c:	01c00404 	movi	r7,16
   2fc40:	3cffcc0e 	bge	r7,r19,2fb74 <__alt_mem_SDRAM_controller+0xfc02fb74>
   2fc44:	028000f4 	movhi	r10,3
   2fc48:	52993004 	addi	r10,r10,25792
   2fc4c:	d9001b17 	ldw	r4,108(sp)
   2fc50:	da802415 	stw	r10,144(sp)
   2fc54:	382b883a 	mov	r21,r7
   2fc58:	050001c4 	movi	r20,7
   2fc5c:	df002017 	ldw	fp,128(sp)
   2fc60:	00000506 	br	2fc78 <___vfiprintf_internal_r+0xdd8>
   2fc64:	21400084 	addi	r5,r4,2
   2fc68:	42000204 	addi	r8,r8,8
   2fc6c:	1809883a 	mov	r4,r3
   2fc70:	9cfffc04 	addi	r19,r19,-16
   2fc74:	acffc40e 	bge	r21,r19,2fb88 <__alt_mem_SDRAM_controller+0xfc02fb88>
   2fc78:	10800404 	addi	r2,r2,16
   2fc7c:	20c00044 	addi	r3,r4,1
   2fc80:	45800015 	stw	r22,0(r8)
   2fc84:	45400115 	stw	r21,4(r8)
   2fc88:	d8801c15 	stw	r2,112(sp)
   2fc8c:	d8c01b15 	stw	r3,108(sp)
   2fc90:	a0fff40e 	bge	r20,r3,2fc64 <__alt_mem_SDRAM_controller+0xfc02fc64>
   2fc94:	1000041e 	bne	r2,zero,2fca8 <___vfiprintf_internal_r+0xe08>
   2fc98:	01400044 	movi	r5,1
   2fc9c:	0009883a 	mov	r4,zero
   2fca0:	d811883a 	mov	r8,sp
   2fca4:	003ff206 	br	2fc70 <__alt_mem_SDRAM_controller+0xfc02fc70>
   2fca8:	d9402117 	ldw	r5,132(sp)
   2fcac:	d9801a04 	addi	r6,sp,104
   2fcb0:	e009883a 	mov	r4,fp
   2fcb4:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fcb8:	103fcd1e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   2fcbc:	d9001b17 	ldw	r4,108(sp)
   2fcc0:	d8801c17 	ldw	r2,112(sp)
   2fcc4:	d811883a 	mov	r8,sp
   2fcc8:	21400044 	addi	r5,r4,1
   2fccc:	003fe806 	br	2fc70 <__alt_mem_SDRAM_controller+0xfc02fc70>
   2fcd0:	d9402117 	ldw	r5,132(sp)
   2fcd4:	d9002017 	ldw	r4,128(sp)
   2fcd8:	d9801a04 	addi	r6,sp,104
   2fcdc:	d9c02b15 	stw	r7,172(sp)
   2fce0:	db402a15 	stw	r13,168(sp)
   2fce4:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fce8:	d9c02b17 	ldw	r7,172(sp)
   2fcec:	db402a17 	ldw	r13,168(sp)
   2fcf0:	103fbf1e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   2fcf4:	d9401b17 	ldw	r5,108(sp)
   2fcf8:	d8801c17 	ldw	r2,112(sp)
   2fcfc:	d811883a 	mov	r8,sp
   2fd00:	29800044 	addi	r6,r5,1
   2fd04:	003dc406 	br	2f418 <__alt_mem_SDRAM_controller+0xfc02f418>
   2fd08:	1000d21e 	bne	r2,zero,30054 <___vfiprintf_internal_r+0x11b4>
   2fd0c:	d8c01d87 	ldb	r3,118(sp)
   2fd10:	18009526 	beq	r3,zero,2ff68 <___vfiprintf_internal_r+0x10c8>
   2fd14:	00800044 	movi	r2,1
   2fd18:	d8c01d84 	addi	r3,sp,118
   2fd1c:	1009883a 	mov	r4,r2
   2fd20:	d8c00015 	stw	r3,0(sp)
   2fd24:	d8800115 	stw	r2,4(sp)
   2fd28:	d811883a 	mov	r8,sp
   2fd2c:	200b883a 	mov	r5,r4
   2fd30:	42000204 	addi	r8,r8,8
   2fd34:	21000044 	addi	r4,r4,1
   2fd38:	003d9706 	br	2f398 <__alt_mem_SDRAM_controller+0xfc02f398>
   2fd3c:	d9001d04 	addi	r4,sp,116
   2fd40:	00800084 	movi	r2,2
   2fd44:	d9000015 	stw	r4,0(sp)
   2fd48:	d8800115 	stw	r2,4(sp)
   2fd4c:	1809883a 	mov	r4,r3
   2fd50:	d811883a 	mov	r8,sp
   2fd54:	200b883a 	mov	r5,r4
   2fd58:	42000204 	addi	r8,r8,8
   2fd5c:	21000044 	addi	r4,r4,1
   2fd60:	003f4e06 	br	2fa9c <__alt_mem_SDRAM_controller+0xfc02fa9c>
   2fd64:	d8001d85 	stb	zero,118(sp)
   2fd68:	48005016 	blt	r9,zero,2feac <___vfiprintf_internal_r+0x100c>
   2fd6c:	00ffdfc4 	movi	r3,-129
   2fd70:	94c4b03a 	or	r2,r18,r19
   2fd74:	a0e8703a 	and	r20,r20,r3
   2fd78:	103d4426 	beq	r2,zero,2f28c <__alt_mem_SDRAM_controller+0xfc02f28c>
   2fd7c:	0039883a 	mov	fp,zero
   2fd80:	d9002617 	ldw	r4,152(sp)
   2fd84:	dd401a04 	addi	r21,sp,104
   2fd88:	908003cc 	andi	r2,r18,15
   2fd8c:	9806973a 	slli	r3,r19,28
   2fd90:	2085883a 	add	r2,r4,r2
   2fd94:	9024d13a 	srli	r18,r18,4
   2fd98:	10800003 	ldbu	r2,0(r2)
   2fd9c:	9826d13a 	srli	r19,r19,4
   2fda0:	ad7fffc4 	addi	r21,r21,-1
   2fda4:	1ca4b03a 	or	r18,r3,r18
   2fda8:	a8800005 	stb	r2,0(r21)
   2fdac:	94c4b03a 	or	r2,r18,r19
   2fdb0:	103ff51e 	bne	r2,zero,2fd88 <__alt_mem_SDRAM_controller+0xfc02fd88>
   2fdb4:	003e5906 	br	2f71c <__alt_mem_SDRAM_controller+0xfc02f71c>
   2fdb8:	d9402117 	ldw	r5,132(sp)
   2fdbc:	d9002017 	ldw	r4,128(sp)
   2fdc0:	d9801a04 	addi	r6,sp,104
   2fdc4:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fdc8:	103f891e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   2fdcc:	d8801c17 	ldw	r2,112(sp)
   2fdd0:	d811883a 	mov	r8,sp
   2fdd4:	003f9506 	br	2fc2c <__alt_mem_SDRAM_controller+0xfc02fc2c>
   2fdd8:	d9402117 	ldw	r5,132(sp)
   2fddc:	d9002017 	ldw	r4,128(sp)
   2fde0:	d9801a04 	addi	r6,sp,104
   2fde4:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fde8:	103f811e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   2fdec:	d811883a 	mov	r8,sp
   2fdf0:	003ced06 	br	2f1a8 <__alt_mem_SDRAM_controller+0xfc02f1a8>
   2fdf4:	d9402117 	ldw	r5,132(sp)
   2fdf8:	d9002017 	ldw	r4,128(sp)
   2fdfc:	d9801a04 	addi	r6,sp,104
   2fe00:	da402c15 	stw	r9,176(sp)
   2fe04:	db802a15 	stw	r14,168(sp)
   2fe08:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fe0c:	da402c17 	ldw	r9,176(sp)
   2fe10:	db802a17 	ldw	r14,168(sp)
   2fe14:	103f761e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   2fe18:	d9401b17 	ldw	r5,108(sp)
   2fe1c:	d8801c17 	ldw	r2,112(sp)
   2fe20:	d811883a 	mov	r8,sp
   2fe24:	29000044 	addi	r4,r5,1
   2fe28:	003d5b06 	br	2f398 <__alt_mem_SDRAM_controller+0xfc02f398>
   2fe2c:	d9402117 	ldw	r5,132(sp)
   2fe30:	d9002017 	ldw	r4,128(sp)
   2fe34:	d9801a04 	addi	r6,sp,104
   2fe38:	da402c15 	stw	r9,176(sp)
   2fe3c:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fe40:	da402c17 	ldw	r9,176(sp)
   2fe44:	103f6a1e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   2fe48:	d9401b17 	ldw	r5,108(sp)
   2fe4c:	d8801c17 	ldw	r2,112(sp)
   2fe50:	d811883a 	mov	r8,sp
   2fe54:	29000044 	addi	r4,r5,1
   2fe58:	003f1006 	br	2fa9c <__alt_mem_SDRAM_controller+0xfc02fa9c>
   2fe5c:	1000c31e 	bne	r2,zero,3016c <___vfiprintf_internal_r+0x12cc>
   2fe60:	01000044 	movi	r4,1
   2fe64:	000b883a 	mov	r5,zero
   2fe68:	d811883a 	mov	r8,sp
   2fe6c:	003f0d06 	br	2faa4 <__alt_mem_SDRAM_controller+0xfc02faa4>
   2fe70:	d9402117 	ldw	r5,132(sp)
   2fe74:	d9002017 	ldw	r4,128(sp)
   2fe78:	d9801a04 	addi	r6,sp,104
   2fe7c:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   2fe80:	103f5b1e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   2fe84:	d9001b17 	ldw	r4,108(sp)
   2fe88:	d8801c17 	ldw	r2,112(sp)
   2fe8c:	d811883a 	mov	r8,sp
   2fe90:	21000044 	addi	r4,r4,1
   2fe94:	003d8006 	br	2f498 <__alt_mem_SDRAM_controller+0xfc02f498>
   2fe98:	010000f4 	movhi	r4,3
   2fe9c:	2118cc04 	addi	r4,r4,25392
   2fea0:	d9002615 	stw	r4,152(sp)
   2fea4:	d8c02215 	stw	r3,136(sp)
   2fea8:	1029883a 	mov	r20,r2
   2feac:	94c4b03a 	or	r2,r18,r19
   2feb0:	103fb21e 	bne	r2,zero,2fd7c <__alt_mem_SDRAM_controller+0xfc02fd7c>
   2feb4:	0039883a 	mov	fp,zero
   2feb8:	00800084 	movi	r2,2
   2febc:	003e6b06 	br	2f86c <__alt_mem_SDRAM_controller+0xfc02f86c>
   2fec0:	da802217 	ldw	r10,136(sp)
   2fec4:	d8001d85 	stb	zero,118(sp)
   2fec8:	0027883a 	mov	r19,zero
   2fecc:	50800104 	addi	r2,r10,4
   2fed0:	54800017 	ldw	r18,0(r10)
   2fed4:	483e6016 	blt	r9,zero,2f858 <__alt_mem_SDRAM_controller+0xfc02f858>
   2fed8:	00ffdfc4 	movi	r3,-129
   2fedc:	d8802215 	stw	r2,136(sp)
   2fee0:	a0e8703a 	and	r20,r20,r3
   2fee4:	0039883a 	mov	fp,zero
   2fee8:	903ebb26 	beq	r18,zero,2f9d8 <__alt_mem_SDRAM_controller+0xfc02f9d8>
   2feec:	00800244 	movi	r2,9
   2fef0:	14bdee36 	bltu	r2,r18,2f6ac <__alt_mem_SDRAM_controller+0xfc02f6ac>
   2fef4:	003eba06 	br	2f9e0 <__alt_mem_SDRAM_controller+0xfc02f9e0>
   2fef8:	00800c04 	movi	r2,48
   2fefc:	d8c01d45 	stb	r3,117(sp)
   2ff00:	d8801d05 	stb	r2,116(sp)
   2ff04:	d8001d85 	stb	zero,118(sp)
   2ff08:	a0c00094 	ori	r3,r20,2
   2ff0c:	4800a916 	blt	r9,zero,301b4 <___vfiprintf_internal_r+0x1314>
   2ff10:	00bfdfc4 	movi	r2,-129
   2ff14:	a096703a 	and	r11,r20,r2
   2ff18:	5d000094 	ori	r20,r11,2
   2ff1c:	0039883a 	mov	fp,zero
   2ff20:	003f9706 	br	2fd80 <__alt_mem_SDRAM_controller+0xfc02fd80>
   2ff24:	8025883a 	mov	r18,r16
   2ff28:	003c2e06 	br	2efe4 <__alt_mem_SDRAM_controller+0xfc02efe4>
   2ff2c:	008000f4 	movhi	r2,3
   2ff30:	1098cc04 	addi	r2,r2,25392
   2ff34:	0039883a 	mov	fp,zero
   2ff38:	d8802615 	stw	r2,152(sp)
   2ff3c:	003f9006 	br	2fd80 <__alt_mem_SDRAM_controller+0xfc02fd80>
   2ff40:	04a5c83a 	sub	r18,zero,r18
   2ff44:	07000b44 	movi	fp,45
   2ff48:	9004c03a 	cmpne	r2,r18,zero
   2ff4c:	04e7c83a 	sub	r19,zero,r19
   2ff50:	df001d85 	stb	fp,118(sp)
   2ff54:	98a7c83a 	sub	r19,r19,r2
   2ff58:	48009f16 	blt	r9,zero,301d8 <___vfiprintf_internal_r+0x1338>
   2ff5c:	00bfdfc4 	movi	r2,-129
   2ff60:	a0a8703a 	and	r20,r20,r2
   2ff64:	003dd006 	br	2f6a8 <__alt_mem_SDRAM_controller+0xfc02f6a8>
   2ff68:	70004c26 	beq	r14,zero,3009c <___vfiprintf_internal_r+0x11fc>
   2ff6c:	00800084 	movi	r2,2
   2ff70:	d8c01d04 	addi	r3,sp,116
   2ff74:	d8c00015 	stw	r3,0(sp)
   2ff78:	d8800115 	stw	r2,4(sp)
   2ff7c:	01000044 	movi	r4,1
   2ff80:	d811883a 	mov	r8,sp
   2ff84:	003f7306 	br	2fd54 <__alt_mem_SDRAM_controller+0xfc02fd54>
   2ff88:	a080100c 	andi	r2,r20,64
   2ff8c:	da802217 	ldw	r10,136(sp)
   2ff90:	103e0626 	beq	r2,zero,2f7ac <__alt_mem_SDRAM_controller+0xfc02f7ac>
   2ff94:	5480000f 	ldh	r18,0(r10)
   2ff98:	52800104 	addi	r10,r10,4
   2ff9c:	da802215 	stw	r10,136(sp)
   2ffa0:	9027d7fa 	srai	r19,r18,31
   2ffa4:	9805883a 	mov	r2,r19
   2ffa8:	003db806 	br	2f68c <__alt_mem_SDRAM_controller+0xfc02f68c>
   2ffac:	a080040c 	andi	r2,r20,16
   2ffb0:	1000091e 	bne	r2,zero,2ffd8 <___vfiprintf_internal_r+0x1138>
   2ffb4:	a2c0100c 	andi	r11,r20,64
   2ffb8:	58000726 	beq	r11,zero,2ffd8 <___vfiprintf_internal_r+0x1138>
   2ffbc:	da802217 	ldw	r10,136(sp)
   2ffc0:	50800017 	ldw	r2,0(r10)
   2ffc4:	52800104 	addi	r10,r10,4
   2ffc8:	da802215 	stw	r10,136(sp)
   2ffcc:	da802317 	ldw	r10,140(sp)
   2ffd0:	1280000d 	sth	r10,0(r2)
   2ffd4:	003be706 	br	2ef74 <__alt_mem_SDRAM_controller+0xfc02ef74>
   2ffd8:	da802217 	ldw	r10,136(sp)
   2ffdc:	50800017 	ldw	r2,0(r10)
   2ffe0:	52800104 	addi	r10,r10,4
   2ffe4:	da802215 	stw	r10,136(sp)
   2ffe8:	da802317 	ldw	r10,140(sp)
   2ffec:	12800015 	stw	r10,0(r2)
   2fff0:	003be006 	br	2ef74 <__alt_mem_SDRAM_controller+0xfc02ef74>
   2fff4:	a080100c 	andi	r2,r20,64
   2fff8:	da802217 	ldw	r10,136(sp)
   2fffc:	10003026 	beq	r2,zero,300c0 <___vfiprintf_internal_r+0x1220>
   30000:	5480000b 	ldhu	r18,0(r10)
   30004:	52800104 	addi	r10,r10,4
   30008:	0027883a 	mov	r19,zero
   3000c:	da802215 	stw	r10,136(sp)
   30010:	003d8006 	br	2f614 <__alt_mem_SDRAM_controller+0xfc02f614>
   30014:	80c00007 	ldb	r3,0(r16)
   30018:	003c0006 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   3001c:	a080100c 	andi	r2,r20,64
   30020:	d8001d85 	stb	zero,118(sp)
   30024:	da802217 	ldw	r10,136(sp)
   30028:	1000201e 	bne	r2,zero,300ac <___vfiprintf_internal_r+0x120c>
   3002c:	50800104 	addi	r2,r10,4
   30030:	54800017 	ldw	r18,0(r10)
   30034:	0027883a 	mov	r19,zero
   30038:	483def0e 	bge	r9,zero,2f7f8 <__alt_mem_SDRAM_controller+0xfc02f7f8>
   3003c:	94c6b03a 	or	r3,r18,r19
   30040:	d8802215 	stw	r2,136(sp)
   30044:	183d4e1e 	bne	r3,zero,2f580 <__alt_mem_SDRAM_controller+0xfc02f580>
   30048:	0039883a 	mov	fp,zero
   3004c:	0005883a 	mov	r2,zero
   30050:	003e0606 	br	2f86c <__alt_mem_SDRAM_controller+0xfc02f86c>
   30054:	d9402117 	ldw	r5,132(sp)
   30058:	d9002017 	ldw	r4,128(sp)
   3005c:	d9801a04 	addi	r6,sp,104
   30060:	da402c15 	stw	r9,176(sp)
   30064:	db802a15 	stw	r14,168(sp)
   30068:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   3006c:	da402c17 	ldw	r9,176(sp)
   30070:	db802a17 	ldw	r14,168(sp)
   30074:	103ede1e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   30078:	d9401b17 	ldw	r5,108(sp)
   3007c:	d8801c17 	ldw	r2,112(sp)
   30080:	d811883a 	mov	r8,sp
   30084:	29000044 	addi	r4,r5,1
   30088:	003e7406 	br	2fa5c <__alt_mem_SDRAM_controller+0xfc02fa5c>
   3008c:	00bfffc4 	movi	r2,-1
   30090:	003c5806 	br	2f1f4 <__alt_mem_SDRAM_controller+0xfc02f1f4>
   30094:	d811883a 	mov	r8,sp
   30098:	003ee806 	br	2fc3c <__alt_mem_SDRAM_controller+0xfc02fc3c>
   3009c:	000b883a 	mov	r5,zero
   300a0:	01000044 	movi	r4,1
   300a4:	d811883a 	mov	r8,sp
   300a8:	003e7c06 	br	2fa9c <__alt_mem_SDRAM_controller+0xfc02fa9c>
   300ac:	50800104 	addi	r2,r10,4
   300b0:	5480000b 	ldhu	r18,0(r10)
   300b4:	0027883a 	mov	r19,zero
   300b8:	483dcf0e 	bge	r9,zero,2f7f8 <__alt_mem_SDRAM_controller+0xfc02f7f8>
   300bc:	003fdf06 	br	3003c <__alt_mem_SDRAM_controller+0xfc03003c>
   300c0:	54800017 	ldw	r18,0(r10)
   300c4:	52800104 	addi	r10,r10,4
   300c8:	0027883a 	mov	r19,zero
   300cc:	da802215 	stw	r10,136(sp)
   300d0:	003d5006 	br	2f614 <__alt_mem_SDRAM_controller+0xfc02f614>
   300d4:	50800104 	addi	r2,r10,4
   300d8:	5480000b 	ldhu	r18,0(r10)
   300dc:	0027883a 	mov	r19,zero
   300e0:	483f7d0e 	bge	r9,zero,2fed8 <__alt_mem_SDRAM_controller+0xfc02fed8>
   300e4:	003ddc06 	br	2f858 <__alt_mem_SDRAM_controller+0xfc02f858>
   300e8:	d8c02215 	stw	r3,136(sp)
   300ec:	0039883a 	mov	fp,zero
   300f0:	003ddb06 	br	2f860 <__alt_mem_SDRAM_controller+0xfc02f860>
   300f4:	028000f4 	movhi	r10,3
   300f8:	52992c04 	addi	r10,r10,25776
   300fc:	da802415 	stw	r10,144(sp)
   30100:	003e8306 	br	2fb10 <__alt_mem_SDRAM_controller+0xfc02fb10>
   30104:	d8801c17 	ldw	r2,112(sp)
   30108:	dd002117 	ldw	r20,132(sp)
   3010c:	103eb926 	beq	r2,zero,2fbf4 <__alt_mem_SDRAM_controller+0xfc02fbf4>
   30110:	d9002017 	ldw	r4,128(sp)
   30114:	d9801a04 	addi	r6,sp,104
   30118:	a00b883a 	mov	r5,r20
   3011c:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   30120:	003eb406 	br	2fbf4 <__alt_mem_SDRAM_controller+0xfc02fbf4>
   30124:	80c00043 	ldbu	r3,1(r16)
   30128:	a5000814 	ori	r20,r20,32
   3012c:	84000044 	addi	r16,r16,1
   30130:	18c03fcc 	andi	r3,r3,255
   30134:	18c0201c 	xori	r3,r3,128
   30138:	18ffe004 	addi	r3,r3,-128
   3013c:	003bb706 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   30140:	a809883a 	mov	r4,r21
   30144:	d8c02a15 	stw	r3,168(sp)
   30148:	da002b15 	stw	r8,172(sp)
   3014c:	00278680 	call	27868 <strlen>
   30150:	d8c02a17 	ldw	r3,168(sp)
   30154:	1027883a 	mov	r19,r2
   30158:	df001d83 	ldbu	fp,118(sp)
   3015c:	d8c02215 	stw	r3,136(sp)
   30160:	0013883a 	mov	r9,zero
   30164:	da002b17 	ldw	r8,172(sp)
   30168:	003c4d06 	br	2f2a0 <__alt_mem_SDRAM_controller+0xfc02f2a0>
   3016c:	d9402117 	ldw	r5,132(sp)
   30170:	d9002017 	ldw	r4,128(sp)
   30174:	d9801a04 	addi	r6,sp,104
   30178:	da402c15 	stw	r9,176(sp)
   3017c:	002ed8c0 	call	2ed8c <__sprint_r.part.0>
   30180:	da402c17 	ldw	r9,176(sp)
   30184:	103e9a1e 	bne	r2,zero,2fbf0 <__alt_mem_SDRAM_controller+0xfc02fbf0>
   30188:	d9401b17 	ldw	r5,108(sp)
   3018c:	d8801c17 	ldw	r2,112(sp)
   30190:	d811883a 	mov	r8,sp
   30194:	29000044 	addi	r4,r5,1
   30198:	003e4206 	br	2faa4 <__alt_mem_SDRAM_controller+0xfc02faa4>
   3019c:	d9401b17 	ldw	r5,108(sp)
   301a0:	010000f4 	movhi	r4,3
   301a4:	21193004 	addi	r4,r4,25792
   301a8:	d9002415 	stw	r4,144(sp)
   301ac:	29400044 	addi	r5,r5,1
   301b0:	003c6d06 	br	2f368 <__alt_mem_SDRAM_controller+0xfc02f368>
   301b4:	0039883a 	mov	fp,zero
   301b8:	00800084 	movi	r2,2
   301bc:	10803fcc 	andi	r2,r2,255
   301c0:	01000044 	movi	r4,1
   301c4:	11001e26 	beq	r2,r4,30240 <___vfiprintf_internal_r+0x13a0>
   301c8:	01000084 	movi	r4,2
   301cc:	11001e1e 	bne	r2,r4,30248 <___vfiprintf_internal_r+0x13a8>
   301d0:	1829883a 	mov	r20,r3
   301d4:	003eea06 	br	2fd80 <__alt_mem_SDRAM_controller+0xfc02fd80>
   301d8:	a007883a 	mov	r3,r20
   301dc:	00800044 	movi	r2,1
   301e0:	003ff606 	br	301bc <__alt_mem_SDRAM_controller+0xfc0301bc>
   301e4:	00800184 	movi	r2,6
   301e8:	1240012e 	bgeu	r2,r9,301f0 <___vfiprintf_internal_r+0x1350>
   301ec:	1013883a 	mov	r9,r2
   301f0:	4827883a 	mov	r19,r9
   301f4:	4825883a 	mov	r18,r9
   301f8:	48001516 	blt	r9,zero,30250 <___vfiprintf_internal_r+0x13b0>
   301fc:	054000f4 	movhi	r21,3
   30200:	d8c02215 	stw	r3,136(sp)
   30204:	ad58d104 	addi	r21,r21,25412
   30208:	003d1406 	br	2f65c <__alt_mem_SDRAM_controller+0xfc02f65c>
   3020c:	028000f4 	movhi	r10,3
   30210:	52992c04 	addi	r10,r10,25776
   30214:	da802415 	stw	r10,144(sp)
   30218:	200d883a 	mov	r6,r4
   3021c:	003c9106 	br	2f464 <__alt_mem_SDRAM_controller+0xfc02f464>
   30220:	5021883a 	mov	r16,r10
   30224:	0013883a 	mov	r9,zero
   30228:	003b7d06 	br	2f020 <__alt_mem_SDRAM_controller+0xfc02f020>
   3022c:	4827883a 	mov	r19,r9
   30230:	df001d83 	ldbu	fp,118(sp)
   30234:	d8c02215 	stw	r3,136(sp)
   30238:	0013883a 	mov	r9,zero
   3023c:	003c1806 	br	2f2a0 <__alt_mem_SDRAM_controller+0xfc02f2a0>
   30240:	1829883a 	mov	r20,r3
   30244:	003d1806 	br	2f6a8 <__alt_mem_SDRAM_controller+0xfc02f6a8>
   30248:	1829883a 	mov	r20,r3
   3024c:	003ccd06 	br	2f584 <__alt_mem_SDRAM_controller+0xfc02f584>
   30250:	0025883a 	mov	r18,zero
   30254:	003fe906 	br	301fc <__alt_mem_SDRAM_controller+0xfc0301fc>
   30258:	d8802217 	ldw	r2,136(sp)
   3025c:	80c00043 	ldbu	r3,1(r16)
   30260:	5021883a 	mov	r16,r10
   30264:	12400017 	ldw	r9,0(r2)
   30268:	10800104 	addi	r2,r2,4
   3026c:	d8802215 	stw	r2,136(sp)
   30270:	483faf0e 	bge	r9,zero,30130 <__alt_mem_SDRAM_controller+0xfc030130>
   30274:	18c03fcc 	andi	r3,r3,255
   30278:	18c0201c 	xori	r3,r3,128
   3027c:	027fffc4 	movi	r9,-1
   30280:	18ffe004 	addi	r3,r3,-128
   30284:	003b6506 	br	2f01c <__alt_mem_SDRAM_controller+0xfc02f01c>
   30288:	d9c01d85 	stb	r7,118(sp)
   3028c:	003ca006 	br	2f510 <__alt_mem_SDRAM_controller+0xfc02f510>
   30290:	d9c01d85 	stb	r7,118(sp)
   30294:	003cad06 	br	2f54c <__alt_mem_SDRAM_controller+0xfc02f54c>
   30298:	d9c01d85 	stb	r7,118(sp)
   3029c:	003d7d06 	br	2f894 <__alt_mem_SDRAM_controller+0xfc02f894>
   302a0:	d9c01d85 	stb	r7,118(sp)
   302a4:	003d5f06 	br	2f824 <__alt_mem_SDRAM_controller+0xfc02f824>
   302a8:	a080004c 	andi	r2,r20,1
   302ac:	0039883a 	mov	fp,zero
   302b0:	10000526 	beq	r2,zero,302c8 <___vfiprintf_internal_r+0x1428>
   302b4:	00800c04 	movi	r2,48
   302b8:	d88019c5 	stb	r2,103(sp)
   302bc:	dcc02717 	ldw	r19,156(sp)
   302c0:	dd4019c4 	addi	r21,sp,103
   302c4:	003bf606 	br	2f2a0 <__alt_mem_SDRAM_controller+0xfc02f2a0>
   302c8:	0027883a 	mov	r19,zero
   302cc:	dd401a04 	addi	r21,sp,104
   302d0:	003bf306 	br	2f2a0 <__alt_mem_SDRAM_controller+0xfc02f2a0>
   302d4:	d9c01d85 	stb	r7,118(sp)
   302d8:	003dc806 	br	2f9fc <__alt_mem_SDRAM_controller+0xfc02f9fc>
   302dc:	d9c01d85 	stb	r7,118(sp)
   302e0:	003d3a06 	br	2f7cc <__alt_mem_SDRAM_controller+0xfc02f7cc>
   302e4:	d9c01d85 	stb	r7,118(sp)
   302e8:	003d2a06 	br	2f794 <__alt_mem_SDRAM_controller+0xfc02f794>
   302ec:	d9c01d85 	stb	r7,118(sp)
   302f0:	003cde06 	br	2f66c <__alt_mem_SDRAM_controller+0xfc02f66c>
   302f4:	d9c01d85 	stb	r7,118(sp)
   302f8:	003cbc06 	br	2f5ec <__alt_mem_SDRAM_controller+0xfc02f5ec>

000302fc <__vfiprintf_internal>:
   302fc:	00800134 	movhi	r2,4
   30300:	10a04f04 	addi	r2,r2,-32452
   30304:	300f883a 	mov	r7,r6
   30308:	280d883a 	mov	r6,r5
   3030c:	200b883a 	mov	r5,r4
   30310:	11000017 	ldw	r4,0(r2)
   30314:	002eea01 	jmpi	2eea0 <___vfiprintf_internal_r>

00030318 <__sbprintf>:
   30318:	2880030b 	ldhu	r2,12(r5)
   3031c:	2ac01917 	ldw	r11,100(r5)
   30320:	2a80038b 	ldhu	r10,14(r5)
   30324:	2a400717 	ldw	r9,28(r5)
   30328:	2a000917 	ldw	r8,36(r5)
   3032c:	defee204 	addi	sp,sp,-1144
   30330:	00c10004 	movi	r3,1024
   30334:	dc011a15 	stw	r16,1128(sp)
   30338:	10bfff4c 	andi	r2,r2,65533
   3033c:	2821883a 	mov	r16,r5
   30340:	d8cb883a 	add	r5,sp,r3
   30344:	dc811c15 	stw	r18,1136(sp)
   30348:	dc411b15 	stw	r17,1132(sp)
   3034c:	dfc11d15 	stw	ra,1140(sp)
   30350:	2025883a 	mov	r18,r4
   30354:	d881030d 	sth	r2,1036(sp)
   30358:	dac11915 	stw	r11,1124(sp)
   3035c:	da81038d 	sth	r10,1038(sp)
   30360:	da410715 	stw	r9,1052(sp)
   30364:	da010915 	stw	r8,1060(sp)
   30368:	dec10015 	stw	sp,1024(sp)
   3036c:	dec10415 	stw	sp,1040(sp)
   30370:	d8c10215 	stw	r3,1032(sp)
   30374:	d8c10515 	stw	r3,1044(sp)
   30378:	d8010615 	stw	zero,1048(sp)
   3037c:	002eea00 	call	2eea0 <___vfiprintf_internal_r>
   30380:	1023883a 	mov	r17,r2
   30384:	10000416 	blt	r2,zero,30398 <__sbprintf+0x80>
   30388:	d9410004 	addi	r5,sp,1024
   3038c:	9009883a 	mov	r4,r18
   30390:	002b7c80 	call	2b7c8 <_fflush_r>
   30394:	10000d1e 	bne	r2,zero,303cc <__sbprintf+0xb4>
   30398:	d881030b 	ldhu	r2,1036(sp)
   3039c:	1080100c 	andi	r2,r2,64
   303a0:	10000326 	beq	r2,zero,303b0 <__sbprintf+0x98>
   303a4:	8080030b 	ldhu	r2,12(r16)
   303a8:	10801014 	ori	r2,r2,64
   303ac:	8080030d 	sth	r2,12(r16)
   303b0:	8805883a 	mov	r2,r17
   303b4:	dfc11d17 	ldw	ra,1140(sp)
   303b8:	dc811c17 	ldw	r18,1136(sp)
   303bc:	dc411b17 	ldw	r17,1132(sp)
   303c0:	dc011a17 	ldw	r16,1128(sp)
   303c4:	dec11e04 	addi	sp,sp,1144
   303c8:	f800283a 	ret
   303cc:	047fffc4 	movi	r17,-1
   303d0:	003ff106 	br	30398 <__alt_mem_SDRAM_controller+0xfc030398>

000303d4 <_write_r>:
   303d4:	defffd04 	addi	sp,sp,-12
   303d8:	2805883a 	mov	r2,r5
   303dc:	dc000015 	stw	r16,0(sp)
   303e0:	04000134 	movhi	r16,4
   303e4:	dc400115 	stw	r17,4(sp)
   303e8:	300b883a 	mov	r5,r6
   303ec:	84276a04 	addi	r16,r16,-25176
   303f0:	2023883a 	mov	r17,r4
   303f4:	380d883a 	mov	r6,r7
   303f8:	1009883a 	mov	r4,r2
   303fc:	dfc00215 	stw	ra,8(sp)
   30400:	80000015 	stw	zero,0(r16)
   30404:	00320dc0 	call	320dc <write>
   30408:	00ffffc4 	movi	r3,-1
   3040c:	10c00526 	beq	r2,r3,30424 <_write_r+0x50>
   30410:	dfc00217 	ldw	ra,8(sp)
   30414:	dc400117 	ldw	r17,4(sp)
   30418:	dc000017 	ldw	r16,0(sp)
   3041c:	dec00304 	addi	sp,sp,12
   30420:	f800283a 	ret
   30424:	80c00017 	ldw	r3,0(r16)
   30428:	183ff926 	beq	r3,zero,30410 <__alt_mem_SDRAM_controller+0xfc030410>
   3042c:	88c00015 	stw	r3,0(r17)
   30430:	003ff706 	br	30410 <__alt_mem_SDRAM_controller+0xfc030410>

00030434 <_close_r>:
   30434:	defffd04 	addi	sp,sp,-12
   30438:	dc000015 	stw	r16,0(sp)
   3043c:	04000134 	movhi	r16,4
   30440:	dc400115 	stw	r17,4(sp)
   30444:	84276a04 	addi	r16,r16,-25176
   30448:	2023883a 	mov	r17,r4
   3044c:	2809883a 	mov	r4,r5
   30450:	dfc00215 	stw	ra,8(sp)
   30454:	80000015 	stw	zero,0(r16)
   30458:	003189c0 	call	3189c <close>
   3045c:	00ffffc4 	movi	r3,-1
   30460:	10c00526 	beq	r2,r3,30478 <_close_r+0x44>
   30464:	dfc00217 	ldw	ra,8(sp)
   30468:	dc400117 	ldw	r17,4(sp)
   3046c:	dc000017 	ldw	r16,0(sp)
   30470:	dec00304 	addi	sp,sp,12
   30474:	f800283a 	ret
   30478:	80c00017 	ldw	r3,0(r16)
   3047c:	183ff926 	beq	r3,zero,30464 <__alt_mem_SDRAM_controller+0xfc030464>
   30480:	88c00015 	stw	r3,0(r17)
   30484:	003ff706 	br	30464 <__alt_mem_SDRAM_controller+0xfc030464>

00030488 <_calloc_r>:
   30488:	298b383a 	mul	r5,r5,r6
   3048c:	defffe04 	addi	sp,sp,-8
   30490:	dfc00115 	stw	ra,4(sp)
   30494:	dc000015 	stw	r16,0(sp)
   30498:	002c9040 	call	2c904 <_malloc_r>
   3049c:	10002926 	beq	r2,zero,30544 <_calloc_r+0xbc>
   304a0:	11bfff17 	ldw	r6,-4(r2)
   304a4:	1021883a 	mov	r16,r2
   304a8:	00bfff04 	movi	r2,-4
   304ac:	308c703a 	and	r6,r6,r2
   304b0:	00c00904 	movi	r3,36
   304b4:	308d883a 	add	r6,r6,r2
   304b8:	19801636 	bltu	r3,r6,30514 <_calloc_r+0x8c>
   304bc:	008004c4 	movi	r2,19
   304c0:	11800b2e 	bgeu	r2,r6,304f0 <_calloc_r+0x68>
   304c4:	80000015 	stw	zero,0(r16)
   304c8:	80000115 	stw	zero,4(r16)
   304cc:	008006c4 	movi	r2,27
   304d0:	11801a2e 	bgeu	r2,r6,3053c <_calloc_r+0xb4>
   304d4:	80000215 	stw	zero,8(r16)
   304d8:	80000315 	stw	zero,12(r16)
   304dc:	30c0151e 	bne	r6,r3,30534 <_calloc_r+0xac>
   304e0:	80000415 	stw	zero,16(r16)
   304e4:	80800604 	addi	r2,r16,24
   304e8:	80000515 	stw	zero,20(r16)
   304ec:	00000106 	br	304f4 <_calloc_r+0x6c>
   304f0:	8005883a 	mov	r2,r16
   304f4:	10000015 	stw	zero,0(r2)
   304f8:	10000115 	stw	zero,4(r2)
   304fc:	10000215 	stw	zero,8(r2)
   30500:	8005883a 	mov	r2,r16
   30504:	dfc00117 	ldw	ra,4(sp)
   30508:	dc000017 	ldw	r16,0(sp)
   3050c:	dec00204 	addi	sp,sp,8
   30510:	f800283a 	ret
   30514:	000b883a 	mov	r5,zero
   30518:	8009883a 	mov	r4,r16
   3051c:	002d4980 	call	2d498 <memset>
   30520:	8005883a 	mov	r2,r16
   30524:	dfc00117 	ldw	ra,4(sp)
   30528:	dc000017 	ldw	r16,0(sp)
   3052c:	dec00204 	addi	sp,sp,8
   30530:	f800283a 	ret
   30534:	80800404 	addi	r2,r16,16
   30538:	003fee06 	br	304f4 <__alt_mem_SDRAM_controller+0xfc0304f4>
   3053c:	80800204 	addi	r2,r16,8
   30540:	003fec06 	br	304f4 <__alt_mem_SDRAM_controller+0xfc0304f4>
   30544:	0005883a 	mov	r2,zero
   30548:	003fee06 	br	30504 <__alt_mem_SDRAM_controller+0xfc030504>

0003054c <_fclose_r>:
   3054c:	28003926 	beq	r5,zero,30634 <_fclose_r+0xe8>
   30550:	defffc04 	addi	sp,sp,-16
   30554:	dc400115 	stw	r17,4(sp)
   30558:	dc000015 	stw	r16,0(sp)
   3055c:	dfc00315 	stw	ra,12(sp)
   30560:	dc800215 	stw	r18,8(sp)
   30564:	2023883a 	mov	r17,r4
   30568:	2821883a 	mov	r16,r5
   3056c:	20000226 	beq	r4,zero,30578 <_fclose_r+0x2c>
   30570:	20800e17 	ldw	r2,56(r4)
   30574:	10002726 	beq	r2,zero,30614 <_fclose_r+0xc8>
   30578:	8080030f 	ldh	r2,12(r16)
   3057c:	1000071e 	bne	r2,zero,3059c <_fclose_r+0x50>
   30580:	0005883a 	mov	r2,zero
   30584:	dfc00317 	ldw	ra,12(sp)
   30588:	dc800217 	ldw	r18,8(sp)
   3058c:	dc400117 	ldw	r17,4(sp)
   30590:	dc000017 	ldw	r16,0(sp)
   30594:	dec00404 	addi	sp,sp,16
   30598:	f800283a 	ret
   3059c:	800b883a 	mov	r5,r16
   305a0:	8809883a 	mov	r4,r17
   305a4:	002b5ac0 	call	2b5ac <__sflush_r>
   305a8:	1025883a 	mov	r18,r2
   305ac:	80800b17 	ldw	r2,44(r16)
   305b0:	10000426 	beq	r2,zero,305c4 <_fclose_r+0x78>
   305b4:	81400717 	ldw	r5,28(r16)
   305b8:	8809883a 	mov	r4,r17
   305bc:	103ee83a 	callr	r2
   305c0:	10001616 	blt	r2,zero,3061c <_fclose_r+0xd0>
   305c4:	8080030b 	ldhu	r2,12(r16)
   305c8:	1080200c 	andi	r2,r2,128
   305cc:	1000151e 	bne	r2,zero,30624 <_fclose_r+0xd8>
   305d0:	81400c17 	ldw	r5,48(r16)
   305d4:	28000526 	beq	r5,zero,305ec <_fclose_r+0xa0>
   305d8:	80801004 	addi	r2,r16,64
   305dc:	28800226 	beq	r5,r2,305e8 <_fclose_r+0x9c>
   305e0:	8809883a 	mov	r4,r17
   305e4:	002bd180 	call	2bd18 <_free_r>
   305e8:	80000c15 	stw	zero,48(r16)
   305ec:	81401117 	ldw	r5,68(r16)
   305f0:	28000326 	beq	r5,zero,30600 <_fclose_r+0xb4>
   305f4:	8809883a 	mov	r4,r17
   305f8:	002bd180 	call	2bd18 <_free_r>
   305fc:	80001115 	stw	zero,68(r16)
   30600:	002bbb40 	call	2bbb4 <__sfp_lock_acquire>
   30604:	8000030d 	sth	zero,12(r16)
   30608:	002bbb80 	call	2bbb8 <__sfp_lock_release>
   3060c:	9005883a 	mov	r2,r18
   30610:	003fdc06 	br	30584 <__alt_mem_SDRAM_controller+0xfc030584>
   30614:	002bba40 	call	2bba4 <__sinit>
   30618:	003fd706 	br	30578 <__alt_mem_SDRAM_controller+0xfc030578>
   3061c:	04bfffc4 	movi	r18,-1
   30620:	003fe806 	br	305c4 <__alt_mem_SDRAM_controller+0xfc0305c4>
   30624:	81400417 	ldw	r5,16(r16)
   30628:	8809883a 	mov	r4,r17
   3062c:	002bd180 	call	2bd18 <_free_r>
   30630:	003fe706 	br	305d0 <__alt_mem_SDRAM_controller+0xfc0305d0>
   30634:	0005883a 	mov	r2,zero
   30638:	f800283a 	ret

0003063c <fclose>:
   3063c:	00800134 	movhi	r2,4
   30640:	10a04f04 	addi	r2,r2,-32452
   30644:	200b883a 	mov	r5,r4
   30648:	11000017 	ldw	r4,0(r2)
   3064c:	003054c1 	jmpi	3054c <_fclose_r>

00030650 <__fputwc>:
   30650:	defff804 	addi	sp,sp,-32
   30654:	dcc00415 	stw	r19,16(sp)
   30658:	dc800315 	stw	r18,12(sp)
   3065c:	dc000115 	stw	r16,4(sp)
   30660:	dfc00715 	stw	ra,28(sp)
   30664:	dd400615 	stw	r21,24(sp)
   30668:	dd000515 	stw	r20,20(sp)
   3066c:	dc400215 	stw	r17,8(sp)
   30670:	2027883a 	mov	r19,r4
   30674:	2825883a 	mov	r18,r5
   30678:	3021883a 	mov	r16,r6
   3067c:	002c6f40 	call	2c6f4 <__locale_mb_cur_max>
   30680:	00c00044 	movi	r3,1
   30684:	10c03e26 	beq	r2,r3,30780 <__fputwc+0x130>
   30688:	81c01704 	addi	r7,r16,92
   3068c:	900d883a 	mov	r6,r18
   30690:	d80b883a 	mov	r5,sp
   30694:	9809883a 	mov	r4,r19
   30698:	0030b200 	call	30b20 <_wcrtomb_r>
   3069c:	1029883a 	mov	r20,r2
   306a0:	00bfffc4 	movi	r2,-1
   306a4:	a0802026 	beq	r20,r2,30728 <__fputwc+0xd8>
   306a8:	d9400003 	ldbu	r5,0(sp)
   306ac:	a0001c26 	beq	r20,zero,30720 <__fputwc+0xd0>
   306b0:	0023883a 	mov	r17,zero
   306b4:	05400284 	movi	r21,10
   306b8:	00000906 	br	306e0 <__fputwc+0x90>
   306bc:	80800017 	ldw	r2,0(r16)
   306c0:	11400005 	stb	r5,0(r2)
   306c4:	80c00017 	ldw	r3,0(r16)
   306c8:	18c00044 	addi	r3,r3,1
   306cc:	80c00015 	stw	r3,0(r16)
   306d0:	8c400044 	addi	r17,r17,1
   306d4:	dc45883a 	add	r2,sp,r17
   306d8:	8d00112e 	bgeu	r17,r20,30720 <__fputwc+0xd0>
   306dc:	11400003 	ldbu	r5,0(r2)
   306e0:	80c00217 	ldw	r3,8(r16)
   306e4:	18ffffc4 	addi	r3,r3,-1
   306e8:	80c00215 	stw	r3,8(r16)
   306ec:	183ff30e 	bge	r3,zero,306bc <__alt_mem_SDRAM_controller+0xfc0306bc>
   306f0:	80800617 	ldw	r2,24(r16)
   306f4:	18801916 	blt	r3,r2,3075c <__fputwc+0x10c>
   306f8:	80800017 	ldw	r2,0(r16)
   306fc:	11400005 	stb	r5,0(r2)
   30700:	80800017 	ldw	r2,0(r16)
   30704:	10c00003 	ldbu	r3,0(r2)
   30708:	10800044 	addi	r2,r2,1
   3070c:	1d402326 	beq	r3,r21,3079c <__fputwc+0x14c>
   30710:	80800015 	stw	r2,0(r16)
   30714:	8c400044 	addi	r17,r17,1
   30718:	dc45883a 	add	r2,sp,r17
   3071c:	8d3fef36 	bltu	r17,r20,306dc <__alt_mem_SDRAM_controller+0xfc0306dc>
   30720:	9005883a 	mov	r2,r18
   30724:	00000406 	br	30738 <__fputwc+0xe8>
   30728:	80c0030b 	ldhu	r3,12(r16)
   3072c:	a005883a 	mov	r2,r20
   30730:	18c01014 	ori	r3,r3,64
   30734:	80c0030d 	sth	r3,12(r16)
   30738:	dfc00717 	ldw	ra,28(sp)
   3073c:	dd400617 	ldw	r21,24(sp)
   30740:	dd000517 	ldw	r20,20(sp)
   30744:	dcc00417 	ldw	r19,16(sp)
   30748:	dc800317 	ldw	r18,12(sp)
   3074c:	dc400217 	ldw	r17,8(sp)
   30750:	dc000117 	ldw	r16,4(sp)
   30754:	dec00804 	addi	sp,sp,32
   30758:	f800283a 	ret
   3075c:	800d883a 	mov	r6,r16
   30760:	29403fcc 	andi	r5,r5,255
   30764:	9809883a 	mov	r4,r19
   30768:	00309c80 	call	309c8 <__swbuf_r>
   3076c:	10bfffe0 	cmpeqi	r2,r2,-1
   30770:	10803fcc 	andi	r2,r2,255
   30774:	103fd626 	beq	r2,zero,306d0 <__alt_mem_SDRAM_controller+0xfc0306d0>
   30778:	00bfffc4 	movi	r2,-1
   3077c:	003fee06 	br	30738 <__alt_mem_SDRAM_controller+0xfc030738>
   30780:	90ffffc4 	addi	r3,r18,-1
   30784:	01003f84 	movi	r4,254
   30788:	20ffbf36 	bltu	r4,r3,30688 <__alt_mem_SDRAM_controller+0xfc030688>
   3078c:	900b883a 	mov	r5,r18
   30790:	dc800005 	stb	r18,0(sp)
   30794:	1029883a 	mov	r20,r2
   30798:	003fc506 	br	306b0 <__alt_mem_SDRAM_controller+0xfc0306b0>
   3079c:	800d883a 	mov	r6,r16
   307a0:	a80b883a 	mov	r5,r21
   307a4:	9809883a 	mov	r4,r19
   307a8:	00309c80 	call	309c8 <__swbuf_r>
   307ac:	10bfffe0 	cmpeqi	r2,r2,-1
   307b0:	003fef06 	br	30770 <__alt_mem_SDRAM_controller+0xfc030770>

000307b4 <_fputwc_r>:
   307b4:	3080030b 	ldhu	r2,12(r6)
   307b8:	10c8000c 	andi	r3,r2,8192
   307bc:	1800051e 	bne	r3,zero,307d4 <_fputwc_r+0x20>
   307c0:	30c01917 	ldw	r3,100(r6)
   307c4:	10880014 	ori	r2,r2,8192
   307c8:	3080030d 	sth	r2,12(r6)
   307cc:	18880014 	ori	r2,r3,8192
   307d0:	30801915 	stw	r2,100(r6)
   307d4:	00306501 	jmpi	30650 <__fputwc>

000307d8 <fputwc>:
   307d8:	00800134 	movhi	r2,4
   307dc:	defffc04 	addi	sp,sp,-16
   307e0:	10a04f04 	addi	r2,r2,-32452
   307e4:	dc000115 	stw	r16,4(sp)
   307e8:	14000017 	ldw	r16,0(r2)
   307ec:	dc400215 	stw	r17,8(sp)
   307f0:	dfc00315 	stw	ra,12(sp)
   307f4:	2023883a 	mov	r17,r4
   307f8:	80000226 	beq	r16,zero,30804 <fputwc+0x2c>
   307fc:	80800e17 	ldw	r2,56(r16)
   30800:	10001026 	beq	r2,zero,30844 <fputwc+0x6c>
   30804:	2880030b 	ldhu	r2,12(r5)
   30808:	10c8000c 	andi	r3,r2,8192
   3080c:	1800051e 	bne	r3,zero,30824 <fputwc+0x4c>
   30810:	28c01917 	ldw	r3,100(r5)
   30814:	10880014 	ori	r2,r2,8192
   30818:	2880030d 	sth	r2,12(r5)
   3081c:	18880014 	ori	r2,r3,8192
   30820:	28801915 	stw	r2,100(r5)
   30824:	280d883a 	mov	r6,r5
   30828:	8009883a 	mov	r4,r16
   3082c:	880b883a 	mov	r5,r17
   30830:	dfc00317 	ldw	ra,12(sp)
   30834:	dc400217 	ldw	r17,8(sp)
   30838:	dc000117 	ldw	r16,4(sp)
   3083c:	dec00404 	addi	sp,sp,16
   30840:	00306501 	jmpi	30650 <__fputwc>
   30844:	8009883a 	mov	r4,r16
   30848:	d9400015 	stw	r5,0(sp)
   3084c:	002bba40 	call	2bba4 <__sinit>
   30850:	d9400017 	ldw	r5,0(sp)
   30854:	003feb06 	br	30804 <__alt_mem_SDRAM_controller+0xfc030804>

00030858 <_fstat_r>:
   30858:	defffd04 	addi	sp,sp,-12
   3085c:	2805883a 	mov	r2,r5
   30860:	dc000015 	stw	r16,0(sp)
   30864:	04000134 	movhi	r16,4
   30868:	dc400115 	stw	r17,4(sp)
   3086c:	84276a04 	addi	r16,r16,-25176
   30870:	2023883a 	mov	r17,r4
   30874:	300b883a 	mov	r5,r6
   30878:	1009883a 	mov	r4,r2
   3087c:	dfc00215 	stw	ra,8(sp)
   30880:	80000015 	stw	zero,0(r16)
   30884:	00319d40 	call	319d4 <fstat>
   30888:	00ffffc4 	movi	r3,-1
   3088c:	10c00526 	beq	r2,r3,308a4 <_fstat_r+0x4c>
   30890:	dfc00217 	ldw	ra,8(sp)
   30894:	dc400117 	ldw	r17,4(sp)
   30898:	dc000017 	ldw	r16,0(sp)
   3089c:	dec00304 	addi	sp,sp,12
   308a0:	f800283a 	ret
   308a4:	80c00017 	ldw	r3,0(r16)
   308a8:	183ff926 	beq	r3,zero,30890 <__alt_mem_SDRAM_controller+0xfc030890>
   308ac:	88c00015 	stw	r3,0(r17)
   308b0:	003ff706 	br	30890 <__alt_mem_SDRAM_controller+0xfc030890>

000308b4 <_isatty_r>:
   308b4:	defffd04 	addi	sp,sp,-12
   308b8:	dc000015 	stw	r16,0(sp)
   308bc:	04000134 	movhi	r16,4
   308c0:	dc400115 	stw	r17,4(sp)
   308c4:	84276a04 	addi	r16,r16,-25176
   308c8:	2023883a 	mov	r17,r4
   308cc:	2809883a 	mov	r4,r5
   308d0:	dfc00215 	stw	ra,8(sp)
   308d4:	80000015 	stw	zero,0(r16)
   308d8:	0031ac00 	call	31ac0 <isatty>
   308dc:	00ffffc4 	movi	r3,-1
   308e0:	10c00526 	beq	r2,r3,308f8 <_isatty_r+0x44>
   308e4:	dfc00217 	ldw	ra,8(sp)
   308e8:	dc400117 	ldw	r17,4(sp)
   308ec:	dc000017 	ldw	r16,0(sp)
   308f0:	dec00304 	addi	sp,sp,12
   308f4:	f800283a 	ret
   308f8:	80c00017 	ldw	r3,0(r16)
   308fc:	183ff926 	beq	r3,zero,308e4 <__alt_mem_SDRAM_controller+0xfc0308e4>
   30900:	88c00015 	stw	r3,0(r17)
   30904:	003ff706 	br	308e4 <__alt_mem_SDRAM_controller+0xfc0308e4>

00030908 <_lseek_r>:
   30908:	defffd04 	addi	sp,sp,-12
   3090c:	2805883a 	mov	r2,r5
   30910:	dc000015 	stw	r16,0(sp)
   30914:	04000134 	movhi	r16,4
   30918:	dc400115 	stw	r17,4(sp)
   3091c:	300b883a 	mov	r5,r6
   30920:	84276a04 	addi	r16,r16,-25176
   30924:	2023883a 	mov	r17,r4
   30928:	380d883a 	mov	r6,r7
   3092c:	1009883a 	mov	r4,r2
   30930:	dfc00215 	stw	ra,8(sp)
   30934:	80000015 	stw	zero,0(r16)
   30938:	0031c8c0 	call	31c8c <lseek>
   3093c:	00ffffc4 	movi	r3,-1
   30940:	10c00526 	beq	r2,r3,30958 <_lseek_r+0x50>
   30944:	dfc00217 	ldw	ra,8(sp)
   30948:	dc400117 	ldw	r17,4(sp)
   3094c:	dc000017 	ldw	r16,0(sp)
   30950:	dec00304 	addi	sp,sp,12
   30954:	f800283a 	ret
   30958:	80c00017 	ldw	r3,0(r16)
   3095c:	183ff926 	beq	r3,zero,30944 <__alt_mem_SDRAM_controller+0xfc030944>
   30960:	88c00015 	stw	r3,0(r17)
   30964:	003ff706 	br	30944 <__alt_mem_SDRAM_controller+0xfc030944>

00030968 <_read_r>:
   30968:	defffd04 	addi	sp,sp,-12
   3096c:	2805883a 	mov	r2,r5
   30970:	dc000015 	stw	r16,0(sp)
   30974:	04000134 	movhi	r16,4
   30978:	dc400115 	stw	r17,4(sp)
   3097c:	300b883a 	mov	r5,r6
   30980:	84276a04 	addi	r16,r16,-25176
   30984:	2023883a 	mov	r17,r4
   30988:	380d883a 	mov	r6,r7
   3098c:	1009883a 	mov	r4,r2
   30990:	dfc00215 	stw	ra,8(sp)
   30994:	80000015 	stw	zero,0(r16)
   30998:	0031e600 	call	31e60 <read>
   3099c:	00ffffc4 	movi	r3,-1
   309a0:	10c00526 	beq	r2,r3,309b8 <_read_r+0x50>
   309a4:	dfc00217 	ldw	ra,8(sp)
   309a8:	dc400117 	ldw	r17,4(sp)
   309ac:	dc000017 	ldw	r16,0(sp)
   309b0:	dec00304 	addi	sp,sp,12
   309b4:	f800283a 	ret
   309b8:	80c00017 	ldw	r3,0(r16)
   309bc:	183ff926 	beq	r3,zero,309a4 <__alt_mem_SDRAM_controller+0xfc0309a4>
   309c0:	88c00015 	stw	r3,0(r17)
   309c4:	003ff706 	br	309a4 <__alt_mem_SDRAM_controller+0xfc0309a4>

000309c8 <__swbuf_r>:
   309c8:	defffb04 	addi	sp,sp,-20
   309cc:	dcc00315 	stw	r19,12(sp)
   309d0:	dc800215 	stw	r18,8(sp)
   309d4:	dc000015 	stw	r16,0(sp)
   309d8:	dfc00415 	stw	ra,16(sp)
   309dc:	dc400115 	stw	r17,4(sp)
   309e0:	2025883a 	mov	r18,r4
   309e4:	2827883a 	mov	r19,r5
   309e8:	3021883a 	mov	r16,r6
   309ec:	20000226 	beq	r4,zero,309f8 <__swbuf_r+0x30>
   309f0:	20800e17 	ldw	r2,56(r4)
   309f4:	10004226 	beq	r2,zero,30b00 <__swbuf_r+0x138>
   309f8:	80800617 	ldw	r2,24(r16)
   309fc:	8100030b 	ldhu	r4,12(r16)
   30a00:	80800215 	stw	r2,8(r16)
   30a04:	2080020c 	andi	r2,r4,8
   30a08:	10003626 	beq	r2,zero,30ae4 <__swbuf_r+0x11c>
   30a0c:	80c00417 	ldw	r3,16(r16)
   30a10:	18003426 	beq	r3,zero,30ae4 <__swbuf_r+0x11c>
   30a14:	2088000c 	andi	r2,r4,8192
   30a18:	9c403fcc 	andi	r17,r19,255
   30a1c:	10001a26 	beq	r2,zero,30a88 <__swbuf_r+0xc0>
   30a20:	80800017 	ldw	r2,0(r16)
   30a24:	81000517 	ldw	r4,20(r16)
   30a28:	10c7c83a 	sub	r3,r2,r3
   30a2c:	1900200e 	bge	r3,r4,30ab0 <__swbuf_r+0xe8>
   30a30:	18c00044 	addi	r3,r3,1
   30a34:	81000217 	ldw	r4,8(r16)
   30a38:	11400044 	addi	r5,r2,1
   30a3c:	81400015 	stw	r5,0(r16)
   30a40:	213fffc4 	addi	r4,r4,-1
   30a44:	81000215 	stw	r4,8(r16)
   30a48:	14c00005 	stb	r19,0(r2)
   30a4c:	80800517 	ldw	r2,20(r16)
   30a50:	10c01e26 	beq	r2,r3,30acc <__swbuf_r+0x104>
   30a54:	8080030b 	ldhu	r2,12(r16)
   30a58:	1080004c 	andi	r2,r2,1
   30a5c:	10000226 	beq	r2,zero,30a68 <__swbuf_r+0xa0>
   30a60:	00800284 	movi	r2,10
   30a64:	88801926 	beq	r17,r2,30acc <__swbuf_r+0x104>
   30a68:	8805883a 	mov	r2,r17
   30a6c:	dfc00417 	ldw	ra,16(sp)
   30a70:	dcc00317 	ldw	r19,12(sp)
   30a74:	dc800217 	ldw	r18,8(sp)
   30a78:	dc400117 	ldw	r17,4(sp)
   30a7c:	dc000017 	ldw	r16,0(sp)
   30a80:	dec00504 	addi	sp,sp,20
   30a84:	f800283a 	ret
   30a88:	81401917 	ldw	r5,100(r16)
   30a8c:	00b7ffc4 	movi	r2,-8193
   30a90:	21080014 	ori	r4,r4,8192
   30a94:	2884703a 	and	r2,r5,r2
   30a98:	80801915 	stw	r2,100(r16)
   30a9c:	80800017 	ldw	r2,0(r16)
   30aa0:	8100030d 	sth	r4,12(r16)
   30aa4:	81000517 	ldw	r4,20(r16)
   30aa8:	10c7c83a 	sub	r3,r2,r3
   30aac:	193fe016 	blt	r3,r4,30a30 <__alt_mem_SDRAM_controller+0xfc030a30>
   30ab0:	800b883a 	mov	r5,r16
   30ab4:	9009883a 	mov	r4,r18
   30ab8:	002b7c80 	call	2b7c8 <_fflush_r>
   30abc:	1000071e 	bne	r2,zero,30adc <__swbuf_r+0x114>
   30ac0:	80800017 	ldw	r2,0(r16)
   30ac4:	00c00044 	movi	r3,1
   30ac8:	003fda06 	br	30a34 <__alt_mem_SDRAM_controller+0xfc030a34>
   30acc:	800b883a 	mov	r5,r16
   30ad0:	9009883a 	mov	r4,r18
   30ad4:	002b7c80 	call	2b7c8 <_fflush_r>
   30ad8:	103fe326 	beq	r2,zero,30a68 <__alt_mem_SDRAM_controller+0xfc030a68>
   30adc:	00bfffc4 	movi	r2,-1
   30ae0:	003fe206 	br	30a6c <__alt_mem_SDRAM_controller+0xfc030a6c>
   30ae4:	800b883a 	mov	r5,r16
   30ae8:	9009883a 	mov	r4,r18
   30aec:	0029bd00 	call	29bd0 <__swsetup_r>
   30af0:	103ffa1e 	bne	r2,zero,30adc <__alt_mem_SDRAM_controller+0xfc030adc>
   30af4:	8100030b 	ldhu	r4,12(r16)
   30af8:	80c00417 	ldw	r3,16(r16)
   30afc:	003fc506 	br	30a14 <__alt_mem_SDRAM_controller+0xfc030a14>
   30b00:	002bba40 	call	2bba4 <__sinit>
   30b04:	003fbc06 	br	309f8 <__alt_mem_SDRAM_controller+0xfc0309f8>

00030b08 <__swbuf>:
   30b08:	00800134 	movhi	r2,4
   30b0c:	10a04f04 	addi	r2,r2,-32452
   30b10:	280d883a 	mov	r6,r5
   30b14:	200b883a 	mov	r5,r4
   30b18:	11000017 	ldw	r4,0(r2)
   30b1c:	00309c81 	jmpi	309c8 <__swbuf_r>

00030b20 <_wcrtomb_r>:
   30b20:	defff604 	addi	sp,sp,-40
   30b24:	00800134 	movhi	r2,4
   30b28:	dc800815 	stw	r18,32(sp)
   30b2c:	dc400715 	stw	r17,28(sp)
   30b30:	dc000615 	stw	r16,24(sp)
   30b34:	10a05304 	addi	r2,r2,-32436
   30b38:	dfc00915 	stw	ra,36(sp)
   30b3c:	2021883a 	mov	r16,r4
   30b40:	3823883a 	mov	r17,r7
   30b44:	14800017 	ldw	r18,0(r2)
   30b48:	28001426 	beq	r5,zero,30b9c <_wcrtomb_r+0x7c>
   30b4c:	d9400415 	stw	r5,16(sp)
   30b50:	d9800515 	stw	r6,20(sp)
   30b54:	002c6e80 	call	2c6e8 <__locale_charset>
   30b58:	d9800517 	ldw	r6,20(sp)
   30b5c:	d9400417 	ldw	r5,16(sp)
   30b60:	100f883a 	mov	r7,r2
   30b64:	dc400015 	stw	r17,0(sp)
   30b68:	8009883a 	mov	r4,r16
   30b6c:	903ee83a 	callr	r18
   30b70:	00ffffc4 	movi	r3,-1
   30b74:	10c0031e 	bne	r2,r3,30b84 <_wcrtomb_r+0x64>
   30b78:	88000015 	stw	zero,0(r17)
   30b7c:	00c02284 	movi	r3,138
   30b80:	80c00015 	stw	r3,0(r16)
   30b84:	dfc00917 	ldw	ra,36(sp)
   30b88:	dc800817 	ldw	r18,32(sp)
   30b8c:	dc400717 	ldw	r17,28(sp)
   30b90:	dc000617 	ldw	r16,24(sp)
   30b94:	dec00a04 	addi	sp,sp,40
   30b98:	f800283a 	ret
   30b9c:	002c6e80 	call	2c6e8 <__locale_charset>
   30ba0:	100f883a 	mov	r7,r2
   30ba4:	dc400015 	stw	r17,0(sp)
   30ba8:	000d883a 	mov	r6,zero
   30bac:	d9400104 	addi	r5,sp,4
   30bb0:	8009883a 	mov	r4,r16
   30bb4:	903ee83a 	callr	r18
   30bb8:	003fed06 	br	30b70 <__alt_mem_SDRAM_controller+0xfc030b70>

00030bbc <wcrtomb>:
   30bbc:	defff604 	addi	sp,sp,-40
   30bc0:	00800134 	movhi	r2,4
   30bc4:	dc800615 	stw	r18,24(sp)
   30bc8:	dc400515 	stw	r17,20(sp)
   30bcc:	10a04f04 	addi	r2,r2,-32452
   30bd0:	dfc00915 	stw	ra,36(sp)
   30bd4:	dd000815 	stw	r20,32(sp)
   30bd8:	dcc00715 	stw	r19,28(sp)
   30bdc:	dc000415 	stw	r16,16(sp)
   30be0:	3025883a 	mov	r18,r6
   30be4:	14400017 	ldw	r17,0(r2)
   30be8:	20001926 	beq	r4,zero,30c50 <wcrtomb+0x94>
   30bec:	00800134 	movhi	r2,4
   30bf0:	10a05304 	addi	r2,r2,-32436
   30bf4:	15000017 	ldw	r20,0(r2)
   30bf8:	2021883a 	mov	r16,r4
   30bfc:	2827883a 	mov	r19,r5
   30c00:	002c6e80 	call	2c6e8 <__locale_charset>
   30c04:	100f883a 	mov	r7,r2
   30c08:	dc800015 	stw	r18,0(sp)
   30c0c:	980d883a 	mov	r6,r19
   30c10:	800b883a 	mov	r5,r16
   30c14:	8809883a 	mov	r4,r17
   30c18:	a03ee83a 	callr	r20
   30c1c:	00ffffc4 	movi	r3,-1
   30c20:	10c0031e 	bne	r2,r3,30c30 <wcrtomb+0x74>
   30c24:	90000015 	stw	zero,0(r18)
   30c28:	00c02284 	movi	r3,138
   30c2c:	88c00015 	stw	r3,0(r17)
   30c30:	dfc00917 	ldw	ra,36(sp)
   30c34:	dd000817 	ldw	r20,32(sp)
   30c38:	dcc00717 	ldw	r19,28(sp)
   30c3c:	dc800617 	ldw	r18,24(sp)
   30c40:	dc400517 	ldw	r17,20(sp)
   30c44:	dc000417 	ldw	r16,16(sp)
   30c48:	dec00a04 	addi	sp,sp,40
   30c4c:	f800283a 	ret
   30c50:	00800134 	movhi	r2,4
   30c54:	10a05304 	addi	r2,r2,-32436
   30c58:	14000017 	ldw	r16,0(r2)
   30c5c:	002c6e80 	call	2c6e8 <__locale_charset>
   30c60:	100f883a 	mov	r7,r2
   30c64:	dc800015 	stw	r18,0(sp)
   30c68:	000d883a 	mov	r6,zero
   30c6c:	d9400104 	addi	r5,sp,4
   30c70:	8809883a 	mov	r4,r17
   30c74:	803ee83a 	callr	r16
   30c78:	003fe806 	br	30c1c <__alt_mem_SDRAM_controller+0xfc030c1c>

00030c7c <__ascii_wctomb>:
   30c7c:	28000526 	beq	r5,zero,30c94 <__ascii_wctomb+0x18>
   30c80:	00803fc4 	movi	r2,255
   30c84:	11800536 	bltu	r2,r6,30c9c <__ascii_wctomb+0x20>
   30c88:	29800005 	stb	r6,0(r5)
   30c8c:	00800044 	movi	r2,1
   30c90:	f800283a 	ret
   30c94:	0005883a 	mov	r2,zero
   30c98:	f800283a 	ret
   30c9c:	00802284 	movi	r2,138
   30ca0:	20800015 	stw	r2,0(r4)
   30ca4:	00bfffc4 	movi	r2,-1
   30ca8:	f800283a 	ret

00030cac <_wctomb_r>:
   30cac:	00800134 	movhi	r2,4
   30cb0:	defff904 	addi	sp,sp,-28
   30cb4:	10a05304 	addi	r2,r2,-32436
   30cb8:	dfc00615 	stw	ra,24(sp)
   30cbc:	dc400515 	stw	r17,20(sp)
   30cc0:	dc000415 	stw	r16,16(sp)
   30cc4:	3823883a 	mov	r17,r7
   30cc8:	14000017 	ldw	r16,0(r2)
   30ccc:	d9000115 	stw	r4,4(sp)
   30cd0:	d9400215 	stw	r5,8(sp)
   30cd4:	d9800315 	stw	r6,12(sp)
   30cd8:	002c6e80 	call	2c6e8 <__locale_charset>
   30cdc:	d9800317 	ldw	r6,12(sp)
   30ce0:	d9400217 	ldw	r5,8(sp)
   30ce4:	d9000117 	ldw	r4,4(sp)
   30ce8:	100f883a 	mov	r7,r2
   30cec:	dc400015 	stw	r17,0(sp)
   30cf0:	803ee83a 	callr	r16
   30cf4:	dfc00617 	ldw	ra,24(sp)
   30cf8:	dc400517 	ldw	r17,20(sp)
   30cfc:	dc000417 	ldw	r16,16(sp)
   30d00:	dec00704 	addi	sp,sp,28
   30d04:	f800283a 	ret

00030d08 <__udivdi3>:
   30d08:	defff504 	addi	sp,sp,-44
   30d0c:	dcc00415 	stw	r19,16(sp)
   30d10:	dc000115 	stw	r16,4(sp)
   30d14:	dfc00a15 	stw	ra,40(sp)
   30d18:	df000915 	stw	fp,36(sp)
   30d1c:	ddc00815 	stw	r23,32(sp)
   30d20:	dd800715 	stw	r22,28(sp)
   30d24:	dd400615 	stw	r21,24(sp)
   30d28:	dd000515 	stw	r20,20(sp)
   30d2c:	dc800315 	stw	r18,12(sp)
   30d30:	dc400215 	stw	r17,8(sp)
   30d34:	2027883a 	mov	r19,r4
   30d38:	2821883a 	mov	r16,r5
   30d3c:	3800411e 	bne	r7,zero,30e44 <__udivdi3+0x13c>
   30d40:	3023883a 	mov	r17,r6
   30d44:	2025883a 	mov	r18,r4
   30d48:	2980522e 	bgeu	r5,r6,30e94 <__udivdi3+0x18c>
   30d4c:	00bfffd4 	movui	r2,65535
   30d50:	282d883a 	mov	r22,r5
   30d54:	1180a836 	bltu	r2,r6,30ff8 <__udivdi3+0x2f0>
   30d58:	00803fc4 	movi	r2,255
   30d5c:	1185803a 	cmpltu	r2,r2,r6
   30d60:	100490fa 	slli	r2,r2,3
   30d64:	3086d83a 	srl	r3,r6,r2
   30d68:	010000f4 	movhi	r4,3
   30d6c:	21188104 	addi	r4,r4,25092
   30d70:	20c7883a 	add	r3,r4,r3
   30d74:	18c00003 	ldbu	r3,0(r3)
   30d78:	1885883a 	add	r2,r3,r2
   30d7c:	00c00804 	movi	r3,32
   30d80:	1887c83a 	sub	r3,r3,r2
   30d84:	18000526 	beq	r3,zero,30d9c <__udivdi3+0x94>
   30d88:	80e0983a 	sll	r16,r16,r3
   30d8c:	9884d83a 	srl	r2,r19,r2
   30d90:	30e2983a 	sll	r17,r6,r3
   30d94:	98e4983a 	sll	r18,r19,r3
   30d98:	142cb03a 	or	r22,r2,r16
   30d9c:	882ad43a 	srli	r21,r17,16
   30da0:	b009883a 	mov	r4,r22
   30da4:	8d3fffcc 	andi	r20,r17,65535
   30da8:	a80b883a 	mov	r5,r21
   30dac:	00239480 	call	23948 <__umodsi3>
   30db0:	b009883a 	mov	r4,r22
   30db4:	a80b883a 	mov	r5,r21
   30db8:	1027883a 	mov	r19,r2
   30dbc:	00238e40 	call	238e4 <__udivsi3>
   30dc0:	102d883a 	mov	r22,r2
   30dc4:	9826943a 	slli	r19,r19,16
   30dc8:	9004d43a 	srli	r2,r18,16
   30dcc:	a5a1383a 	mul	r16,r20,r22
   30dd0:	14c4b03a 	or	r2,r2,r19
   30dd4:	1400052e 	bgeu	r2,r16,30dec <__udivdi3+0xe4>
   30dd8:	1445883a 	add	r2,r2,r17
   30ddc:	b0ffffc4 	addi	r3,r22,-1
   30de0:	14400136 	bltu	r2,r17,30de8 <__udivdi3+0xe0>
   30de4:	14012336 	bltu	r2,r16,31274 <__udivdi3+0x56c>
   30de8:	182d883a 	mov	r22,r3
   30dec:	1421c83a 	sub	r16,r2,r16
   30df0:	a80b883a 	mov	r5,r21
   30df4:	8009883a 	mov	r4,r16
   30df8:	00239480 	call	23948 <__umodsi3>
   30dfc:	1027883a 	mov	r19,r2
   30e00:	a80b883a 	mov	r5,r21
   30e04:	8009883a 	mov	r4,r16
   30e08:	00238e40 	call	238e4 <__udivsi3>
   30e0c:	9826943a 	slli	r19,r19,16
   30e10:	a0a9383a 	mul	r20,r20,r2
   30e14:	94bfffcc 	andi	r18,r18,65535
   30e18:	94e4b03a 	or	r18,r18,r19
   30e1c:	9500052e 	bgeu	r18,r20,30e34 <__udivdi3+0x12c>
   30e20:	8ca5883a 	add	r18,r17,r18
   30e24:	10ffffc4 	addi	r3,r2,-1
   30e28:	9440f136 	bltu	r18,r17,311f0 <__udivdi3+0x4e8>
   30e2c:	9500f02e 	bgeu	r18,r20,311f0 <__udivdi3+0x4e8>
   30e30:	10bfff84 	addi	r2,r2,-2
   30e34:	b00c943a 	slli	r6,r22,16
   30e38:	0007883a 	mov	r3,zero
   30e3c:	3084b03a 	or	r2,r6,r2
   30e40:	00005906 	br	30fa8 <__udivdi3+0x2a0>
   30e44:	29c05636 	bltu	r5,r7,30fa0 <__udivdi3+0x298>
   30e48:	00bfffd4 	movui	r2,65535
   30e4c:	11c0622e 	bgeu	r2,r7,30fd8 <__udivdi3+0x2d0>
   30e50:	00804034 	movhi	r2,256
   30e54:	10bfffc4 	addi	r2,r2,-1
   30e58:	11c0ee36 	bltu	r2,r7,31214 <__udivdi3+0x50c>
   30e5c:	00800404 	movi	r2,16
   30e60:	3886d83a 	srl	r3,r7,r2
   30e64:	010000f4 	movhi	r4,3
   30e68:	21188104 	addi	r4,r4,25092
   30e6c:	20c7883a 	add	r3,r4,r3
   30e70:	18c00003 	ldbu	r3,0(r3)
   30e74:	05400804 	movi	r21,32
   30e78:	1885883a 	add	r2,r3,r2
   30e7c:	a8abc83a 	sub	r21,r21,r2
   30e80:	a800621e 	bne	r21,zero,3100c <__udivdi3+0x304>
   30e84:	3c00e936 	bltu	r7,r16,3122c <__udivdi3+0x524>
   30e88:	9985403a 	cmpgeu	r2,r19,r6
   30e8c:	0007883a 	mov	r3,zero
   30e90:	00004506 	br	30fa8 <__udivdi3+0x2a0>
   30e94:	3000041e 	bne	r6,zero,30ea8 <__udivdi3+0x1a0>
   30e98:	000b883a 	mov	r5,zero
   30e9c:	01000044 	movi	r4,1
   30ea0:	00238e40 	call	238e4 <__udivsi3>
   30ea4:	1023883a 	mov	r17,r2
   30ea8:	00bfffd4 	movui	r2,65535
   30eac:	14404e2e 	bgeu	r2,r17,30fe8 <__udivdi3+0x2e0>
   30eb0:	00804034 	movhi	r2,256
   30eb4:	10bfffc4 	addi	r2,r2,-1
   30eb8:	1440d836 	bltu	r2,r17,3121c <__udivdi3+0x514>
   30ebc:	00800404 	movi	r2,16
   30ec0:	8886d83a 	srl	r3,r17,r2
   30ec4:	010000f4 	movhi	r4,3
   30ec8:	21188104 	addi	r4,r4,25092
   30ecc:	20c7883a 	add	r3,r4,r3
   30ed0:	18c00003 	ldbu	r3,0(r3)
   30ed4:	1885883a 	add	r2,r3,r2
   30ed8:	00c00804 	movi	r3,32
   30edc:	1887c83a 	sub	r3,r3,r2
   30ee0:	18008f1e 	bne	r3,zero,31120 <__udivdi3+0x418>
   30ee4:	882ad43a 	srli	r21,r17,16
   30ee8:	8461c83a 	sub	r16,r16,r17
   30eec:	8d3fffcc 	andi	r20,r17,65535
   30ef0:	00c00044 	movi	r3,1
   30ef4:	8009883a 	mov	r4,r16
   30ef8:	a80b883a 	mov	r5,r21
   30efc:	d8c00015 	stw	r3,0(sp)
   30f00:	00239480 	call	23948 <__umodsi3>
   30f04:	8009883a 	mov	r4,r16
   30f08:	a80b883a 	mov	r5,r21
   30f0c:	1027883a 	mov	r19,r2
   30f10:	00238e40 	call	238e4 <__udivsi3>
   30f14:	9826943a 	slli	r19,r19,16
   30f18:	9008d43a 	srli	r4,r18,16
   30f1c:	1521383a 	mul	r16,r2,r20
   30f20:	102d883a 	mov	r22,r2
   30f24:	24c8b03a 	or	r4,r4,r19
   30f28:	d8c00017 	ldw	r3,0(sp)
   30f2c:	2400052e 	bgeu	r4,r16,30f44 <__udivdi3+0x23c>
   30f30:	2449883a 	add	r4,r4,r17
   30f34:	b0bfffc4 	addi	r2,r22,-1
   30f38:	24400136 	bltu	r4,r17,30f40 <__udivdi3+0x238>
   30f3c:	2400ca36 	bltu	r4,r16,31268 <__udivdi3+0x560>
   30f40:	102d883a 	mov	r22,r2
   30f44:	2421c83a 	sub	r16,r4,r16
   30f48:	a80b883a 	mov	r5,r21
   30f4c:	8009883a 	mov	r4,r16
   30f50:	d8c00015 	stw	r3,0(sp)
   30f54:	00239480 	call	23948 <__umodsi3>
   30f58:	1027883a 	mov	r19,r2
   30f5c:	a80b883a 	mov	r5,r21
   30f60:	8009883a 	mov	r4,r16
   30f64:	00238e40 	call	238e4 <__udivsi3>
   30f68:	9826943a 	slli	r19,r19,16
   30f6c:	1529383a 	mul	r20,r2,r20
   30f70:	94bfffcc 	andi	r18,r18,65535
   30f74:	94e4b03a 	or	r18,r18,r19
   30f78:	d8c00017 	ldw	r3,0(sp)
   30f7c:	9500052e 	bgeu	r18,r20,30f94 <__udivdi3+0x28c>
   30f80:	8ca5883a 	add	r18,r17,r18
   30f84:	113fffc4 	addi	r4,r2,-1
   30f88:	94409736 	bltu	r18,r17,311e8 <__udivdi3+0x4e0>
   30f8c:	9500962e 	bgeu	r18,r20,311e8 <__udivdi3+0x4e0>
   30f90:	10bfff84 	addi	r2,r2,-2
   30f94:	b00c943a 	slli	r6,r22,16
   30f98:	3084b03a 	or	r2,r6,r2
   30f9c:	00000206 	br	30fa8 <__udivdi3+0x2a0>
   30fa0:	0007883a 	mov	r3,zero
   30fa4:	0005883a 	mov	r2,zero
   30fa8:	dfc00a17 	ldw	ra,40(sp)
   30fac:	df000917 	ldw	fp,36(sp)
   30fb0:	ddc00817 	ldw	r23,32(sp)
   30fb4:	dd800717 	ldw	r22,28(sp)
   30fb8:	dd400617 	ldw	r21,24(sp)
   30fbc:	dd000517 	ldw	r20,20(sp)
   30fc0:	dcc00417 	ldw	r19,16(sp)
   30fc4:	dc800317 	ldw	r18,12(sp)
   30fc8:	dc400217 	ldw	r17,8(sp)
   30fcc:	dc000117 	ldw	r16,4(sp)
   30fd0:	dec00b04 	addi	sp,sp,44
   30fd4:	f800283a 	ret
   30fd8:	00803fc4 	movi	r2,255
   30fdc:	11c5803a 	cmpltu	r2,r2,r7
   30fe0:	100490fa 	slli	r2,r2,3
   30fe4:	003f9e06 	br	30e60 <__alt_mem_SDRAM_controller+0xfc030e60>
   30fe8:	00803fc4 	movi	r2,255
   30fec:	1445803a 	cmpltu	r2,r2,r17
   30ff0:	100490fa 	slli	r2,r2,3
   30ff4:	003fb206 	br	30ec0 <__alt_mem_SDRAM_controller+0xfc030ec0>
   30ff8:	00804034 	movhi	r2,256
   30ffc:	10bfffc4 	addi	r2,r2,-1
   31000:	11808836 	bltu	r2,r6,31224 <__udivdi3+0x51c>
   31004:	00800404 	movi	r2,16
   31008:	003f5606 	br	30d64 <__alt_mem_SDRAM_controller+0xfc030d64>
   3100c:	30aed83a 	srl	r23,r6,r2
   31010:	3d4e983a 	sll	r7,r7,r21
   31014:	80acd83a 	srl	r22,r16,r2
   31018:	9884d83a 	srl	r2,r19,r2
   3101c:	3deeb03a 	or	r23,r7,r23
   31020:	b824d43a 	srli	r18,r23,16
   31024:	8560983a 	sll	r16,r16,r21
   31028:	b009883a 	mov	r4,r22
   3102c:	900b883a 	mov	r5,r18
   31030:	3568983a 	sll	r20,r6,r21
   31034:	1420b03a 	or	r16,r2,r16
   31038:	00239480 	call	23948 <__umodsi3>
   3103c:	b009883a 	mov	r4,r22
   31040:	900b883a 	mov	r5,r18
   31044:	1023883a 	mov	r17,r2
   31048:	00238e40 	call	238e4 <__udivsi3>
   3104c:	8808943a 	slli	r4,r17,16
   31050:	bf3fffcc 	andi	fp,r23,65535
   31054:	8006d43a 	srli	r3,r16,16
   31058:	e0a3383a 	mul	r17,fp,r2
   3105c:	100d883a 	mov	r6,r2
   31060:	1906b03a 	or	r3,r3,r4
   31064:	1c40042e 	bgeu	r3,r17,31078 <__udivdi3+0x370>
   31068:	1dc7883a 	add	r3,r3,r23
   3106c:	10bfffc4 	addi	r2,r2,-1
   31070:	1dc0752e 	bgeu	r3,r23,31248 <__udivdi3+0x540>
   31074:	100d883a 	mov	r6,r2
   31078:	1c63c83a 	sub	r17,r3,r17
   3107c:	900b883a 	mov	r5,r18
   31080:	8809883a 	mov	r4,r17
   31084:	d9800015 	stw	r6,0(sp)
   31088:	00239480 	call	23948 <__umodsi3>
   3108c:	102d883a 	mov	r22,r2
   31090:	8809883a 	mov	r4,r17
   31094:	900b883a 	mov	r5,r18
   31098:	00238e40 	call	238e4 <__udivsi3>
   3109c:	b02c943a 	slli	r22,r22,16
   310a0:	e089383a 	mul	r4,fp,r2
   310a4:	843fffcc 	andi	r16,r16,65535
   310a8:	85a0b03a 	or	r16,r16,r22
   310ac:	d9800017 	ldw	r6,0(sp)
   310b0:	8100042e 	bgeu	r16,r4,310c4 <__udivdi3+0x3bc>
   310b4:	85e1883a 	add	r16,r16,r23
   310b8:	10ffffc4 	addi	r3,r2,-1
   310bc:	85c05e2e 	bgeu	r16,r23,31238 <__udivdi3+0x530>
   310c0:	1805883a 	mov	r2,r3
   310c4:	300c943a 	slli	r6,r6,16
   310c8:	a17fffcc 	andi	r5,r20,65535
   310cc:	a028d43a 	srli	r20,r20,16
   310d0:	3084b03a 	or	r2,r6,r2
   310d4:	10ffffcc 	andi	r3,r2,65535
   310d8:	100cd43a 	srli	r6,r2,16
   310dc:	194f383a 	mul	r7,r3,r5
   310e0:	1d07383a 	mul	r3,r3,r20
   310e4:	314b383a 	mul	r5,r6,r5
   310e8:	3810d43a 	srli	r8,r7,16
   310ec:	8121c83a 	sub	r16,r16,r4
   310f0:	1947883a 	add	r3,r3,r5
   310f4:	40c7883a 	add	r3,r8,r3
   310f8:	350d383a 	mul	r6,r6,r20
   310fc:	1940022e 	bgeu	r3,r5,31108 <__udivdi3+0x400>
   31100:	01000074 	movhi	r4,1
   31104:	310d883a 	add	r6,r6,r4
   31108:	1828d43a 	srli	r20,r3,16
   3110c:	a18d883a 	add	r6,r20,r6
   31110:	81803e36 	bltu	r16,r6,3120c <__udivdi3+0x504>
   31114:	81803826 	beq	r16,r6,311f8 <__udivdi3+0x4f0>
   31118:	0007883a 	mov	r3,zero
   3111c:	003fa206 	br	30fa8 <__alt_mem_SDRAM_controller+0xfc030fa8>
   31120:	88e2983a 	sll	r17,r17,r3
   31124:	80a8d83a 	srl	r20,r16,r2
   31128:	80e0983a 	sll	r16,r16,r3
   3112c:	882ad43a 	srli	r21,r17,16
   31130:	9884d83a 	srl	r2,r19,r2
   31134:	a009883a 	mov	r4,r20
   31138:	a80b883a 	mov	r5,r21
   3113c:	142eb03a 	or	r23,r2,r16
   31140:	98e4983a 	sll	r18,r19,r3
   31144:	00239480 	call	23948 <__umodsi3>
   31148:	a009883a 	mov	r4,r20
   3114c:	a80b883a 	mov	r5,r21
   31150:	1021883a 	mov	r16,r2
   31154:	00238e40 	call	238e4 <__udivsi3>
   31158:	1039883a 	mov	fp,r2
   3115c:	8d3fffcc 	andi	r20,r17,65535
   31160:	8020943a 	slli	r16,r16,16
   31164:	b804d43a 	srli	r2,r23,16
   31168:	a72d383a 	mul	r22,r20,fp
   3116c:	1404b03a 	or	r2,r2,r16
   31170:	1580062e 	bgeu	r2,r22,3118c <__udivdi3+0x484>
   31174:	1445883a 	add	r2,r2,r17
   31178:	e0ffffc4 	addi	r3,fp,-1
   3117c:	14403836 	bltu	r2,r17,31260 <__udivdi3+0x558>
   31180:	1580372e 	bgeu	r2,r22,31260 <__udivdi3+0x558>
   31184:	e73fff84 	addi	fp,fp,-2
   31188:	1445883a 	add	r2,r2,r17
   3118c:	15adc83a 	sub	r22,r2,r22
   31190:	a80b883a 	mov	r5,r21
   31194:	b009883a 	mov	r4,r22
   31198:	00239480 	call	23948 <__umodsi3>
   3119c:	1027883a 	mov	r19,r2
   311a0:	b009883a 	mov	r4,r22
   311a4:	a80b883a 	mov	r5,r21
   311a8:	00238e40 	call	238e4 <__udivsi3>
   311ac:	9826943a 	slli	r19,r19,16
   311b0:	a0a1383a 	mul	r16,r20,r2
   311b4:	b93fffcc 	andi	r4,r23,65535
   311b8:	24c8b03a 	or	r4,r4,r19
   311bc:	2400062e 	bgeu	r4,r16,311d8 <__udivdi3+0x4d0>
   311c0:	2449883a 	add	r4,r4,r17
   311c4:	10ffffc4 	addi	r3,r2,-1
   311c8:	24402336 	bltu	r4,r17,31258 <__udivdi3+0x550>
   311cc:	2400222e 	bgeu	r4,r16,31258 <__udivdi3+0x550>
   311d0:	10bfff84 	addi	r2,r2,-2
   311d4:	2449883a 	add	r4,r4,r17
   311d8:	e038943a 	slli	fp,fp,16
   311dc:	2421c83a 	sub	r16,r4,r16
   311e0:	e086b03a 	or	r3,fp,r2
   311e4:	003f4306 	br	30ef4 <__alt_mem_SDRAM_controller+0xfc030ef4>
   311e8:	2005883a 	mov	r2,r4
   311ec:	003f6906 	br	30f94 <__alt_mem_SDRAM_controller+0xfc030f94>
   311f0:	1805883a 	mov	r2,r3
   311f4:	003f0f06 	br	30e34 <__alt_mem_SDRAM_controller+0xfc030e34>
   311f8:	1806943a 	slli	r3,r3,16
   311fc:	9d66983a 	sll	r19,r19,r21
   31200:	39ffffcc 	andi	r7,r7,65535
   31204:	19c7883a 	add	r3,r3,r7
   31208:	98ffc32e 	bgeu	r19,r3,31118 <__alt_mem_SDRAM_controller+0xfc031118>
   3120c:	10bfffc4 	addi	r2,r2,-1
   31210:	003fc106 	br	31118 <__alt_mem_SDRAM_controller+0xfc031118>
   31214:	00800604 	movi	r2,24
   31218:	003f1106 	br	30e60 <__alt_mem_SDRAM_controller+0xfc030e60>
   3121c:	00800604 	movi	r2,24
   31220:	003f2706 	br	30ec0 <__alt_mem_SDRAM_controller+0xfc030ec0>
   31224:	00800604 	movi	r2,24
   31228:	003ece06 	br	30d64 <__alt_mem_SDRAM_controller+0xfc030d64>
   3122c:	0007883a 	mov	r3,zero
   31230:	00800044 	movi	r2,1
   31234:	003f5c06 	br	30fa8 <__alt_mem_SDRAM_controller+0xfc030fa8>
   31238:	813fa12e 	bgeu	r16,r4,310c0 <__alt_mem_SDRAM_controller+0xfc0310c0>
   3123c:	10bfff84 	addi	r2,r2,-2
   31240:	85e1883a 	add	r16,r16,r23
   31244:	003f9f06 	br	310c4 <__alt_mem_SDRAM_controller+0xfc0310c4>
   31248:	1c7f8a2e 	bgeu	r3,r17,31074 <__alt_mem_SDRAM_controller+0xfc031074>
   3124c:	31bfff84 	addi	r6,r6,-2
   31250:	1dc7883a 	add	r3,r3,r23
   31254:	003f8806 	br	31078 <__alt_mem_SDRAM_controller+0xfc031078>
   31258:	1805883a 	mov	r2,r3
   3125c:	003fde06 	br	311d8 <__alt_mem_SDRAM_controller+0xfc0311d8>
   31260:	1839883a 	mov	fp,r3
   31264:	003fc906 	br	3118c <__alt_mem_SDRAM_controller+0xfc03118c>
   31268:	b5bfff84 	addi	r22,r22,-2
   3126c:	2449883a 	add	r4,r4,r17
   31270:	003f3406 	br	30f44 <__alt_mem_SDRAM_controller+0xfc030f44>
   31274:	b5bfff84 	addi	r22,r22,-2
   31278:	1445883a 	add	r2,r2,r17
   3127c:	003edb06 	br	30dec <__alt_mem_SDRAM_controller+0xfc030dec>

00031280 <__umoddi3>:
   31280:	defff404 	addi	sp,sp,-48
   31284:	df000a15 	stw	fp,40(sp)
   31288:	dc400315 	stw	r17,12(sp)
   3128c:	dc000215 	stw	r16,8(sp)
   31290:	dfc00b15 	stw	ra,44(sp)
   31294:	ddc00915 	stw	r23,36(sp)
   31298:	dd800815 	stw	r22,32(sp)
   3129c:	dd400715 	stw	r21,28(sp)
   312a0:	dd000615 	stw	r20,24(sp)
   312a4:	dcc00515 	stw	r19,20(sp)
   312a8:	dc800415 	stw	r18,16(sp)
   312ac:	2021883a 	mov	r16,r4
   312b0:	2823883a 	mov	r17,r5
   312b4:	2839883a 	mov	fp,r5
   312b8:	38003c1e 	bne	r7,zero,313ac <__umoddi3+0x12c>
   312bc:	3027883a 	mov	r19,r6
   312c0:	2029883a 	mov	r20,r4
   312c4:	2980512e 	bgeu	r5,r6,3140c <__umoddi3+0x18c>
   312c8:	00bfffd4 	movui	r2,65535
   312cc:	11809a36 	bltu	r2,r6,31538 <__umoddi3+0x2b8>
   312d0:	01003fc4 	movi	r4,255
   312d4:	2189803a 	cmpltu	r4,r4,r6
   312d8:	200890fa 	slli	r4,r4,3
   312dc:	3104d83a 	srl	r2,r6,r4
   312e0:	00c000f4 	movhi	r3,3
   312e4:	18d88104 	addi	r3,r3,25092
   312e8:	1885883a 	add	r2,r3,r2
   312ec:	10c00003 	ldbu	r3,0(r2)
   312f0:	00800804 	movi	r2,32
   312f4:	1909883a 	add	r4,r3,r4
   312f8:	1125c83a 	sub	r18,r2,r4
   312fc:	90000526 	beq	r18,zero,31314 <__umoddi3+0x94>
   31300:	8ca2983a 	sll	r17,r17,r18
   31304:	8108d83a 	srl	r4,r16,r4
   31308:	34a6983a 	sll	r19,r6,r18
   3130c:	84a8983a 	sll	r20,r16,r18
   31310:	2478b03a 	or	fp,r4,r17
   31314:	982ed43a 	srli	r23,r19,16
   31318:	e009883a 	mov	r4,fp
   3131c:	9dbfffcc 	andi	r22,r19,65535
   31320:	b80b883a 	mov	r5,r23
   31324:	00239480 	call	23948 <__umodsi3>
   31328:	e009883a 	mov	r4,fp
   3132c:	b80b883a 	mov	r5,r23
   31330:	102b883a 	mov	r21,r2
   31334:	00238e40 	call	238e4 <__udivsi3>
   31338:	a806943a 	slli	r3,r21,16
   3133c:	a008d43a 	srli	r4,r20,16
   31340:	b085383a 	mul	r2,r22,r2
   31344:	20c8b03a 	or	r4,r4,r3
   31348:	2080032e 	bgeu	r4,r2,31358 <__umoddi3+0xd8>
   3134c:	24c9883a 	add	r4,r4,r19
   31350:	24c00136 	bltu	r4,r19,31358 <__umoddi3+0xd8>
   31354:	20811036 	bltu	r4,r2,31798 <__umoddi3+0x518>
   31358:	20abc83a 	sub	r21,r4,r2
   3135c:	b80b883a 	mov	r5,r23
   31360:	a809883a 	mov	r4,r21
   31364:	00239480 	call	23948 <__umodsi3>
   31368:	1023883a 	mov	r17,r2
   3136c:	b80b883a 	mov	r5,r23
   31370:	a809883a 	mov	r4,r21
   31374:	00238e40 	call	238e4 <__udivsi3>
   31378:	8822943a 	slli	r17,r17,16
   3137c:	b085383a 	mul	r2,r22,r2
   31380:	a0ffffcc 	andi	r3,r20,65535
   31384:	1c46b03a 	or	r3,r3,r17
   31388:	1880042e 	bgeu	r3,r2,3139c <__umoddi3+0x11c>
   3138c:	1cc7883a 	add	r3,r3,r19
   31390:	1cc00236 	bltu	r3,r19,3139c <__umoddi3+0x11c>
   31394:	1880012e 	bgeu	r3,r2,3139c <__umoddi3+0x11c>
   31398:	1cc7883a 	add	r3,r3,r19
   3139c:	1885c83a 	sub	r2,r3,r2
   313a0:	1484d83a 	srl	r2,r2,r18
   313a4:	0007883a 	mov	r3,zero
   313a8:	00004f06 	br	314e8 <__umoddi3+0x268>
   313ac:	29c04c36 	bltu	r5,r7,314e0 <__umoddi3+0x260>
   313b0:	00bfffd4 	movui	r2,65535
   313b4:	11c0582e 	bgeu	r2,r7,31518 <__umoddi3+0x298>
   313b8:	00804034 	movhi	r2,256
   313bc:	10bfffc4 	addi	r2,r2,-1
   313c0:	11c0e736 	bltu	r2,r7,31760 <__umoddi3+0x4e0>
   313c4:	01000404 	movi	r4,16
   313c8:	3904d83a 	srl	r2,r7,r4
   313cc:	00c000f4 	movhi	r3,3
   313d0:	18d88104 	addi	r3,r3,25092
   313d4:	1885883a 	add	r2,r3,r2
   313d8:	14c00003 	ldbu	r19,0(r2)
   313dc:	00c00804 	movi	r3,32
   313e0:	9927883a 	add	r19,r19,r4
   313e4:	1ce9c83a 	sub	r20,r3,r19
   313e8:	a000581e 	bne	r20,zero,3154c <__umoddi3+0x2cc>
   313ec:	3c400136 	bltu	r7,r17,313f4 <__umoddi3+0x174>
   313f0:	8180eb36 	bltu	r16,r6,317a0 <__umoddi3+0x520>
   313f4:	8185c83a 	sub	r2,r16,r6
   313f8:	89e3c83a 	sub	r17,r17,r7
   313fc:	8089803a 	cmpltu	r4,r16,r2
   31400:	8939c83a 	sub	fp,r17,r4
   31404:	e007883a 	mov	r3,fp
   31408:	00003706 	br	314e8 <__umoddi3+0x268>
   3140c:	3000041e 	bne	r6,zero,31420 <__umoddi3+0x1a0>
   31410:	000b883a 	mov	r5,zero
   31414:	01000044 	movi	r4,1
   31418:	00238e40 	call	238e4 <__udivsi3>
   3141c:	1027883a 	mov	r19,r2
   31420:	00bfffd4 	movui	r2,65535
   31424:	14c0402e 	bgeu	r2,r19,31528 <__umoddi3+0x2a8>
   31428:	00804034 	movhi	r2,256
   3142c:	10bfffc4 	addi	r2,r2,-1
   31430:	14c0cd36 	bltu	r2,r19,31768 <__umoddi3+0x4e8>
   31434:	00800404 	movi	r2,16
   31438:	9886d83a 	srl	r3,r19,r2
   3143c:	010000f4 	movhi	r4,3
   31440:	21188104 	addi	r4,r4,25092
   31444:	20c7883a 	add	r3,r4,r3
   31448:	18c00003 	ldbu	r3,0(r3)
   3144c:	1887883a 	add	r3,r3,r2
   31450:	00800804 	movi	r2,32
   31454:	10e5c83a 	sub	r18,r2,r3
   31458:	9000901e 	bne	r18,zero,3169c <__umoddi3+0x41c>
   3145c:	982cd43a 	srli	r22,r19,16
   31460:	8ce3c83a 	sub	r17,r17,r19
   31464:	9d7fffcc 	andi	r21,r19,65535
   31468:	b00b883a 	mov	r5,r22
   3146c:	8809883a 	mov	r4,r17
   31470:	00239480 	call	23948 <__umodsi3>
   31474:	8809883a 	mov	r4,r17
   31478:	b00b883a 	mov	r5,r22
   3147c:	1021883a 	mov	r16,r2
   31480:	00238e40 	call	238e4 <__udivsi3>
   31484:	8006943a 	slli	r3,r16,16
   31488:	a008d43a 	srli	r4,r20,16
   3148c:	1545383a 	mul	r2,r2,r21
   31490:	20c8b03a 	or	r4,r4,r3
   31494:	2080042e 	bgeu	r4,r2,314a8 <__umoddi3+0x228>
   31498:	24c9883a 	add	r4,r4,r19
   3149c:	24c00236 	bltu	r4,r19,314a8 <__umoddi3+0x228>
   314a0:	2080012e 	bgeu	r4,r2,314a8 <__umoddi3+0x228>
   314a4:	24c9883a 	add	r4,r4,r19
   314a8:	20a1c83a 	sub	r16,r4,r2
   314ac:	b00b883a 	mov	r5,r22
   314b0:	8009883a 	mov	r4,r16
   314b4:	00239480 	call	23948 <__umodsi3>
   314b8:	1023883a 	mov	r17,r2
   314bc:	b00b883a 	mov	r5,r22
   314c0:	8009883a 	mov	r4,r16
   314c4:	00238e40 	call	238e4 <__udivsi3>
   314c8:	8822943a 	slli	r17,r17,16
   314cc:	1545383a 	mul	r2,r2,r21
   314d0:	a53fffcc 	andi	r20,r20,65535
   314d4:	a446b03a 	or	r3,r20,r17
   314d8:	18bfb02e 	bgeu	r3,r2,3139c <__alt_mem_SDRAM_controller+0xfc03139c>
   314dc:	003fab06 	br	3138c <__alt_mem_SDRAM_controller+0xfc03138c>
   314e0:	2005883a 	mov	r2,r4
   314e4:	2807883a 	mov	r3,r5
   314e8:	dfc00b17 	ldw	ra,44(sp)
   314ec:	df000a17 	ldw	fp,40(sp)
   314f0:	ddc00917 	ldw	r23,36(sp)
   314f4:	dd800817 	ldw	r22,32(sp)
   314f8:	dd400717 	ldw	r21,28(sp)
   314fc:	dd000617 	ldw	r20,24(sp)
   31500:	dcc00517 	ldw	r19,20(sp)
   31504:	dc800417 	ldw	r18,16(sp)
   31508:	dc400317 	ldw	r17,12(sp)
   3150c:	dc000217 	ldw	r16,8(sp)
   31510:	dec00c04 	addi	sp,sp,48
   31514:	f800283a 	ret
   31518:	04c03fc4 	movi	r19,255
   3151c:	99c9803a 	cmpltu	r4,r19,r7
   31520:	200890fa 	slli	r4,r4,3
   31524:	003fa806 	br	313c8 <__alt_mem_SDRAM_controller+0xfc0313c8>
   31528:	00803fc4 	movi	r2,255
   3152c:	14c5803a 	cmpltu	r2,r2,r19
   31530:	100490fa 	slli	r2,r2,3
   31534:	003fc006 	br	31438 <__alt_mem_SDRAM_controller+0xfc031438>
   31538:	00804034 	movhi	r2,256
   3153c:	10bfffc4 	addi	r2,r2,-1
   31540:	11808b36 	bltu	r2,r6,31770 <__umoddi3+0x4f0>
   31544:	01000404 	movi	r4,16
   31548:	003f6406 	br	312dc <__alt_mem_SDRAM_controller+0xfc0312dc>
   3154c:	34c4d83a 	srl	r2,r6,r19
   31550:	3d0e983a 	sll	r7,r7,r20
   31554:	8cf8d83a 	srl	fp,r17,r19
   31558:	8d10983a 	sll	r8,r17,r20
   3155c:	38aab03a 	or	r21,r7,r2
   31560:	a82cd43a 	srli	r22,r21,16
   31564:	84e2d83a 	srl	r17,r16,r19
   31568:	e009883a 	mov	r4,fp
   3156c:	b00b883a 	mov	r5,r22
   31570:	8a22b03a 	or	r17,r17,r8
   31574:	3524983a 	sll	r18,r6,r20
   31578:	00239480 	call	23948 <__umodsi3>
   3157c:	e009883a 	mov	r4,fp
   31580:	b00b883a 	mov	r5,r22
   31584:	102f883a 	mov	r23,r2
   31588:	00238e40 	call	238e4 <__udivsi3>
   3158c:	100d883a 	mov	r6,r2
   31590:	b808943a 	slli	r4,r23,16
   31594:	aa3fffcc 	andi	r8,r21,65535
   31598:	8804d43a 	srli	r2,r17,16
   3159c:	41af383a 	mul	r23,r8,r6
   315a0:	8520983a 	sll	r16,r16,r20
   315a4:	1104b03a 	or	r2,r2,r4
   315a8:	15c0042e 	bgeu	r2,r23,315bc <__umoddi3+0x33c>
   315ac:	1545883a 	add	r2,r2,r21
   315b0:	30ffffc4 	addi	r3,r6,-1
   315b4:	1540742e 	bgeu	r2,r21,31788 <__umoddi3+0x508>
   315b8:	180d883a 	mov	r6,r3
   315bc:	15efc83a 	sub	r23,r2,r23
   315c0:	b00b883a 	mov	r5,r22
   315c4:	b809883a 	mov	r4,r23
   315c8:	d9800115 	stw	r6,4(sp)
   315cc:	da000015 	stw	r8,0(sp)
   315d0:	00239480 	call	23948 <__umodsi3>
   315d4:	b00b883a 	mov	r5,r22
   315d8:	b809883a 	mov	r4,r23
   315dc:	1039883a 	mov	fp,r2
   315e0:	00238e40 	call	238e4 <__udivsi3>
   315e4:	da000017 	ldw	r8,0(sp)
   315e8:	e038943a 	slli	fp,fp,16
   315ec:	100b883a 	mov	r5,r2
   315f0:	4089383a 	mul	r4,r8,r2
   315f4:	8a3fffcc 	andi	r8,r17,65535
   315f8:	4710b03a 	or	r8,r8,fp
   315fc:	d9800117 	ldw	r6,4(sp)
   31600:	4100042e 	bgeu	r8,r4,31614 <__umoddi3+0x394>
   31604:	4551883a 	add	r8,r8,r21
   31608:	10bfffc4 	addi	r2,r2,-1
   3160c:	45405a2e 	bgeu	r8,r21,31778 <__umoddi3+0x4f8>
   31610:	100b883a 	mov	r5,r2
   31614:	300c943a 	slli	r6,r6,16
   31618:	91ffffcc 	andi	r7,r18,65535
   3161c:	9004d43a 	srli	r2,r18,16
   31620:	314cb03a 	or	r6,r6,r5
   31624:	317fffcc 	andi	r5,r6,65535
   31628:	300cd43a 	srli	r6,r6,16
   3162c:	29d3383a 	mul	r9,r5,r7
   31630:	288b383a 	mul	r5,r5,r2
   31634:	31cf383a 	mul	r7,r6,r7
   31638:	4806d43a 	srli	r3,r9,16
   3163c:	4111c83a 	sub	r8,r8,r4
   31640:	29cb883a 	add	r5,r5,r7
   31644:	194b883a 	add	r5,r3,r5
   31648:	3085383a 	mul	r2,r6,r2
   3164c:	29c0022e 	bgeu	r5,r7,31658 <__umoddi3+0x3d8>
   31650:	00c00074 	movhi	r3,1
   31654:	10c5883a 	add	r2,r2,r3
   31658:	2808d43a 	srli	r4,r5,16
   3165c:	280a943a 	slli	r5,r5,16
   31660:	4a7fffcc 	andi	r9,r9,65535
   31664:	2085883a 	add	r2,r4,r2
   31668:	2a4b883a 	add	r5,r5,r9
   3166c:	40803636 	bltu	r8,r2,31748 <__umoddi3+0x4c8>
   31670:	40804d26 	beq	r8,r2,317a8 <__umoddi3+0x528>
   31674:	4089c83a 	sub	r4,r8,r2
   31678:	280f883a 	mov	r7,r5
   3167c:	81cfc83a 	sub	r7,r16,r7
   31680:	81c7803a 	cmpltu	r3,r16,r7
   31684:	20c7c83a 	sub	r3,r4,r3
   31688:	1cc4983a 	sll	r2,r3,r19
   3168c:	3d0ed83a 	srl	r7,r7,r20
   31690:	1d06d83a 	srl	r3,r3,r20
   31694:	11c4b03a 	or	r2,r2,r7
   31698:	003f9306 	br	314e8 <__alt_mem_SDRAM_controller+0xfc0314e8>
   3169c:	9ca6983a 	sll	r19,r19,r18
   316a0:	88e8d83a 	srl	r20,r17,r3
   316a4:	80c4d83a 	srl	r2,r16,r3
   316a8:	982cd43a 	srli	r22,r19,16
   316ac:	8ca2983a 	sll	r17,r17,r18
   316b0:	a009883a 	mov	r4,r20
   316b4:	b00b883a 	mov	r5,r22
   316b8:	1478b03a 	or	fp,r2,r17
   316bc:	00239480 	call	23948 <__umodsi3>
   316c0:	a009883a 	mov	r4,r20
   316c4:	b00b883a 	mov	r5,r22
   316c8:	1023883a 	mov	r17,r2
   316cc:	00238e40 	call	238e4 <__udivsi3>
   316d0:	9d7fffcc 	andi	r21,r19,65535
   316d4:	880a943a 	slli	r5,r17,16
   316d8:	e008d43a 	srli	r4,fp,16
   316dc:	a885383a 	mul	r2,r21,r2
   316e0:	84a8983a 	sll	r20,r16,r18
   316e4:	2148b03a 	or	r4,r4,r5
   316e8:	2080042e 	bgeu	r4,r2,316fc <__umoddi3+0x47c>
   316ec:	24c9883a 	add	r4,r4,r19
   316f0:	24c00236 	bltu	r4,r19,316fc <__umoddi3+0x47c>
   316f4:	2080012e 	bgeu	r4,r2,316fc <__umoddi3+0x47c>
   316f8:	24c9883a 	add	r4,r4,r19
   316fc:	20a3c83a 	sub	r17,r4,r2
   31700:	b00b883a 	mov	r5,r22
   31704:	8809883a 	mov	r4,r17
   31708:	00239480 	call	23948 <__umodsi3>
   3170c:	102f883a 	mov	r23,r2
   31710:	8809883a 	mov	r4,r17
   31714:	b00b883a 	mov	r5,r22
   31718:	00238e40 	call	238e4 <__udivsi3>
   3171c:	b82e943a 	slli	r23,r23,16
   31720:	a885383a 	mul	r2,r21,r2
   31724:	e13fffcc 	andi	r4,fp,65535
   31728:	25c8b03a 	or	r4,r4,r23
   3172c:	2080042e 	bgeu	r4,r2,31740 <__umoddi3+0x4c0>
   31730:	24c9883a 	add	r4,r4,r19
   31734:	24c00236 	bltu	r4,r19,31740 <__umoddi3+0x4c0>
   31738:	2080012e 	bgeu	r4,r2,31740 <__umoddi3+0x4c0>
   3173c:	24c9883a 	add	r4,r4,r19
   31740:	20a3c83a 	sub	r17,r4,r2
   31744:	003f4806 	br	31468 <__alt_mem_SDRAM_controller+0xfc031468>
   31748:	2c8fc83a 	sub	r7,r5,r18
   3174c:	1545c83a 	sub	r2,r2,r21
   31750:	29cb803a 	cmpltu	r5,r5,r7
   31754:	1145c83a 	sub	r2,r2,r5
   31758:	4089c83a 	sub	r4,r8,r2
   3175c:	003fc706 	br	3167c <__alt_mem_SDRAM_controller+0xfc03167c>
   31760:	01000604 	movi	r4,24
   31764:	003f1806 	br	313c8 <__alt_mem_SDRAM_controller+0xfc0313c8>
   31768:	00800604 	movi	r2,24
   3176c:	003f3206 	br	31438 <__alt_mem_SDRAM_controller+0xfc031438>
   31770:	01000604 	movi	r4,24
   31774:	003ed906 	br	312dc <__alt_mem_SDRAM_controller+0xfc0312dc>
   31778:	413fa52e 	bgeu	r8,r4,31610 <__alt_mem_SDRAM_controller+0xfc031610>
   3177c:	297fff84 	addi	r5,r5,-2
   31780:	4551883a 	add	r8,r8,r21
   31784:	003fa306 	br	31614 <__alt_mem_SDRAM_controller+0xfc031614>
   31788:	15ff8b2e 	bgeu	r2,r23,315b8 <__alt_mem_SDRAM_controller+0xfc0315b8>
   3178c:	31bfff84 	addi	r6,r6,-2
   31790:	1545883a 	add	r2,r2,r21
   31794:	003f8906 	br	315bc <__alt_mem_SDRAM_controller+0xfc0315bc>
   31798:	24c9883a 	add	r4,r4,r19
   3179c:	003eee06 	br	31358 <__alt_mem_SDRAM_controller+0xfc031358>
   317a0:	8005883a 	mov	r2,r16
   317a4:	003f1706 	br	31404 <__alt_mem_SDRAM_controller+0xfc031404>
   317a8:	817fe736 	bltu	r16,r5,31748 <__alt_mem_SDRAM_controller+0xfc031748>
   317ac:	280f883a 	mov	r7,r5
   317b0:	0009883a 	mov	r4,zero
   317b4:	003fb106 	br	3167c <__alt_mem_SDRAM_controller+0xfc03167c>

000317b8 <__floatunsidf>:
   317b8:	defffe04 	addi	sp,sp,-8
   317bc:	dc000015 	stw	r16,0(sp)
   317c0:	dfc00115 	stw	ra,4(sp)
   317c4:	2021883a 	mov	r16,r4
   317c8:	20002226 	beq	r4,zero,31854 <__floatunsidf+0x9c>
   317cc:	00276b40 	call	276b4 <__clzsi2>
   317d0:	01010784 	movi	r4,1054
   317d4:	2089c83a 	sub	r4,r4,r2
   317d8:	01810cc4 	movi	r6,1075
   317dc:	310dc83a 	sub	r6,r6,r4
   317e0:	00c007c4 	movi	r3,31
   317e4:	1980120e 	bge	r3,r6,31830 <__floatunsidf+0x78>
   317e8:	00c104c4 	movi	r3,1043
   317ec:	1907c83a 	sub	r3,r3,r4
   317f0:	80ca983a 	sll	r5,r16,r3
   317f4:	00800434 	movhi	r2,16
   317f8:	10bfffc4 	addi	r2,r2,-1
   317fc:	2101ffcc 	andi	r4,r4,2047
   31800:	0021883a 	mov	r16,zero
   31804:	288a703a 	and	r5,r5,r2
   31808:	2008953a 	slli	r4,r4,20
   3180c:	00c00434 	movhi	r3,16
   31810:	18ffffc4 	addi	r3,r3,-1
   31814:	28c6703a 	and	r3,r5,r3
   31818:	8005883a 	mov	r2,r16
   3181c:	1906b03a 	or	r3,r3,r4
   31820:	dfc00117 	ldw	ra,4(sp)
   31824:	dc000017 	ldw	r16,0(sp)
   31828:	dec00204 	addi	sp,sp,8
   3182c:	f800283a 	ret
   31830:	00c002c4 	movi	r3,11
   31834:	188bc83a 	sub	r5,r3,r2
   31838:	814ad83a 	srl	r5,r16,r5
   3183c:	00c00434 	movhi	r3,16
   31840:	18ffffc4 	addi	r3,r3,-1
   31844:	81a0983a 	sll	r16,r16,r6
   31848:	2101ffcc 	andi	r4,r4,2047
   3184c:	28ca703a 	and	r5,r5,r3
   31850:	003fed06 	br	31808 <__alt_mem_SDRAM_controller+0xfc031808>
   31854:	0009883a 	mov	r4,zero
   31858:	000b883a 	mov	r5,zero
   3185c:	003fea06 	br	31808 <__alt_mem_SDRAM_controller+0xfc031808>

00031860 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31860:	defffe04 	addi	sp,sp,-8
   31864:	dfc00115 	stw	ra,4(sp)
   31868:	df000015 	stw	fp,0(sp)
   3186c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31870:	d0a00e17 	ldw	r2,-32712(gp)
   31874:	10000326 	beq	r2,zero,31884 <alt_get_errno+0x24>
   31878:	d0a00e17 	ldw	r2,-32712(gp)
   3187c:	103ee83a 	callr	r2
   31880:	00000106 	br	31888 <alt_get_errno+0x28>
   31884:	d0a71f04 	addi	r2,gp,-25476
}
   31888:	e037883a 	mov	sp,fp
   3188c:	dfc00117 	ldw	ra,4(sp)
   31890:	df000017 	ldw	fp,0(sp)
   31894:	dec00204 	addi	sp,sp,8
   31898:	f800283a 	ret

0003189c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   3189c:	defffb04 	addi	sp,sp,-20
   318a0:	dfc00415 	stw	ra,16(sp)
   318a4:	df000315 	stw	fp,12(sp)
   318a8:	df000304 	addi	fp,sp,12
   318ac:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   318b0:	e0bfff17 	ldw	r2,-4(fp)
   318b4:	10000616 	blt	r2,zero,318d0 <close+0x34>
   318b8:	e0bfff17 	ldw	r2,-4(fp)
   318bc:	10c00324 	muli	r3,r2,12
   318c0:	008000f4 	movhi	r2,3
   318c4:	109b9304 	addi	r2,r2,28236
   318c8:	1885883a 	add	r2,r3,r2
   318cc:	00000106 	br	318d4 <close+0x38>
   318d0:	0005883a 	mov	r2,zero
   318d4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   318d8:	e0bffd17 	ldw	r2,-12(fp)
   318dc:	10001926 	beq	r2,zero,31944 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   318e0:	e0bffd17 	ldw	r2,-12(fp)
   318e4:	10800017 	ldw	r2,0(r2)
   318e8:	10800417 	ldw	r2,16(r2)
   318ec:	10000626 	beq	r2,zero,31908 <close+0x6c>
   318f0:	e0bffd17 	ldw	r2,-12(fp)
   318f4:	10800017 	ldw	r2,0(r2)
   318f8:	10800417 	ldw	r2,16(r2)
   318fc:	e13ffd17 	ldw	r4,-12(fp)
   31900:	103ee83a 	callr	r2
   31904:	00000106 	br	3190c <close+0x70>
   31908:	0005883a 	mov	r2,zero
   3190c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   31910:	e13fff17 	ldw	r4,-4(fp)
   31914:	0031f5c0 	call	31f5c <alt_release_fd>
    if (rval < 0)
   31918:	e0bffe17 	ldw	r2,-8(fp)
   3191c:	1000070e 	bge	r2,zero,3193c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   31920:	00318600 	call	31860 <alt_get_errno>
   31924:	1007883a 	mov	r3,r2
   31928:	e0bffe17 	ldw	r2,-8(fp)
   3192c:	0085c83a 	sub	r2,zero,r2
   31930:	18800015 	stw	r2,0(r3)
      return -1;
   31934:	00bfffc4 	movi	r2,-1
   31938:	00000706 	br	31958 <close+0xbc>
    }
    return 0;
   3193c:	0005883a 	mov	r2,zero
   31940:	00000506 	br	31958 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   31944:	00318600 	call	31860 <alt_get_errno>
   31948:	1007883a 	mov	r3,r2
   3194c:	00801444 	movi	r2,81
   31950:	18800015 	stw	r2,0(r3)
    return -1;
   31954:	00bfffc4 	movi	r2,-1
  }
}
   31958:	e037883a 	mov	sp,fp
   3195c:	dfc00117 	ldw	ra,4(sp)
   31960:	df000017 	ldw	fp,0(sp)
   31964:	dec00204 	addi	sp,sp,8
   31968:	f800283a 	ret

0003196c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   3196c:	defffc04 	addi	sp,sp,-16
   31970:	df000315 	stw	fp,12(sp)
   31974:	df000304 	addi	fp,sp,12
   31978:	e13ffd15 	stw	r4,-12(fp)
   3197c:	e17ffe15 	stw	r5,-8(fp)
   31980:	e1bfff15 	stw	r6,-4(fp)
  return len;
   31984:	e0bfff17 	ldw	r2,-4(fp)
}
   31988:	e037883a 	mov	sp,fp
   3198c:	df000017 	ldw	fp,0(sp)
   31990:	dec00104 	addi	sp,sp,4
   31994:	f800283a 	ret

00031998 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31998:	defffe04 	addi	sp,sp,-8
   3199c:	dfc00115 	stw	ra,4(sp)
   319a0:	df000015 	stw	fp,0(sp)
   319a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   319a8:	d0a00e17 	ldw	r2,-32712(gp)
   319ac:	10000326 	beq	r2,zero,319bc <alt_get_errno+0x24>
   319b0:	d0a00e17 	ldw	r2,-32712(gp)
   319b4:	103ee83a 	callr	r2
   319b8:	00000106 	br	319c0 <alt_get_errno+0x28>
   319bc:	d0a71f04 	addi	r2,gp,-25476
}
   319c0:	e037883a 	mov	sp,fp
   319c4:	dfc00117 	ldw	ra,4(sp)
   319c8:	df000017 	ldw	fp,0(sp)
   319cc:	dec00204 	addi	sp,sp,8
   319d0:	f800283a 	ret

000319d4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   319d4:	defffb04 	addi	sp,sp,-20
   319d8:	dfc00415 	stw	ra,16(sp)
   319dc:	df000315 	stw	fp,12(sp)
   319e0:	df000304 	addi	fp,sp,12
   319e4:	e13ffe15 	stw	r4,-8(fp)
   319e8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   319ec:	e0bffe17 	ldw	r2,-8(fp)
   319f0:	10000616 	blt	r2,zero,31a0c <fstat+0x38>
   319f4:	e0bffe17 	ldw	r2,-8(fp)
   319f8:	10c00324 	muli	r3,r2,12
   319fc:	008000f4 	movhi	r2,3
   31a00:	109b9304 	addi	r2,r2,28236
   31a04:	1885883a 	add	r2,r3,r2
   31a08:	00000106 	br	31a10 <fstat+0x3c>
   31a0c:	0005883a 	mov	r2,zero
   31a10:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   31a14:	e0bffd17 	ldw	r2,-12(fp)
   31a18:	10001026 	beq	r2,zero,31a5c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   31a1c:	e0bffd17 	ldw	r2,-12(fp)
   31a20:	10800017 	ldw	r2,0(r2)
   31a24:	10800817 	ldw	r2,32(r2)
   31a28:	10000726 	beq	r2,zero,31a48 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   31a2c:	e0bffd17 	ldw	r2,-12(fp)
   31a30:	10800017 	ldw	r2,0(r2)
   31a34:	10800817 	ldw	r2,32(r2)
   31a38:	e17fff17 	ldw	r5,-4(fp)
   31a3c:	e13ffd17 	ldw	r4,-12(fp)
   31a40:	103ee83a 	callr	r2
   31a44:	00000a06 	br	31a70 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   31a48:	e0bfff17 	ldw	r2,-4(fp)
   31a4c:	00c80004 	movi	r3,8192
   31a50:	10c00115 	stw	r3,4(r2)
      return 0;
   31a54:	0005883a 	mov	r2,zero
   31a58:	00000506 	br	31a70 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   31a5c:	00319980 	call	31998 <alt_get_errno>
   31a60:	1007883a 	mov	r3,r2
   31a64:	00801444 	movi	r2,81
   31a68:	18800015 	stw	r2,0(r3)
    return -1;
   31a6c:	00bfffc4 	movi	r2,-1
  }
}
   31a70:	e037883a 	mov	sp,fp
   31a74:	dfc00117 	ldw	ra,4(sp)
   31a78:	df000017 	ldw	fp,0(sp)
   31a7c:	dec00204 	addi	sp,sp,8
   31a80:	f800283a 	ret

00031a84 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31a84:	defffe04 	addi	sp,sp,-8
   31a88:	dfc00115 	stw	ra,4(sp)
   31a8c:	df000015 	stw	fp,0(sp)
   31a90:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31a94:	d0a00e17 	ldw	r2,-32712(gp)
   31a98:	10000326 	beq	r2,zero,31aa8 <alt_get_errno+0x24>
   31a9c:	d0a00e17 	ldw	r2,-32712(gp)
   31aa0:	103ee83a 	callr	r2
   31aa4:	00000106 	br	31aac <alt_get_errno+0x28>
   31aa8:	d0a71f04 	addi	r2,gp,-25476
}
   31aac:	e037883a 	mov	sp,fp
   31ab0:	dfc00117 	ldw	ra,4(sp)
   31ab4:	df000017 	ldw	fp,0(sp)
   31ab8:	dec00204 	addi	sp,sp,8
   31abc:	f800283a 	ret

00031ac0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   31ac0:	deffed04 	addi	sp,sp,-76
   31ac4:	dfc01215 	stw	ra,72(sp)
   31ac8:	df001115 	stw	fp,68(sp)
   31acc:	df001104 	addi	fp,sp,68
   31ad0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   31ad4:	e0bfff17 	ldw	r2,-4(fp)
   31ad8:	10000616 	blt	r2,zero,31af4 <isatty+0x34>
   31adc:	e0bfff17 	ldw	r2,-4(fp)
   31ae0:	10c00324 	muli	r3,r2,12
   31ae4:	008000f4 	movhi	r2,3
   31ae8:	109b9304 	addi	r2,r2,28236
   31aec:	1885883a 	add	r2,r3,r2
   31af0:	00000106 	br	31af8 <isatty+0x38>
   31af4:	0005883a 	mov	r2,zero
   31af8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   31afc:	e0bfef17 	ldw	r2,-68(fp)
   31b00:	10000e26 	beq	r2,zero,31b3c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   31b04:	e0bfef17 	ldw	r2,-68(fp)
   31b08:	10800017 	ldw	r2,0(r2)
   31b0c:	10800817 	ldw	r2,32(r2)
   31b10:	1000021e 	bne	r2,zero,31b1c <isatty+0x5c>
    {
      return 1;
   31b14:	00800044 	movi	r2,1
   31b18:	00000d06 	br	31b50 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   31b1c:	e0bff004 	addi	r2,fp,-64
   31b20:	100b883a 	mov	r5,r2
   31b24:	e13fff17 	ldw	r4,-4(fp)
   31b28:	00319d40 	call	319d4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   31b2c:	e0bff117 	ldw	r2,-60(fp)
   31b30:	10880020 	cmpeqi	r2,r2,8192
   31b34:	10803fcc 	andi	r2,r2,255
   31b38:	00000506 	br	31b50 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   31b3c:	0031a840 	call	31a84 <alt_get_errno>
   31b40:	1007883a 	mov	r3,r2
   31b44:	00801444 	movi	r2,81
   31b48:	18800015 	stw	r2,0(r3)
    return 0;
   31b4c:	0005883a 	mov	r2,zero
  }
}
   31b50:	e037883a 	mov	sp,fp
   31b54:	dfc00117 	ldw	ra,4(sp)
   31b58:	df000017 	ldw	fp,0(sp)
   31b5c:	dec00204 	addi	sp,sp,8
   31b60:	f800283a 	ret

00031b64 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   31b64:	defffc04 	addi	sp,sp,-16
   31b68:	df000315 	stw	fp,12(sp)
   31b6c:	df000304 	addi	fp,sp,12
   31b70:	e13ffd15 	stw	r4,-12(fp)
   31b74:	e17ffe15 	stw	r5,-8(fp)
   31b78:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   31b7c:	e0fffe17 	ldw	r3,-8(fp)
   31b80:	e0bffd17 	ldw	r2,-12(fp)
   31b84:	18800c26 	beq	r3,r2,31bb8 <alt_load_section+0x54>
  {
    while( to != end )
   31b88:	00000806 	br	31bac <alt_load_section+0x48>
    {
      *to++ = *from++;
   31b8c:	e0bffe17 	ldw	r2,-8(fp)
   31b90:	10c00104 	addi	r3,r2,4
   31b94:	e0fffe15 	stw	r3,-8(fp)
   31b98:	e0fffd17 	ldw	r3,-12(fp)
   31b9c:	19000104 	addi	r4,r3,4
   31ba0:	e13ffd15 	stw	r4,-12(fp)
   31ba4:	18c00017 	ldw	r3,0(r3)
   31ba8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   31bac:	e0fffe17 	ldw	r3,-8(fp)
   31bb0:	e0bfff17 	ldw	r2,-4(fp)
   31bb4:	18bff51e 	bne	r3,r2,31b8c <__alt_mem_SDRAM_controller+0xfc031b8c>
    {
      *to++ = *from++;
    }
  }
}
   31bb8:	0001883a 	nop
   31bbc:	e037883a 	mov	sp,fp
   31bc0:	df000017 	ldw	fp,0(sp)
   31bc4:	dec00104 	addi	sp,sp,4
   31bc8:	f800283a 	ret

00031bcc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   31bcc:	defffe04 	addi	sp,sp,-8
   31bd0:	dfc00115 	stw	ra,4(sp)
   31bd4:	df000015 	stw	fp,0(sp)
   31bd8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   31bdc:	01800134 	movhi	r6,4
   31be0:	31a06204 	addi	r6,r6,-32376
   31be4:	014000f4 	movhi	r5,3
   31be8:	29596004 	addi	r5,r5,25984
   31bec:	01000134 	movhi	r4,4
   31bf0:	21206204 	addi	r4,r4,-32376
   31bf4:	0031b640 	call	31b64 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   31bf8:	018000b4 	movhi	r6,2
   31bfc:	31809204 	addi	r6,r6,584
   31c00:	014000b4 	movhi	r5,2
   31c04:	29400804 	addi	r5,r5,32
   31c08:	010000b4 	movhi	r4,2
   31c0c:	21000804 	addi	r4,r4,32
   31c10:	0031b640 	call	31b64 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   31c14:	018000f4 	movhi	r6,3
   31c18:	31996004 	addi	r6,r6,25984
   31c1c:	014000f4 	movhi	r5,3
   31c20:	29570104 	addi	r5,r5,23556
   31c24:	010000f4 	movhi	r4,3
   31c28:	21170104 	addi	r4,r4,23556
   31c2c:	0031b640 	call	31b64 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   31c30:	0034c100 	call	34c10 <alt_dcache_flush_all>
  alt_icache_flush_all();
   31c34:	0034e880 	call	34e88 <alt_icache_flush_all>
}
   31c38:	0001883a 	nop
   31c3c:	e037883a 	mov	sp,fp
   31c40:	dfc00117 	ldw	ra,4(sp)
   31c44:	df000017 	ldw	fp,0(sp)
   31c48:	dec00204 	addi	sp,sp,8
   31c4c:	f800283a 	ret

00031c50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31c50:	defffe04 	addi	sp,sp,-8
   31c54:	dfc00115 	stw	ra,4(sp)
   31c58:	df000015 	stw	fp,0(sp)
   31c5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31c60:	d0a00e17 	ldw	r2,-32712(gp)
   31c64:	10000326 	beq	r2,zero,31c74 <alt_get_errno+0x24>
   31c68:	d0a00e17 	ldw	r2,-32712(gp)
   31c6c:	103ee83a 	callr	r2
   31c70:	00000106 	br	31c78 <alt_get_errno+0x28>
   31c74:	d0a71f04 	addi	r2,gp,-25476
}
   31c78:	e037883a 	mov	sp,fp
   31c7c:	dfc00117 	ldw	ra,4(sp)
   31c80:	df000017 	ldw	fp,0(sp)
   31c84:	dec00204 	addi	sp,sp,8
   31c88:	f800283a 	ret

00031c8c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   31c8c:	defff904 	addi	sp,sp,-28
   31c90:	dfc00615 	stw	ra,24(sp)
   31c94:	df000515 	stw	fp,20(sp)
   31c98:	df000504 	addi	fp,sp,20
   31c9c:	e13ffd15 	stw	r4,-12(fp)
   31ca0:	e17ffe15 	stw	r5,-8(fp)
   31ca4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   31ca8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   31cac:	e0bffd17 	ldw	r2,-12(fp)
   31cb0:	10000616 	blt	r2,zero,31ccc <lseek+0x40>
   31cb4:	e0bffd17 	ldw	r2,-12(fp)
   31cb8:	10c00324 	muli	r3,r2,12
   31cbc:	008000f4 	movhi	r2,3
   31cc0:	109b9304 	addi	r2,r2,28236
   31cc4:	1885883a 	add	r2,r3,r2
   31cc8:	00000106 	br	31cd0 <lseek+0x44>
   31ccc:	0005883a 	mov	r2,zero
   31cd0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   31cd4:	e0bffc17 	ldw	r2,-16(fp)
   31cd8:	10001026 	beq	r2,zero,31d1c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   31cdc:	e0bffc17 	ldw	r2,-16(fp)
   31ce0:	10800017 	ldw	r2,0(r2)
   31ce4:	10800717 	ldw	r2,28(r2)
   31ce8:	10000926 	beq	r2,zero,31d10 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   31cec:	e0bffc17 	ldw	r2,-16(fp)
   31cf0:	10800017 	ldw	r2,0(r2)
   31cf4:	10800717 	ldw	r2,28(r2)
   31cf8:	e1bfff17 	ldw	r6,-4(fp)
   31cfc:	e17ffe17 	ldw	r5,-8(fp)
   31d00:	e13ffc17 	ldw	r4,-16(fp)
   31d04:	103ee83a 	callr	r2
   31d08:	e0bffb15 	stw	r2,-20(fp)
   31d0c:	00000506 	br	31d24 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   31d10:	00bfde84 	movi	r2,-134
   31d14:	e0bffb15 	stw	r2,-20(fp)
   31d18:	00000206 	br	31d24 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   31d1c:	00bfebc4 	movi	r2,-81
   31d20:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   31d24:	e0bffb17 	ldw	r2,-20(fp)
   31d28:	1000070e 	bge	r2,zero,31d48 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   31d2c:	0031c500 	call	31c50 <alt_get_errno>
   31d30:	1007883a 	mov	r3,r2
   31d34:	e0bffb17 	ldw	r2,-20(fp)
   31d38:	0085c83a 	sub	r2,zero,r2
   31d3c:	18800015 	stw	r2,0(r3)
    rc = -1;
   31d40:	00bfffc4 	movi	r2,-1
   31d44:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   31d48:	e0bffb17 	ldw	r2,-20(fp)
}
   31d4c:	e037883a 	mov	sp,fp
   31d50:	dfc00117 	ldw	ra,4(sp)
   31d54:	df000017 	ldw	fp,0(sp)
   31d58:	dec00204 	addi	sp,sp,8
   31d5c:	f800283a 	ret

00031d60 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   31d60:	defffd04 	addi	sp,sp,-12
   31d64:	dfc00215 	stw	ra,8(sp)
   31d68:	df000115 	stw	fp,4(sp)
   31d6c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   31d70:	0009883a 	mov	r4,zero
   31d74:	00322ac0 	call	322ac <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   31d78:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   31d7c:	00322e40 	call	322e4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   31d80:	018000f4 	movhi	r6,3
   31d84:	31993704 	addi	r6,r6,25820
   31d88:	014000f4 	movhi	r5,3
   31d8c:	29593704 	addi	r5,r5,25820
   31d90:	010000f4 	movhi	r4,3
   31d94:	21193704 	addi	r4,r4,25820
   31d98:	0034f800 	call	34f80 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   31d9c:	0034d380 	call	34d38 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   31da0:	010000f4 	movhi	r4,3
   31da4:	21136604 	addi	r4,r4,19864
   31da8:	00358700 	call	35870 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   31dac:	d0a72017 	ldw	r2,-25472(gp)
   31db0:	d0e72117 	ldw	r3,-25468(gp)
   31db4:	d1272217 	ldw	r4,-25464(gp)
   31db8:	200d883a 	mov	r6,r4
   31dbc:	180b883a 	mov	r5,r3
   31dc0:	1009883a 	mov	r4,r2
   31dc4:	00202940 	call	20294 <main>
   31dc8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   31dcc:	01000044 	movi	r4,1
   31dd0:	003189c0 	call	3189c <close>
  exit (result);
   31dd4:	e13fff17 	ldw	r4,-4(fp)
   31dd8:	00358840 	call	35884 <exit>

00031ddc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   31ddc:	defffe04 	addi	sp,sp,-8
   31de0:	df000115 	stw	fp,4(sp)
   31de4:	df000104 	addi	fp,sp,4
   31de8:	e13fff15 	stw	r4,-4(fp)
}
   31dec:	0001883a 	nop
   31df0:	e037883a 	mov	sp,fp
   31df4:	df000017 	ldw	fp,0(sp)
   31df8:	dec00104 	addi	sp,sp,4
   31dfc:	f800283a 	ret

00031e00 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   31e00:	defffe04 	addi	sp,sp,-8
   31e04:	df000115 	stw	fp,4(sp)
   31e08:	df000104 	addi	fp,sp,4
   31e0c:	e13fff15 	stw	r4,-4(fp)
}
   31e10:	0001883a 	nop
   31e14:	e037883a 	mov	sp,fp
   31e18:	df000017 	ldw	fp,0(sp)
   31e1c:	dec00104 	addi	sp,sp,4
   31e20:	f800283a 	ret

00031e24 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31e24:	defffe04 	addi	sp,sp,-8
   31e28:	dfc00115 	stw	ra,4(sp)
   31e2c:	df000015 	stw	fp,0(sp)
   31e30:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31e34:	d0a00e17 	ldw	r2,-32712(gp)
   31e38:	10000326 	beq	r2,zero,31e48 <alt_get_errno+0x24>
   31e3c:	d0a00e17 	ldw	r2,-32712(gp)
   31e40:	103ee83a 	callr	r2
   31e44:	00000106 	br	31e4c <alt_get_errno+0x28>
   31e48:	d0a71f04 	addi	r2,gp,-25476
}
   31e4c:	e037883a 	mov	sp,fp
   31e50:	dfc00117 	ldw	ra,4(sp)
   31e54:	df000017 	ldw	fp,0(sp)
   31e58:	dec00204 	addi	sp,sp,8
   31e5c:	f800283a 	ret

00031e60 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   31e60:	defff904 	addi	sp,sp,-28
   31e64:	dfc00615 	stw	ra,24(sp)
   31e68:	df000515 	stw	fp,20(sp)
   31e6c:	df000504 	addi	fp,sp,20
   31e70:	e13ffd15 	stw	r4,-12(fp)
   31e74:	e17ffe15 	stw	r5,-8(fp)
   31e78:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   31e7c:	e0bffd17 	ldw	r2,-12(fp)
   31e80:	10000616 	blt	r2,zero,31e9c <read+0x3c>
   31e84:	e0bffd17 	ldw	r2,-12(fp)
   31e88:	10c00324 	muli	r3,r2,12
   31e8c:	008000f4 	movhi	r2,3
   31e90:	109b9304 	addi	r2,r2,28236
   31e94:	1885883a 	add	r2,r3,r2
   31e98:	00000106 	br	31ea0 <read+0x40>
   31e9c:	0005883a 	mov	r2,zero
   31ea0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   31ea4:	e0bffb17 	ldw	r2,-20(fp)
   31ea8:	10002226 	beq	r2,zero,31f34 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   31eac:	e0bffb17 	ldw	r2,-20(fp)
   31eb0:	10800217 	ldw	r2,8(r2)
   31eb4:	108000cc 	andi	r2,r2,3
   31eb8:	10800060 	cmpeqi	r2,r2,1
   31ebc:	1000181e 	bne	r2,zero,31f20 <read+0xc0>
        (fd->dev->read))
   31ec0:	e0bffb17 	ldw	r2,-20(fp)
   31ec4:	10800017 	ldw	r2,0(r2)
   31ec8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   31ecc:	10001426 	beq	r2,zero,31f20 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   31ed0:	e0bffb17 	ldw	r2,-20(fp)
   31ed4:	10800017 	ldw	r2,0(r2)
   31ed8:	10800517 	ldw	r2,20(r2)
   31edc:	e0ffff17 	ldw	r3,-4(fp)
   31ee0:	180d883a 	mov	r6,r3
   31ee4:	e17ffe17 	ldw	r5,-8(fp)
   31ee8:	e13ffb17 	ldw	r4,-20(fp)
   31eec:	103ee83a 	callr	r2
   31ef0:	e0bffc15 	stw	r2,-16(fp)
   31ef4:	e0bffc17 	ldw	r2,-16(fp)
   31ef8:	1000070e 	bge	r2,zero,31f18 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   31efc:	0031e240 	call	31e24 <alt_get_errno>
   31f00:	1007883a 	mov	r3,r2
   31f04:	e0bffc17 	ldw	r2,-16(fp)
   31f08:	0085c83a 	sub	r2,zero,r2
   31f0c:	18800015 	stw	r2,0(r3)
          return -1;
   31f10:	00bfffc4 	movi	r2,-1
   31f14:	00000c06 	br	31f48 <read+0xe8>
        }
        return rval;
   31f18:	e0bffc17 	ldw	r2,-16(fp)
   31f1c:	00000a06 	br	31f48 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   31f20:	0031e240 	call	31e24 <alt_get_errno>
   31f24:	1007883a 	mov	r3,r2
   31f28:	00800344 	movi	r2,13
   31f2c:	18800015 	stw	r2,0(r3)
   31f30:	00000406 	br	31f44 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   31f34:	0031e240 	call	31e24 <alt_get_errno>
   31f38:	1007883a 	mov	r3,r2
   31f3c:	00801444 	movi	r2,81
   31f40:	18800015 	stw	r2,0(r3)
  }
  return -1;
   31f44:	00bfffc4 	movi	r2,-1
}
   31f48:	e037883a 	mov	sp,fp
   31f4c:	dfc00117 	ldw	ra,4(sp)
   31f50:	df000017 	ldw	fp,0(sp)
   31f54:	dec00204 	addi	sp,sp,8
   31f58:	f800283a 	ret

00031f5c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   31f5c:	defffe04 	addi	sp,sp,-8
   31f60:	df000115 	stw	fp,4(sp)
   31f64:	df000104 	addi	fp,sp,4
   31f68:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   31f6c:	e0bfff17 	ldw	r2,-4(fp)
   31f70:	108000d0 	cmplti	r2,r2,3
   31f74:	10000d1e 	bne	r2,zero,31fac <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   31f78:	008000f4 	movhi	r2,3
   31f7c:	109b9304 	addi	r2,r2,28236
   31f80:	e0ffff17 	ldw	r3,-4(fp)
   31f84:	18c00324 	muli	r3,r3,12
   31f88:	10c5883a 	add	r2,r2,r3
   31f8c:	10800204 	addi	r2,r2,8
   31f90:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   31f94:	008000f4 	movhi	r2,3
   31f98:	109b9304 	addi	r2,r2,28236
   31f9c:	e0ffff17 	ldw	r3,-4(fp)
   31fa0:	18c00324 	muli	r3,r3,12
   31fa4:	10c5883a 	add	r2,r2,r3
   31fa8:	10000015 	stw	zero,0(r2)
  }
}
   31fac:	0001883a 	nop
   31fb0:	e037883a 	mov	sp,fp
   31fb4:	df000017 	ldw	fp,0(sp)
   31fb8:	dec00104 	addi	sp,sp,4
   31fbc:	f800283a 	ret

00031fc0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   31fc0:	defff904 	addi	sp,sp,-28
   31fc4:	df000615 	stw	fp,24(sp)
   31fc8:	df000604 	addi	fp,sp,24
   31fcc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   31fd0:	0005303a 	rdctl	r2,status
   31fd4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   31fd8:	e0fffe17 	ldw	r3,-8(fp)
   31fdc:	00bfff84 	movi	r2,-2
   31fe0:	1884703a 	and	r2,r3,r2
   31fe4:	1001703a 	wrctl	status,r2
  
  return context;
   31fe8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   31fec:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   31ff0:	d0a00f17 	ldw	r2,-32708(gp)
   31ff4:	10c000c4 	addi	r3,r2,3
   31ff8:	00bfff04 	movi	r2,-4
   31ffc:	1884703a 	and	r2,r3,r2
   32000:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   32004:	d0e00f17 	ldw	r3,-32708(gp)
   32008:	e0bfff17 	ldw	r2,-4(fp)
   3200c:	1887883a 	add	r3,r3,r2
   32010:	00800134 	movhi	r2,4
   32014:	10800004 	addi	r2,r2,0
   32018:	10c0062e 	bgeu	r2,r3,32034 <sbrk+0x74>
   3201c:	e0bffb17 	ldw	r2,-20(fp)
   32020:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32024:	e0bffa17 	ldw	r2,-24(fp)
   32028:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   3202c:	00bfffc4 	movi	r2,-1
   32030:	00000b06 	br	32060 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   32034:	d0a00f17 	ldw	r2,-32708(gp)
   32038:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   3203c:	d0e00f17 	ldw	r3,-32708(gp)
   32040:	e0bfff17 	ldw	r2,-4(fp)
   32044:	1885883a 	add	r2,r3,r2
   32048:	d0a00f15 	stw	r2,-32708(gp)
   3204c:	e0bffb17 	ldw	r2,-20(fp)
   32050:	e0bffc15 	stw	r2,-16(fp)
   32054:	e0bffc17 	ldw	r2,-16(fp)
   32058:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   3205c:	e0bffd17 	ldw	r2,-12(fp)
} 
   32060:	e037883a 	mov	sp,fp
   32064:	df000017 	ldw	fp,0(sp)
   32068:	dec00104 	addi	sp,sp,4
   3206c:	f800283a 	ret

00032070 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   32070:	defffd04 	addi	sp,sp,-12
   32074:	dfc00215 	stw	ra,8(sp)
   32078:	df000115 	stw	fp,4(sp)
   3207c:	df000104 	addi	fp,sp,4
   32080:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   32084:	e13fff17 	ldw	r4,-4(fp)
   32088:	0034ab80 	call	34ab8 <alt_busy_sleep>
}
   3208c:	e037883a 	mov	sp,fp
   32090:	dfc00117 	ldw	ra,4(sp)
   32094:	df000017 	ldw	fp,0(sp)
   32098:	dec00204 	addi	sp,sp,8
   3209c:	f800283a 	ret

000320a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   320a0:	defffe04 	addi	sp,sp,-8
   320a4:	dfc00115 	stw	ra,4(sp)
   320a8:	df000015 	stw	fp,0(sp)
   320ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   320b0:	d0a00e17 	ldw	r2,-32712(gp)
   320b4:	10000326 	beq	r2,zero,320c4 <alt_get_errno+0x24>
   320b8:	d0a00e17 	ldw	r2,-32712(gp)
   320bc:	103ee83a 	callr	r2
   320c0:	00000106 	br	320c8 <alt_get_errno+0x28>
   320c4:	d0a71f04 	addi	r2,gp,-25476
}
   320c8:	e037883a 	mov	sp,fp
   320cc:	dfc00117 	ldw	ra,4(sp)
   320d0:	df000017 	ldw	fp,0(sp)
   320d4:	dec00204 	addi	sp,sp,8
   320d8:	f800283a 	ret

000320dc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   320dc:	defff904 	addi	sp,sp,-28
   320e0:	dfc00615 	stw	ra,24(sp)
   320e4:	df000515 	stw	fp,20(sp)
   320e8:	df000504 	addi	fp,sp,20
   320ec:	e13ffd15 	stw	r4,-12(fp)
   320f0:	e17ffe15 	stw	r5,-8(fp)
   320f4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   320f8:	e0bffd17 	ldw	r2,-12(fp)
   320fc:	10000616 	blt	r2,zero,32118 <write+0x3c>
   32100:	e0bffd17 	ldw	r2,-12(fp)
   32104:	10c00324 	muli	r3,r2,12
   32108:	008000f4 	movhi	r2,3
   3210c:	109b9304 	addi	r2,r2,28236
   32110:	1885883a 	add	r2,r3,r2
   32114:	00000106 	br	3211c <write+0x40>
   32118:	0005883a 	mov	r2,zero
   3211c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   32120:	e0bffb17 	ldw	r2,-20(fp)
   32124:	10002126 	beq	r2,zero,321ac <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   32128:	e0bffb17 	ldw	r2,-20(fp)
   3212c:	10800217 	ldw	r2,8(r2)
   32130:	108000cc 	andi	r2,r2,3
   32134:	10001826 	beq	r2,zero,32198 <write+0xbc>
   32138:	e0bffb17 	ldw	r2,-20(fp)
   3213c:	10800017 	ldw	r2,0(r2)
   32140:	10800617 	ldw	r2,24(r2)
   32144:	10001426 	beq	r2,zero,32198 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   32148:	e0bffb17 	ldw	r2,-20(fp)
   3214c:	10800017 	ldw	r2,0(r2)
   32150:	10800617 	ldw	r2,24(r2)
   32154:	e0ffff17 	ldw	r3,-4(fp)
   32158:	180d883a 	mov	r6,r3
   3215c:	e17ffe17 	ldw	r5,-8(fp)
   32160:	e13ffb17 	ldw	r4,-20(fp)
   32164:	103ee83a 	callr	r2
   32168:	e0bffc15 	stw	r2,-16(fp)
   3216c:	e0bffc17 	ldw	r2,-16(fp)
   32170:	1000070e 	bge	r2,zero,32190 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   32174:	00320a00 	call	320a0 <alt_get_errno>
   32178:	1007883a 	mov	r3,r2
   3217c:	e0bffc17 	ldw	r2,-16(fp)
   32180:	0085c83a 	sub	r2,zero,r2
   32184:	18800015 	stw	r2,0(r3)
        return -1;
   32188:	00bfffc4 	movi	r2,-1
   3218c:	00000c06 	br	321c0 <write+0xe4>
      }
      return rval;
   32190:	e0bffc17 	ldw	r2,-16(fp)
   32194:	00000a06 	br	321c0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   32198:	00320a00 	call	320a0 <alt_get_errno>
   3219c:	1007883a 	mov	r3,r2
   321a0:	00800344 	movi	r2,13
   321a4:	18800015 	stw	r2,0(r3)
   321a8:	00000406 	br	321bc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   321ac:	00320a00 	call	320a0 <alt_get_errno>
   321b0:	1007883a 	mov	r3,r2
   321b4:	00801444 	movi	r2,81
   321b8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   321bc:	00bfffc4 	movi	r2,-1
}
   321c0:	e037883a 	mov	sp,fp
   321c4:	dfc00117 	ldw	ra,4(sp)
   321c8:	df000017 	ldw	fp,0(sp)
   321cc:	dec00204 	addi	sp,sp,8
   321d0:	f800283a 	ret

000321d4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   321d4:	defffd04 	addi	sp,sp,-12
   321d8:	dfc00215 	stw	ra,8(sp)
   321dc:	df000115 	stw	fp,4(sp)
   321e0:	df000104 	addi	fp,sp,4
   321e4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   321e8:	d1600b04 	addi	r5,gp,-32724
   321ec:	e13fff17 	ldw	r4,-4(fp)
   321f0:	0034c940 	call	34c94 <alt_dev_llist_insert>
}
   321f4:	e037883a 	mov	sp,fp
   321f8:	dfc00117 	ldw	ra,4(sp)
   321fc:	df000017 	ldw	fp,0(sp)
   32200:	dec00204 	addi	sp,sp,8
   32204:	f800283a 	ret

00032208 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   32208:	defffe04 	addi	sp,sp,-8
   3220c:	dfc00115 	stw	ra,4(sp)
   32210:	df000015 	stw	fp,0(sp)
   32214:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   32218:	d0a00e17 	ldw	r2,-32712(gp)
   3221c:	10000326 	beq	r2,zero,3222c <alt_get_errno+0x24>
   32220:	d0a00e17 	ldw	r2,-32712(gp)
   32224:	103ee83a 	callr	r2
   32228:	00000106 	br	32230 <alt_get_errno+0x28>
   3222c:	d0a71f04 	addi	r2,gp,-25476
}
   32230:	e037883a 	mov	sp,fp
   32234:	dfc00117 	ldw	ra,4(sp)
   32238:	df000017 	ldw	fp,0(sp)
   3223c:	dec00204 	addi	sp,sp,8
   32240:	f800283a 	ret

00032244 <alt_avalon_mutex_reg>:
/*
 * Register a Mutex device
 */

static ALT_INLINE int alt_avalon_mutex_reg (alt_mutex_dev* dev)
{
   32244:	defffc04 	addi	sp,sp,-16
   32248:	dfc00315 	stw	ra,12(sp)
   3224c:	df000215 	stw	fp,8(sp)
   32250:	df000204 	addi	fp,sp,8
   32254:	e13fff15 	stw	r4,-4(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   32258:	0005883a 	mov	r2,zero
  int ret_code;
  extern alt_llist alt_mutex_list;
  ret_code = ALT_SEM_CREATE (&dev->lock, 1);
   3225c:	e0bffe15 	stw	r2,-8(fp)
  if (!ret_code)
   32260:	e0bffe17 	ldw	r2,-8(fp)
   32264:	1000051e 	bne	r2,zero,3227c <alt_avalon_mutex_reg+0x38>
  {
    ret_code = alt_dev_llist_insert((alt_dev_llist*) dev, &alt_mutex_list);
   32268:	d1601204 	addi	r5,gp,-32696
   3226c:	e13fff17 	ldw	r4,-4(fp)
   32270:	0034c940 	call	34c94 <alt_dev_llist_insert>
   32274:	e0bffe15 	stw	r2,-8(fp)
   32278:	00000606 	br	32294 <alt_avalon_mutex_reg+0x50>
  }
  else
  {
    ALT_ERRNO = ENOMEM;
   3227c:	00322080 	call	32208 <alt_get_errno>
   32280:	1007883a 	mov	r3,r2
   32284:	00800304 	movi	r2,12
   32288:	18800015 	stw	r2,0(r3)
    ret_code = -ENOMEM;
   3228c:	00bffd04 	movi	r2,-12
   32290:	e0bffe15 	stw	r2,-8(fp)
  }

  return ret_code;
   32294:	e0bffe17 	ldw	r2,-8(fp)
}
   32298:	e037883a 	mov	sp,fp
   3229c:	dfc00117 	ldw	ra,4(sp)
   322a0:	df000017 	ldw	fp,0(sp)
   322a4:	dec00204 	addi	sp,sp,8
   322a8:	f800283a 	ret

000322ac <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   322ac:	defffd04 	addi	sp,sp,-12
   322b0:	dfc00215 	stw	ra,8(sp)
   322b4:	df000115 	stw	fp,4(sp)
   322b8:	df000104 	addi	fp,sp,4
   322bc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_SOUND_ACQUISITION, nios2_sound_acquisition);
   322c0:	00355740 	call	35574 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   322c4:	00800044 	movi	r2,1
   322c8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   322cc:	0001883a 	nop
   322d0:	e037883a 	mov	sp,fp
   322d4:	dfc00117 	ldw	ra,4(sp)
   322d8:	df000017 	ldw	fp,0(sp)
   322dc:	dec00204 	addi	sp,sp,8
   322e0:	f800283a 	ret

000322e4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   322e4:	defffe04 	addi	sp,sp,-8
   322e8:	dfc00115 	stw	ra,4(sp)
   322ec:	df000015 	stw	fp,0(sp)
   322f0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
   322f4:	01c0fa04 	movi	r7,1000
   322f8:	01800144 	movi	r6,5
   322fc:	000b883a 	mov	r5,zero
   32300:	01020134 	movhi	r4,2052
   32304:	21040004 	addi	r4,r4,4096
   32308:	0033a740 	call	33a74 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   3230c:	018000c4 	movi	r6,3
   32310:	000b883a 	mov	r5,zero
   32314:	010000f4 	movhi	r4,3
   32318:	211bfd04 	addi	r4,r4,28660
   3231c:	00324f80 	call	324f8 <altera_avalon_jtag_uart_init>
   32320:	010000f4 	movhi	r4,3
   32324:	211bf304 	addi	r4,r4,28620
   32328:	00321d40 	call	321d4 <alt_dev_reg>
    ALTERA_AVALON_MAILBOX_SIMPLE_INIT ( MAILBOX_TO_FFT, mailbox_to_FFT);
   3232c:	01800044 	movi	r6,1
   32330:	000b883a 	mov	r5,zero
   32334:	01000134 	movhi	r4,4
   32338:	21200b04 	addi	r4,r4,-32724
   3233c:	00330e40 	call	330e4 <altera_avalon_mailbox_simple_init>
    ALTERA_AVALON_MAILBOX_SIMPLE_INIT ( MAILBOX_TO_SOUND_ACQUISITION, mailbox_to_Sound_Acquisition);
   32340:	01800084 	movi	r6,2
   32344:	000b883a 	mov	r5,zero
   32348:	01000134 	movhi	r4,4
   3234c:	21201d04 	addi	r4,r4,-32652
   32350:	00330e40 	call	330e4 <altera_avalon_mailbox_simple_init>
    ALTERA_AVALON_MUTEX_INIT ( MUTEX_SDRAM, mutex_SDRAM);
   32354:	01000134 	movhi	r4,4
   32358:	21202f04 	addi	r4,r4,-32580
   3235c:	00322440 	call	32244 <alt_avalon_mutex_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
   32360:	0001883a 	nop
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AUDIO_AND_VIDEO_CONFIG_0, audio_and_video_config_0);
   32364:	01000134 	movhi	r4,4
   32368:	21203304 	addi	r4,r4,-32564
   3236c:	00321d40 	call	321d4 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_0, audio_0);
   32370:	01000134 	movhi	r4,4
   32374:	21203f04 	addi	r4,r4,-32516
   32378:	00321d40 	call	321d4 <alt_dev_reg>
}
   3237c:	0001883a 	nop
   32380:	e037883a 	mov	sp,fp
   32384:	dfc00117 	ldw	ra,4(sp)
   32388:	df000017 	ldw	fp,0(sp)
   3238c:	dec00204 	addi	sp,sp,8
   32390:	f800283a 	ret

00032394 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   32394:	defffa04 	addi	sp,sp,-24
   32398:	dfc00515 	stw	ra,20(sp)
   3239c:	df000415 	stw	fp,16(sp)
   323a0:	df000404 	addi	fp,sp,16
   323a4:	e13ffd15 	stw	r4,-12(fp)
   323a8:	e17ffe15 	stw	r5,-8(fp)
   323ac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   323b0:	e0bffd17 	ldw	r2,-12(fp)
   323b4:	10800017 	ldw	r2,0(r2)
   323b8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   323bc:	e0bffc17 	ldw	r2,-16(fp)
   323c0:	10c00a04 	addi	r3,r2,40
   323c4:	e0bffd17 	ldw	r2,-12(fp)
   323c8:	10800217 	ldw	r2,8(r2)
   323cc:	100f883a 	mov	r7,r2
   323d0:	e1bfff17 	ldw	r6,-4(fp)
   323d4:	e17ffe17 	ldw	r5,-8(fp)
   323d8:	1809883a 	mov	r4,r3
   323dc:	00329b40 	call	329b4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   323e0:	e037883a 	mov	sp,fp
   323e4:	dfc00117 	ldw	ra,4(sp)
   323e8:	df000017 	ldw	fp,0(sp)
   323ec:	dec00204 	addi	sp,sp,8
   323f0:	f800283a 	ret

000323f4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   323f4:	defffa04 	addi	sp,sp,-24
   323f8:	dfc00515 	stw	ra,20(sp)
   323fc:	df000415 	stw	fp,16(sp)
   32400:	df000404 	addi	fp,sp,16
   32404:	e13ffd15 	stw	r4,-12(fp)
   32408:	e17ffe15 	stw	r5,-8(fp)
   3240c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   32410:	e0bffd17 	ldw	r2,-12(fp)
   32414:	10800017 	ldw	r2,0(r2)
   32418:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   3241c:	e0bffc17 	ldw	r2,-16(fp)
   32420:	10c00a04 	addi	r3,r2,40
   32424:	e0bffd17 	ldw	r2,-12(fp)
   32428:	10800217 	ldw	r2,8(r2)
   3242c:	100f883a 	mov	r7,r2
   32430:	e1bfff17 	ldw	r6,-4(fp)
   32434:	e17ffe17 	ldw	r5,-8(fp)
   32438:	1809883a 	mov	r4,r3
   3243c:	0032bd00 	call	32bd0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   32440:	e037883a 	mov	sp,fp
   32444:	dfc00117 	ldw	ra,4(sp)
   32448:	df000017 	ldw	fp,0(sp)
   3244c:	dec00204 	addi	sp,sp,8
   32450:	f800283a 	ret

00032454 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   32454:	defffc04 	addi	sp,sp,-16
   32458:	dfc00315 	stw	ra,12(sp)
   3245c:	df000215 	stw	fp,8(sp)
   32460:	df000204 	addi	fp,sp,8
   32464:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   32468:	e0bfff17 	ldw	r2,-4(fp)
   3246c:	10800017 	ldw	r2,0(r2)
   32470:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   32474:	e0bffe17 	ldw	r2,-8(fp)
   32478:	10c00a04 	addi	r3,r2,40
   3247c:	e0bfff17 	ldw	r2,-4(fp)
   32480:	10800217 	ldw	r2,8(r2)
   32484:	100b883a 	mov	r5,r2
   32488:	1809883a 	mov	r4,r3
   3248c:	003285c0 	call	3285c <altera_avalon_jtag_uart_close>
}
   32490:	e037883a 	mov	sp,fp
   32494:	dfc00117 	ldw	ra,4(sp)
   32498:	df000017 	ldw	fp,0(sp)
   3249c:	dec00204 	addi	sp,sp,8
   324a0:	f800283a 	ret

000324a4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   324a4:	defffa04 	addi	sp,sp,-24
   324a8:	dfc00515 	stw	ra,20(sp)
   324ac:	df000415 	stw	fp,16(sp)
   324b0:	df000404 	addi	fp,sp,16
   324b4:	e13ffd15 	stw	r4,-12(fp)
   324b8:	e17ffe15 	stw	r5,-8(fp)
   324bc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   324c0:	e0bffd17 	ldw	r2,-12(fp)
   324c4:	10800017 	ldw	r2,0(r2)
   324c8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   324cc:	e0bffc17 	ldw	r2,-16(fp)
   324d0:	10800a04 	addi	r2,r2,40
   324d4:	e1bfff17 	ldw	r6,-4(fp)
   324d8:	e17ffe17 	ldw	r5,-8(fp)
   324dc:	1009883a 	mov	r4,r2
   324e0:	00328c40 	call	328c4 <altera_avalon_jtag_uart_ioctl>
}
   324e4:	e037883a 	mov	sp,fp
   324e8:	dfc00117 	ldw	ra,4(sp)
   324ec:	df000017 	ldw	fp,0(sp)
   324f0:	dec00204 	addi	sp,sp,8
   324f4:	f800283a 	ret

000324f8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   324f8:	defffb04 	addi	sp,sp,-20
   324fc:	dfc00415 	stw	ra,16(sp)
   32500:	df000315 	stw	fp,12(sp)
   32504:	df000304 	addi	fp,sp,12
   32508:	e13ffd15 	stw	r4,-12(fp)
   3250c:	e17ffe15 	stw	r5,-8(fp)
   32510:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   32514:	e0bffd17 	ldw	r2,-12(fp)
   32518:	00c00044 	movi	r3,1
   3251c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   32520:	e0bffd17 	ldw	r2,-12(fp)
   32524:	10800017 	ldw	r2,0(r2)
   32528:	10800104 	addi	r2,r2,4
   3252c:	1007883a 	mov	r3,r2
   32530:	e0bffd17 	ldw	r2,-12(fp)
   32534:	10800817 	ldw	r2,32(r2)
   32538:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   3253c:	e0bfff17 	ldw	r2,-4(fp)
   32540:	018000f4 	movhi	r6,3
   32544:	31896b04 	addi	r6,r6,9644
   32548:	e17ffd17 	ldw	r5,-12(fp)
   3254c:	1009883a 	mov	r4,r2
   32550:	0034ffc0 	call	34ffc <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   32554:	e0bffd17 	ldw	r2,-12(fp)
   32558:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   3255c:	e0bffd17 	ldw	r2,-12(fp)
   32560:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   32564:	d0e72417 	ldw	r3,-25456(gp)
   32568:	e1fffd17 	ldw	r7,-12(fp)
   3256c:	018000f4 	movhi	r6,3
   32570:	3189ef04 	addi	r6,r6,10172
   32574:	180b883a 	mov	r5,r3
   32578:	1009883a 	mov	r4,r2
   3257c:	003498c0 	call	3498c <alt_alarm_start>
   32580:	1000040e 	bge	r2,zero,32594 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   32584:	e0fffd17 	ldw	r3,-12(fp)
   32588:	00a00034 	movhi	r2,32768
   3258c:	10bfffc4 	addi	r2,r2,-1
   32590:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   32594:	0001883a 	nop
   32598:	e037883a 	mov	sp,fp
   3259c:	dfc00117 	ldw	ra,4(sp)
   325a0:	df000017 	ldw	fp,0(sp)
   325a4:	dec00204 	addi	sp,sp,8
   325a8:	f800283a 	ret

000325ac <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   325ac:	defff704 	addi	sp,sp,-36
   325b0:	df000815 	stw	fp,32(sp)
   325b4:	df000804 	addi	fp,sp,32
   325b8:	e13ffe15 	stw	r4,-8(fp)
   325bc:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   325c0:	e0bffe17 	ldw	r2,-8(fp)
   325c4:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
   325c8:	e0bffa17 	ldw	r2,-24(fp)
   325cc:	10800017 	ldw	r2,0(r2)
   325d0:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   325d4:	e0bffb17 	ldw	r2,-20(fp)
   325d8:	10800104 	addi	r2,r2,4
   325dc:	10800037 	ldwio	r2,0(r2)
   325e0:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   325e4:	e0bffc17 	ldw	r2,-16(fp)
   325e8:	1080c00c 	andi	r2,r2,768
   325ec:	10006d26 	beq	r2,zero,327a4 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   325f0:	e0bffc17 	ldw	r2,-16(fp)
   325f4:	1080400c 	andi	r2,r2,256
   325f8:	10003526 	beq	r2,zero,326d0 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   325fc:	00800074 	movhi	r2,1
   32600:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   32604:	e0bffa17 	ldw	r2,-24(fp)
   32608:	10800a17 	ldw	r2,40(r2)
   3260c:	10800044 	addi	r2,r2,1
   32610:	1081ffcc 	andi	r2,r2,2047
   32614:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
   32618:	e0bffa17 	ldw	r2,-24(fp)
   3261c:	10c00b17 	ldw	r3,44(r2)
   32620:	e0bffd17 	ldw	r2,-12(fp)
   32624:	18801526 	beq	r3,r2,3267c <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   32628:	e0bffb17 	ldw	r2,-20(fp)
   3262c:	10800037 	ldwio	r2,0(r2)
   32630:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   32634:	e0bff817 	ldw	r2,-32(fp)
   32638:	10a0000c 	andi	r2,r2,32768
   3263c:	10001126 	beq	r2,zero,32684 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   32640:	e0bffa17 	ldw	r2,-24(fp)
   32644:	10800a17 	ldw	r2,40(r2)
   32648:	e0fff817 	ldw	r3,-32(fp)
   3264c:	1809883a 	mov	r4,r3
   32650:	e0fffa17 	ldw	r3,-24(fp)
   32654:	1885883a 	add	r2,r3,r2
   32658:	10800e04 	addi	r2,r2,56
   3265c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   32660:	e0bffa17 	ldw	r2,-24(fp)
   32664:	10800a17 	ldw	r2,40(r2)
   32668:	10800044 	addi	r2,r2,1
   3266c:	10c1ffcc 	andi	r3,r2,2047
   32670:	e0bffa17 	ldw	r2,-24(fp)
   32674:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   32678:	003fe206 	br	32604 <__alt_mem_SDRAM_controller+0xfc032604>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   3267c:	0001883a 	nop
   32680:	00000106 	br	32688 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   32684:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   32688:	e0bff817 	ldw	r2,-32(fp)
   3268c:	10bfffec 	andhi	r2,r2,65535
   32690:	10000f26 	beq	r2,zero,326d0 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   32694:	e0bffa17 	ldw	r2,-24(fp)
   32698:	10c00817 	ldw	r3,32(r2)
   3269c:	00bfff84 	movi	r2,-2
   326a0:	1886703a 	and	r3,r3,r2
   326a4:	e0bffa17 	ldw	r2,-24(fp)
   326a8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   326ac:	e0bffb17 	ldw	r2,-20(fp)
   326b0:	10800104 	addi	r2,r2,4
   326b4:	1007883a 	mov	r3,r2
   326b8:	e0bffa17 	ldw	r2,-24(fp)
   326bc:	10800817 	ldw	r2,32(r2)
   326c0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   326c4:	e0bffb17 	ldw	r2,-20(fp)
   326c8:	10800104 	addi	r2,r2,4
   326cc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   326d0:	e0bffc17 	ldw	r2,-16(fp)
   326d4:	1080800c 	andi	r2,r2,512
   326d8:	103fbe26 	beq	r2,zero,325d4 <__alt_mem_SDRAM_controller+0xfc0325d4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   326dc:	e0bffc17 	ldw	r2,-16(fp)
   326e0:	1004d43a 	srli	r2,r2,16
   326e4:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   326e8:	00001406 	br	3273c <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   326ec:	e0bffb17 	ldw	r2,-20(fp)
   326f0:	e0fffa17 	ldw	r3,-24(fp)
   326f4:	18c00d17 	ldw	r3,52(r3)
   326f8:	e13ffa17 	ldw	r4,-24(fp)
   326fc:	20c7883a 	add	r3,r4,r3
   32700:	18c20e04 	addi	r3,r3,2104
   32704:	18c00003 	ldbu	r3,0(r3)
   32708:	18c03fcc 	andi	r3,r3,255
   3270c:	18c0201c 	xori	r3,r3,128
   32710:	18ffe004 	addi	r3,r3,-128
   32714:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   32718:	e0bffa17 	ldw	r2,-24(fp)
   3271c:	10800d17 	ldw	r2,52(r2)
   32720:	10800044 	addi	r2,r2,1
   32724:	10c1ffcc 	andi	r3,r2,2047
   32728:	e0bffa17 	ldw	r2,-24(fp)
   3272c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   32730:	e0bff917 	ldw	r2,-28(fp)
   32734:	10bfffc4 	addi	r2,r2,-1
   32738:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   3273c:	e0bff917 	ldw	r2,-28(fp)
   32740:	10000526 	beq	r2,zero,32758 <altera_avalon_jtag_uart_irq+0x1ac>
   32744:	e0bffa17 	ldw	r2,-24(fp)
   32748:	10c00d17 	ldw	r3,52(r2)
   3274c:	e0bffa17 	ldw	r2,-24(fp)
   32750:	10800c17 	ldw	r2,48(r2)
   32754:	18bfe51e 	bne	r3,r2,326ec <__alt_mem_SDRAM_controller+0xfc0326ec>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   32758:	e0bff917 	ldw	r2,-28(fp)
   3275c:	103f9d26 	beq	r2,zero,325d4 <__alt_mem_SDRAM_controller+0xfc0325d4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   32760:	e0bffa17 	ldw	r2,-24(fp)
   32764:	10c00817 	ldw	r3,32(r2)
   32768:	00bfff44 	movi	r2,-3
   3276c:	1886703a 	and	r3,r3,r2
   32770:	e0bffa17 	ldw	r2,-24(fp)
   32774:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   32778:	e0bffa17 	ldw	r2,-24(fp)
   3277c:	10800017 	ldw	r2,0(r2)
   32780:	10800104 	addi	r2,r2,4
   32784:	1007883a 	mov	r3,r2
   32788:	e0bffa17 	ldw	r2,-24(fp)
   3278c:	10800817 	ldw	r2,32(r2)
   32790:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   32794:	e0bffb17 	ldw	r2,-20(fp)
   32798:	10800104 	addi	r2,r2,4
   3279c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   327a0:	003f8c06 	br	325d4 <__alt_mem_SDRAM_controller+0xfc0325d4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   327a4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   327a8:	0001883a 	nop
   327ac:	e037883a 	mov	sp,fp
   327b0:	df000017 	ldw	fp,0(sp)
   327b4:	dec00104 	addi	sp,sp,4
   327b8:	f800283a 	ret

000327bc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   327bc:	defff804 	addi	sp,sp,-32
   327c0:	df000715 	stw	fp,28(sp)
   327c4:	df000704 	addi	fp,sp,28
   327c8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   327cc:	e0bffb17 	ldw	r2,-20(fp)
   327d0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   327d4:	e0bff917 	ldw	r2,-28(fp)
   327d8:	10800017 	ldw	r2,0(r2)
   327dc:	10800104 	addi	r2,r2,4
   327e0:	10800037 	ldwio	r2,0(r2)
   327e4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   327e8:	e0bffa17 	ldw	r2,-24(fp)
   327ec:	1081000c 	andi	r2,r2,1024
   327f0:	10000b26 	beq	r2,zero,32820 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   327f4:	e0bff917 	ldw	r2,-28(fp)
   327f8:	10800017 	ldw	r2,0(r2)
   327fc:	10800104 	addi	r2,r2,4
   32800:	1007883a 	mov	r3,r2
   32804:	e0bff917 	ldw	r2,-28(fp)
   32808:	10800817 	ldw	r2,32(r2)
   3280c:	10810014 	ori	r2,r2,1024
   32810:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   32814:	e0bff917 	ldw	r2,-28(fp)
   32818:	10000915 	stw	zero,36(r2)
   3281c:	00000a06 	br	32848 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   32820:	e0bff917 	ldw	r2,-28(fp)
   32824:	10c00917 	ldw	r3,36(r2)
   32828:	00a00034 	movhi	r2,32768
   3282c:	10bfff04 	addi	r2,r2,-4
   32830:	10c00536 	bltu	r2,r3,32848 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   32834:	e0bff917 	ldw	r2,-28(fp)
   32838:	10800917 	ldw	r2,36(r2)
   3283c:	10c00044 	addi	r3,r2,1
   32840:	e0bff917 	ldw	r2,-28(fp)
   32844:	10c00915 	stw	r3,36(r2)
   32848:	d0a72417 	ldw	r2,-25456(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   3284c:	e037883a 	mov	sp,fp
   32850:	df000017 	ldw	fp,0(sp)
   32854:	dec00104 	addi	sp,sp,4
   32858:	f800283a 	ret

0003285c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   3285c:	defffd04 	addi	sp,sp,-12
   32860:	df000215 	stw	fp,8(sp)
   32864:	df000204 	addi	fp,sp,8
   32868:	e13ffe15 	stw	r4,-8(fp)
   3286c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   32870:	00000506 	br	32888 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   32874:	e0bfff17 	ldw	r2,-4(fp)
   32878:	1090000c 	andi	r2,r2,16384
   3287c:	10000226 	beq	r2,zero,32888 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   32880:	00bffd44 	movi	r2,-11
   32884:	00000b06 	br	328b4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   32888:	e0bffe17 	ldw	r2,-8(fp)
   3288c:	10c00d17 	ldw	r3,52(r2)
   32890:	e0bffe17 	ldw	r2,-8(fp)
   32894:	10800c17 	ldw	r2,48(r2)
   32898:	18800526 	beq	r3,r2,328b0 <altera_avalon_jtag_uart_close+0x54>
   3289c:	e0bffe17 	ldw	r2,-8(fp)
   328a0:	10c00917 	ldw	r3,36(r2)
   328a4:	e0bffe17 	ldw	r2,-8(fp)
   328a8:	10800117 	ldw	r2,4(r2)
   328ac:	18bff136 	bltu	r3,r2,32874 <__alt_mem_SDRAM_controller+0xfc032874>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   328b0:	0005883a 	mov	r2,zero
}
   328b4:	e037883a 	mov	sp,fp
   328b8:	df000017 	ldw	fp,0(sp)
   328bc:	dec00104 	addi	sp,sp,4
   328c0:	f800283a 	ret

000328c4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   328c4:	defffa04 	addi	sp,sp,-24
   328c8:	df000515 	stw	fp,20(sp)
   328cc:	df000504 	addi	fp,sp,20
   328d0:	e13ffd15 	stw	r4,-12(fp)
   328d4:	e17ffe15 	stw	r5,-8(fp)
   328d8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   328dc:	00bff9c4 	movi	r2,-25
   328e0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   328e4:	e0bffe17 	ldw	r2,-8(fp)
   328e8:	10da8060 	cmpeqi	r3,r2,27137
   328ec:	1800031e 	bne	r3,zero,328fc <altera_avalon_jtag_uart_ioctl+0x38>
   328f0:	109a80a0 	cmpeqi	r2,r2,27138
   328f4:	1000181e 	bne	r2,zero,32958 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   328f8:	00002906 	br	329a0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   328fc:	e0bffd17 	ldw	r2,-12(fp)
   32900:	10c00117 	ldw	r3,4(r2)
   32904:	00a00034 	movhi	r2,32768
   32908:	10bfffc4 	addi	r2,r2,-1
   3290c:	18802126 	beq	r3,r2,32994 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   32910:	e0bfff17 	ldw	r2,-4(fp)
   32914:	10800017 	ldw	r2,0(r2)
   32918:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   3291c:	e0bffc17 	ldw	r2,-16(fp)
   32920:	10800090 	cmplti	r2,r2,2
   32924:	1000061e 	bne	r2,zero,32940 <altera_avalon_jtag_uart_ioctl+0x7c>
   32928:	e0fffc17 	ldw	r3,-16(fp)
   3292c:	00a00034 	movhi	r2,32768
   32930:	10bfffc4 	addi	r2,r2,-1
   32934:	18800226 	beq	r3,r2,32940 <altera_avalon_jtag_uart_ioctl+0x7c>
   32938:	e0bffc17 	ldw	r2,-16(fp)
   3293c:	00000206 	br	32948 <altera_avalon_jtag_uart_ioctl+0x84>
   32940:	00a00034 	movhi	r2,32768
   32944:	10bfff84 	addi	r2,r2,-2
   32948:	e0fffd17 	ldw	r3,-12(fp)
   3294c:	18800115 	stw	r2,4(r3)
      rc = 0;
   32950:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   32954:	00000f06 	br	32994 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   32958:	e0bffd17 	ldw	r2,-12(fp)
   3295c:	10c00117 	ldw	r3,4(r2)
   32960:	00a00034 	movhi	r2,32768
   32964:	10bfffc4 	addi	r2,r2,-1
   32968:	18800c26 	beq	r3,r2,3299c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   3296c:	e0bffd17 	ldw	r2,-12(fp)
   32970:	10c00917 	ldw	r3,36(r2)
   32974:	e0bffd17 	ldw	r2,-12(fp)
   32978:	10800117 	ldw	r2,4(r2)
   3297c:	1885803a 	cmpltu	r2,r3,r2
   32980:	10c03fcc 	andi	r3,r2,255
   32984:	e0bfff17 	ldw	r2,-4(fp)
   32988:	10c00015 	stw	r3,0(r2)
      rc = 0;
   3298c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   32990:	00000206 	br	3299c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   32994:	0001883a 	nop
   32998:	00000106 	br	329a0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   3299c:	0001883a 	nop

  default:
    break;
  }

  return rc;
   329a0:	e0bffb17 	ldw	r2,-20(fp)
}
   329a4:	e037883a 	mov	sp,fp
   329a8:	df000017 	ldw	fp,0(sp)
   329ac:	dec00104 	addi	sp,sp,4
   329b0:	f800283a 	ret

000329b4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   329b4:	defff304 	addi	sp,sp,-52
   329b8:	dfc00c15 	stw	ra,48(sp)
   329bc:	df000b15 	stw	fp,44(sp)
   329c0:	df000b04 	addi	fp,sp,44
   329c4:	e13ffc15 	stw	r4,-16(fp)
   329c8:	e17ffd15 	stw	r5,-12(fp)
   329cc:	e1bffe15 	stw	r6,-8(fp)
   329d0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   329d4:	e0bffd17 	ldw	r2,-12(fp)
   329d8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   329dc:	00004706 	br	32afc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   329e0:	e0bffc17 	ldw	r2,-16(fp)
   329e4:	10800a17 	ldw	r2,40(r2)
   329e8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   329ec:	e0bffc17 	ldw	r2,-16(fp)
   329f0:	10800b17 	ldw	r2,44(r2)
   329f4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   329f8:	e0fff717 	ldw	r3,-36(fp)
   329fc:	e0bff817 	ldw	r2,-32(fp)
   32a00:	18800536 	bltu	r3,r2,32a18 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   32a04:	e0fff717 	ldw	r3,-36(fp)
   32a08:	e0bff817 	ldw	r2,-32(fp)
   32a0c:	1885c83a 	sub	r2,r3,r2
   32a10:	e0bff615 	stw	r2,-40(fp)
   32a14:	00000406 	br	32a28 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   32a18:	00c20004 	movi	r3,2048
   32a1c:	e0bff817 	ldw	r2,-32(fp)
   32a20:	1885c83a 	sub	r2,r3,r2
   32a24:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   32a28:	e0bff617 	ldw	r2,-40(fp)
   32a2c:	10001e26 	beq	r2,zero,32aa8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   32a30:	e0fffe17 	ldw	r3,-8(fp)
   32a34:	e0bff617 	ldw	r2,-40(fp)
   32a38:	1880022e 	bgeu	r3,r2,32a44 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   32a3c:	e0bffe17 	ldw	r2,-8(fp)
   32a40:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   32a44:	e0bffc17 	ldw	r2,-16(fp)
   32a48:	10c00e04 	addi	r3,r2,56
   32a4c:	e0bff817 	ldw	r2,-32(fp)
   32a50:	1885883a 	add	r2,r3,r2
   32a54:	e1bff617 	ldw	r6,-40(fp)
   32a58:	100b883a 	mov	r5,r2
   32a5c:	e13ff517 	ldw	r4,-44(fp)
   32a60:	002d1f40 	call	2d1f4 <memcpy>
      ptr   += n;
   32a64:	e0fff517 	ldw	r3,-44(fp)
   32a68:	e0bff617 	ldw	r2,-40(fp)
   32a6c:	1885883a 	add	r2,r3,r2
   32a70:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   32a74:	e0fffe17 	ldw	r3,-8(fp)
   32a78:	e0bff617 	ldw	r2,-40(fp)
   32a7c:	1885c83a 	sub	r2,r3,r2
   32a80:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   32a84:	e0fff817 	ldw	r3,-32(fp)
   32a88:	e0bff617 	ldw	r2,-40(fp)
   32a8c:	1885883a 	add	r2,r3,r2
   32a90:	10c1ffcc 	andi	r3,r2,2047
   32a94:	e0bffc17 	ldw	r2,-16(fp)
   32a98:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   32a9c:	e0bffe17 	ldw	r2,-8(fp)
   32aa0:	00bfcf16 	blt	zero,r2,329e0 <__alt_mem_SDRAM_controller+0xfc0329e0>
   32aa4:	00000106 	br	32aac <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   32aa8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   32aac:	e0fff517 	ldw	r3,-44(fp)
   32ab0:	e0bffd17 	ldw	r2,-12(fp)
   32ab4:	1880141e 	bne	r3,r2,32b08 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   32ab8:	e0bfff17 	ldw	r2,-4(fp)
   32abc:	1090000c 	andi	r2,r2,16384
   32ac0:	1000131e 	bne	r2,zero,32b10 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   32ac4:	0001883a 	nop
   32ac8:	e0bffc17 	ldw	r2,-16(fp)
   32acc:	10c00a17 	ldw	r3,40(r2)
   32ad0:	e0bff717 	ldw	r2,-36(fp)
   32ad4:	1880051e 	bne	r3,r2,32aec <altera_avalon_jtag_uart_read+0x138>
   32ad8:	e0bffc17 	ldw	r2,-16(fp)
   32adc:	10c00917 	ldw	r3,36(r2)
   32ae0:	e0bffc17 	ldw	r2,-16(fp)
   32ae4:	10800117 	ldw	r2,4(r2)
   32ae8:	18bff736 	bltu	r3,r2,32ac8 <__alt_mem_SDRAM_controller+0xfc032ac8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   32aec:	e0bffc17 	ldw	r2,-16(fp)
   32af0:	10c00a17 	ldw	r3,40(r2)
   32af4:	e0bff717 	ldw	r2,-36(fp)
   32af8:	18800726 	beq	r3,r2,32b18 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   32afc:	e0bffe17 	ldw	r2,-8(fp)
   32b00:	00bfb716 	blt	zero,r2,329e0 <__alt_mem_SDRAM_controller+0xfc0329e0>
   32b04:	00000506 	br	32b1c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   32b08:	0001883a 	nop
   32b0c:	00000306 	br	32b1c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   32b10:	0001883a 	nop
   32b14:	00000106 	br	32b1c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   32b18:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   32b1c:	e0fff517 	ldw	r3,-44(fp)
   32b20:	e0bffd17 	ldw	r2,-12(fp)
   32b24:	18801826 	beq	r3,r2,32b88 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32b28:	0005303a 	rdctl	r2,status
   32b2c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32b30:	e0fffb17 	ldw	r3,-20(fp)
   32b34:	00bfff84 	movi	r2,-2
   32b38:	1884703a 	and	r2,r3,r2
   32b3c:	1001703a 	wrctl	status,r2
  
  return context;
   32b40:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   32b44:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   32b48:	e0bffc17 	ldw	r2,-16(fp)
   32b4c:	10800817 	ldw	r2,32(r2)
   32b50:	10c00054 	ori	r3,r2,1
   32b54:	e0bffc17 	ldw	r2,-16(fp)
   32b58:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   32b5c:	e0bffc17 	ldw	r2,-16(fp)
   32b60:	10800017 	ldw	r2,0(r2)
   32b64:	10800104 	addi	r2,r2,4
   32b68:	1007883a 	mov	r3,r2
   32b6c:	e0bffc17 	ldw	r2,-16(fp)
   32b70:	10800817 	ldw	r2,32(r2)
   32b74:	18800035 	stwio	r2,0(r3)
   32b78:	e0bffa17 	ldw	r2,-24(fp)
   32b7c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32b80:	e0bff917 	ldw	r2,-28(fp)
   32b84:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   32b88:	e0fff517 	ldw	r3,-44(fp)
   32b8c:	e0bffd17 	ldw	r2,-12(fp)
   32b90:	18800426 	beq	r3,r2,32ba4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   32b94:	e0fff517 	ldw	r3,-44(fp)
   32b98:	e0bffd17 	ldw	r2,-12(fp)
   32b9c:	1885c83a 	sub	r2,r3,r2
   32ba0:	00000606 	br	32bbc <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   32ba4:	e0bfff17 	ldw	r2,-4(fp)
   32ba8:	1090000c 	andi	r2,r2,16384
   32bac:	10000226 	beq	r2,zero,32bb8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   32bb0:	00bffd44 	movi	r2,-11
   32bb4:	00000106 	br	32bbc <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   32bb8:	00bffec4 	movi	r2,-5
}
   32bbc:	e037883a 	mov	sp,fp
   32bc0:	dfc00117 	ldw	ra,4(sp)
   32bc4:	df000017 	ldw	fp,0(sp)
   32bc8:	dec00204 	addi	sp,sp,8
   32bcc:	f800283a 	ret

00032bd0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   32bd0:	defff304 	addi	sp,sp,-52
   32bd4:	dfc00c15 	stw	ra,48(sp)
   32bd8:	df000b15 	stw	fp,44(sp)
   32bdc:	df000b04 	addi	fp,sp,44
   32be0:	e13ffc15 	stw	r4,-16(fp)
   32be4:	e17ffd15 	stw	r5,-12(fp)
   32be8:	e1bffe15 	stw	r6,-8(fp)
   32bec:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   32bf0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   32bf4:	e0bffd17 	ldw	r2,-12(fp)
   32bf8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   32bfc:	00003706 	br	32cdc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   32c00:	e0bffc17 	ldw	r2,-16(fp)
   32c04:	10800c17 	ldw	r2,48(r2)
   32c08:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   32c0c:	e0bffc17 	ldw	r2,-16(fp)
   32c10:	10800d17 	ldw	r2,52(r2)
   32c14:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   32c18:	e0fff917 	ldw	r3,-28(fp)
   32c1c:	e0bff517 	ldw	r2,-44(fp)
   32c20:	1880062e 	bgeu	r3,r2,32c3c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   32c24:	e0fff517 	ldw	r3,-44(fp)
   32c28:	e0bff917 	ldw	r2,-28(fp)
   32c2c:	1885c83a 	sub	r2,r3,r2
   32c30:	10bfffc4 	addi	r2,r2,-1
   32c34:	e0bff615 	stw	r2,-40(fp)
   32c38:	00000b06 	br	32c68 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   32c3c:	e0bff517 	ldw	r2,-44(fp)
   32c40:	10000526 	beq	r2,zero,32c58 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   32c44:	00c20004 	movi	r3,2048
   32c48:	e0bff917 	ldw	r2,-28(fp)
   32c4c:	1885c83a 	sub	r2,r3,r2
   32c50:	e0bff615 	stw	r2,-40(fp)
   32c54:	00000406 	br	32c68 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   32c58:	00c1ffc4 	movi	r3,2047
   32c5c:	e0bff917 	ldw	r2,-28(fp)
   32c60:	1885c83a 	sub	r2,r3,r2
   32c64:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   32c68:	e0bff617 	ldw	r2,-40(fp)
   32c6c:	10001e26 	beq	r2,zero,32ce8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   32c70:	e0fffe17 	ldw	r3,-8(fp)
   32c74:	e0bff617 	ldw	r2,-40(fp)
   32c78:	1880022e 	bgeu	r3,r2,32c84 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   32c7c:	e0bffe17 	ldw	r2,-8(fp)
   32c80:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   32c84:	e0bffc17 	ldw	r2,-16(fp)
   32c88:	10c20e04 	addi	r3,r2,2104
   32c8c:	e0bff917 	ldw	r2,-28(fp)
   32c90:	1885883a 	add	r2,r3,r2
   32c94:	e1bff617 	ldw	r6,-40(fp)
   32c98:	e17ffd17 	ldw	r5,-12(fp)
   32c9c:	1009883a 	mov	r4,r2
   32ca0:	002d1f40 	call	2d1f4 <memcpy>
      ptr   += n;
   32ca4:	e0fffd17 	ldw	r3,-12(fp)
   32ca8:	e0bff617 	ldw	r2,-40(fp)
   32cac:	1885883a 	add	r2,r3,r2
   32cb0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   32cb4:	e0fffe17 	ldw	r3,-8(fp)
   32cb8:	e0bff617 	ldw	r2,-40(fp)
   32cbc:	1885c83a 	sub	r2,r3,r2
   32cc0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   32cc4:	e0fff917 	ldw	r3,-28(fp)
   32cc8:	e0bff617 	ldw	r2,-40(fp)
   32ccc:	1885883a 	add	r2,r3,r2
   32cd0:	10c1ffcc 	andi	r3,r2,2047
   32cd4:	e0bffc17 	ldw	r2,-16(fp)
   32cd8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   32cdc:	e0bffe17 	ldw	r2,-8(fp)
   32ce0:	00bfc716 	blt	zero,r2,32c00 <__alt_mem_SDRAM_controller+0xfc032c00>
   32ce4:	00000106 	br	32cec <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   32ce8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32cec:	0005303a 	rdctl	r2,status
   32cf0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32cf4:	e0fffb17 	ldw	r3,-20(fp)
   32cf8:	00bfff84 	movi	r2,-2
   32cfc:	1884703a 	and	r2,r3,r2
   32d00:	1001703a 	wrctl	status,r2
  
  return context;
   32d04:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   32d08:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   32d0c:	e0bffc17 	ldw	r2,-16(fp)
   32d10:	10800817 	ldw	r2,32(r2)
   32d14:	10c00094 	ori	r3,r2,2
   32d18:	e0bffc17 	ldw	r2,-16(fp)
   32d1c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   32d20:	e0bffc17 	ldw	r2,-16(fp)
   32d24:	10800017 	ldw	r2,0(r2)
   32d28:	10800104 	addi	r2,r2,4
   32d2c:	1007883a 	mov	r3,r2
   32d30:	e0bffc17 	ldw	r2,-16(fp)
   32d34:	10800817 	ldw	r2,32(r2)
   32d38:	18800035 	stwio	r2,0(r3)
   32d3c:	e0bffa17 	ldw	r2,-24(fp)
   32d40:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32d44:	e0bff817 	ldw	r2,-32(fp)
   32d48:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   32d4c:	e0bffe17 	ldw	r2,-8(fp)
   32d50:	0080100e 	bge	zero,r2,32d94 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   32d54:	e0bfff17 	ldw	r2,-4(fp)
   32d58:	1090000c 	andi	r2,r2,16384
   32d5c:	1000101e 	bne	r2,zero,32da0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   32d60:	0001883a 	nop
   32d64:	e0bffc17 	ldw	r2,-16(fp)
   32d68:	10c00d17 	ldw	r3,52(r2)
   32d6c:	e0bff517 	ldw	r2,-44(fp)
   32d70:	1880051e 	bne	r3,r2,32d88 <altera_avalon_jtag_uart_write+0x1b8>
   32d74:	e0bffc17 	ldw	r2,-16(fp)
   32d78:	10c00917 	ldw	r3,36(r2)
   32d7c:	e0bffc17 	ldw	r2,-16(fp)
   32d80:	10800117 	ldw	r2,4(r2)
   32d84:	18bff736 	bltu	r3,r2,32d64 <__alt_mem_SDRAM_controller+0xfc032d64>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   32d88:	e0bffc17 	ldw	r2,-16(fp)
   32d8c:	10800917 	ldw	r2,36(r2)
   32d90:	1000051e 	bne	r2,zero,32da8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   32d94:	e0bffe17 	ldw	r2,-8(fp)
   32d98:	00bfd016 	blt	zero,r2,32cdc <__alt_mem_SDRAM_controller+0xfc032cdc>
   32d9c:	00000306 	br	32dac <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   32da0:	0001883a 	nop
   32da4:	00000106 	br	32dac <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   32da8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   32dac:	e0fffd17 	ldw	r3,-12(fp)
   32db0:	e0bff717 	ldw	r2,-36(fp)
   32db4:	18800426 	beq	r3,r2,32dc8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   32db8:	e0fffd17 	ldw	r3,-12(fp)
   32dbc:	e0bff717 	ldw	r2,-36(fp)
   32dc0:	1885c83a 	sub	r2,r3,r2
   32dc4:	00000606 	br	32de0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   32dc8:	e0bfff17 	ldw	r2,-4(fp)
   32dcc:	1090000c 	andi	r2,r2,16384
   32dd0:	10000226 	beq	r2,zero,32ddc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   32dd4:	00bffd44 	movi	r2,-11
   32dd8:	00000106 	br	32de0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   32ddc:	00bffec4 	movi	r2,-5
}
   32de0:	e037883a 	mov	sp,fp
   32de4:	dfc00117 	ldw	ra,4(sp)
   32de8:	df000017 	ldw	fp,0(sp)
   32dec:	dec00204 	addi	sp,sp,8
   32df0:	f800283a 	ret

00032df4 <altera_avalon_mailbox_identify>:
 * Check an instance open match
 * with the callback register
 */

static void altera_avalon_mailbox_identify (altera_avalon_mailbox_dev *dev)
{
   32df4:	defffd04 	addi	sp,sp,-12
   32df8:	df000215 	stw	fp,8(sp)
   32dfc:	df000204 	addi	fp,sp,8
   32e00:	e13fff15 	stw	r4,-4(fp)
    /* Random signature to test mailbox ownership */
    alt_u32 magic_num = 0x3A11B045;
   32e04:	008e84b4 	movhi	r2,14866
   32e08:	10ac1144 	addi	r2,r2,-20411
   32e0c:	e0bffe15 	stw	r2,-8(fp)

    IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, magic_num);
   32e10:	e0bfff17 	ldw	r2,-4(fp)
   32e14:	10800a17 	ldw	r2,40(r2)
   32e18:	10800104 	addi	r2,r2,4
   32e1c:	1007883a 	mov	r3,r2
   32e20:	e0bffe17 	ldw	r2,-8(fp)
   32e24:	18800035 	stwio	r2,0(r3)
    if((IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST)) == magic_num)
   32e28:	e0bfff17 	ldw	r2,-4(fp)
   32e2c:	10800a17 	ldw	r2,40(r2)
   32e30:	10800104 	addi	r2,r2,4
   32e34:	10800037 	ldwio	r2,0(r2)
   32e38:	1007883a 	mov	r3,r2
   32e3c:	e0bffe17 	ldw	r2,-8(fp)
   32e40:	1880081e 	bne	r3,r2,32e64 <altera_avalon_mailbox_identify+0x70>
    {
        dev-> mbox_type = MBOX_TX;
   32e44:	e0bfff17 	ldw	r2,-4(fp)
   32e48:	10000f15 	stw	zero,60(r2)
        /* Clear message_ptr to default */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, 0x0);
   32e4c:	e0bfff17 	ldw	r2,-4(fp)
   32e50:	10800a17 	ldw	r2,40(r2)
   32e54:	10800104 	addi	r2,r2,4
   32e58:	0007883a 	mov	r3,zero
   32e5c:	10c00035 	stwio	r3,0(r2)
    } else
    {
	    dev->mbox_type = MBOX_RX;
    }
}
   32e60:	00000306 	br	32e70 <altera_avalon_mailbox_identify+0x7c>
        dev-> mbox_type = MBOX_TX;
        /* Clear message_ptr to default */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, 0x0);
    } else
    {
	    dev->mbox_type = MBOX_RX;
   32e64:	e0bfff17 	ldw	r2,-4(fp)
   32e68:	00c00044 	movi	r3,1
   32e6c:	10c00f15 	stw	r3,60(r2)
    }
}
   32e70:	0001883a 	nop
   32e74:	e037883a 	mov	sp,fp
   32e78:	df000017 	ldw	fp,0(sp)
   32e7c:	dec00104 	addi	sp,sp,4
   32e80:	f800283a 	ret

00032e84 <altera_avalon_mailbox_post>:
/*
 *   altera_avalon_mailbox_post
 *   This function post message out through sender mailbox
 */
static alt_32 altera_avalon_mailbox_post (altera_avalon_mailbox_dev *dev,  void *message)
{
   32e84:	defffc04 	addi	sp,sp,-16
   32e88:	df000315 	stw	fp,12(sp)
   32e8c:	df000304 	addi	fp,sp,12
   32e90:	e13ffe15 	stw	r4,-8(fp)
   32e94:	e17fff15 	stw	r5,-4(fp)
    alt_u32 *mbox_msg = (alt_u32*) message ;
   32e98:	e0bfff17 	ldw	r2,-4(fp)
   32e9c:	e0bffd15 	stw	r2,-12(fp)

    if (mbox_msg != NULL) {
   32ea0:	e0bffd17 	ldw	r2,-12(fp)
   32ea4:	10001026 	beq	r2,zero,32ee8 <altera_avalon_mailbox_post+0x64>
        /* When message space available, post the message out */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, mbox_msg[1]);
   32ea8:	e0bffe17 	ldw	r2,-8(fp)
   32eac:	10800a17 	ldw	r2,40(r2)
   32eb0:	10800104 	addi	r2,r2,4
   32eb4:	1007883a 	mov	r3,r2
   32eb8:	e0bffd17 	ldw	r2,-12(fp)
   32ebc:	10800104 	addi	r2,r2,4
   32ec0:	10800017 	ldw	r2,0(r2)
   32ec4:	18800035 	stwio	r2,0(r3)
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST, mbox_msg[0]);
   32ec8:	e0bffe17 	ldw	r2,-8(fp)
   32ecc:	10800a17 	ldw	r2,40(r2)
   32ed0:	1007883a 	mov	r3,r2
   32ed4:	e0bffd17 	ldw	r2,-12(fp)
   32ed8:	10800017 	ldw	r2,0(r2)
   32edc:	18800035 	stwio	r2,0(r3)
        return 0;
   32ee0:	0005883a 	mov	r2,zero
   32ee4:	00000106 	br	32eec <altera_avalon_mailbox_post+0x68>
    }
    /* Invalid NULL message received */
    return -EINVAL;
   32ee8:	00bffa84 	movi	r2,-22
}
   32eec:	e037883a 	mov	sp,fp
   32ef0:	df000017 	ldw	fp,0(sp)
   32ef4:	dec00104 	addi	sp,sp,4
   32ef8:	f800283a 	ret

00032efc <altera_avalon_mailbox_simple_tx_isr>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_mailbox_simple_tx_isr(void *context)
#else
static void altera_avalon_mailbox_simple_tx_isr(void *context, alt_u32 id)
#endif
{
   32efc:	defff504 	addi	sp,sp,-44
   32f00:	dfc00a15 	stw	ra,40(sp)
   32f04:	df000915 	stw	fp,36(sp)
   32f08:	df000904 	addi	fp,sp,36
   32f0c:	e13ffe15 	stw	r4,-8(fp)
   32f10:	e17fff15 	stw	r5,-4(fp)
    altera_avalon_mailbox_dev *dev = (altera_avalon_mailbox_dev*) context;
   32f14:	e0bffe17 	ldw	r2,-8(fp)
   32f18:	e0bff715 	stw	r2,-36(fp)
    int status = 0;
   32f1c:	e03ff815 	stw	zero,-32(fp)
    alt_u32 data;
    alt_irq_context cpu_sr;
    alt_u32 *message = dev->mbox_msg;
   32f20:	e0bff717 	ldw	r2,-36(fp)
   32f24:	10801017 	ldw	r2,64(r2)
   32f28:	e0bff915 	stw	r2,-28(fp)

    /* Mask mailbox interrupt */
    data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) &
   32f2c:	e0bff717 	ldw	r2,-36(fp)
   32f30:	10800a17 	ldw	r2,40(r2)
   32f34:	10800304 	addi	r2,r2,12
   32f38:	10800037 	ldwio	r2,0(r2)
   32f3c:	1007883a 	mov	r3,r2
   32f40:	00bfff44 	movi	r2,-3
   32f44:	1884703a 	and	r2,r3,r2
   32f48:	e0bffa15 	stw	r2,-24(fp)
               (~ALTERA_AVALON_MAILBOX_SIMPLE_INTR_SPACE_MSK);
    IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
   32f4c:	e0bff717 	ldw	r2,-36(fp)
   32f50:	10800a17 	ldw	r2,40(r2)
   32f54:	10800304 	addi	r2,r2,12
   32f58:	1007883a 	mov	r3,r2
   32f5c:	e0bffa17 	ldw	r2,-24(fp)
   32f60:	18800035 	stwio	r2,0(r3)

    if (message != NULL)
   32f64:	e0bff917 	ldw	r2,-28(fp)
   32f68:	10002d26 	beq	r2,zero,33020 <altera_avalon_mailbox_simple_tx_isr+0x124>
    {
        /* Post out message requested */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST, message[1]);
   32f6c:	e0bff717 	ldw	r2,-36(fp)
   32f70:	10800a17 	ldw	r2,40(r2)
   32f74:	10800104 	addi	r2,r2,4
   32f78:	1007883a 	mov	r3,r2
   32f7c:	e0bff917 	ldw	r2,-28(fp)
   32f80:	10800104 	addi	r2,r2,4
   32f84:	10800017 	ldw	r2,0(r2)
   32f88:	18800035 	stwio	r2,0(r3)
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST, message[0]);
   32f8c:	e0bff717 	ldw	r2,-36(fp)
   32f90:	10800a17 	ldw	r2,40(r2)
   32f94:	1007883a 	mov	r3,r2
   32f98:	e0bff917 	ldw	r2,-28(fp)
   32f9c:	10800017 	ldw	r2,0(r2)
   32fa0:	18800035 	stwio	r2,0(r3)
    /*
     * Other interrupts are explicitly disabled if callbacks are registered
     * because there is no guarantee that they are preemption-safe.
     */
        status = (IORD_ALTERA_AVALON_MAILBOX_STS(dev->base)
   32fa4:	e0bff717 	ldw	r2,-36(fp)
   32fa8:	10800a17 	ldw	r2,40(r2)
   32fac:	10800204 	addi	r2,r2,8
   32fb0:	10800037 	ldwio	r2,0(r2)
        		  & ALTERA_AVALON_MAILBOX_SIMPLE_STS_FULL_MSK) >> 1;
   32fb4:	1080008c 	andi	r2,r2,2
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST, message[0]);
    /*
     * Other interrupts are explicitly disabled if callbacks are registered
     * because there is no guarantee that they are preemption-safe.
     */
        status = (IORD_ALTERA_AVALON_MAILBOX_STS(dev->base)
   32fb8:	1005d07a 	srai	r2,r2,1
   32fbc:	e0bff815 	stw	r2,-32(fp)
        		  & ALTERA_AVALON_MAILBOX_SIMPLE_STS_FULL_MSK) >> 1;
        if (dev->tx_cb)
   32fc0:	e0bff717 	ldw	r2,-36(fp)
   32fc4:	10800d17 	ldw	r2,52(r2)
   32fc8:	10001126 	beq	r2,zero,33010 <altera_avalon_mailbox_simple_tx_isr+0x114>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32fcc:	0005303a 	rdctl	r2,status
   32fd0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32fd4:	e0fffc17 	ldw	r3,-16(fp)
   32fd8:	00bfff84 	movi	r2,-2
   32fdc:	1884703a 	and	r2,r3,r2
   32fe0:	1001703a 	wrctl	status,r2
  
  return context;
   32fe4:	e0bffc17 	ldw	r2,-16(fp)
        {
            cpu_sr = alt_irq_disable_all();
   32fe8:	e0bffb15 	stw	r2,-20(fp)
  	        (dev->tx_cb)(message, status);
   32fec:	e0bff717 	ldw	r2,-36(fp)
   32ff0:	10800d17 	ldw	r2,52(r2)
   32ff4:	e17ff817 	ldw	r5,-32(fp)
   32ff8:	e13ff917 	ldw	r4,-28(fp)
   32ffc:	103ee83a 	callr	r2
   33000:	e0bffb17 	ldw	r2,-20(fp)
   33004:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   33008:	e0bffd17 	ldw	r2,-12(fp)
   3300c:	1001703a 	wrctl	status,r2
            alt_irq_enable_all(cpu_sr);
        }
        /* Clear mailbox message to NULL after message being posted */
        dev->mbox_msg = NULL;
   33010:	e0bff717 	ldw	r2,-36(fp)
   33014:	10001015 	stw	zero,64(r2)
        dev->lock = 0;
   33018:	e0bff717 	ldw	r2,-36(fp)
   3301c:	10001105 	stb	zero,68(r2)
    }
}
   33020:	0001883a 	nop
   33024:	e037883a 	mov	sp,fp
   33028:	dfc00117 	ldw	ra,4(sp)
   3302c:	df000017 	ldw	fp,0(sp)
   33030:	dec00204 	addi	sp,sp,8
   33034:	f800283a 	ret

00033038 <altera_avalon_mailbox_simple_rx_isr>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_mailbox_simple_rx_isr(void *context)
#else
static void altera_avalon_mailbox_simple_rx_isr(void *context, alt_u32 id)
#endif
{
   33038:	defff604 	addi	sp,sp,-40
   3303c:	dfc00915 	stw	ra,36(sp)
   33040:	df000815 	stw	fp,32(sp)
   33044:	df000804 	addi	fp,sp,32
   33048:	e13ffe15 	stw	r4,-8(fp)
   3304c:	e17fff15 	stw	r5,-4(fp)
    altera_avalon_mailbox_dev *dev = (altera_avalon_mailbox_dev*) context;
   33050:	e0bffe17 	ldw	r2,-8(fp)
   33054:	e0bff815 	stw	r2,-32(fp)
    alt_irq_context cpu_sr;
    alt_u32 inbox[2];

    inbox[1] = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST));
   33058:	e0bff817 	ldw	r2,-32(fp)
   3305c:	10800a17 	ldw	r2,40(r2)
   33060:	10800104 	addi	r2,r2,4
   33064:	10800037 	ldwio	r2,0(r2)
   33068:	e0bffd15 	stw	r2,-12(fp)
    inbox[0] = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST));
   3306c:	e0bff817 	ldw	r2,-32(fp)
   33070:	10800a17 	ldw	r2,40(r2)
   33074:	10800037 	ldwio	r2,0(r2)
   33078:	e0bffc15 	stw	r2,-16(fp)

    /*
     * Other interrupts are explicitly disabled if callbacks are registered
     * because there is no guarantee that they are preemption-safe.
     */
    if (dev->rx_cb)
   3307c:	e0bff817 	ldw	r2,-32(fp)
   33080:	10800e17 	ldw	r2,56(r2)
   33084:	10001126 	beq	r2,zero,330cc <altera_avalon_mailbox_simple_rx_isr+0x94>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   33088:	0005303a 	rdctl	r2,status
   3308c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   33090:	e0fffa17 	ldw	r3,-24(fp)
   33094:	00bfff84 	movi	r2,-2
   33098:	1884703a 	and	r2,r3,r2
   3309c:	1001703a 	wrctl	status,r2
  
  return context;
   330a0:	e0bffa17 	ldw	r2,-24(fp)
    {
        cpu_sr = alt_irq_disable_all();
   330a4:	e0bff915 	stw	r2,-28(fp)
        (dev->rx_cb)(inbox);
   330a8:	e0bff817 	ldw	r2,-32(fp)
   330ac:	10800e17 	ldw	r2,56(r2)
   330b0:	e0fffc04 	addi	r3,fp,-16
   330b4:	1809883a 	mov	r4,r3
   330b8:	103ee83a 	callr	r2
   330bc:	e0bff917 	ldw	r2,-28(fp)
   330c0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   330c4:	e0bffb17 	ldw	r2,-20(fp)
   330c8:	1001703a 	wrctl	status,r2
        alt_irq_enable_all(cpu_sr);
    }
}
   330cc:	0001883a 	nop
   330d0:	e037883a 	mov	sp,fp
   330d4:	dfc00117 	ldw	ra,4(sp)
   330d8:	df000017 	ldw	fp,0(sp)
   330dc:	dec00204 	addi	sp,sp,8
   330e0:	f800283a 	ret

000330e4 <altera_avalon_mailbox_simple_init>:
 * Altera avalon mailbox init
 * Initialize mailbox device and identify sender/receiver mailbox
 */
void altera_avalon_mailbox_simple_init (altera_avalon_mailbox_dev *dev,
		                               int intr_id, int irq)
{
   330e4:	defffb04 	addi	sp,sp,-20
   330e8:	dfc00415 	stw	ra,16(sp)
   330ec:	df000315 	stw	fp,12(sp)
   330f0:	df000304 	addi	fp,sp,12
   330f4:	e13ffd15 	stw	r4,-12(fp)
   330f8:	e17ffe15 	stw	r5,-8(fp)
   330fc:	e1bfff15 	stw	r6,-4(fp)
    alt_dev_llist_insert((alt_dev_llist*) dev, &alt_mailbox_simple_list);
   33100:	d1601004 	addi	r5,gp,-32704
   33104:	e13ffd17 	ldw	r4,-12(fp)
   33108:	0034c940 	call	34c94 <alt_dev_llist_insert>
    
    dev->mailbox_irq    = irq;
   3310c:	e0ffff17 	ldw	r3,-4(fp)
   33110:	e0bffd17 	ldw	r2,-12(fp)
   33114:	10c00b15 	stw	r3,44(r2)
    dev->mailbox_intr_ctrl_id = intr_id;
   33118:	e0fffe17 	ldw	r3,-8(fp)
   3311c:	e0bffd17 	ldw	r2,-12(fp)
   33120:	10c00c15 	stw	r3,48(r2)
    dev->rx_cb = NULL;
   33124:	e0bffd17 	ldw	r2,-12(fp)
   33128:	10000e15 	stw	zero,56(r2)
    dev->tx_cb = NULL;
   3312c:	e0bffd17 	ldw	r2,-12(fp)
   33130:	10000d15 	stw	zero,52(r2)
    dev->mbox_msg = NULL;
   33134:	e0bffd17 	ldw	r2,-12(fp)
   33138:	10001015 	stw	zero,64(r2)
    
    ALT_SEM_CREATE (&dev->write_lock, 1);

    altera_avalon_mailbox_identify(dev);
   3313c:	e13ffd17 	ldw	r4,-12(fp)
   33140:	0032df40 	call	32df4 <altera_avalon_mailbox_identify>
}
   33144:	0001883a 	nop
   33148:	e037883a 	mov	sp,fp
   3314c:	dfc00117 	ldw	ra,4(sp)
   33150:	df000017 	ldw	fp,0(sp)
   33154:	dec00204 	addi	sp,sp,8
   33158:	f800283a 	ret

0003315c <altera_avalon_mailbox_open>:
 * Search the list of registered mailboxes for one with the supplied name.
 * The return value will be NULL on failure, and non-NULL otherwise.
 */
altera_avalon_mailbox_dev* altera_avalon_mailbox_open (const char *name,
		altera_mailbox_tx_cb tx_callback, altera_mailbox_rx_cb rx_callback)
{
   3315c:	defff904 	addi	sp,sp,-28
   33160:	dfc00615 	stw	ra,24(sp)
   33164:	df000515 	stw	fp,20(sp)
   33168:	df000504 	addi	fp,sp,20
   3316c:	e13ffd15 	stw	r4,-12(fp)
   33170:	e17ffe15 	stw	r5,-8(fp)
   33174:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_mailbox_dev *dev;
    alt_u32 data;

    /* Find requested device */
    dev = (altera_avalon_mailbox_dev*) alt_find_dev (name, &alt_mailbox_simple_list);
   33178:	d1601004 	addi	r5,gp,-32704
   3317c:	e13ffd17 	ldw	r4,-12(fp)
   33180:	0034df80 	call	34df8 <alt_find_dev>
   33184:	e0bffb15 	stw	r2,-20(fp)
    if (dev == NULL)
   33188:	e0bffb17 	ldw	r2,-20(fp)
   3318c:	1000021e 	bne	r2,zero,33198 <altera_avalon_mailbox_open+0x3c>
    {
        return NULL;
   33190:	0005883a 	mov	r2,zero
   33194:	00005d06 	br	3330c <altera_avalon_mailbox_open+0x1b0>
    }

    /* Mask mailbox interrupt before ISR is being registered. */
    data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST);
   33198:	e0bffb17 	ldw	r2,-20(fp)
   3319c:	10800a17 	ldw	r2,40(r2)
   331a0:	10800304 	addi	r2,r2,12
   331a4:	10800037 	ldwio	r2,0(r2)
   331a8:	e0bffc15 	stw	r2,-16(fp)
    if (dev->mbox_type == MBOX_TX) {
   331ac:	e0bffb17 	ldw	r2,-20(fp)
   331b0:	10800f17 	ldw	r2,60(r2)
   331b4:	1000081e 	bne	r2,zero,331d8 <altera_avalon_mailbox_open+0x7c>
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, \
   331b8:	e0bffb17 	ldw	r2,-20(fp)
   331bc:	10800a17 	ldw	r2,40(r2)
   331c0:	10800304 	addi	r2,r2,12
   331c4:	1009883a 	mov	r4,r2
   331c8:	e0fffc17 	ldw	r3,-16(fp)
   331cc:	00bfff44 	movi	r2,-3
   331d0:	1884703a 	and	r2,r3,r2
   331d4:	20800035 	stwio	r2,0(r4)
            (data & ~(ALTERA_AVALON_MAILBOX_SIMPLE_INTR_SPACE_MSK)));
    }
    if (dev->mbox_type == MBOX_RX) {
   331d8:	e0bffb17 	ldw	r2,-20(fp)
   331dc:	10800f17 	ldw	r2,60(r2)
   331e0:	10800058 	cmpnei	r2,r2,1
   331e4:	1000081e 	bne	r2,zero,33208 <altera_avalon_mailbox_open+0xac>
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, \
   331e8:	e0bffb17 	ldw	r2,-20(fp)
   331ec:	10800a17 	ldw	r2,40(r2)
   331f0:	10800304 	addi	r2,r2,12
   331f4:	1009883a 	mov	r4,r2
   331f8:	e0fffc17 	ldw	r3,-16(fp)
   331fc:	00bfff84 	movi	r2,-2
   33200:	1884703a 	and	r2,r3,r2
   33204:	20800035 	stwio	r2,0(r4)
    }

    /* If IRQ not connected, return device pointer without ISR register,
     * in polling mode.
     */
    if (dev->mailbox_irq == ALT_IRQ_NOT_CONNECTED)
   33208:	e0bffb17 	ldw	r2,-20(fp)
   3320c:	10800b17 	ldw	r2,44(r2)
   33210:	10bfffd8 	cmpnei	r2,r2,-1
   33214:	1000021e 	bne	r2,zero,33220 <altera_avalon_mailbox_open+0xc4>
        return dev;
   33218:	e0bffb17 	ldw	r2,-20(fp)
   3321c:	00003b06 	br	3330c <altera_avalon_mailbox_open+0x1b0>

    /* For IRQ connected case */

    if ((tx_callback == NULL) && (rx_callback == NULL))
   33220:	e0bffe17 	ldw	r2,-8(fp)
   33224:	1000041e 	bne	r2,zero,33238 <altera_avalon_mailbox_open+0xdc>
   33228:	e0bfff17 	ldw	r2,-4(fp)
   3322c:	1000021e 	bne	r2,zero,33238 <altera_avalon_mailbox_open+0xdc>
    {
    /* No callback, polling mode */
        return dev;
   33230:	e0bffb17 	ldw	r2,-20(fp)
   33234:	00003506 	br	3330c <altera_avalon_mailbox_open+0x1b0>
    }

    /* Ensure user correctly use the mailbox
     * Return - Null if wrong direction set
     */
    if (((dev->mbox_type == MBOX_TX) && (rx_callback != NULL)) ||
   33238:	e0bffb17 	ldw	r2,-20(fp)
   3323c:	10800f17 	ldw	r2,60(r2)
   33240:	1000021e 	bne	r2,zero,3324c <altera_avalon_mailbox_open+0xf0>
   33244:	e0bfff17 	ldw	r2,-4(fp)
   33248:	1000061e 	bne	r2,zero,33264 <altera_avalon_mailbox_open+0x108>
	    ((dev->mbox_type == MBOX_RX) && (tx_callback != NULL)))
   3324c:	e0bffb17 	ldw	r2,-20(fp)
   33250:	10800f17 	ldw	r2,60(r2)
    }

    /* Ensure user correctly use the mailbox
     * Return - Null if wrong direction set
     */
    if (((dev->mbox_type == MBOX_TX) && (rx_callback != NULL)) ||
   33254:	10800058 	cmpnei	r2,r2,1
   33258:	1000041e 	bne	r2,zero,3326c <altera_avalon_mailbox_open+0x110>
	    ((dev->mbox_type == MBOX_RX) && (tx_callback != NULL)))
   3325c:	e0bffe17 	ldw	r2,-8(fp)
   33260:	10000226 	beq	r2,zero,3326c <altera_avalon_mailbox_open+0x110>
  	  /* Invalid callback  */
        return NULL;
   33264:	0005883a 	mov	r2,zero
   33268:	00002806 	br	3330c <altera_avalon_mailbox_open+0x1b0>

    /* IRQ is valid register callback
     * to current mailbox device
     */
    dev->tx_cb  = tx_callback;
   3326c:	e0bffb17 	ldw	r2,-20(fp)
   33270:	e0fffe17 	ldw	r3,-8(fp)
   33274:	10c00d15 	stw	r3,52(r2)
    dev->rx_cb  = rx_callback;
   33278:	e0bffb17 	ldw	r2,-20(fp)
   3327c:	e0ffff17 	ldw	r3,-4(fp)
   33280:	10c00e15 	stw	r3,56(r2)

    /* Register Mailbox's ISR */
    if (dev->mbox_type == MBOX_TX)
   33284:	e0bffb17 	ldw	r2,-20(fp)
   33288:	10800f17 	ldw	r2,60(r2)
   3328c:	1000071e 	bne	r2,zero,332ac <altera_avalon_mailbox_open+0x150>
    {
    #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_ic_isr_register(dev->mailbox_intr_ctrl_id, dev->mailbox_irq, altera_avalon_mailbox_simple_tx_isr,
                            dev, NULL);
    #else
        alt_irq_register(dev->mailbox_irq, dev, altera_avalon_mailbox_simple_tx_isr);
   33290:	e0bffb17 	ldw	r2,-20(fp)
   33294:	10800b17 	ldw	r2,44(r2)
   33298:	018000f4 	movhi	r6,3
   3329c:	318bbf04 	addi	r6,r6,12028
   332a0:	e17ffb17 	ldw	r5,-20(fp)
   332a4:	1009883a 	mov	r4,r2
   332a8:	0034ffc0 	call	34ffc <alt_irq_register>
    #endif
    }
  
    if (dev->mbox_type == MBOX_RX)
   332ac:	e0bffb17 	ldw	r2,-20(fp)
   332b0:	10800f17 	ldw	r2,60(r2)
   332b4:	10800058 	cmpnei	r2,r2,1
   332b8:	1000131e 	bne	r2,zero,33308 <altera_avalon_mailbox_open+0x1ac>
    {
    #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_ic_isr_register(dev->mailbox_intr_ctrl_id, dev->mailbox_irq, altera_avalon_mailbox_simple_rx_isr,
                            dev, NULL);
    #else
        alt_irq_register(dev->mailbox_irq, dev, altera_avalon_mailbox_simple_rx_isr);
   332bc:	e0bffb17 	ldw	r2,-20(fp)
   332c0:	10800b17 	ldw	r2,44(r2)
   332c4:	018000f4 	movhi	r6,3
   332c8:	318c0e04 	addi	r6,r6,12344
   332cc:	e17ffb17 	ldw	r5,-20(fp)
   332d0:	1009883a 	mov	r4,r2
   332d4:	0034ffc0 	call	34ffc <alt_irq_register>
    #endif
        /* Enable Receiver interrupt to listen mode */
        data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) |
   332d8:	e0bffb17 	ldw	r2,-20(fp)
   332dc:	10800a17 	ldw	r2,40(r2)
   332e0:	10800304 	addi	r2,r2,12
   332e4:	10800037 	ldwio	r2,0(r2)
   332e8:	10800054 	ori	r2,r2,1
   332ec:	e0bffc15 	stw	r2,-16(fp)
  	             (ALTERA_AVALON_MAILBOX_SIMPLE_INTR_PEN_MSK);
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
   332f0:	e0bffb17 	ldw	r2,-20(fp)
   332f4:	10800a17 	ldw	r2,40(r2)
   332f8:	10800304 	addi	r2,r2,12
   332fc:	1007883a 	mov	r3,r2
   33300:	e0bffc17 	ldw	r2,-16(fp)
   33304:	18800035 	stwio	r2,0(r3)
    }
    return dev;
   33308:	e0bffb17 	ldw	r2,-20(fp)
}
   3330c:	e037883a 	mov	sp,fp
   33310:	dfc00117 	ldw	ra,4(sp)
   33314:	df000017 	ldw	fp,0(sp)
   33318:	dec00204 	addi	sp,sp,8
   3331c:	f800283a 	ret

00033320 <altera_avalon_mailbox_close>:
/*
 * altera_avalon_mailbox_close
 * Disable mailbox interrupt and irq
 */
void altera_avalon_mailbox_close (altera_avalon_mailbox_dev *dev)
{
   33320:	defffc04 	addi	sp,sp,-16
   33324:	dfc00315 	stw	ra,12(sp)
   33328:	df000215 	stw	fp,8(sp)
   3332c:	df000204 	addi	fp,sp,8
   33330:	e13fff15 	stw	r4,-4(fp)
    alt_u32 data;
    if ((dev != NULL) && (dev->mailbox_irq != ALT_IRQ_NOT_CONNECTED))
   33334:	e0bfff17 	ldw	r2,-4(fp)
   33338:	10003526 	beq	r2,zero,33410 <altera_avalon_mailbox_close+0xf0>
   3333c:	e0bfff17 	ldw	r2,-4(fp)
   33340:	10800b17 	ldw	r2,44(r2)
   33344:	10bfffe0 	cmpeqi	r2,r2,-1
   33348:	1000311e 	bne	r2,zero,33410 <altera_avalon_mailbox_close+0xf0>
    {
        /* Mask interrupt */
        if (dev->mbox_type == MBOX_TX)
   3334c:	e0bfff17 	ldw	r2,-4(fp)
   33350:	10800f17 	ldw	r2,60(r2)
   33354:	10000e1e 	bne	r2,zero,33390 <altera_avalon_mailbox_close+0x70>
        {
            data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) &
   33358:	e0bfff17 	ldw	r2,-4(fp)
   3335c:	10800a17 	ldw	r2,40(r2)
   33360:	10800304 	addi	r2,r2,12
   33364:	10800037 	ldwio	r2,0(r2)
   33368:	1007883a 	mov	r3,r2
   3336c:	00bfff44 	movi	r2,-3
   33370:	1884703a 	and	r2,r3,r2
   33374:	e0bffe15 	stw	r2,-8(fp)
                       (~ALTERA_AVALON_MAILBOX_SIMPLE_INTR_SPACE_MSK);
            IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
   33378:	e0bfff17 	ldw	r2,-4(fp)
   3337c:	10800a17 	ldw	r2,40(r2)
   33380:	10800304 	addi	r2,r2,12
   33384:	1007883a 	mov	r3,r2
   33388:	e0bffe17 	ldw	r2,-8(fp)
   3338c:	18800035 	stwio	r2,0(r3)
        }
        if (dev->mbox_type == MBOX_RX)
   33390:	e0bfff17 	ldw	r2,-4(fp)
   33394:	10800f17 	ldw	r2,60(r2)
   33398:	10800058 	cmpnei	r2,r2,1
   3339c:	10000e1e 	bne	r2,zero,333d8 <altera_avalon_mailbox_close+0xb8>
        {
            data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) &
   333a0:	e0bfff17 	ldw	r2,-4(fp)
   333a4:	10800a17 	ldw	r2,40(r2)
   333a8:	10800304 	addi	r2,r2,12
   333ac:	10800037 	ldwio	r2,0(r2)
   333b0:	1007883a 	mov	r3,r2
   333b4:	00bfff84 	movi	r2,-2
   333b8:	1884703a 	and	r2,r3,r2
   333bc:	e0bffe15 	stw	r2,-8(fp)
                       (~ALTERA_AVALON_MAILBOX_SIMPLE_INTR_PEN_MSK);
            IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
   333c0:	e0bfff17 	ldw	r2,-4(fp)
   333c4:	10800a17 	ldw	r2,40(r2)
   333c8:	10800304 	addi	r2,r2,12
   333cc:	1007883a 	mov	r3,r2
   333d0:	e0bffe17 	ldw	r2,-8(fp)
   333d4:	18800035 	stwio	r2,0(r3)
        }
  
        /* De-register mailbox irq) */
        if (dev->mailbox_irq != ALT_IRQ_NOT_CONNECTED)
   333d8:	e0bfff17 	ldw	r2,-4(fp)
   333dc:	10800b17 	ldw	r2,44(r2)
   333e0:	10bfffe0 	cmpeqi	r2,r2,-1
   333e4:	1000061e 	bne	r2,zero,33400 <altera_avalon_mailbox_close+0xe0>
        {
        #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
            alt_ic_isr_register(dev->mailbox_intr_ctrl_id, dev->mailbox_irq, NULL,
                              dev, NULL);
        #else
            alt_irq_register(dev->mailbox_irq, dev, NULL);
   333e8:	e0bfff17 	ldw	r2,-4(fp)
   333ec:	10800b17 	ldw	r2,44(r2)
   333f0:	000d883a 	mov	r6,zero
   333f4:	e17fff17 	ldw	r5,-4(fp)
   333f8:	1009883a 	mov	r4,r2
   333fc:	0034ffc0 	call	34ffc <alt_irq_register>
        #endif
        }
        /* De-registering callback to mailbox */
        dev->tx_cb  = NULL;
   33400:	e0bfff17 	ldw	r2,-4(fp)
   33404:	10000d15 	stw	zero,52(r2)
        dev->rx_cb  = NULL;
   33408:	e0bfff17 	ldw	r2,-4(fp)
   3340c:	10000e15 	stw	zero,56(r2)
    }
}
   33410:	0001883a 	nop
   33414:	e037883a 	mov	sp,fp
   33418:	dfc00117 	ldw	ra,4(sp)
   3341c:	df000017 	ldw	fp,0(sp)
   33420:	dec00204 	addi	sp,sp,8
   33424:	f800283a 	ret

00033428 <altera_avalon_mailbox_status>:
 *   Return 0 when mailbox is empty or no pending message
 *   Return 1 when mailbox space is full or there is a message pending
 */

alt_u32 altera_avalon_mailbox_status (altera_avalon_mailbox_dev *dev)
{
   33428:	defffd04 	addi	sp,sp,-12
   3342c:	df000215 	stw	fp,8(sp)
   33430:	df000204 	addi	fp,sp,8
   33434:	e13fff15 	stw	r4,-4(fp)
    alt_u32 mailbox_sts = 0;
   33438:	e03ffe15 	stw	zero,-8(fp)

    mailbox_sts = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_STS_OFST) & ALTERA_AVALON_MAILBOX_SIMPLE_STS_MSK);
   3343c:	e0bfff17 	ldw	r2,-4(fp)
   33440:	10800a17 	ldw	r2,40(r2)
   33444:	10800204 	addi	r2,r2,8
   33448:	10800037 	ldwio	r2,0(r2)
   3344c:	108000cc 	andi	r2,r2,3
   33450:	e0bffe15 	stw	r2,-8(fp)

    if (dev->mbox_type == MBOX_TX)
   33454:	e0bfff17 	ldw	r2,-4(fp)
   33458:	10800f17 	ldw	r2,60(r2)
   3345c:	1000041e 	bne	r2,zero,33470 <altera_avalon_mailbox_status+0x48>
        mailbox_sts = (mailbox_sts & ALTERA_AVALON_MAILBOX_SIMPLE_STS_FULL_MSK) >> 1;
   33460:	e0bffe17 	ldw	r2,-8(fp)
   33464:	1080008c 	andi	r2,r2,2
   33468:	1004d07a 	srli	r2,r2,1
   3346c:	e0bffe15 	stw	r2,-8(fp)

    if (dev->mbox_type == MBOX_RX)
   33470:	e0bfff17 	ldw	r2,-4(fp)
   33474:	10800f17 	ldw	r2,60(r2)
   33478:	10800058 	cmpnei	r2,r2,1
   3347c:	1000031e 	bne	r2,zero,3348c <altera_avalon_mailbox_status+0x64>
        mailbox_sts = mailbox_sts & ALTERA_AVALON_MAILBOX_SIMPLE_STS_PENDING_MSK;
   33480:	e0bffe17 	ldw	r2,-8(fp)
   33484:	1080004c 	andi	r2,r2,1
   33488:	e0bffe15 	stw	r2,-8(fp)

    return mailbox_sts;
   3348c:	e0bffe17 	ldw	r2,-8(fp)
}
   33490:	e037883a 	mov	sp,fp
   33494:	df000017 	ldw	fp,0(sp)
   33498:	dec00104 	addi	sp,sp,4
   3349c:	f800283a 	ret

000334a0 <altera_avalon_mailbox_send>:
 * For polling mode, '0' timeout value for infinite polling
 * otherwise timeout when expired
 */
int altera_avalon_mailbox_send
(altera_avalon_mailbox_dev *dev, void *message, int timeout, EventType event)
{
   334a0:	defff704 	addi	sp,sp,-36
   334a4:	dfc00815 	stw	ra,32(sp)
   334a8:	df000715 	stw	fp,28(sp)
   334ac:	df000704 	addi	fp,sp,28
   334b0:	e13ffc15 	stw	r4,-16(fp)
   334b4:	e17ffd15 	stw	r5,-12(fp)
   334b8:	e1bffe15 	stw	r6,-8(fp)
   334bc:	e1ffff15 	stw	r7,-4(fp)
    int status = 0;
   334c0:	e03ff915 	stw	zero,-28(fp)
     * Obtain the "write_lock"semaphore to ensures 
     * that writing to the device is thread-safe in multi-thread enviroment
     */
    ALT_SEM_PEND (dev->write_lock, 0);

    if (dev->lock || (IORD_ALTERA_AVALON_MAILBOX_STS(dev->base)
   334c4:	e0bffc17 	ldw	r2,-16(fp)
   334c8:	10801103 	ldbu	r2,68(r2)
   334cc:	10803fcc 	andi	r2,r2,255
   334d0:	1000061e 	bne	r2,zero,334ec <altera_avalon_mailbox_send+0x4c>
   334d4:	e0bffc17 	ldw	r2,-16(fp)
   334d8:	10800a17 	ldw	r2,40(r2)
   334dc:	10800204 	addi	r2,r2,8
   334e0:	10800037 	ldwio	r2,0(r2)
    		          & ALTERA_AVALON_MAILBOX_SIMPLE_STS_FULL_MSK))
   334e4:	1080008c 	andi	r2,r2,2
     * Obtain the "write_lock"semaphore to ensures 
     * that writing to the device is thread-safe in multi-thread enviroment
     */
    ALT_SEM_PEND (dev->write_lock, 0);

    if (dev->lock || (IORD_ALTERA_AVALON_MAILBOX_STS(dev->base)
   334e8:	10000226 	beq	r2,zero,334f4 <altera_avalon_mailbox_send+0x54>
    		          & ALTERA_AVALON_MAILBOX_SIMPLE_STS_FULL_MSK))
    {
    	/* dev is lock or no free space to send */
    	return -1;
   334ec:	00bfffc4 	movi	r2,-1
   334f0:	00003a06 	br	335dc <altera_avalon_mailbox_send+0x13c>
    }
    else
    {
        dev->mbox_msg = message;
   334f4:	e0bffc17 	ldw	r2,-16(fp)
   334f8:	e0fffd17 	ldw	r3,-12(fp)
   334fc:	10c01015 	stw	r3,64(r2)
        dev->lock = 1;
   33500:	e0bffc17 	ldw	r2,-16(fp)
   33504:	00c00044 	movi	r3,1
   33508:	10c01105 	stb	r3,68(r2)
     */
    ALT_SEM_POST (dev->write_lock);



    if ((dev->mailbox_irq == ALT_IRQ_NOT_CONNECTED) || (event==POLL))
   3350c:	e0bffc17 	ldw	r2,-16(fp)
   33510:	10800b17 	ldw	r2,44(r2)
   33514:	10bfffe0 	cmpeqi	r2,r2,-1
   33518:	1000031e 	bne	r2,zero,33528 <altera_avalon_mailbox_send+0x88>
   3351c:	e0bfff17 	ldw	r2,-4(fp)
   33520:	10800058 	cmpnei	r2,r2,1
   33524:	1000201e 	bne	r2,zero,335a8 <altera_avalon_mailbox_send+0x108>
    {
        /* Polling mode */
        if (timeout ==0)
   33528:	e0bffe17 	ldw	r2,-8(fp)
   3352c:	1000061e 	bne	r2,zero,33548 <altera_avalon_mailbox_send+0xa8>
        {
            do
            {
                mbox_status = altera_avalon_mailbox_status(dev);
   33530:	e13ffc17 	ldw	r4,-16(fp)
   33534:	00334280 	call	33428 <altera_avalon_mailbox_status>
   33538:	e0bffb15 	stw	r2,-20(fp)
            } while (mbox_status);
   3353c:	e0bffb17 	ldw	r2,-20(fp)
   33540:	103ffb1e 	bne	r2,zero,33530 <__alt_mem_SDRAM_controller+0xfc033530>
   33544:	00000e06 	br	33580 <altera_avalon_mailbox_send+0xe0>
        } else
        {
            do
            {
                mbox_status = altera_avalon_mailbox_status(dev);
   33548:	e13ffc17 	ldw	r4,-16(fp)
   3354c:	00334280 	call	33428 <altera_avalon_mailbox_status>
   33550:	e0bffb15 	stw	r2,-20(fp)
                timeout--;
   33554:	e0bffe17 	ldw	r2,-8(fp)
   33558:	10bfffc4 	addi	r2,r2,-1
   3355c:	e0bffe15 	stw	r2,-8(fp)
            } while (mbox_status && (timeout != 0));
   33560:	e0bffb17 	ldw	r2,-20(fp)
   33564:	10000226 	beq	r2,zero,33570 <altera_avalon_mailbox_send+0xd0>
   33568:	e0bffe17 	ldw	r2,-8(fp)
   3356c:	103ff61e 	bne	r2,zero,33548 <__alt_mem_SDRAM_controller+0xfc033548>
            if (timeout == 0)
   33570:	e0bffe17 	ldw	r2,-8(fp)
   33574:	1000021e 	bne	r2,zero,33580 <altera_avalon_mailbox_send+0xe0>
            {    /* Timeout occur or fail sending */
                return -ETIME;
   33578:	00bff084 	movi	r2,-62
   3357c:	00001706 	br	335dc <altera_avalon_mailbox_send+0x13c>
            }
        }
        status = altera_avalon_mailbox_post (dev, message);
   33580:	e17ffd17 	ldw	r5,-12(fp)
   33584:	e13ffc17 	ldw	r4,-16(fp)
   33588:	0032e840 	call	32e84 <altera_avalon_mailbox_post>
   3358c:	e0bff915 	stw	r2,-28(fp)
        /* Clear mailbox message to NULL after message being posted */
        dev->mbox_msg = NULL;
   33590:	e0bffc17 	ldw	r2,-16(fp)
   33594:	10001015 	stw	zero,64(r2)
        /* Release lock when message posted */
        dev->lock =0;
   33598:	e0bffc17 	ldw	r2,-16(fp)
   3359c:	10001105 	stb	zero,68(r2)
        return status;
   335a0:	e0bff917 	ldw	r2,-28(fp)
   335a4:	00000d06 	br	335dc <altera_avalon_mailbox_send+0x13c>
    } else
    {
        /* Enable Sender interrupt */
        data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST) |
   335a8:	e0bffc17 	ldw	r2,-16(fp)
   335ac:	10800a17 	ldw	r2,40(r2)
   335b0:	10800304 	addi	r2,r2,12
   335b4:	10800037 	ldwio	r2,0(r2)
   335b8:	10800094 	ori	r2,r2,2
   335bc:	e0bffa15 	stw	r2,-24(fp)
                   (ALTERA_AVALON_MAILBOX_SIMPLE_INTR_SPACE_MSK);
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
   335c0:	e0bffc17 	ldw	r2,-16(fp)
   335c4:	10800a17 	ldw	r2,40(r2)
   335c8:	10800304 	addi	r2,r2,12
   335cc:	1007883a 	mov	r3,r2
   335d0:	e0bffa17 	ldw	r2,-24(fp)
   335d4:	18800035 	stwio	r2,0(r3)
    }
  return 0;
   335d8:	0005883a 	mov	r2,zero
}
   335dc:	e037883a 	mov	sp,fp
   335e0:	dfc00117 	ldw	ra,4(sp)
   335e4:	df000017 	ldw	fp,0(sp)
   335e8:	dec00204 	addi	sp,sp,8
   335ec:	f800283a 	ret

000335f0 <altera_avalon_mailbox_retrieve_poll>:
 * If a message is available in the mailbox return it otherwise return NULL
 * This function is blocking
 *
 */
int altera_avalon_mailbox_retrieve_poll (altera_avalon_mailbox_dev *dev, alt_u32 *message, alt_u32 timeout)
{
   335f0:	defff904 	addi	sp,sp,-28
   335f4:	dfc00615 	stw	ra,24(sp)
   335f8:	df000515 	stw	fp,20(sp)
   335fc:	df000504 	addi	fp,sp,20
   33600:	e13ffd15 	stw	r4,-12(fp)
   33604:	e17ffe15 	stw	r5,-8(fp)
   33608:	e1bfff15 	stw	r6,-4(fp)
    alt_u32 status = 0;
   3360c:	e03ffb15 	stw	zero,-20(fp)
    alt_u32 data;

    if (dev != NULL && message != NULL)
   33610:	e0bffd17 	ldw	r2,-12(fp)
   33614:	10003a26 	beq	r2,zero,33700 <altera_avalon_mailbox_retrieve_poll+0x110>
   33618:	e0bffe17 	ldw	r2,-8(fp)
   3361c:	10003826 	beq	r2,zero,33700 <altera_avalon_mailbox_retrieve_poll+0x110>
    {
        /* Mask receiver mailbox interrupt when in polling mode */
        data = IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST);
   33620:	e0bffd17 	ldw	r2,-12(fp)
   33624:	10800a17 	ldw	r2,40(r2)
   33628:	10800304 	addi	r2,r2,12
   3362c:	10800037 	ldwio	r2,0(r2)
   33630:	e0bffc15 	stw	r2,-16(fp)
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST,
   33634:	e0bffd17 	ldw	r2,-12(fp)
   33638:	10800a17 	ldw	r2,40(r2)
   3363c:	10800304 	addi	r2,r2,12
   33640:	1009883a 	mov	r4,r2
   33644:	e0fffc17 	ldw	r3,-16(fp)
   33648:	00bfff84 	movi	r2,-2
   3364c:	1884703a 	and	r2,r3,r2
   33650:	20800035 	stwio	r2,0(r4)
            (data & (~ALTERA_AVALON_MAILBOX_SIMPLE_INTR_PEN_MSK)));


        /* If timeout is '0', poll till message availabe in mailbox */
        if (timeout == 0)
   33654:	e0bfff17 	ldw	r2,-4(fp)
   33658:	1000061e 	bne	r2,zero,33674 <altera_avalon_mailbox_retrieve_poll+0x84>
        {
            do
            {
                status = altera_avalon_mailbox_status (dev);
   3365c:	e13ffd17 	ldw	r4,-12(fp)
   33660:	00334280 	call	33428 <altera_avalon_mailbox_status>
   33664:	e0bffb15 	stw	r2,-20(fp)
            } while (status == 0);
   33668:	e0bffb17 	ldw	r2,-20(fp)
   3366c:	103ffb26 	beq	r2,zero,3365c <__alt_mem_SDRAM_controller+0xfc03365c>
   33670:	00000a06 	br	3369c <altera_avalon_mailbox_retrieve_poll+0xac>
        } else
        {
            do
            {
                 status = altera_avalon_mailbox_status (dev);
   33674:	e13ffd17 	ldw	r4,-12(fp)
   33678:	00334280 	call	33428 <altera_avalon_mailbox_status>
   3367c:	e0bffb15 	stw	r2,-20(fp)
                 timeout-- ;
   33680:	e0bfff17 	ldw	r2,-4(fp)
   33684:	10bfffc4 	addi	r2,r2,-1
   33688:	e0bfff15 	stw	r2,-4(fp)
            } while ((status == 0) && timeout);
   3368c:	e0bffb17 	ldw	r2,-20(fp)
   33690:	1000021e 	bne	r2,zero,3369c <altera_avalon_mailbox_retrieve_poll+0xac>
   33694:	e0bfff17 	ldw	r2,-4(fp)
   33698:	103ff61e 	bne	r2,zero,33674 <__alt_mem_SDRAM_controller+0xfc033674>
        }

        /* if timeout, status remain 0 */
        if (status)
   3369c:	e0bffb17 	ldw	r2,-20(fp)
   336a0:	10000d26 	beq	r2,zero,336d8 <altera_avalon_mailbox_retrieve_poll+0xe8>
        {
            message[1] = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_PTR_OFST));
   336a4:	e0bffe17 	ldw	r2,-8(fp)
   336a8:	10800104 	addi	r2,r2,4
   336ac:	e0fffd17 	ldw	r3,-12(fp)
   336b0:	18c00a17 	ldw	r3,40(r3)
   336b4:	18c00104 	addi	r3,r3,4
   336b8:	18c00037 	ldwio	r3,0(r3)
   336bc:	10c00015 	stw	r3,0(r2)
            message[0] = (IORD(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_CMD_OFST));
   336c0:	e0bffd17 	ldw	r2,-12(fp)
   336c4:	10800a17 	ldw	r2,40(r2)
   336c8:	10800037 	ldwio	r2,0(r2)
   336cc:	1007883a 	mov	r3,r2
   336d0:	e0bffe17 	ldw	r2,-8(fp)
   336d4:	10c00015 	stw	r3,0(r2)
        }
        /* Restore original state of interrupt mask */
        IOWR(dev->base, ALTERA_AVALON_MAILBOX_SIMPLE_INTR_OFST, data);
   336d8:	e0bffd17 	ldw	r2,-12(fp)
   336dc:	10800a17 	ldw	r2,40(r2)
   336e0:	10800304 	addi	r2,r2,12
   336e4:	1007883a 	mov	r3,r2
   336e8:	e0bffc17 	ldw	r2,-16(fp)
   336ec:	18800035 	stwio	r2,0(r3)

        /* Return success on complete retrieve message
         * otherwise timeout and exit with error
         */
        if (status)
   336f0:	e0bffb17 	ldw	r2,-20(fp)
   336f4:	10000226 	beq	r2,zero,33700 <altera_avalon_mailbox_retrieve_poll+0x110>
          return 0;
   336f8:	0005883a 	mov	r2,zero
   336fc:	00000606 	br	33718 <altera_avalon_mailbox_retrieve_poll+0x128>
      }
      /* Invalid Null dev and message */
      message[1] = 0;
   33700:	e0bffe17 	ldw	r2,-8(fp)
   33704:	10800104 	addi	r2,r2,4
   33708:	10000015 	stw	zero,0(r2)
      message[0] = 0;
   3370c:	e0bffe17 	ldw	r2,-8(fp)
   33710:	10000015 	stw	zero,0(r2)
      return -EINVAL;
   33714:	00bffa84 	movi	r2,-22
}
   33718:	e037883a 	mov	sp,fp
   3371c:	dfc00117 	ldw	ra,4(sp)
   33720:	df000017 	ldw	fp,0(sp)
   33724:	dec00204 	addi	sp,sp,8
   33728:	f800283a 	ret

0003372c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   3372c:	defffe04 	addi	sp,sp,-8
   33730:	dfc00115 	stw	ra,4(sp)
   33734:	df000015 	stw	fp,0(sp)
   33738:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   3373c:	d0a00e17 	ldw	r2,-32712(gp)
   33740:	10000326 	beq	r2,zero,33750 <alt_get_errno+0x24>
   33744:	d0a00e17 	ldw	r2,-32712(gp)
   33748:	103ee83a 	callr	r2
   3374c:	00000106 	br	33754 <alt_get_errno+0x28>
   33750:	d0a71f04 	addi	r2,gp,-25476
}
   33754:	e037883a 	mov	sp,fp
   33758:	dfc00117 	ldw	ra,4(sp)
   3375c:	df000017 	ldw	fp,0(sp)
   33760:	dec00204 	addi	sp,sp,8
   33764:	f800283a 	ret

00033768 <alt_mutex_trylock>:
 *
 * returns 0 on success -1 otherwise
 *
 */
static int alt_mutex_trylock( alt_mutex_dev* dev, alt_u32 value )
{
   33768:	defff904 	addi	sp,sp,-28
   3376c:	df000615 	stw	fp,24(sp)
   33770:	df000604 	addi	fp,sp,24
   33774:	e13ffe15 	stw	r4,-8(fp)
   33778:	e17fff15 	stw	r5,-4(fp)
  alt_u32 id, data, check;
  int ret_code = -1;
   3377c:	00bfffc4 	movi	r2,-1
   33780:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_READ_CPUID(id);
   33784:	0005317a 	rdctl	r2,cpuid
   33788:	e0bffb15 	stw	r2,-20(fp)

  /* the data we want the mutex to hold */
  data = (id << ALTERA_AVALON_MUTEX_MUTEX_OWNER_OFST) | value;
   3378c:	e0bffb17 	ldw	r2,-20(fp)
   33790:	1006943a 	slli	r3,r2,16
   33794:	e0bfff17 	ldw	r2,-4(fp)
   33798:	1884b03a 	or	r2,r3,r2
   3379c:	e0bffc15 	stw	r2,-16(fp)

  /* attempt to write to the mutex */
  IOWR_ALTERA_AVALON_MUTEX_MUTEX(dev->mutex_base, data);
   337a0:	e0bffe17 	ldw	r2,-8(fp)
   337a4:	10800317 	ldw	r2,12(r2)
   337a8:	e0fffc17 	ldw	r3,-16(fp)
   337ac:	10c00035 	stwio	r3,0(r2)
  
  check = IORD_ALTERA_AVALON_MUTEX_MUTEX(dev->mutex_base);
   337b0:	e0bffe17 	ldw	r2,-8(fp)
   337b4:	10800317 	ldw	r2,12(r2)
   337b8:	10800037 	ldwio	r2,0(r2)
   337bc:	e0bffd15 	stw	r2,-12(fp)

  if ( check == data)
   337c0:	e0fffd17 	ldw	r3,-12(fp)
   337c4:	e0bffc17 	ldw	r2,-16(fp)
   337c8:	1880011e 	bne	r3,r2,337d0 <alt_mutex_trylock+0x68>
  {
    ret_code = 0;
   337cc:	e03ffa15 	stw	zero,-24(fp)
  }

  return ret_code;
   337d0:	e0bffa17 	ldw	r2,-24(fp)
}
   337d4:	e037883a 	mov	sp,fp
   337d8:	df000017 	ldw	fp,0(sp)
   337dc:	dec00104 	addi	sp,sp,4
   337e0:	f800283a 	ret

000337e4 <altera_avalon_mutex_open>:
 * Search the list of registered mutexes for one with the supplied name.
 *
 * The return value will be NULL on failure, and non-NULL otherwise.
 */
alt_mutex_dev* altera_avalon_mutex_open (const char* name)
{
   337e4:	defffc04 	addi	sp,sp,-16
   337e8:	dfc00315 	stw	ra,12(sp)
   337ec:	df000215 	stw	fp,8(sp)
   337f0:	df000204 	addi	fp,sp,8
   337f4:	e13fff15 	stw	r4,-4(fp)
  alt_mutex_dev* dev;

  dev = (alt_mutex_dev*) alt_find_dev (name, &alt_mutex_list);
   337f8:	d1601204 	addi	r5,gp,-32696
   337fc:	e13fff17 	ldw	r4,-4(fp)
   33800:	0034df80 	call	34df8 <alt_find_dev>
   33804:	e0bffe15 	stw	r2,-8(fp)

  if (NULL == dev)
   33808:	e0bffe17 	ldw	r2,-8(fp)
   3380c:	1000041e 	bne	r2,zero,33820 <altera_avalon_mutex_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
   33810:	003372c0 	call	3372c <alt_get_errno>
   33814:	1007883a 	mov	r3,r2
   33818:	008004c4 	movi	r2,19
   3381c:	18800015 	stw	r2,0(r3)
  }

  return dev;
   33820:	e0bffe17 	ldw	r2,-8(fp)
}
   33824:	e037883a 	mov	sp,fp
   33828:	dfc00117 	ldw	ra,4(sp)
   3382c:	df000017 	ldw	fp,0(sp)
   33830:	dec00204 	addi	sp,sp,8
   33834:	f800283a 	ret

00033838 <altera_avalon_mutex_close>:
 * altera_avalon_mutex_close - Does nothing at the moment, but included for 
 * completeness
 *
 */
void altera_avalon_mutex_close (alt_mutex_dev* dev)
{
   33838:	defffe04 	addi	sp,sp,-8
   3383c:	df000115 	stw	fp,4(sp)
   33840:	df000104 	addi	fp,sp,4
   33844:	e13fff15 	stw	r4,-4(fp)
  return;
   33848:	0001883a 	nop
}
   3384c:	e037883a 	mov	sp,fp
   33850:	df000017 	ldw	fp,0(sp)
   33854:	dec00104 	addi	sp,sp,4
   33858:	f800283a 	ret

0003385c <altera_avalon_mutex_lock>:
/*
 * altera_avalon_mutex_lock - Lock the hardware mutex
 *
 */
void altera_avalon_mutex_lock( alt_mutex_dev* dev, alt_u32 value )
{
   3385c:	defffc04 	addi	sp,sp,-16
   33860:	dfc00315 	stw	ra,12(sp)
   33864:	df000215 	stw	fp,8(sp)
   33868:	df000204 	addi	fp,sp,8
   3386c:	e13ffe15 	stw	r4,-8(fp)
   33870:	e17fff15 	stw	r5,-4(fp)
   * semaphore. This ensures that reading from the device is thread-safe.
   */

  ALT_SEM_PEND (dev->lock, 0);

  while ( alt_mutex_trylock( dev, value ) != 0);
   33874:	0001883a 	nop
   33878:	e17fff17 	ldw	r5,-4(fp)
   3387c:	e13ffe17 	ldw	r4,-8(fp)
   33880:	00337680 	call	33768 <alt_mutex_trylock>
   33884:	103ffc1e 	bne	r2,zero,33878 <__alt_mem_SDRAM_controller+0xfc033878>
}
   33888:	0001883a 	nop
   3388c:	e037883a 	mov	sp,fp
   33890:	dfc00117 	ldw	ra,4(sp)
   33894:	df000017 	ldw	fp,0(sp)
   33898:	dec00204 	addi	sp,sp,8
   3389c:	f800283a 	ret

000338a0 <altera_avalon_mutex_trylock>:
 *
 * returns 0 on success -1 otherwise
 *
 */
int altera_avalon_mutex_trylock( alt_mutex_dev* dev, alt_u32 value )
{
   338a0:	defffa04 	addi	sp,sp,-24
   338a4:	dfc00515 	stw	ra,20(sp)
   338a8:	df000415 	stw	fp,16(sp)
   338ac:	df000404 	addi	fp,sp,16
   338b0:	e13ffd15 	stw	r4,-12(fp)
   338b4:	e17ffe15 	stw	r5,-8(fp)
  int ret_code;

  ALT_SEM_PEND (dev->lock, 0);

  ret_code = alt_mutex_trylock( dev, value);
   338b8:	e17ffe17 	ldw	r5,-8(fp)
   338bc:	e13ffd17 	ldw	r4,-12(fp)
   338c0:	00337680 	call	33768 <alt_mutex_trylock>
   338c4:	e0bffc15 	stw	r2,-16(fp)
  if (ret_code)
  {
    ALT_SEM_POST (dev->lock);
  }

  return ret_code;
   338c8:	e0bffc17 	ldw	r2,-16(fp)
}
   338cc:	e037883a 	mov	sp,fp
   338d0:	dfc00117 	ldw	ra,4(sp)
   338d4:	df000017 	ldw	fp,0(sp)
   338d8:	dec00204 	addi	sp,sp,8
   338dc:	f800283a 	ret

000338e0 <altera_avalon_mutex_unlock>:
 * This function does not check that you own the Mutex if you try to release
 * a Mutex you do not own the behaviour is undefined
 *
 */
void altera_avalon_mutex_unlock( alt_mutex_dev* dev )
{
   338e0:	defffd04 	addi	sp,sp,-12
   338e4:	df000215 	stw	fp,8(sp)
   338e8:	df000204 	addi	fp,sp,8
   338ec:	e13fff15 	stw	r4,-4(fp)
  alt_u32 id;
  NIOS2_READ_CPUID(id);
   338f0:	0005317a 	rdctl	r2,cpuid
   338f4:	e0bffe15 	stw	r2,-8(fp)

  /*
  * This Mutex has been claimed and released since Reset so clear the Reset bit
  * This MUST happen before we release the MUTEX
  */
  IOWR_ALTERA_AVALON_MUTEX_RESET(dev->mutex_base, 
   338f8:	e0bfff17 	ldw	r2,-4(fp)
   338fc:	10800317 	ldw	r2,12(r2)
   33900:	10800104 	addi	r2,r2,4
   33904:	00c00044 	movi	r3,1
   33908:	10c00035 	stwio	r3,0(r2)
                                  ALTERA_AVALON_MUTEX_RESET_RESET_MSK);
  IOWR_ALTERA_AVALON_MUTEX_MUTEX(dev->mutex_base, 
   3390c:	e0bfff17 	ldw	r2,-4(fp)
   33910:	10800317 	ldw	r2,12(r2)
   33914:	e0fffe17 	ldw	r3,-8(fp)
   33918:	1806943a 	slli	r3,r3,16
   3391c:	10c00035 	stwio	r3,0(r2)

  /*
  * Now that access to the hardware Mutex is complete, release the thread lock
  */
  ALT_SEM_POST (dev->lock);
}
   33920:	0001883a 	nop
   33924:	e037883a 	mov	sp,fp
   33928:	df000017 	ldw	fp,0(sp)
   3392c:	dec00104 	addi	sp,sp,4
   33930:	f800283a 	ret

00033934 <altera_avalon_mutex_is_mine>:
 * altera_avalon_mutex_is_mine - Do I own the Mutex?
 *
 *  returns non zero if the mutex is owned by this CPU
 */
int altera_avalon_mutex_is_mine( alt_mutex_dev* dev )
{
   33934:	defff904 	addi	sp,sp,-28
   33938:	df000615 	stw	fp,24(sp)
   3393c:	df000604 	addi	fp,sp,24
   33940:	e13fff15 	stw	r4,-4(fp)
  alt_u32 id, data, owner, value;
  int ret_code = 0;
   33944:	e03ffa15 	stw	zero,-24(fp)

  NIOS2_READ_CPUID(id);
   33948:	0005317a 	rdctl	r2,cpuid
   3394c:	e0bffb15 	stw	r2,-20(fp)

  /* retrieve the contents of the mutex */
  data = IORD_ALTERA_AVALON_MUTEX_MUTEX(dev->mutex_base);
   33950:	e0bfff17 	ldw	r2,-4(fp)
   33954:	10800317 	ldw	r2,12(r2)
   33958:	10800037 	ldwio	r2,0(r2)
   3395c:	e0bffc15 	stw	r2,-16(fp)
  owner = (data & ALTERA_AVALON_MUTEX_MUTEX_OWNER_MSK) >> 
   33960:	e0bffc17 	ldw	r2,-16(fp)
   33964:	1004d43a 	srli	r2,r2,16
   33968:	e0bffd15 	stw	r2,-12(fp)
              ALTERA_AVALON_MUTEX_MUTEX_OWNER_OFST;

  if (owner == id) 
   3396c:	e0fffd17 	ldw	r3,-12(fp)
   33970:	e0bffb17 	ldw	r2,-20(fp)
   33974:	1880071e 	bne	r3,r2,33994 <altera_avalon_mutex_is_mine+0x60>
  {
    value = (data & ALTERA_AVALON_MUTEX_MUTEX_VALUE_MSK) >> 
   33978:	e0bffc17 	ldw	r2,-16(fp)
   3397c:	10bfffcc 	andi	r2,r2,65535
   33980:	e0bffe15 	stw	r2,-8(fp)
                  ALTERA_AVALON_MUTEX_MUTEX_VALUE_OFST;
    if (value != 0)
   33984:	e0bffe17 	ldw	r2,-8(fp)
   33988:	10000226 	beq	r2,zero,33994 <altera_avalon_mutex_is_mine+0x60>
    {
      ret_code = 1;
   3398c:	00800044 	movi	r2,1
   33990:	e0bffa15 	stw	r2,-24(fp)
    }
  }

  return ret_code;
   33994:	e0bffa17 	ldw	r2,-24(fp)
}
   33998:	e037883a 	mov	sp,fp
   3399c:	df000017 	ldw	fp,0(sp)
   339a0:	dec00104 	addi	sp,sp,4
   339a4:	f800283a 	ret

000339a8 <altera_avalon_mutex_first_lock>:
 *
 * Has this Mutex been released since reset if not return 1
 * otherwise return 0
 */
int altera_avalon_mutex_first_lock( alt_mutex_dev* dev )
{
   339a8:	defffc04 	addi	sp,sp,-16
   339ac:	df000315 	stw	fp,12(sp)
   339b0:	df000304 	addi	fp,sp,12
   339b4:	e13fff15 	stw	r4,-4(fp)
  alt_u32 data;
  int ret_code = 0;
   339b8:	e03ffd15 	stw	zero,-12(fp)

  data = IORD_ALTERA_AVALON_MUTEX_RESET(dev->mutex_base);
   339bc:	e0bfff17 	ldw	r2,-4(fp)
   339c0:	10800317 	ldw	r2,12(r2)
   339c4:	10800104 	addi	r2,r2,4
   339c8:	10800037 	ldwio	r2,0(r2)
   339cc:	e0bffe15 	stw	r2,-8(fp)

  if (data & ALTERA_AVALON_MUTEX_RESET_RESET_MSK) 
   339d0:	e0bffe17 	ldw	r2,-8(fp)
   339d4:	1080004c 	andi	r2,r2,1
   339d8:	10000226 	beq	r2,zero,339e4 <altera_avalon_mutex_first_lock+0x3c>
  {
    ret_code = 1;
   339dc:	00800044 	movi	r2,1
   339e0:	e0bffd15 	stw	r2,-12(fp)
  }

  return ret_code;
   339e4:	e0bffd17 	ldw	r2,-12(fp)
}
   339e8:	e037883a 	mov	sp,fp
   339ec:	df000017 	ldw	fp,0(sp)
   339f0:	dec00104 	addi	sp,sp,4
   339f4:	f800283a 	ret

000339f8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   339f8:	defff904 	addi	sp,sp,-28
   339fc:	dfc00615 	stw	ra,24(sp)
   33a00:	df000515 	stw	fp,20(sp)
   33a04:	df000504 	addi	fp,sp,20
   33a08:	e13ffe15 	stw	r4,-8(fp)
   33a0c:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   33a10:	0007883a 	mov	r3,zero
   33a14:	e0bffe17 	ldw	r2,-8(fp)
   33a18:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   33a1c:	e0bffe17 	ldw	r2,-8(fp)
   33a20:	10800104 	addi	r2,r2,4
   33a24:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   33a28:	0005303a 	rdctl	r2,status
   33a2c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   33a30:	e0fffc17 	ldw	r3,-16(fp)
   33a34:	00bfff84 	movi	r2,-2
   33a38:	1884703a 	and	r2,r3,r2
   33a3c:	1001703a 	wrctl	status,r2
  
  return context;
   33a40:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   33a44:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
   33a48:	003546c0 	call	3546c <alt_tick>
   33a4c:	e0bffb17 	ldw	r2,-20(fp)
   33a50:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   33a54:	e0bffd17 	ldw	r2,-12(fp)
   33a58:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   33a5c:	0001883a 	nop
   33a60:	e037883a 	mov	sp,fp
   33a64:	dfc00117 	ldw	ra,4(sp)
   33a68:	df000017 	ldw	fp,0(sp)
   33a6c:	dec00204 	addi	sp,sp,8
   33a70:	f800283a 	ret

00033a74 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   33a74:	defff904 	addi	sp,sp,-28
   33a78:	dfc00615 	stw	ra,24(sp)
   33a7c:	df000515 	stw	fp,20(sp)
   33a80:	df000504 	addi	fp,sp,20
   33a84:	e13ffc15 	stw	r4,-16(fp)
   33a88:	e17ffd15 	stw	r5,-12(fp)
   33a8c:	e1bffe15 	stw	r6,-8(fp)
   33a90:	e1ffff15 	stw	r7,-4(fp)
   33a94:	e0bfff17 	ldw	r2,-4(fp)
   33a98:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   33a9c:	d0a72417 	ldw	r2,-25456(gp)
   33aa0:	1000021e 	bne	r2,zero,33aac <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   33aa4:	e0bffb17 	ldw	r2,-20(fp)
   33aa8:	d0a72415 	stw	r2,-25456(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   33aac:	e0bffc17 	ldw	r2,-16(fp)
   33ab0:	10800104 	addi	r2,r2,4
   33ab4:	00c001c4 	movi	r3,7
   33ab8:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   33abc:	018000f4 	movhi	r6,3
   33ac0:	318e7e04 	addi	r6,r6,14840
   33ac4:	e17ffc17 	ldw	r5,-16(fp)
   33ac8:	e13ffe17 	ldw	r4,-8(fp)
   33acc:	0034ffc0 	call	34ffc <alt_irq_register>
#endif  
}
   33ad0:	0001883a 	nop
   33ad4:	e037883a 	mov	sp,fp
   33ad8:	dfc00117 	ldw	ra,4(sp)
   33adc:	df000017 	ldw	fp,0(sp)
   33ae0:	dec00204 	addi	sp,sp,8
   33ae4:	f800283a 	ret

00033ae8 <alt_up_audio_open_dev>:
#include "altera_up_avalon_audio_regs.h"

///////////////////////////////////////////////////////////////////////////
// Direct functions
alt_up_audio_dev* alt_up_audio_open_dev(const char* name)
{
   33ae8:	defffc04 	addi	sp,sp,-16
   33aec:	dfc00315 	stw	ra,12(sp)
   33af0:	df000215 	stw	fp,8(sp)
   33af4:	df000204 	addi	fp,sp,8
   33af8:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_audio_dev *dev = (alt_up_audio_dev*)alt_find_dev(name, &alt_dev_list);
   33afc:	d1600b04 	addi	r5,gp,-32724
   33b00:	e13fff17 	ldw	r4,-4(fp)
   33b04:	0034df80 	call	34df8 <alt_find_dev>
   33b08:	e0bffe15 	stw	r2,-8(fp)
  return dev;
   33b0c:	e0bffe17 	ldw	r2,-8(fp)
}
   33b10:	e037883a 	mov	sp,fp
   33b14:	dfc00117 	ldw	ra,4(sp)
   33b18:	df000017 	ldw	fp,0(sp)
   33b1c:	dec00204 	addi	sp,sp,8
   33b20:	f800283a 	ret

00033b24 <alt_up_audio_enable_read_interrupt>:

void alt_up_audio_enable_read_interrupt(alt_up_audio_dev *audio)
{
   33b24:	defffd04 	addi	sp,sp,-12
   33b28:	df000215 	stw	fp,8(sp)
   33b2c:	df000204 	addi	fp,sp,8
   33b30:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
   33b34:	e0bfff17 	ldw	r2,-4(fp)
   33b38:	10800a17 	ldw	r2,40(r2)
   33b3c:	10800037 	ldwio	r2,0(r2)
   33b40:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_AUDIO_CONTROL_RE_MSK;
   33b44:	e0bffe17 	ldw	r2,-8(fp)
   33b48:	10800054 	ori	r2,r2,1
   33b4c:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
   33b50:	e0bfff17 	ldw	r2,-4(fp)
   33b54:	10800a17 	ldw	r2,40(r2)
   33b58:	1007883a 	mov	r3,r2
   33b5c:	e0bffe17 	ldw	r2,-8(fp)
   33b60:	18800035 	stwio	r2,0(r3)
}
   33b64:	0001883a 	nop
   33b68:	e037883a 	mov	sp,fp
   33b6c:	df000017 	ldw	fp,0(sp)
   33b70:	dec00104 	addi	sp,sp,4
   33b74:	f800283a 	ret

00033b78 <alt_up_audio_disable_read_interrupt>:

void alt_up_audio_disable_read_interrupt(alt_up_audio_dev *audio)
{
   33b78:	defffd04 	addi	sp,sp,-12
   33b7c:	df000215 	stw	fp,8(sp)
   33b80:	df000204 	addi	fp,sp,8
   33b84:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
   33b88:	e0bfff17 	ldw	r2,-4(fp)
   33b8c:	10800a17 	ldw	r2,40(r2)
   33b90:	10800037 	ldwio	r2,0(r2)
   33b94:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_AUDIO_CONTROL_RE_MSK;
   33b98:	e0fffe17 	ldw	r3,-8(fp)
   33b9c:	00bfff84 	movi	r2,-2
   33ba0:	1884703a 	and	r2,r3,r2
   33ba4:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
   33ba8:	e0bfff17 	ldw	r2,-4(fp)
   33bac:	10800a17 	ldw	r2,40(r2)
   33bb0:	1007883a 	mov	r3,r2
   33bb4:	e0bffe17 	ldw	r2,-8(fp)
   33bb8:	18800035 	stwio	r2,0(r3)
}
   33bbc:	0001883a 	nop
   33bc0:	e037883a 	mov	sp,fp
   33bc4:	df000017 	ldw	fp,0(sp)
   33bc8:	dec00104 	addi	sp,sp,4
   33bcc:	f800283a 	ret

00033bd0 <alt_up_audio_enable_write_interrupt>:

void alt_up_audio_enable_write_interrupt(alt_up_audio_dev *audio)
{
   33bd0:	defffd04 	addi	sp,sp,-12
   33bd4:	df000215 	stw	fp,8(sp)
   33bd8:	df000204 	addi	fp,sp,8
   33bdc:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
   33be0:	e0bfff17 	ldw	r2,-4(fp)
   33be4:	10800a17 	ldw	r2,40(r2)
   33be8:	10800037 	ldwio	r2,0(r2)
   33bec:	e0bffe15 	stw	r2,-8(fp)
	// set WE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_AUDIO_CONTROL_WE_MSK;
   33bf0:	e0bffe17 	ldw	r2,-8(fp)
   33bf4:	10800094 	ori	r2,r2,2
   33bf8:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
   33bfc:	e0bfff17 	ldw	r2,-4(fp)
   33c00:	10800a17 	ldw	r2,40(r2)
   33c04:	1007883a 	mov	r3,r2
   33c08:	e0bffe17 	ldw	r2,-8(fp)
   33c0c:	18800035 	stwio	r2,0(r3)
}
   33c10:	0001883a 	nop
   33c14:	e037883a 	mov	sp,fp
   33c18:	df000017 	ldw	fp,0(sp)
   33c1c:	dec00104 	addi	sp,sp,4
   33c20:	f800283a 	ret

00033c24 <alt_up_audio_disable_write_interrupt>:

void alt_up_audio_disable_write_interrupt(alt_up_audio_dev *audio)
{
   33c24:	defffd04 	addi	sp,sp,-12
   33c28:	df000215 	stw	fp,8(sp)
   33c2c:	df000204 	addi	fp,sp,8
   33c30:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
   33c34:	e0bfff17 	ldw	r2,-4(fp)
   33c38:	10800a17 	ldw	r2,40(r2)
   33c3c:	10800037 	ldwio	r2,0(r2)
   33c40:	e0bffe15 	stw	r2,-8(fp)
	// set WE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_AUDIO_CONTROL_WE_MSK;
   33c44:	e0fffe17 	ldw	r3,-8(fp)
   33c48:	00bfff44 	movi	r2,-3
   33c4c:	1884703a 	and	r2,r3,r2
   33c50:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
   33c54:	e0bfff17 	ldw	r2,-4(fp)
   33c58:	10800a17 	ldw	r2,40(r2)
   33c5c:	1007883a 	mov	r3,r2
   33c60:	e0bffe17 	ldw	r2,-8(fp)
   33c64:	18800035 	stwio	r2,0(r3)
}
   33c68:	0001883a 	nop
   33c6c:	e037883a 	mov	sp,fp
   33c70:	df000017 	ldw	fp,0(sp)
   33c74:	dec00104 	addi	sp,sp,4
   33c78:	f800283a 	ret

00033c7c <alt_up_audio_read_interrupt_pending>:

int alt_up_audio_read_interrupt_pending(alt_up_audio_dev *audio)
{
   33c7c:	defffd04 	addi	sp,sp,-12
   33c80:	df000215 	stw	fp,8(sp)
   33c84:	df000204 	addi	fp,sp,8
   33c88:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
   33c8c:	e0bfff17 	ldw	r2,-4(fp)
   33c90:	10800a17 	ldw	r2,40(r2)
   33c94:	10800037 	ldwio	r2,0(r2)
   33c98:	e0bffe15 	stw	r2,-8(fp)
	// return 1 if RI is set to 1
	return ( (ctrl_reg & ALT_UP_AUDIO_CONTROL_RI_MSK) ? 1 : 0 );
   33c9c:	e0bffe17 	ldw	r2,-8(fp)
   33ca0:	1080400c 	andi	r2,r2,256
   33ca4:	1004c03a 	cmpne	r2,r2,zero
   33ca8:	10803fcc 	andi	r2,r2,255
}
   33cac:	e037883a 	mov	sp,fp
   33cb0:	df000017 	ldw	fp,0(sp)
   33cb4:	dec00104 	addi	sp,sp,4
   33cb8:	f800283a 	ret

00033cbc <alt_up_audio_write_interrupt_pending>:

int alt_up_audio_write_interrupt_pending(alt_up_audio_dev *audio)
{
   33cbc:	defffd04 	addi	sp,sp,-12
   33cc0:	df000215 	stw	fp,8(sp)
   33cc4:	df000204 	addi	fp,sp,8
   33cc8:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
   33ccc:	e0bfff17 	ldw	r2,-4(fp)
   33cd0:	10800a17 	ldw	r2,40(r2)
   33cd4:	10800037 	ldwio	r2,0(r2)
   33cd8:	e0bffe15 	stw	r2,-8(fp)
	// return the WI value
	return ( (ctrl_reg & ALT_UP_AUDIO_CONTROL_WI_MSK) ? 1 : 0 );
   33cdc:	e0bffe17 	ldw	r2,-8(fp)
   33ce0:	1080800c 	andi	r2,r2,512
   33ce4:	1004c03a 	cmpne	r2,r2,zero
   33ce8:	10803fcc 	andi	r2,r2,255
}
   33cec:	e037883a 	mov	sp,fp
   33cf0:	df000017 	ldw	fp,0(sp)
   33cf4:	dec00104 	addi	sp,sp,4
   33cf8:	f800283a 	ret

00033cfc <alt_up_audio_reset_audio_core>:

void alt_up_audio_reset_audio_core(alt_up_audio_dev *audio)
{
   33cfc:	defffd04 	addi	sp,sp,-12
   33d00:	df000215 	stw	fp,8(sp)
   33d04:	df000204 	addi	fp,sp,8
   33d08:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
   33d0c:	e0bfff17 	ldw	r2,-4(fp)
   33d10:	10800a17 	ldw	r2,40(r2)
   33d14:	10800037 	ldwio	r2,0(r2)
   33d18:	e0bffe15 	stw	r2,-8(fp)
	// set CR and CW to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_AUDIO_CONTROL_CR_MSK;
   33d1c:	e0bffe17 	ldw	r2,-8(fp)
   33d20:	10800114 	ori	r2,r2,4
   33d24:	e0bffe15 	stw	r2,-8(fp)
	ctrl_reg |= ALT_UP_AUDIO_CONTROL_CW_MSK;
   33d28:	e0bffe17 	ldw	r2,-8(fp)
   33d2c:	10800214 	ori	r2,r2,8
   33d30:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
   33d34:	e0bfff17 	ldw	r2,-4(fp)
   33d38:	10800a17 	ldw	r2,40(r2)
   33d3c:	1007883a 	mov	r3,r2
   33d40:	e0bffe17 	ldw	r2,-8(fp)
   33d44:	18800035 	stwio	r2,0(r3)
	// set CR and CW to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_AUDIO_CONTROL_CR_MSK;
   33d48:	e0fffe17 	ldw	r3,-8(fp)
   33d4c:	00bffec4 	movi	r2,-5
   33d50:	1884703a 	and	r2,r3,r2
   33d54:	e0bffe15 	stw	r2,-8(fp)
	ctrl_reg &= ~ALT_UP_AUDIO_CONTROL_CW_MSK;
   33d58:	e0fffe17 	ldw	r3,-8(fp)
   33d5c:	00bffdc4 	movi	r2,-9
   33d60:	1884703a 	and	r2,r3,r2
   33d64:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
   33d68:	e0bfff17 	ldw	r2,-4(fp)
   33d6c:	10800a17 	ldw	r2,40(r2)
   33d70:	1007883a 	mov	r3,r2
   33d74:	e0bffe17 	ldw	r2,-8(fp)
   33d78:	18800035 	stwio	r2,0(r3)
}
   33d7c:	0001883a 	nop
   33d80:	e037883a 	mov	sp,fp
   33d84:	df000017 	ldw	fp,0(sp)
   33d88:	dec00104 	addi	sp,sp,4
   33d8c:	f800283a 	ret

00033d90 <alt_up_audio_read_fifo_avail>:

/* Provides number of words of data available in the incoming FIFO: RALC or RARC */
unsigned int alt_up_audio_read_fifo_avail(alt_up_audio_dev *audio, int channel)
{
   33d90:	defffc04 	addi	sp,sp,-16
   33d94:	df000315 	stw	fp,12(sp)
   33d98:	df000304 	addi	fp,sp,12
   33d9c:	e13ffe15 	stw	r4,-8(fp)
   33da0:	e17fff15 	stw	r5,-4(fp)
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
   33da4:	e0bffe17 	ldw	r2,-8(fp)
   33da8:	10800a17 	ldw	r2,40(r2)
   33dac:	10800104 	addi	r2,r2,4
   33db0:	10800037 	ldwio	r2,0(r2)
   33db4:	e0bffd15 	stw	r2,-12(fp)
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST :
   33db8:	e0bfff17 	ldw	r2,-4(fp)
   33dbc:	1000041e 	bne	r2,zero,33dd0 <alt_up_audio_read_fifo_avail+0x40>
   33dc0:	e0bffd17 	ldw	r2,-12(fp)
   33dc4:	10bfc00c 	andi	r2,r2,65280
   33dc8:	1004d23a 	srli	r2,r2,8
   33dcc:	00000206 	br	33dd8 <alt_up_audio_read_fifo_avail+0x48>
   33dd0:	e0bffd17 	ldw	r2,-12(fp)
   33dd4:	10803fcc 	andi	r2,r2,255
{
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
   33dd8:	e0bffd15 	stw	r2,-12(fp)
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST :
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_RARC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RARC_OFST;
	return (fifospace);
   33ddc:	e0bffd17 	ldw	r2,-12(fp)
}
   33de0:	e037883a 	mov	sp,fp
   33de4:	df000017 	ldw	fp,0(sp)
   33de8:	dec00104 	addi	sp,sp,4
   33dec:	f800283a 	ret

00033df0 <alt_up_audio_record_r>:
/* Checks if the read FIFO for the right channel has at least BUF_THRESHOLD data words 
 * available. If it doesn't, then just returns 0. If it does, then data is read from the
 * FIFO up to a maximum of len words, and stored into buf.
 */
unsigned int alt_up_audio_record_r(alt_up_audio_dev *audio, unsigned int *buf, int len)
{
   33df0:	defffa04 	addi	sp,sp,-24
   33df4:	dfc00515 	stw	ra,20(sp)
   33df8:	df000415 	stw	fp,16(sp)
   33dfc:	df000404 	addi	fp,sp,16
   33e00:	e13ffd15 	stw	r4,-12(fp)
   33e04:	e17ffe15 	stw	r5,-8(fp)
   33e08:	e1bfff15 	stw	r6,-4(fp)
	unsigned int data_words = alt_up_audio_read_fifo_avail (audio, ALT_UP_AUDIO_RIGHT);
   33e0c:	01400044 	movi	r5,1
   33e10:	e13ffd17 	ldw	r4,-12(fp)
   33e14:	0033d900 	call	33d90 <alt_up_audio_read_fifo_avail>
   33e18:	e0bffc15 	stw	r2,-16(fp)
	if (data_words <= BUF_THRESHOLD)
   33e1c:	e0bffc17 	ldw	r2,-16(fp)
   33e20:	10801868 	cmpgeui	r2,r2,97
   33e24:	1000021e 	bne	r2,zero,33e30 <alt_up_audio_record_r+0x40>
		return 0;
   33e28:	0005883a 	mov	r2,zero
   33e2c:	00000506 	br	33e44 <alt_up_audio_record_r+0x54>
	else
		return (alt_up_audio_read_fifo(audio, buf, len, ALT_UP_AUDIO_RIGHT));
   33e30:	01c00044 	movi	r7,1
   33e34:	e1bfff17 	ldw	r6,-4(fp)
   33e38:	e17ffe17 	ldw	r5,-8(fp)
   33e3c:	e13ffd17 	ldw	r4,-12(fp)
   33e40:	0033ff00 	call	33ff0 <alt_up_audio_read_fifo>
}
   33e44:	e037883a 	mov	sp,fp
   33e48:	dfc00117 	ldw	ra,4(sp)
   33e4c:	df000017 	ldw	fp,0(sp)
   33e50:	dec00204 	addi	sp,sp,8
   33e54:	f800283a 	ret

00033e58 <alt_up_audio_record_l>:
/* Checks if the read FIFO for the left channel has at least BUF_THRESHOLD data words 
 * available. If it doesn't, then just returns 0. If it does, then data is read from the
 * FIFO up to a maximum of len words, and stored into buf.
 */
unsigned int alt_up_audio_record_l(alt_up_audio_dev *audio, unsigned int *buf, int len)
{
   33e58:	defffa04 	addi	sp,sp,-24
   33e5c:	dfc00515 	stw	ra,20(sp)
   33e60:	df000415 	stw	fp,16(sp)
   33e64:	df000404 	addi	fp,sp,16
   33e68:	e13ffd15 	stw	r4,-12(fp)
   33e6c:	e17ffe15 	stw	r5,-8(fp)
   33e70:	e1bfff15 	stw	r6,-4(fp)
	unsigned int data_words = alt_up_audio_read_fifo_avail (audio, ALT_UP_AUDIO_LEFT);
   33e74:	000b883a 	mov	r5,zero
   33e78:	e13ffd17 	ldw	r4,-12(fp)
   33e7c:	0033d900 	call	33d90 <alt_up_audio_read_fifo_avail>
   33e80:	e0bffc15 	stw	r2,-16(fp)
	if (data_words <= BUF_THRESHOLD)
   33e84:	e0bffc17 	ldw	r2,-16(fp)
   33e88:	10801868 	cmpgeui	r2,r2,97
   33e8c:	1000021e 	bne	r2,zero,33e98 <alt_up_audio_record_l+0x40>
		return 0;
   33e90:	0005883a 	mov	r2,zero
   33e94:	00000506 	br	33eac <alt_up_audio_record_l+0x54>
	else
		return (alt_up_audio_read_fifo(audio, buf, len, ALT_UP_AUDIO_LEFT));
   33e98:	000f883a 	mov	r7,zero
   33e9c:	e1bfff17 	ldw	r6,-4(fp)
   33ea0:	e17ffe17 	ldw	r5,-8(fp)
   33ea4:	e13ffd17 	ldw	r4,-12(fp)
   33ea8:	0033ff00 	call	33ff0 <alt_up_audio_read_fifo>
}
   33eac:	e037883a 	mov	sp,fp
   33eb0:	dfc00117 	ldw	ra,4(sp)
   33eb4:	df000017 	ldw	fp,0(sp)
   33eb8:	dec00204 	addi	sp,sp,8
   33ebc:	f800283a 	ret

00033ec0 <alt_up_audio_write_fifo_space>:

/* Provides the amount of empty space available in the outgoing FIFO: WSLC or WSRC */
unsigned int alt_up_audio_write_fifo_space(alt_up_audio_dev *audio, int channel)
{
   33ec0:	defffc04 	addi	sp,sp,-16
   33ec4:	df000315 	stw	fp,12(sp)
   33ec8:	df000304 	addi	fp,sp,12
   33ecc:	e13ffe15 	stw	r4,-8(fp)
   33ed0:	e17fff15 	stw	r5,-4(fp)
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
   33ed4:	e0bffe17 	ldw	r2,-8(fp)
   33ed8:	10800a17 	ldw	r2,40(r2)
   33edc:	10800104 	addi	r2,r2,4
   33ee0:	10800037 	ldwio	r2,0(r2)
   33ee4:	e0bffd15 	stw	r2,-12(fp)
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
   33ee8:	e0bfff17 	ldw	r2,-4(fp)
   33eec:	1000031e 	bne	r2,zero,33efc <alt_up_audio_write_fifo_space+0x3c>
   33ef0:	e0bffd17 	ldw	r2,-12(fp)
   33ef4:	1004d63a 	srli	r2,r2,24
   33ef8:	00000306 	br	33f08 <alt_up_audio_write_fifo_space+0x48>
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSRC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSRC_OFST;
   33efc:	e0bffd17 	ldw	r2,-12(fp)
   33f00:	10803fec 	andhi	r2,r2,255
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
   33f04:	1004d43a 	srli	r2,r2,16
{
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
   33f08:	e0bffd15 	stw	r2,-12(fp)
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSRC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSRC_OFST;
	return (fifospace);
   33f0c:	e0bffd17 	ldw	r2,-12(fp)
}
   33f10:	e037883a 	mov	sp,fp
   33f14:	df000017 	ldw	fp,0(sp)
   33f18:	dec00104 	addi	sp,sp,4
   33f1c:	f800283a 	ret

00033f20 <alt_up_audio_play_r>:
/* Checks if the write FIFO for the right channel has at least BUF_THRESHOLD space available.
 * If it doesn't, then just returns 0. If it does, then data from buf is written into the 
 * FIFO, up to a maximum of len words.
 */
unsigned int alt_up_audio_play_r(alt_up_audio_dev *audio, unsigned int *buf, int len)
{
   33f20:	defffa04 	addi	sp,sp,-24
   33f24:	dfc00515 	stw	ra,20(sp)
   33f28:	df000415 	stw	fp,16(sp)
   33f2c:	df000404 	addi	fp,sp,16
   33f30:	e13ffd15 	stw	r4,-12(fp)
   33f34:	e17ffe15 	stw	r5,-8(fp)
   33f38:	e1bfff15 	stw	r6,-4(fp)
	unsigned int space = alt_up_audio_write_fifo_space (audio, ALT_UP_AUDIO_RIGHT);
   33f3c:	01400044 	movi	r5,1
   33f40:	e13ffd17 	ldw	r4,-12(fp)
   33f44:	0033ec00 	call	33ec0 <alt_up_audio_write_fifo_space>
   33f48:	e0bffc15 	stw	r2,-16(fp)
	if (space <= BUF_THRESHOLD)
   33f4c:	e0bffc17 	ldw	r2,-16(fp)
   33f50:	10801868 	cmpgeui	r2,r2,97
   33f54:	1000021e 	bne	r2,zero,33f60 <alt_up_audio_play_r+0x40>
		return 0;
   33f58:	0005883a 	mov	r2,zero
   33f5c:	00000506 	br	33f74 <alt_up_audio_play_r+0x54>
	else
		return (alt_up_audio_write_fifo(audio, buf, len, ALT_UP_AUDIO_RIGHT));
   33f60:	01c00044 	movi	r7,1
   33f64:	e1bfff17 	ldw	r6,-4(fp)
   33f68:	e17ffe17 	ldw	r5,-8(fp)
   33f6c:	e13ffd17 	ldw	r4,-12(fp)
   33f70:	00340d00 	call	340d0 <alt_up_audio_write_fifo>
}
   33f74:	e037883a 	mov	sp,fp
   33f78:	dfc00117 	ldw	ra,4(sp)
   33f7c:	df000017 	ldw	fp,0(sp)
   33f80:	dec00204 	addi	sp,sp,8
   33f84:	f800283a 	ret

00033f88 <alt_up_audio_play_l>:
/* Checks if the write FIFO for the left channel has at least BUF_THRESHOLD space available.
 * If it doesn't, then just returns 0. If it does, then data from buf is written into the 
 * FIFO, up to a maximum of len words.
 */
unsigned int alt_up_audio_play_l(alt_up_audio_dev *audio, unsigned int *buf, int len)
{
   33f88:	defffa04 	addi	sp,sp,-24
   33f8c:	dfc00515 	stw	ra,20(sp)
   33f90:	df000415 	stw	fp,16(sp)
   33f94:	df000404 	addi	fp,sp,16
   33f98:	e13ffd15 	stw	r4,-12(fp)
   33f9c:	e17ffe15 	stw	r5,-8(fp)
   33fa0:	e1bfff15 	stw	r6,-4(fp)
	unsigned int space = alt_up_audio_write_fifo_space (audio, ALT_UP_AUDIO_LEFT);
   33fa4:	000b883a 	mov	r5,zero
   33fa8:	e13ffd17 	ldw	r4,-12(fp)
   33fac:	0033ec00 	call	33ec0 <alt_up_audio_write_fifo_space>
   33fb0:	e0bffc15 	stw	r2,-16(fp)
	if (space <= BUF_THRESHOLD)
   33fb4:	e0bffc17 	ldw	r2,-16(fp)
   33fb8:	10801868 	cmpgeui	r2,r2,97
   33fbc:	1000021e 	bne	r2,zero,33fc8 <alt_up_audio_play_l+0x40>
		return 0;
   33fc0:	0005883a 	mov	r2,zero
   33fc4:	00000506 	br	33fdc <alt_up_audio_play_l+0x54>
	else
		return (alt_up_audio_write_fifo(audio, buf, len, ALT_UP_AUDIO_LEFT));
   33fc8:	000f883a 	mov	r7,zero
   33fcc:	e1bfff17 	ldw	r6,-4(fp)
   33fd0:	e17ffe17 	ldw	r5,-8(fp)
   33fd4:	e13ffd17 	ldw	r4,-12(fp)
   33fd8:	00340d00 	call	340d0 <alt_up_audio_write_fifo>
}
   33fdc:	e037883a 	mov	sp,fp
   33fe0:	dfc00117 	ldw	ra,4(sp)
   33fe4:	df000017 	ldw	fp,0(sp)
   33fe8:	dec00204 	addi	sp,sp,8
   33fec:	f800283a 	ret

00033ff0 <alt_up_audio_read_fifo>:

int alt_up_audio_read_fifo(alt_up_audio_dev *audio, unsigned int *buf, int len, int channel)
{
   33ff0:	defff904 	addi	sp,sp,-28
   33ff4:	df000615 	stw	fp,24(sp)
   33ff8:	df000604 	addi	fp,sp,24
   33ffc:	e13ffc15 	stw	r4,-16(fp)
   34000:	e17ffd15 	stw	r5,-12(fp)
   34004:	e1bffe15 	stw	r6,-8(fp)
   34008:	e1ffff15 	stw	r7,-4(fp)
	unsigned int fifospace;
	int count = 0;
   3400c:	e03ffa15 	stw	zero,-24(fp)
	while ( count < len ) 
   34010:	00002506 	br	340a8 <alt_up_audio_read_fifo+0xb8>
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
   34014:	e0bffc17 	ldw	r2,-16(fp)
   34018:	10800a17 	ldw	r2,40(r2)
   3401c:	10800104 	addi	r2,r2,4
   34020:	10800037 	ldwio	r2,0(r2)
   34024:	e0bffb15 	stw	r2,-20(fp)
		// extract the part for proper Channel Read Space
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST 
			:
   34028:	e0bfff17 	ldw	r2,-4(fp)
   3402c:	1000041e 	bne	r2,zero,34040 <alt_up_audio_read_fifo+0x50>
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
		// extract the part for proper Channel Read Space
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST 
   34030:	e0bffb17 	ldw	r2,-20(fp)
   34034:	10bfc00c 	andi	r2,r2,65280
			:
   34038:	1004d23a 	srli	r2,r2,8
   3403c:	00000206 	br	34048 <alt_up_audio_read_fifo+0x58>
   34040:	e0bffb17 	ldw	r2,-20(fp)
   34044:	10803fcc 	andi	r2,r2,255
	while ( count < len ) 
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
		// extract the part for proper Channel Read Space
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
   34048:	e0bffb15 	stw	r2,-20(fp)
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST 
			:
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RARC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RARC_OFST;
		if (fifospace > 0) 
   3404c:	e0bffb17 	ldw	r2,-20(fp)
   34050:	10001926 	beq	r2,zero,340b8 <alt_up_audio_read_fifo+0xc8>
		{
			buf[count] = (channel == ALT_UP_AUDIO_LEFT) ? 
   34054:	e0bffa17 	ldw	r2,-24(fp)
   34058:	1085883a 	add	r2,r2,r2
   3405c:	1085883a 	add	r2,r2,r2
   34060:	1007883a 	mov	r3,r2
   34064:	e0bffd17 	ldw	r2,-12(fp)
   34068:	10c5883a 	add	r2,r2,r3
   3406c:	e0ffff17 	ldw	r3,-4(fp)
   34070:	1800051e 	bne	r3,zero,34088 <alt_up_audio_read_fifo+0x98>
				IORD_ALT_UP_AUDIO_LEFTDATA(audio->base) :
   34074:	e0fffc17 	ldw	r3,-16(fp)
   34078:	18c00a17 	ldw	r3,40(r3)
   3407c:	18c00204 	addi	r3,r3,8
   34080:	18c00037 	ldwio	r3,0(r3)
   34084:	00000406 	br	34098 <alt_up_audio_read_fifo+0xa8>
				IORD_ALT_UP_AUDIO_RIGHTDATA(audio->base);
   34088:	e0fffc17 	ldw	r3,-16(fp)
   3408c:	18c00a17 	ldw	r3,40(r3)
   34090:	18c00304 	addi	r3,r3,12
   34094:	18c00037 	ldwio	r3,0(r3)
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST 
			:
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RARC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RARC_OFST;
		if (fifospace > 0) 
		{
			buf[count] = (channel == ALT_UP_AUDIO_LEFT) ? 
   34098:	10c00015 	stw	r3,0(r2)
				IORD_ALT_UP_AUDIO_LEFTDATA(audio->base) :
				IORD_ALT_UP_AUDIO_RIGHTDATA(audio->base);
			count ++;
   3409c:	e0bffa17 	ldw	r2,-24(fp)
   340a0:	10800044 	addi	r2,r2,1
   340a4:	e0bffa15 	stw	r2,-24(fp)

int alt_up_audio_read_fifo(alt_up_audio_dev *audio, unsigned int *buf, int len, int channel)
{
	unsigned int fifospace;
	int count = 0;
	while ( count < len ) 
   340a8:	e0fffa17 	ldw	r3,-24(fp)
   340ac:	e0bffe17 	ldw	r2,-8(fp)
   340b0:	18bfd816 	blt	r3,r2,34014 <__alt_mem_SDRAM_controller+0xfc034014>
   340b4:	00000106 	br	340bc <alt_up_audio_read_fifo+0xcc>
			count ++;
		}
		else
		{
			// no more data to read
			break;
   340b8:	0001883a 	nop
		}
	}
	return count;
   340bc:	e0bffa17 	ldw	r2,-24(fp)
}
   340c0:	e037883a 	mov	sp,fp
   340c4:	df000017 	ldw	fp,0(sp)
   340c8:	dec00104 	addi	sp,sp,4
   340cc:	f800283a 	ret

000340d0 <alt_up_audio_write_fifo>:

int alt_up_audio_write_fifo(alt_up_audio_dev *audio, unsigned int *buf, int len, int channel)
{
   340d0:	defff904 	addi	sp,sp,-28
   340d4:	df000615 	stw	fp,24(sp)
   340d8:	df000604 	addi	fp,sp,24
   340dc:	e13ffc15 	stw	r4,-16(fp)
   340e0:	e17ffd15 	stw	r5,-12(fp)
   340e4:	e1bffe15 	stw	r6,-8(fp)
   340e8:	e1ffff15 	stw	r7,-4(fp)
	unsigned int fifospace;
	int count = 0;
   340ec:	e03ffa15 	stw	zero,-24(fp)
	while ( count < len ) 
   340f0:	00002f06 	br	341b0 <alt_up_audio_write_fifo+0xe0>
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
   340f4:	e0bffc17 	ldw	r2,-16(fp)
   340f8:	10800a17 	ldw	r2,40(r2)
   340fc:	10800104 	addi	r2,r2,4
   34100:	10800037 	ldwio	r2,0(r2)
   34104:	e0bffb15 	stw	r2,-20(fp)
		// extract the part for Left Channel Write Space 
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
   34108:	e0bfff17 	ldw	r2,-4(fp)
   3410c:	1000031e 	bne	r2,zero,3411c <alt_up_audio_write_fifo+0x4c>
   34110:	e0bffb17 	ldw	r2,-20(fp)
   34114:	1004d63a 	srli	r2,r2,24
   34118:	00000306 	br	34128 <alt_up_audio_write_fifo+0x58>
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSRC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSRC_OFST;
   3411c:	e0bffb17 	ldw	r2,-20(fp)
   34120:	10803fec 	andhi	r2,r2,255
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
		// extract the part for Left Channel Write Space 
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
   34124:	1004d43a 	srli	r2,r2,16
	while ( count < len ) 
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
		// extract the part for Left Channel Write Space 
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
   34128:	e0bffb15 	stw	r2,-20(fp)
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSRC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSRC_OFST;
		if (fifospace > 0) 
   3412c:	e0bffb17 	ldw	r2,-20(fp)
   34130:	10002326 	beq	r2,zero,341c0 <alt_up_audio_write_fifo+0xf0>
		{
			if (channel == ALT_UP_AUDIO_LEFT) 
   34134:	e0bfff17 	ldw	r2,-4(fp)
   34138:	10000f1e 	bne	r2,zero,34178 <alt_up_audio_write_fifo+0xa8>
				IOWR_ALT_UP_AUDIO_LEFTDATA(audio->base, buf[count++]);
   3413c:	e0bffc17 	ldw	r2,-16(fp)
   34140:	10800a17 	ldw	r2,40(r2)
   34144:	10800204 	addi	r2,r2,8
   34148:	1009883a 	mov	r4,r2
   3414c:	e0bffa17 	ldw	r2,-24(fp)
   34150:	10c00044 	addi	r3,r2,1
   34154:	e0fffa15 	stw	r3,-24(fp)
   34158:	1085883a 	add	r2,r2,r2
   3415c:	1085883a 	add	r2,r2,r2
   34160:	1007883a 	mov	r3,r2
   34164:	e0bffd17 	ldw	r2,-12(fp)
   34168:	10c5883a 	add	r2,r2,r3
   3416c:	10800017 	ldw	r2,0(r2)
   34170:	20800035 	stwio	r2,0(r4)
   34174:	00000e06 	br	341b0 <alt_up_audio_write_fifo+0xe0>
			else
				IOWR_ALT_UP_AUDIO_RIGHTDATA(audio->base, buf[count++]);
   34178:	e0bffc17 	ldw	r2,-16(fp)
   3417c:	10800a17 	ldw	r2,40(r2)
   34180:	10800304 	addi	r2,r2,12
   34184:	1009883a 	mov	r4,r2
   34188:	e0bffa17 	ldw	r2,-24(fp)
   3418c:	10c00044 	addi	r3,r2,1
   34190:	e0fffa15 	stw	r3,-24(fp)
   34194:	1085883a 	add	r2,r2,r2
   34198:	1085883a 	add	r2,r2,r2
   3419c:	1007883a 	mov	r3,r2
   341a0:	e0bffd17 	ldw	r2,-12(fp)
   341a4:	10c5883a 	add	r2,r2,r3
   341a8:	10800017 	ldw	r2,0(r2)
   341ac:	20800035 	stwio	r2,0(r4)

int alt_up_audio_write_fifo(alt_up_audio_dev *audio, unsigned int *buf, int len, int channel)
{
	unsigned int fifospace;
	int count = 0;
	while ( count < len ) 
   341b0:	e0fffa17 	ldw	r3,-24(fp)
   341b4:	e0bffe17 	ldw	r2,-8(fp)
   341b8:	18bfce16 	blt	r3,r2,340f4 <__alt_mem_SDRAM_controller+0xfc0340f4>
   341bc:	00000106 	br	341c4 <alt_up_audio_write_fifo+0xf4>
				IOWR_ALT_UP_AUDIO_RIGHTDATA(audio->base, buf[count++]);
		}
		else
		{
			// no more space to write
			break;
   341c0:	0001883a 	nop
		}
	}
	return count;
   341c4:	e0bffa17 	ldw	r2,-24(fp)
}
   341c8:	e037883a 	mov	sp,fp
   341cc:	df000017 	ldw	fp,0(sp)
   341d0:	dec00104 	addi	sp,sp,4
   341d4:	f800283a 	ret

000341d8 <alt_up_audio_read_fifo_head>:

unsigned int alt_up_audio_read_fifo_head(alt_up_audio_dev *audio, int channel)
{
   341d8:	defffd04 	addi	sp,sp,-12
   341dc:	df000215 	stw	fp,8(sp)
   341e0:	df000204 	addi	fp,sp,8
   341e4:	e13ffe15 	stw	r4,-8(fp)
   341e8:	e17fff15 	stw	r5,-4(fp)
	return ( (channel == ALT_UP_AUDIO_LEFT) ?  IORD_ALT_UP_AUDIO_LEFTDATA(audio->base) :
   341ec:	e0bfff17 	ldw	r2,-4(fp)
   341f0:	1000051e 	bne	r2,zero,34208 <alt_up_audio_read_fifo_head+0x30>
   341f4:	e0bffe17 	ldw	r2,-8(fp)
   341f8:	10800a17 	ldw	r2,40(r2)
   341fc:	10800204 	addi	r2,r2,8
   34200:	10800037 	ldwio	r2,0(r2)
   34204:	00000406 	br	34218 <alt_up_audio_read_fifo_head+0x40>
				IORD_ALT_UP_AUDIO_RIGHTDATA(audio->base) );
   34208:	e0bffe17 	ldw	r2,-8(fp)
   3420c:	10800a17 	ldw	r2,40(r2)
   34210:	10800304 	addi	r2,r2,12
   34214:	10800037 	ldwio	r2,0(r2)
}
   34218:	e037883a 	mov	sp,fp
   3421c:	df000017 	ldw	fp,0(sp)
   34220:	dec00104 	addi	sp,sp,4
   34224:	f800283a 	ret

00034228 <alt_up_audio_write_fifo_head>:

void alt_up_audio_write_fifo_head(alt_up_audio_dev *audio, unsigned int data, int channel)
{
   34228:	defffc04 	addi	sp,sp,-16
   3422c:	df000315 	stw	fp,12(sp)
   34230:	df000304 	addi	fp,sp,12
   34234:	e13ffd15 	stw	r4,-12(fp)
   34238:	e17ffe15 	stw	r5,-8(fp)
   3423c:	e1bfff15 	stw	r6,-4(fp)
	if (channel == ALT_UP_AUDIO_LEFT) 
   34240:	e0bfff17 	ldw	r2,-4(fp)
   34244:	1000071e 	bne	r2,zero,34264 <alt_up_audio_write_fifo_head+0x3c>
		IOWR_ALT_UP_AUDIO_LEFTDATA(audio->base, data);
   34248:	e0bffd17 	ldw	r2,-12(fp)
   3424c:	10800a17 	ldw	r2,40(r2)
   34250:	10800204 	addi	r2,r2,8
   34254:	1007883a 	mov	r3,r2
   34258:	e0bffe17 	ldw	r2,-8(fp)
   3425c:	18800035 	stwio	r2,0(r3)
	else
		IOWR_ALT_UP_AUDIO_RIGHTDATA(audio->base, data);
}
   34260:	00000606 	br	3427c <alt_up_audio_write_fifo_head+0x54>
void alt_up_audio_write_fifo_head(alt_up_audio_dev *audio, unsigned int data, int channel)
{
	if (channel == ALT_UP_AUDIO_LEFT) 
		IOWR_ALT_UP_AUDIO_LEFTDATA(audio->base, data);
	else
		IOWR_ALT_UP_AUDIO_RIGHTDATA(audio->base, data);
   34264:	e0bffd17 	ldw	r2,-12(fp)
   34268:	10800a17 	ldw	r2,40(r2)
   3426c:	10800304 	addi	r2,r2,12
   34270:	1007883a 	mov	r3,r2
   34274:	e0bffe17 	ldw	r2,-8(fp)
   34278:	18800035 	stwio	r2,0(r3)
}
   3427c:	0001883a 	nop
   34280:	e037883a 	mov	sp,fp
   34284:	df000017 	ldw	fp,0(sp)
   34288:	dec00104 	addi	sp,sp,4
   3428c:	f800283a 	ret

00034290 <alt_up_av_config_open_dev>:

#include "altera_up_avalon_audio_and_video_config.h"
#include "altera_up_avalon_audio_and_video_config_regs.h"

alt_up_av_config_dev* alt_up_av_config_open_dev(const char* name)
{
   34290:	defffc04 	addi	sp,sp,-16
   34294:	dfc00315 	stw	ra,12(sp)
   34298:	df000215 	stw	fp,8(sp)
   3429c:	df000204 	addi	fp,sp,8
   342a0:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_av_config_dev *dev = (alt_up_av_config_dev*)alt_find_dev(name, &alt_dev_list);
   342a4:	d1600b04 	addi	r5,gp,-32724
   342a8:	e13fff17 	ldw	r4,-4(fp)
   342ac:	0034df80 	call	34df8 <alt_find_dev>
   342b0:	e0bffe15 	stw	r2,-8(fp)
  dev->type = (IORD_ALT_UP_AV_CONFIG_STATUS(dev->base) & ALT_UP_AV_CONFIG_STATUS_CFG_MSK) >> ALT_UP_AV_CONFIG_STATUS_CFG_OFST;
   342b4:	e0bffe17 	ldw	r2,-8(fp)
   342b8:	10800a17 	ldw	r2,40(r2)
   342bc:	10800104 	addi	r2,r2,4
   342c0:	10800037 	ldwio	r2,0(r2)
   342c4:	10803fec 	andhi	r2,r2,255
   342c8:	1005d43a 	srai	r2,r2,16
   342cc:	1007883a 	mov	r3,r2
   342d0:	e0bffe17 	ldw	r2,-8(fp)
   342d4:	10c00b15 	stw	r3,44(r2)

  return dev;
   342d8:	e0bffe17 	ldw	r2,-8(fp)
}
   342dc:	e037883a 	mov	sp,fp
   342e0:	dfc00117 	ldw	ra,4(sp)
   342e4:	df000017 	ldw	fp,0(sp)
   342e8:	dec00204 	addi	sp,sp,8
   342ec:	f800283a 	ret

000342f0 <alt_up_av_config_write_data>:
 * @param data --  the data to be sent
 *
 * @return 0 for success
 **/
int alt_up_av_config_write_data(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 data)
{
   342f0:	defffc04 	addi	sp,sp,-16
   342f4:	df000315 	stw	fp,12(sp)
   342f8:	df000304 	addi	fp,sp,12
   342fc:	e13ffd15 	stw	r4,-12(fp)
   34300:	e17ffe15 	stw	r5,-8(fp)
   34304:	e1bfff15 	stw	r6,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_AV_CONFIG_ADDRESS(av_config->base, addr & ALT_UP_AV_CONFIG_ADDRESS_VALID_MSK); 
   34308:	e0bffd17 	ldw	r2,-12(fp)
   3430c:	10800a17 	ldw	r2,40(r2)
   34310:	10800204 	addi	r2,r2,8
   34314:	1007883a 	mov	r3,r2
   34318:	e0bffe17 	ldw	r2,-8(fp)
   3431c:	10803fcc 	andi	r2,r2,255
   34320:	18800035 	stwio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_AV_CONFIG_DATA(av_config->base, data & ALT_UP_AV_CONFIG_DATA_VALID_MSK); 
   34324:	e0bffd17 	ldw	r2,-12(fp)
   34328:	10800a17 	ldw	r2,40(r2)
   3432c:	10800304 	addi	r2,r2,12
   34330:	1007883a 	mov	r3,r2
   34334:	e0bfff17 	ldw	r2,-4(fp)
   34338:	10bfffcc 	andi	r2,r2,65535
   3433c:	18800035 	stwio	r2,0(r3)

	return 0;
   34340:	0005883a 	mov	r2,zero
}
   34344:	e037883a 	mov	sp,fp
   34348:	df000017 	ldw	fp,0(sp)
   3434c:	dec00104 	addi	sp,sp,4
   34350:	f800283a 	ret

00034354 <alt_up_av_config_read_data>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_av_config_read_data(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 * data)
{
   34354:	defffb04 	addi	sp,sp,-20
   34358:	dfc00415 	stw	ra,16(sp)
   3435c:	df000315 	stw	fp,12(sp)
   34360:	df000304 	addi	fp,sp,12
   34364:	e13ffd15 	stw	r4,-12(fp)
   34368:	e17ffe15 	stw	r5,-8(fp)
   3436c:	e1bfff15 	stw	r6,-4(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_AV_CONFIG_ADDRESS(av_config->base, addr & ALT_UP_AV_CONFIG_ADDRESS_VALID_MSK); 
   34370:	e0bffd17 	ldw	r2,-12(fp)
   34374:	10800a17 	ldw	r2,40(r2)
   34378:	10800204 	addi	r2,r2,8
   3437c:	1007883a 	mov	r3,r2
   34380:	e0bffe17 	ldw	r2,-8(fp)
   34384:	10803fcc 	andi	r2,r2,255
   34388:	18800035 	stwio	r2,0(r3)

	// write data to the device Data register
	*(data) = IORD_ALT_UP_AV_CONFIG_DATA(av_config->base); 
   3438c:	e0bffd17 	ldw	r2,-12(fp)
   34390:	10800a17 	ldw	r2,40(r2)
   34394:	10800304 	addi	r2,r2,12
   34398:	10800037 	ldwio	r2,0(r2)
   3439c:	1007883a 	mov	r3,r2
   343a0:	e0bfff17 	ldw	r2,-4(fp)
   343a4:	10c00015 	stw	r3,0(r2)

	// check acknowledge is 0
	if (alt_up_av_config_read_acknowledge(av_config))
   343a8:	e13ffd17 	ldw	r4,-12(fp)
   343ac:	00344780 	call	34478 <alt_up_av_config_read_acknowledge>
   343b0:	10000226 	beq	r2,zero,343bc <alt_up_av_config_read_data+0x68>
		return -1;
   343b4:	00bfffc4 	movi	r2,-1
   343b8:	00000106 	br	343c0 <alt_up_av_config_read_data+0x6c>

	return 0;
   343bc:	0005883a 	mov	r2,zero
}
   343c0:	e037883a 	mov	sp,fp
   343c4:	dfc00117 	ldw	ra,4(sp)
   343c8:	df000017 	ldw	fp,0(sp)
   343cc:	dec00204 	addi	sp,sp,8
   343d0:	f800283a 	ret

000343d4 <alt_up_av_config_reset>:

int alt_up_av_config_reset(alt_up_av_config_dev *av_config)
{
   343d4:	defffe04 	addi	sp,sp,-8
   343d8:	df000115 	stw	fp,4(sp)
   343dc:	df000104 	addi	fp,sp,4
   343e0:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_AV_CONFIG_CONTROL_RESET(av_config->base);
   343e4:	e0bfff17 	ldw	r2,-4(fp)
   343e8:	10800a17 	ldw	r2,40(r2)
   343ec:	1007883a 	mov	r3,r2
   343f0:	00800044 	movi	r2,1
   343f4:	18800025 	stbio	r2,0(r3)
	return 0;
   343f8:	0005883a 	mov	r2,zero
}
   343fc:	e037883a 	mov	sp,fp
   34400:	df000017 	ldw	fp,0(sp)
   34404:	dec00104 	addi	sp,sp,4
   34408:	f800283a 	ret

0003440c <alt_up_av_config_enable_interrupt>:

int alt_up_av_config_enable_interrupt(alt_up_av_config_dev *av_config)
{
   3440c:	defffe04 	addi	sp,sp,-8
   34410:	df000115 	stw	fp,4(sp)
   34414:	df000104 	addi	fp,sp,4
   34418:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_AV_CONFIG_CONTROL_RIE_ENABLE(av_config->base);
   3441c:	e0bfff17 	ldw	r2,-4(fp)
   34420:	10800a17 	ldw	r2,40(r2)
   34424:	1007883a 	mov	r3,r2
   34428:	00800084 	movi	r2,2
   3442c:	18800025 	stbio	r2,0(r3)
	return 0;
   34430:	0005883a 	mov	r2,zero
}
   34434:	e037883a 	mov	sp,fp
   34438:	df000017 	ldw	fp,0(sp)
   3443c:	dec00104 	addi	sp,sp,4
   34440:	f800283a 	ret

00034444 <alt_up_av_config_disable_interrupt>:

int alt_up_av_config_disable_interrupt(alt_up_av_config_dev *av_config)
{
   34444:	defffe04 	addi	sp,sp,-8
   34448:	df000115 	stw	fp,4(sp)
   3444c:	df000104 	addi	fp,sp,4
   34450:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_AV_CONFIG_CONTROL_RIE_DISABLE(av_config->base);
   34454:	e0bfff17 	ldw	r2,-4(fp)
   34458:	10800a17 	ldw	r2,40(r2)
   3445c:	0007883a 	mov	r3,zero
   34460:	10c00025 	stbio	r3,0(r2)
	return 0;
   34464:	0005883a 	mov	r2,zero
}
   34468:	e037883a 	mov	sp,fp
   3446c:	df000017 	ldw	fp,0(sp)
   34470:	dec00104 	addi	sp,sp,4
   34474:	f800283a 	ret

00034478 <alt_up_av_config_read_acknowledge>:

int alt_up_av_config_read_acknowledge(alt_up_av_config_dev *av_config)
{
   34478:	defffe04 	addi	sp,sp,-8
   3447c:	df000115 	stw	fp,4(sp)
   34480:	df000104 	addi	fp,sp,4
   34484:	e13fff15 	stw	r4,-4(fp)
	if ((IORD_ALT_UP_AV_CONFIG_STATUS(av_config->base) & ALT_UP_AV_CONFIG_STATUS_RDY_MSK) >> ALT_UP_AV_CONFIG_STATUS_RDY_OFST)
   34488:	e0bfff17 	ldw	r2,-4(fp)
   3448c:	10800a17 	ldw	r2,40(r2)
   34490:	10800104 	addi	r2,r2,4
   34494:	10800037 	ldwio	r2,0(r2)
   34498:	1080008c 	andi	r2,r2,2
   3449c:	1005d07a 	srai	r2,r2,1
   344a0:	10000626 	beq	r2,zero,344bc <alt_up_av_config_read_acknowledge+0x44>
		return ((IORD_ALT_UP_AV_CONFIG_STATUS(av_config->base) & ALT_UP_AV_CONFIG_STATUS_ACK_MSK) >> ALT_UP_AV_CONFIG_STATUS_ACK_OFST);
   344a4:	e0bfff17 	ldw	r2,-4(fp)
   344a8:	10800a17 	ldw	r2,40(r2)
   344ac:	10800104 	addi	r2,r2,4
   344b0:	10800037 	ldwio	r2,0(r2)
   344b4:	1080004c 	andi	r2,r2,1
   344b8:	00000106 	br	344c0 <alt_up_av_config_read_acknowledge+0x48>
	return -1;
   344bc:	00bfffc4 	movi	r2,-1
}
   344c0:	e037883a 	mov	sp,fp
   344c4:	df000017 	ldw	fp,0(sp)
   344c8:	dec00104 	addi	sp,sp,4
   344cc:	f800283a 	ret

000344d0 <alt_up_av_config_read_ready>:

int alt_up_av_config_read_ready(alt_up_av_config_dev *av_config)
{
   344d0:	defffe04 	addi	sp,sp,-8
   344d4:	df000115 	stw	fp,4(sp)
   344d8:	df000104 	addi	fp,sp,4
   344dc:	e13fff15 	stw	r4,-4(fp)
	return ((IORD_ALT_UP_AV_CONFIG_STATUS(av_config->base) & ALT_UP_AV_CONFIG_STATUS_RDY_MSK) >> ALT_UP_AV_CONFIG_STATUS_RDY_OFST);
   344e0:	e0bfff17 	ldw	r2,-4(fp)
   344e4:	10800a17 	ldw	r2,40(r2)
   344e8:	10800104 	addi	r2,r2,4
   344ec:	10800037 	ldwio	r2,0(r2)
   344f0:	1080008c 	andi	r2,r2,2
   344f4:	1005d07a 	srai	r2,r2,1
}
   344f8:	e037883a 	mov	sp,fp
   344fc:	df000017 	ldw	fp,0(sp)
   34500:	dec00104 	addi	sp,sp,4
   34504:	f800283a 	ret

00034508 <alt_up_av_config_write_audio_cfg_register>:

int alt_up_av_config_write_audio_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 data)
{
   34508:	defffa04 	addi	sp,sp,-24
   3450c:	dfc00515 	stw	ra,20(sp)
   34510:	df000415 	stw	fp,16(sp)
   34514:	df000404 	addi	fp,sp,16
   34518:	e13ffd15 	stw	r4,-12(fp)
   3451c:	e17ffe15 	stw	r5,-8(fp)
   34520:	e1bfff15 	stw	r6,-4(fp)
	// check the device is indeed audio configuration
	if (av_config->type != ON_BOARD_AUDIO_ONLY_CONFIG && av_config->type != ON_BOARD_DE2_CONFIG && av_config->type != ON_BOARD_DE2_70_CONFIG && av_config->type != ON_BOARD_DE2_115_CONFIG)
   34524:	e0bffd17 	ldw	r2,-12(fp)
   34528:	10800b17 	ldw	r2,44(r2)
   3452c:	10800060 	cmpeqi	r2,r2,1
   34530:	10000e1e 	bne	r2,zero,3456c <alt_up_av_config_write_audio_cfg_register+0x64>
   34534:	e0bffd17 	ldw	r2,-12(fp)
   34538:	10800b17 	ldw	r2,44(r2)
   3453c:	108000a0 	cmpeqi	r2,r2,2
   34540:	10000a1e 	bne	r2,zero,3456c <alt_up_av_config_write_audio_cfg_register+0x64>
   34544:	e0bffd17 	ldw	r2,-12(fp)
   34548:	10800b17 	ldw	r2,44(r2)
   3454c:	108000e0 	cmpeqi	r2,r2,3
   34550:	1000061e 	bne	r2,zero,3456c <alt_up_av_config_write_audio_cfg_register+0x64>
   34554:	e0bffd17 	ldw	r2,-12(fp)
   34558:	10800b17 	ldw	r2,44(r2)
   3455c:	10800120 	cmpeqi	r2,r2,4
   34560:	1000021e 	bne	r2,zero,3456c <alt_up_av_config_write_audio_cfg_register+0x64>
		return -EINVAL;
   34564:	00bffa84 	movi	r2,-22
   34568:	00000b06 	br	34598 <alt_up_av_config_write_audio_cfg_register+0x90>

	// set the audio device to be configured in the Control register
	SELECTED_ON_BOARD_DEVICE device = AUDIO_DEVICE;
   3456c:	e03ffc15 	stw	zero,-16(fp)
	IOWR_ALT_UP_AV_CONFIG_CONTROL_DEVICE(av_config->base, device);
   34570:	e0bffd17 	ldw	r2,-12(fp)
   34574:	10800a17 	ldw	r2,40(r2)
   34578:	10800084 	addi	r2,r2,2
   3457c:	1007883a 	mov	r3,r2
   34580:	e0bffc17 	ldw	r2,-16(fp)
   34584:	18800025 	stbio	r2,0(r3)

	return alt_up_av_config_write_data(av_config, addr, data);
   34588:	e1bfff17 	ldw	r6,-4(fp)
   3458c:	e17ffe17 	ldw	r5,-8(fp)
   34590:	e13ffd17 	ldw	r4,-12(fp)
   34594:	00342f00 	call	342f0 <alt_up_av_config_write_data>
}
   34598:	e037883a 	mov	sp,fp
   3459c:	dfc00117 	ldw	ra,4(sp)
   345a0:	df000017 	ldw	fp,0(sp)
   345a4:	dec00204 	addi	sp,sp,8
   345a8:	f800283a 	ret

000345ac <alt_up_av_config_read_video_cfg_register>:

int alt_up_av_config_read_video_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 *data, SELECTED_ON_BOARD_DEVICE video_port)
{
   345ac:	defffa04 	addi	sp,sp,-24
   345b0:	dfc00515 	stw	ra,20(sp)
   345b4:	df000415 	stw	fp,16(sp)
   345b8:	df000404 	addi	fp,sp,16
   345bc:	e13ffc15 	stw	r4,-16(fp)
   345c0:	e17ffd15 	stw	r5,-12(fp)
   345c4:	e1bffe15 	stw	r6,-8(fp)
   345c8:	e1ffff15 	stw	r7,-4(fp)
	// check the device is indeed audio configuration
	if (av_config->type != ON_BOARD_DE2_CONFIG && av_config->type != ON_BOARD_DE2_70_CONFIG && av_config->type != ON_BOARD_DE2_115_CONFIG)
   345cc:	e0bffc17 	ldw	r2,-16(fp)
   345d0:	10800b17 	ldw	r2,44(r2)
   345d4:	108000a0 	cmpeqi	r2,r2,2
   345d8:	10000a1e 	bne	r2,zero,34604 <alt_up_av_config_read_video_cfg_register+0x58>
   345dc:	e0bffc17 	ldw	r2,-16(fp)
   345e0:	10800b17 	ldw	r2,44(r2)
   345e4:	108000e0 	cmpeqi	r2,r2,3
   345e8:	1000061e 	bne	r2,zero,34604 <alt_up_av_config_read_video_cfg_register+0x58>
   345ec:	e0bffc17 	ldw	r2,-16(fp)
   345f0:	10800b17 	ldw	r2,44(r2)
   345f4:	10800120 	cmpeqi	r2,r2,4
   345f8:	1000021e 	bne	r2,zero,34604 <alt_up_av_config_read_video_cfg_register+0x58>
		return -EINVAL;
   345fc:	00bffa84 	movi	r2,-22
   34600:	00001f06 	br	34680 <alt_up_av_config_read_video_cfg_register+0xd4>

	if (av_config->type == ON_BOARD_DE2_CONFIG || av_config->type == ON_BOARD_DE2_115_CONFIG)
   34604:	e0bffc17 	ldw	r2,-16(fp)
   34608:	10800b17 	ldw	r2,44(r2)
   3460c:	108000a0 	cmpeqi	r2,r2,2
   34610:	1000041e 	bne	r2,zero,34624 <alt_up_av_config_read_video_cfg_register+0x78>
   34614:	e0bffc17 	ldw	r2,-16(fp)
   34618:	10800b17 	ldw	r2,44(r2)
   3461c:	10800118 	cmpnei	r2,r2,4
   34620:	1000051e 	bne	r2,zero,34638 <alt_up_av_config_read_video_cfg_register+0x8c>
	{
		if (video_port != FIRST_VIDEO_DEVICE)
   34624:	e0bfff17 	ldw	r2,-4(fp)
   34628:	10800060 	cmpeqi	r2,r2,1
   3462c:	10000a1e 	bne	r2,zero,34658 <alt_up_av_config_read_video_cfg_register+0xac>
			return -EINVAL;
   34630:	00bffa84 	movi	r2,-22
   34634:	00001206 	br	34680 <alt_up_av_config_read_video_cfg_register+0xd4>
	} else {
		if ((video_port != FIRST_VIDEO_DEVICE) && (video_port != SECOND_VIDEO_DEVICE))
   34638:	e0bfff17 	ldw	r2,-4(fp)
   3463c:	10800060 	cmpeqi	r2,r2,1
   34640:	1000051e 	bne	r2,zero,34658 <alt_up_av_config_read_video_cfg_register+0xac>
   34644:	e0bfff17 	ldw	r2,-4(fp)
   34648:	108000a0 	cmpeqi	r2,r2,2
   3464c:	1000021e 	bne	r2,zero,34658 <alt_up_av_config_read_video_cfg_register+0xac>
			return -EINVAL;
   34650:	00bffa84 	movi	r2,-22
   34654:	00000a06 	br	34680 <alt_up_av_config_read_video_cfg_register+0xd4>
	}

	// set the video device to be configured in the Control register
	IOWR_ALT_UP_AV_CONFIG_CONTROL_DEVICE(av_config->base, video_port);
   34658:	e0bffc17 	ldw	r2,-16(fp)
   3465c:	10800a17 	ldw	r2,40(r2)
   34660:	10800084 	addi	r2,r2,2
   34664:	1007883a 	mov	r3,r2
   34668:	e0bfff17 	ldw	r2,-4(fp)
   3466c:	18800025 	stbio	r2,0(r3)

	return alt_up_av_config_read_data(av_config, addr, data);
   34670:	e1bffe17 	ldw	r6,-8(fp)
   34674:	e17ffd17 	ldw	r5,-12(fp)
   34678:	e13ffc17 	ldw	r4,-16(fp)
   3467c:	00343540 	call	34354 <alt_up_av_config_read_data>
}
   34680:	e037883a 	mov	sp,fp
   34684:	dfc00117 	ldw	ra,4(sp)
   34688:	df000017 	ldw	fp,0(sp)
   3468c:	dec00204 	addi	sp,sp,8
   34690:	f800283a 	ret

00034694 <alt_up_av_config_write_video_cfg_register>:

int alt_up_av_config_write_video_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 data, SELECTED_ON_BOARD_DEVICE video_port)
{
   34694:	defffa04 	addi	sp,sp,-24
   34698:	dfc00515 	stw	ra,20(sp)
   3469c:	df000415 	stw	fp,16(sp)
   346a0:	df000404 	addi	fp,sp,16
   346a4:	e13ffc15 	stw	r4,-16(fp)
   346a8:	e17ffd15 	stw	r5,-12(fp)
   346ac:	e1bffe15 	stw	r6,-8(fp)
   346b0:	e1ffff15 	stw	r7,-4(fp)
	// check the device is indeed audio configuration
	if (av_config->type != ON_BOARD_DE2_CONFIG && av_config->type != ON_BOARD_DE2_70_CONFIG && av_config->type != ON_BOARD_DE2_115_CONFIG)
   346b4:	e0bffc17 	ldw	r2,-16(fp)
   346b8:	10800b17 	ldw	r2,44(r2)
   346bc:	108000a0 	cmpeqi	r2,r2,2
   346c0:	10000a1e 	bne	r2,zero,346ec <alt_up_av_config_write_video_cfg_register+0x58>
   346c4:	e0bffc17 	ldw	r2,-16(fp)
   346c8:	10800b17 	ldw	r2,44(r2)
   346cc:	108000e0 	cmpeqi	r2,r2,3
   346d0:	1000061e 	bne	r2,zero,346ec <alt_up_av_config_write_video_cfg_register+0x58>
   346d4:	e0bffc17 	ldw	r2,-16(fp)
   346d8:	10800b17 	ldw	r2,44(r2)
   346dc:	10800120 	cmpeqi	r2,r2,4
   346e0:	1000021e 	bne	r2,zero,346ec <alt_up_av_config_write_video_cfg_register+0x58>
		return -EINVAL;
   346e4:	00bffa84 	movi	r2,-22
   346e8:	00001f06 	br	34768 <alt_up_av_config_write_video_cfg_register+0xd4>

	if (av_config->type == ON_BOARD_DE2_CONFIG || av_config->type == ON_BOARD_DE2_115_CONFIG)
   346ec:	e0bffc17 	ldw	r2,-16(fp)
   346f0:	10800b17 	ldw	r2,44(r2)
   346f4:	108000a0 	cmpeqi	r2,r2,2
   346f8:	1000041e 	bne	r2,zero,3470c <alt_up_av_config_write_video_cfg_register+0x78>
   346fc:	e0bffc17 	ldw	r2,-16(fp)
   34700:	10800b17 	ldw	r2,44(r2)
   34704:	10800118 	cmpnei	r2,r2,4
   34708:	1000051e 	bne	r2,zero,34720 <alt_up_av_config_write_video_cfg_register+0x8c>
	{
		if (video_port != FIRST_VIDEO_DEVICE)
   3470c:	e0bfff17 	ldw	r2,-4(fp)
   34710:	10800060 	cmpeqi	r2,r2,1
   34714:	10000a1e 	bne	r2,zero,34740 <alt_up_av_config_write_video_cfg_register+0xac>
			return -EINVAL;
   34718:	00bffa84 	movi	r2,-22
   3471c:	00001206 	br	34768 <alt_up_av_config_write_video_cfg_register+0xd4>
	} else {
		if ((video_port != FIRST_VIDEO_DEVICE) && (video_port != SECOND_VIDEO_DEVICE))
   34720:	e0bfff17 	ldw	r2,-4(fp)
   34724:	10800060 	cmpeqi	r2,r2,1
   34728:	1000051e 	bne	r2,zero,34740 <alt_up_av_config_write_video_cfg_register+0xac>
   3472c:	e0bfff17 	ldw	r2,-4(fp)
   34730:	108000a0 	cmpeqi	r2,r2,2
   34734:	1000021e 	bne	r2,zero,34740 <alt_up_av_config_write_video_cfg_register+0xac>
			return -EINVAL;
   34738:	00bffa84 	movi	r2,-22
   3473c:	00000a06 	br	34768 <alt_up_av_config_write_video_cfg_register+0xd4>
	}

	// set the video device to be configured in the Control register
	IOWR_ALT_UP_AV_CONFIG_CONTROL_DEVICE(av_config->base, video_port);
   34740:	e0bffc17 	ldw	r2,-16(fp)
   34744:	10800a17 	ldw	r2,40(r2)
   34748:	10800084 	addi	r2,r2,2
   3474c:	1007883a 	mov	r3,r2
   34750:	e0bfff17 	ldw	r2,-4(fp)
   34754:	18800025 	stbio	r2,0(r3)

	return alt_up_av_config_write_data(av_config, addr, data);
   34758:	e1bffe17 	ldw	r6,-8(fp)
   3475c:	e17ffd17 	ldw	r5,-12(fp)
   34760:	e13ffc17 	ldw	r4,-16(fp)
   34764:	00342f00 	call	342f0 <alt_up_av_config_write_data>
}
   34768:	e037883a 	mov	sp,fp
   3476c:	dfc00117 	ldw	ra,4(sp)
   34770:	df000017 	ldw	fp,0(sp)
   34774:	dec00204 	addi	sp,sp,8
   34778:	f800283a 	ret

0003477c <alt_up_av_config_read_DC2_cfg_register>:

int alt_up_av_config_read_DC2_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 *data)
{
   3477c:	defffb04 	addi	sp,sp,-20
   34780:	dfc00415 	stw	ra,16(sp)
   34784:	df000315 	stw	fp,12(sp)
   34788:	df000304 	addi	fp,sp,12
   3478c:	e13ffd15 	stw	r4,-12(fp)
   34790:	e17ffe15 	stw	r5,-8(fp)
   34794:	e1bfff15 	stw	r6,-4(fp)
	if (av_config->type != TRDB_DC2_CONFIG)
   34798:	e0bffd17 	ldw	r2,-12(fp)
   3479c:	10800b17 	ldw	r2,44(r2)
   347a0:	10800220 	cmpeqi	r2,r2,8
   347a4:	1000021e 	bne	r2,zero,347b0 <alt_up_av_config_read_DC2_cfg_register+0x34>
		return -EINVAL;
   347a8:	00bffa84 	movi	r2,-22
   347ac:	00000406 	br	347c0 <alt_up_av_config_read_DC2_cfg_register+0x44>

	return alt_up_av_config_read_data(av_config, addr, data);
   347b0:	e1bfff17 	ldw	r6,-4(fp)
   347b4:	e17ffe17 	ldw	r5,-8(fp)
   347b8:	e13ffd17 	ldw	r4,-12(fp)
   347bc:	00343540 	call	34354 <alt_up_av_config_read_data>
}
   347c0:	e037883a 	mov	sp,fp
   347c4:	dfc00117 	ldw	ra,4(sp)
   347c8:	df000017 	ldw	fp,0(sp)
   347cc:	dec00204 	addi	sp,sp,8
   347d0:	f800283a 	ret

000347d4 <alt_up_av_config_write_DC2_cfg_register>:

int alt_up_av_config_write_DC2_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 data)
{
   347d4:	defffb04 	addi	sp,sp,-20
   347d8:	dfc00415 	stw	ra,16(sp)
   347dc:	df000315 	stw	fp,12(sp)
   347e0:	df000304 	addi	fp,sp,12
   347e4:	e13ffd15 	stw	r4,-12(fp)
   347e8:	e17ffe15 	stw	r5,-8(fp)
   347ec:	e1bfff15 	stw	r6,-4(fp)
	if (av_config->type != TRDB_DC2_CONFIG)
   347f0:	e0bffd17 	ldw	r2,-12(fp)
   347f4:	10800b17 	ldw	r2,44(r2)
   347f8:	10800220 	cmpeqi	r2,r2,8
   347fc:	1000021e 	bne	r2,zero,34808 <alt_up_av_config_write_DC2_cfg_register+0x34>
		return -EINVAL;
   34800:	00bffa84 	movi	r2,-22
   34804:	00000406 	br	34818 <alt_up_av_config_write_DC2_cfg_register+0x44>

	return alt_up_av_config_write_data(av_config, addr, data);
   34808:	e1bfff17 	ldw	r6,-4(fp)
   3480c:	e17ffe17 	ldw	r5,-8(fp)
   34810:	e13ffd17 	ldw	r4,-12(fp)
   34814:	00342f00 	call	342f0 <alt_up_av_config_write_data>
}
   34818:	e037883a 	mov	sp,fp
   3481c:	dfc00117 	ldw	ra,4(sp)
   34820:	df000017 	ldw	fp,0(sp)
   34824:	dec00204 	addi	sp,sp,8
   34828:	f800283a 	ret

0003482c <alt_up_av_config_read_D5M_cfg_register>:

int alt_up_av_config_read_D5M_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 *data)
{
   3482c:	defffb04 	addi	sp,sp,-20
   34830:	dfc00415 	stw	ra,16(sp)
   34834:	df000315 	stw	fp,12(sp)
   34838:	df000304 	addi	fp,sp,12
   3483c:	e13ffd15 	stw	r4,-12(fp)
   34840:	e17ffe15 	stw	r5,-8(fp)
   34844:	e1bfff15 	stw	r6,-4(fp)
	if (av_config->type != TRDB_D5M_CONFIG)
   34848:	e0bffd17 	ldw	r2,-12(fp)
   3484c:	10800b17 	ldw	r2,44(r2)
   34850:	10800260 	cmpeqi	r2,r2,9
   34854:	1000021e 	bne	r2,zero,34860 <alt_up_av_config_read_D5M_cfg_register+0x34>
		return -EINVAL;
   34858:	00bffa84 	movi	r2,-22
   3485c:	00000406 	br	34870 <alt_up_av_config_read_D5M_cfg_register+0x44>
	
	return alt_up_av_config_read_data(av_config, addr, data);
   34860:	e1bfff17 	ldw	r6,-4(fp)
   34864:	e17ffe17 	ldw	r5,-8(fp)
   34868:	e13ffd17 	ldw	r4,-12(fp)
   3486c:	00343540 	call	34354 <alt_up_av_config_read_data>
}
   34870:	e037883a 	mov	sp,fp
   34874:	dfc00117 	ldw	ra,4(sp)
   34878:	df000017 	ldw	fp,0(sp)
   3487c:	dec00204 	addi	sp,sp,8
   34880:	f800283a 	ret

00034884 <alt_up_av_config_write_D5M_cfg_register>:

int alt_up_av_config_write_D5M_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 data)
{
   34884:	defffb04 	addi	sp,sp,-20
   34888:	dfc00415 	stw	ra,16(sp)
   3488c:	df000315 	stw	fp,12(sp)
   34890:	df000304 	addi	fp,sp,12
   34894:	e13ffd15 	stw	r4,-12(fp)
   34898:	e17ffe15 	stw	r5,-8(fp)
   3489c:	e1bfff15 	stw	r6,-4(fp)
	if (av_config->type != TRDB_D5M_CONFIG)
   348a0:	e0bffd17 	ldw	r2,-12(fp)
   348a4:	10800b17 	ldw	r2,44(r2)
   348a8:	10800260 	cmpeqi	r2,r2,9
   348ac:	1000021e 	bne	r2,zero,348b8 <alt_up_av_config_write_D5M_cfg_register+0x34>
		return -EINVAL;
   348b0:	00bffa84 	movi	r2,-22
   348b4:	00000406 	br	348c8 <alt_up_av_config_write_D5M_cfg_register+0x44>
	
	return alt_up_av_config_write_data(av_config, addr, data);
   348b8:	e1bfff17 	ldw	r6,-4(fp)
   348bc:	e17ffe17 	ldw	r5,-8(fp)
   348c0:	e13ffd17 	ldw	r4,-12(fp)
   348c4:	00342f00 	call	342f0 <alt_up_av_config_write_data>
}
   348c8:	e037883a 	mov	sp,fp
   348cc:	dfc00117 	ldw	ra,4(sp)
   348d0:	df000017 	ldw	fp,0(sp)
   348d4:	dec00204 	addi	sp,sp,8
   348d8:	f800283a 	ret

000348dc <alt_up_av_config_read_LTM_cfg_register>:

int alt_up_av_config_read_LTM_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 *data)
{
   348dc:	defffb04 	addi	sp,sp,-20
   348e0:	dfc00415 	stw	ra,16(sp)
   348e4:	df000315 	stw	fp,12(sp)
   348e8:	df000304 	addi	fp,sp,12
   348ec:	e13ffd15 	stw	r4,-12(fp)
   348f0:	e17ffe15 	stw	r5,-8(fp)
   348f4:	e1bfff15 	stw	r6,-4(fp)
	if (av_config->type != TRDB_LTM_CONFIG)
   348f8:	e0bffd17 	ldw	r2,-12(fp)
   348fc:	10800b17 	ldw	r2,44(r2)
   34900:	108002a0 	cmpeqi	r2,r2,10
   34904:	1000021e 	bne	r2,zero,34910 <alt_up_av_config_read_LTM_cfg_register+0x34>
		return -EINVAL;
   34908:	00bffa84 	movi	r2,-22
   3490c:	00000406 	br	34920 <alt_up_av_config_read_LTM_cfg_register+0x44>

	return alt_up_av_config_read_data(av_config, addr, data);
   34910:	e1bfff17 	ldw	r6,-4(fp)
   34914:	e17ffe17 	ldw	r5,-8(fp)
   34918:	e13ffd17 	ldw	r4,-12(fp)
   3491c:	00343540 	call	34354 <alt_up_av_config_read_data>
}
   34920:	e037883a 	mov	sp,fp
   34924:	dfc00117 	ldw	ra,4(sp)
   34928:	df000017 	ldw	fp,0(sp)
   3492c:	dec00204 	addi	sp,sp,8
   34930:	f800283a 	ret

00034934 <alt_up_av_config_write_LTM_cfg_register>:

int alt_up_av_config_write_LTM_cfg_register(alt_up_av_config_dev *av_config, alt_u32 addr, alt_u32 data)
{
   34934:	defffb04 	addi	sp,sp,-20
   34938:	dfc00415 	stw	ra,16(sp)
   3493c:	df000315 	stw	fp,12(sp)
   34940:	df000304 	addi	fp,sp,12
   34944:	e13ffd15 	stw	r4,-12(fp)
   34948:	e17ffe15 	stw	r5,-8(fp)
   3494c:	e1bfff15 	stw	r6,-4(fp)
	if (av_config->type != TRDB_LTM_CONFIG)
   34950:	e0bffd17 	ldw	r2,-12(fp)
   34954:	10800b17 	ldw	r2,44(r2)
   34958:	108002a0 	cmpeqi	r2,r2,10
   3495c:	1000021e 	bne	r2,zero,34968 <alt_up_av_config_write_LTM_cfg_register+0x34>
		return -EINVAL;
   34960:	00bffa84 	movi	r2,-22
   34964:	00000406 	br	34978 <alt_up_av_config_write_LTM_cfg_register+0x44>

	return alt_up_av_config_write_data(av_config, addr, data);
   34968:	e1bfff17 	ldw	r6,-4(fp)
   3496c:	e17ffe17 	ldw	r5,-8(fp)
   34970:	e13ffd17 	ldw	r4,-12(fp)
   34974:	00342f00 	call	342f0 <alt_up_av_config_write_data>
}
   34978:	e037883a 	mov	sp,fp
   3497c:	dfc00117 	ldw	ra,4(sp)
   34980:	df000017 	ldw	fp,0(sp)
   34984:	dec00204 	addi	sp,sp,8
   34988:	f800283a 	ret

0003498c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   3498c:	defff504 	addi	sp,sp,-44
   34990:	df000a15 	stw	fp,40(sp)
   34994:	df000a04 	addi	fp,sp,40
   34998:	e13ffc15 	stw	r4,-16(fp)
   3499c:	e17ffd15 	stw	r5,-12(fp)
   349a0:	e1bffe15 	stw	r6,-8(fp)
   349a4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   349a8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   349ac:	d0a72417 	ldw	r2,-25456(gp)
  
  if (alt_ticks_per_second ())
   349b0:	10003c26 	beq	r2,zero,34aa4 <alt_alarm_start+0x118>
  {
    if (alarm)
   349b4:	e0bffc17 	ldw	r2,-16(fp)
   349b8:	10003826 	beq	r2,zero,34a9c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   349bc:	e0bffc17 	ldw	r2,-16(fp)
   349c0:	e0fffe17 	ldw	r3,-8(fp)
   349c4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   349c8:	e0bffc17 	ldw	r2,-16(fp)
   349cc:	e0ffff17 	ldw	r3,-4(fp)
   349d0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   349d4:	0005303a 	rdctl	r2,status
   349d8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   349dc:	e0fff917 	ldw	r3,-28(fp)
   349e0:	00bfff84 	movi	r2,-2
   349e4:	1884703a 	and	r2,r3,r2
   349e8:	1001703a 	wrctl	status,r2
  
  return context;
   349ec:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   349f0:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   349f4:	d0a72517 	ldw	r2,-25452(gp)
      
      current_nticks = alt_nticks();
   349f8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   349fc:	e0fffd17 	ldw	r3,-12(fp)
   34a00:	e0bff617 	ldw	r2,-40(fp)
   34a04:	1885883a 	add	r2,r3,r2
   34a08:	10c00044 	addi	r3,r2,1
   34a0c:	e0bffc17 	ldw	r2,-16(fp)
   34a10:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   34a14:	e0bffc17 	ldw	r2,-16(fp)
   34a18:	10c00217 	ldw	r3,8(r2)
   34a1c:	e0bff617 	ldw	r2,-40(fp)
   34a20:	1880042e 	bgeu	r3,r2,34a34 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   34a24:	e0bffc17 	ldw	r2,-16(fp)
   34a28:	00c00044 	movi	r3,1
   34a2c:	10c00405 	stb	r3,16(r2)
   34a30:	00000206 	br	34a3c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   34a34:	e0bffc17 	ldw	r2,-16(fp)
   34a38:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   34a3c:	e0bffc17 	ldw	r2,-16(fp)
   34a40:	d0e01504 	addi	r3,gp,-32684
   34a44:	e0fffa15 	stw	r3,-24(fp)
   34a48:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   34a4c:	e0bffb17 	ldw	r2,-20(fp)
   34a50:	e0fffa17 	ldw	r3,-24(fp)
   34a54:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   34a58:	e0bffa17 	ldw	r2,-24(fp)
   34a5c:	10c00017 	ldw	r3,0(r2)
   34a60:	e0bffb17 	ldw	r2,-20(fp)
   34a64:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   34a68:	e0bffa17 	ldw	r2,-24(fp)
   34a6c:	10800017 	ldw	r2,0(r2)
   34a70:	e0fffb17 	ldw	r3,-20(fp)
   34a74:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   34a78:	e0bffa17 	ldw	r2,-24(fp)
   34a7c:	e0fffb17 	ldw	r3,-20(fp)
   34a80:	10c00015 	stw	r3,0(r2)
   34a84:	e0bff817 	ldw	r2,-32(fp)
   34a88:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   34a8c:	e0bff717 	ldw	r2,-36(fp)
   34a90:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   34a94:	0005883a 	mov	r2,zero
   34a98:	00000306 	br	34aa8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   34a9c:	00bffa84 	movi	r2,-22
   34aa0:	00000106 	br	34aa8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   34aa4:	00bfde84 	movi	r2,-134
  }
}
   34aa8:	e037883a 	mov	sp,fp
   34aac:	df000017 	ldw	fp,0(sp)
   34ab0:	dec00104 	addi	sp,sp,4
   34ab4:	f800283a 	ret

00034ab8 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   34ab8:	defffa04 	addi	sp,sp,-24
   34abc:	dfc00515 	stw	ra,20(sp)
   34ac0:	df000415 	stw	fp,16(sp)
   34ac4:	df000404 	addi	fp,sp,16
   34ac8:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   34acc:	008000c4 	movi	r2,3
   34ad0:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   34ad4:	e0fffd17 	ldw	r3,-12(fp)
   34ad8:	008003f4 	movhi	r2,15
   34adc:	10909004 	addi	r2,r2,16960
   34ae0:	1885383a 	mul	r2,r3,r2
   34ae4:	100b883a 	mov	r5,r2
   34ae8:	0100bef4 	movhi	r4,763
   34aec:	213c2004 	addi	r4,r4,-3968
   34af0:	00238e40 	call	238e4 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   34af4:	100b883a 	mov	r5,r2
   34af8:	01200034 	movhi	r4,32768
   34afc:	213fffc4 	addi	r4,r4,-1
   34b00:	00238e40 	call	238e4 <__udivsi3>
   34b04:	100b883a 	mov	r5,r2
   34b08:	e13fff17 	ldw	r4,-4(fp)
   34b0c:	00238e40 	call	238e4 <__udivsi3>
   34b10:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   34b14:	e0bffe17 	ldw	r2,-8(fp)
   34b18:	10002a26 	beq	r2,zero,34bc4 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   34b1c:	e03ffc15 	stw	zero,-16(fp)
   34b20:	00001706 	br	34b80 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   34b24:	00a00034 	movhi	r2,32768
   34b28:	10bfffc4 	addi	r2,r2,-1
   34b2c:	10bfffc4 	addi	r2,r2,-1
   34b30:	103ffe1e 	bne	r2,zero,34b2c <__alt_mem_SDRAM_controller+0xfc034b2c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   34b34:	e0fffd17 	ldw	r3,-12(fp)
   34b38:	008003f4 	movhi	r2,15
   34b3c:	10909004 	addi	r2,r2,16960
   34b40:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   34b44:	100b883a 	mov	r5,r2
   34b48:	0100bef4 	movhi	r4,763
   34b4c:	213c2004 	addi	r4,r4,-3968
   34b50:	00238e40 	call	238e4 <__udivsi3>
   34b54:	100b883a 	mov	r5,r2
   34b58:	01200034 	movhi	r4,32768
   34b5c:	213fffc4 	addi	r4,r4,-1
   34b60:	00238e40 	call	238e4 <__udivsi3>
   34b64:	1007883a 	mov	r3,r2
   34b68:	e0bfff17 	ldw	r2,-4(fp)
   34b6c:	10c5c83a 	sub	r2,r2,r3
   34b70:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   34b74:	e0bffc17 	ldw	r2,-16(fp)
   34b78:	10800044 	addi	r2,r2,1
   34b7c:	e0bffc15 	stw	r2,-16(fp)
   34b80:	e0fffc17 	ldw	r3,-16(fp)
   34b84:	e0bffe17 	ldw	r2,-8(fp)
   34b88:	18bfe616 	blt	r3,r2,34b24 <__alt_mem_SDRAM_controller+0xfc034b24>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   34b8c:	e0fffd17 	ldw	r3,-12(fp)
   34b90:	008003f4 	movhi	r2,15
   34b94:	10909004 	addi	r2,r2,16960
   34b98:	1885383a 	mul	r2,r3,r2
   34b9c:	100b883a 	mov	r5,r2
   34ba0:	0100bef4 	movhi	r4,763
   34ba4:	213c2004 	addi	r4,r4,-3968
   34ba8:	00238e40 	call	238e4 <__udivsi3>
   34bac:	1007883a 	mov	r3,r2
   34bb0:	e0bfff17 	ldw	r2,-4(fp)
   34bb4:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   34bb8:	10bfffc4 	addi	r2,r2,-1
   34bbc:	103ffe1e 	bne	r2,zero,34bb8 <__alt_mem_SDRAM_controller+0xfc034bb8>
   34bc0:	00000d06 	br	34bf8 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   34bc4:	e0fffd17 	ldw	r3,-12(fp)
   34bc8:	008003f4 	movhi	r2,15
   34bcc:	10909004 	addi	r2,r2,16960
   34bd0:	1885383a 	mul	r2,r3,r2
   34bd4:	100b883a 	mov	r5,r2
   34bd8:	0100bef4 	movhi	r4,763
   34bdc:	213c2004 	addi	r4,r4,-3968
   34be0:	00238e40 	call	238e4 <__udivsi3>
   34be4:	1007883a 	mov	r3,r2
   34be8:	e0bfff17 	ldw	r2,-4(fp)
   34bec:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   34bf0:	10bfffc4 	addi	r2,r2,-1
   34bf4:	00bffe16 	blt	zero,r2,34bf0 <__alt_mem_SDRAM_controller+0xfc034bf0>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   34bf8:	0005883a 	mov	r2,zero
}
   34bfc:	e037883a 	mov	sp,fp
   34c00:	dfc00117 	ldw	ra,4(sp)
   34c04:	df000017 	ldw	fp,0(sp)
   34c08:	dec00204 	addi	sp,sp,8
   34c0c:	f800283a 	ret

00034c10 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   34c10:	defffe04 	addi	sp,sp,-8
   34c14:	df000115 	stw	fp,4(sp)
   34c18:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   34c1c:	e03fff15 	stw	zero,-4(fp)
   34c20:	00000506 	br	34c38 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   34c24:	e0bfff17 	ldw	r2,-4(fp)
   34c28:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   34c2c:	e0bfff17 	ldw	r2,-4(fp)
   34c30:	10800804 	addi	r2,r2,32
   34c34:	e0bfff15 	stw	r2,-4(fp)
   34c38:	e0bfff17 	ldw	r2,-4(fp)
   34c3c:	10820030 	cmpltui	r2,r2,2048
   34c40:	103ff81e 	bne	r2,zero,34c24 <__alt_mem_SDRAM_controller+0xfc034c24>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   34c44:	0001883a 	nop
   34c48:	e037883a 	mov	sp,fp
   34c4c:	df000017 	ldw	fp,0(sp)
   34c50:	dec00104 	addi	sp,sp,4
   34c54:	f800283a 	ret

00034c58 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   34c58:	defffe04 	addi	sp,sp,-8
   34c5c:	dfc00115 	stw	ra,4(sp)
   34c60:	df000015 	stw	fp,0(sp)
   34c64:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   34c68:	d0a00e17 	ldw	r2,-32712(gp)
   34c6c:	10000326 	beq	r2,zero,34c7c <alt_get_errno+0x24>
   34c70:	d0a00e17 	ldw	r2,-32712(gp)
   34c74:	103ee83a 	callr	r2
   34c78:	00000106 	br	34c80 <alt_get_errno+0x28>
   34c7c:	d0a71f04 	addi	r2,gp,-25476
}
   34c80:	e037883a 	mov	sp,fp
   34c84:	dfc00117 	ldw	ra,4(sp)
   34c88:	df000017 	ldw	fp,0(sp)
   34c8c:	dec00204 	addi	sp,sp,8
   34c90:	f800283a 	ret

00034c94 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   34c94:	defffa04 	addi	sp,sp,-24
   34c98:	dfc00515 	stw	ra,20(sp)
   34c9c:	df000415 	stw	fp,16(sp)
   34ca0:	df000404 	addi	fp,sp,16
   34ca4:	e13ffe15 	stw	r4,-8(fp)
   34ca8:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   34cac:	e0bffe17 	ldw	r2,-8(fp)
   34cb0:	10000326 	beq	r2,zero,34cc0 <alt_dev_llist_insert+0x2c>
   34cb4:	e0bffe17 	ldw	r2,-8(fp)
   34cb8:	10800217 	ldw	r2,8(r2)
   34cbc:	1000061e 	bne	r2,zero,34cd8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   34cc0:	0034c580 	call	34c58 <alt_get_errno>
   34cc4:	1007883a 	mov	r3,r2
   34cc8:	00800584 	movi	r2,22
   34ccc:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   34cd0:	00bffa84 	movi	r2,-22
   34cd4:	00001306 	br	34d24 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   34cd8:	e0bffe17 	ldw	r2,-8(fp)
   34cdc:	e0ffff17 	ldw	r3,-4(fp)
   34ce0:	e0fffc15 	stw	r3,-16(fp)
   34ce4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   34ce8:	e0bffd17 	ldw	r2,-12(fp)
   34cec:	e0fffc17 	ldw	r3,-16(fp)
   34cf0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   34cf4:	e0bffc17 	ldw	r2,-16(fp)
   34cf8:	10c00017 	ldw	r3,0(r2)
   34cfc:	e0bffd17 	ldw	r2,-12(fp)
   34d00:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   34d04:	e0bffc17 	ldw	r2,-16(fp)
   34d08:	10800017 	ldw	r2,0(r2)
   34d0c:	e0fffd17 	ldw	r3,-12(fp)
   34d10:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   34d14:	e0bffc17 	ldw	r2,-16(fp)
   34d18:	e0fffd17 	ldw	r3,-12(fp)
   34d1c:	10c00015 	stw	r3,0(r2)

  return 0;  
   34d20:	0005883a 	mov	r2,zero
}
   34d24:	e037883a 	mov	sp,fp
   34d28:	dfc00117 	ldw	ra,4(sp)
   34d2c:	df000017 	ldw	fp,0(sp)
   34d30:	dec00204 	addi	sp,sp,8
   34d34:	f800283a 	ret

00034d38 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   34d38:	defffd04 	addi	sp,sp,-12
   34d3c:	dfc00215 	stw	ra,8(sp)
   34d40:	df000115 	stw	fp,4(sp)
   34d44:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   34d48:	008000f4 	movhi	r2,3
   34d4c:	10970004 	addi	r2,r2,23552
   34d50:	e0bfff15 	stw	r2,-4(fp)
   34d54:	00000606 	br	34d70 <_do_ctors+0x38>
        (*ctor) (); 
   34d58:	e0bfff17 	ldw	r2,-4(fp)
   34d5c:	10800017 	ldw	r2,0(r2)
   34d60:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   34d64:	e0bfff17 	ldw	r2,-4(fp)
   34d68:	10bfff04 	addi	r2,r2,-4
   34d6c:	e0bfff15 	stw	r2,-4(fp)
   34d70:	e0ffff17 	ldw	r3,-4(fp)
   34d74:	008000f4 	movhi	r2,3
   34d78:	10970104 	addi	r2,r2,23556
   34d7c:	18bff62e 	bgeu	r3,r2,34d58 <__alt_mem_SDRAM_controller+0xfc034d58>
        (*ctor) (); 
}
   34d80:	0001883a 	nop
   34d84:	e037883a 	mov	sp,fp
   34d88:	dfc00117 	ldw	ra,4(sp)
   34d8c:	df000017 	ldw	fp,0(sp)
   34d90:	dec00204 	addi	sp,sp,8
   34d94:	f800283a 	ret

00034d98 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   34d98:	defffd04 	addi	sp,sp,-12
   34d9c:	dfc00215 	stw	ra,8(sp)
   34da0:	df000115 	stw	fp,4(sp)
   34da4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   34da8:	008000f4 	movhi	r2,3
   34dac:	10970004 	addi	r2,r2,23552
   34db0:	e0bfff15 	stw	r2,-4(fp)
   34db4:	00000606 	br	34dd0 <_do_dtors+0x38>
        (*dtor) (); 
   34db8:	e0bfff17 	ldw	r2,-4(fp)
   34dbc:	10800017 	ldw	r2,0(r2)
   34dc0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   34dc4:	e0bfff17 	ldw	r2,-4(fp)
   34dc8:	10bfff04 	addi	r2,r2,-4
   34dcc:	e0bfff15 	stw	r2,-4(fp)
   34dd0:	e0ffff17 	ldw	r3,-4(fp)
   34dd4:	008000f4 	movhi	r2,3
   34dd8:	10970104 	addi	r2,r2,23556
   34ddc:	18bff62e 	bgeu	r3,r2,34db8 <__alt_mem_SDRAM_controller+0xfc034db8>
        (*dtor) (); 
}
   34de0:	0001883a 	nop
   34de4:	e037883a 	mov	sp,fp
   34de8:	dfc00117 	ldw	ra,4(sp)
   34dec:	df000017 	ldw	fp,0(sp)
   34df0:	dec00204 	addi	sp,sp,8
   34df4:	f800283a 	ret

00034df8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   34df8:	defffa04 	addi	sp,sp,-24
   34dfc:	dfc00515 	stw	ra,20(sp)
   34e00:	df000415 	stw	fp,16(sp)
   34e04:	df000404 	addi	fp,sp,16
   34e08:	e13ffe15 	stw	r4,-8(fp)
   34e0c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   34e10:	e0bfff17 	ldw	r2,-4(fp)
   34e14:	10800017 	ldw	r2,0(r2)
   34e18:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   34e1c:	e13ffe17 	ldw	r4,-8(fp)
   34e20:	00278680 	call	27868 <strlen>
   34e24:	10800044 	addi	r2,r2,1
   34e28:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   34e2c:	00000d06 	br	34e64 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   34e30:	e0bffc17 	ldw	r2,-16(fp)
   34e34:	10800217 	ldw	r2,8(r2)
   34e38:	e0fffd17 	ldw	r3,-12(fp)
   34e3c:	180d883a 	mov	r6,r3
   34e40:	e17ffe17 	ldw	r5,-8(fp)
   34e44:	1009883a 	mov	r4,r2
   34e48:	00358bc0 	call	358bc <memcmp>
   34e4c:	1000021e 	bne	r2,zero,34e58 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   34e50:	e0bffc17 	ldw	r2,-16(fp)
   34e54:	00000706 	br	34e74 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   34e58:	e0bffc17 	ldw	r2,-16(fp)
   34e5c:	10800017 	ldw	r2,0(r2)
   34e60:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   34e64:	e0fffc17 	ldw	r3,-16(fp)
   34e68:	e0bfff17 	ldw	r2,-4(fp)
   34e6c:	18bff01e 	bne	r3,r2,34e30 <__alt_mem_SDRAM_controller+0xfc034e30>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   34e70:	0005883a 	mov	r2,zero
}
   34e74:	e037883a 	mov	sp,fp
   34e78:	dfc00117 	ldw	ra,4(sp)
   34e7c:	df000017 	ldw	fp,0(sp)
   34e80:	dec00204 	addi	sp,sp,8
   34e84:	f800283a 	ret

00034e88 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   34e88:	defffe04 	addi	sp,sp,-8
   34e8c:	dfc00115 	stw	ra,4(sp)
   34e90:	df000015 	stw	fp,0(sp)
   34e94:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   34e98:	01440004 	movi	r5,4096
   34e9c:	0009883a 	mov	r4,zero
   34ea0:	00357440 	call	35744 <alt_icache_flush>
#endif
}
   34ea4:	0001883a 	nop
   34ea8:	e037883a 	mov	sp,fp
   34eac:	dfc00117 	ldw	ra,4(sp)
   34eb0:	df000017 	ldw	fp,0(sp)
   34eb4:	dec00204 	addi	sp,sp,8
   34eb8:	f800283a 	ret

00034ebc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   34ebc:	defff904 	addi	sp,sp,-28
   34ec0:	dfc00615 	stw	ra,24(sp)
   34ec4:	df000515 	stw	fp,20(sp)
   34ec8:	df000504 	addi	fp,sp,20
   34ecc:	e13ffc15 	stw	r4,-16(fp)
   34ed0:	e17ffd15 	stw	r5,-12(fp)
   34ed4:	e1bffe15 	stw	r6,-8(fp)
   34ed8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   34edc:	e1bfff17 	ldw	r6,-4(fp)
   34ee0:	e17ffe17 	ldw	r5,-8(fp)
   34ee4:	e13ffd17 	ldw	r4,-12(fp)
   34ee8:	003527c0 	call	3527c <open>
   34eec:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   34ef0:	e0bffb17 	ldw	r2,-20(fp)
   34ef4:	10001c16 	blt	r2,zero,34f68 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   34ef8:	008000f4 	movhi	r2,3
   34efc:	109b9304 	addi	r2,r2,28236
   34f00:	e0fffb17 	ldw	r3,-20(fp)
   34f04:	18c00324 	muli	r3,r3,12
   34f08:	10c5883a 	add	r2,r2,r3
   34f0c:	10c00017 	ldw	r3,0(r2)
   34f10:	e0bffc17 	ldw	r2,-16(fp)
   34f14:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   34f18:	008000f4 	movhi	r2,3
   34f1c:	109b9304 	addi	r2,r2,28236
   34f20:	e0fffb17 	ldw	r3,-20(fp)
   34f24:	18c00324 	muli	r3,r3,12
   34f28:	10c5883a 	add	r2,r2,r3
   34f2c:	10800104 	addi	r2,r2,4
   34f30:	10c00017 	ldw	r3,0(r2)
   34f34:	e0bffc17 	ldw	r2,-16(fp)
   34f38:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   34f3c:	008000f4 	movhi	r2,3
   34f40:	109b9304 	addi	r2,r2,28236
   34f44:	e0fffb17 	ldw	r3,-20(fp)
   34f48:	18c00324 	muli	r3,r3,12
   34f4c:	10c5883a 	add	r2,r2,r3
   34f50:	10800204 	addi	r2,r2,8
   34f54:	10c00017 	ldw	r3,0(r2)
   34f58:	e0bffc17 	ldw	r2,-16(fp)
   34f5c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   34f60:	e13ffb17 	ldw	r4,-20(fp)
   34f64:	0031f5c0 	call	31f5c <alt_release_fd>
  }
} 
   34f68:	0001883a 	nop
   34f6c:	e037883a 	mov	sp,fp
   34f70:	dfc00117 	ldw	ra,4(sp)
   34f74:	df000017 	ldw	fp,0(sp)
   34f78:	dec00204 	addi	sp,sp,8
   34f7c:	f800283a 	ret

00034f80 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   34f80:	defffb04 	addi	sp,sp,-20
   34f84:	dfc00415 	stw	ra,16(sp)
   34f88:	df000315 	stw	fp,12(sp)
   34f8c:	df000304 	addi	fp,sp,12
   34f90:	e13ffd15 	stw	r4,-12(fp)
   34f94:	e17ffe15 	stw	r5,-8(fp)
   34f98:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   34f9c:	01c07fc4 	movi	r7,511
   34fa0:	01800044 	movi	r6,1
   34fa4:	e17ffd17 	ldw	r5,-12(fp)
   34fa8:	010000f4 	movhi	r4,3
   34fac:	211b9604 	addi	r4,r4,28248
   34fb0:	0034ebc0 	call	34ebc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   34fb4:	01c07fc4 	movi	r7,511
   34fb8:	000d883a 	mov	r6,zero
   34fbc:	e17ffe17 	ldw	r5,-8(fp)
   34fc0:	010000f4 	movhi	r4,3
   34fc4:	211b9304 	addi	r4,r4,28236
   34fc8:	0034ebc0 	call	34ebc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   34fcc:	01c07fc4 	movi	r7,511
   34fd0:	01800044 	movi	r6,1
   34fd4:	e17fff17 	ldw	r5,-4(fp)
   34fd8:	010000f4 	movhi	r4,3
   34fdc:	211b9904 	addi	r4,r4,28260
   34fe0:	0034ebc0 	call	34ebc <alt_open_fd>
}  
   34fe4:	0001883a 	nop
   34fe8:	e037883a 	mov	sp,fp
   34fec:	dfc00117 	ldw	ra,4(sp)
   34ff0:	df000017 	ldw	fp,0(sp)
   34ff4:	dec00204 	addi	sp,sp,8
   34ff8:	f800283a 	ret

00034ffc <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   34ffc:	defff004 	addi	sp,sp,-64
   35000:	df000f15 	stw	fp,60(sp)
   35004:	df000f04 	addi	fp,sp,60
   35008:	e13ffd15 	stw	r4,-12(fp)
   3500c:	e17ffe15 	stw	r5,-8(fp)
   35010:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
   35014:	00bffa84 	movi	r2,-22
   35018:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   3501c:	e0bffd17 	ldw	r2,-12(fp)
   35020:	10800828 	cmpgeui	r2,r2,32
   35024:	1000501e 	bne	r2,zero,35168 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   35028:	0005303a 	rdctl	r2,status
   3502c:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   35030:	e0fff617 	ldw	r3,-40(fp)
   35034:	00bfff84 	movi	r2,-2
   35038:	1884703a 	and	r2,r3,r2
   3503c:	1001703a 	wrctl	status,r2
  
  return context;
   35040:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   35044:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
   35048:	00800134 	movhi	r2,4
   3504c:	10a78804 	addi	r2,r2,-25056
   35050:	e0fffd17 	ldw	r3,-12(fp)
   35054:	180690fa 	slli	r3,r3,3
   35058:	10c5883a 	add	r2,r2,r3
   3505c:	e0ffff17 	ldw	r3,-4(fp)
   35060:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
   35064:	00800134 	movhi	r2,4
   35068:	10a78804 	addi	r2,r2,-25056
   3506c:	e0fffd17 	ldw	r3,-12(fp)
   35070:	180690fa 	slli	r3,r3,3
   35074:	10c5883a 	add	r2,r2,r3
   35078:	10800104 	addi	r2,r2,4
   3507c:	e0fffe17 	ldw	r3,-8(fp)
   35080:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   35084:	e0bfff17 	ldw	r2,-4(fp)
   35088:	10001926 	beq	r2,zero,350f0 <alt_irq_register+0xf4>
   3508c:	e0bffd17 	ldw	r2,-12(fp)
   35090:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   35094:	0005303a 	rdctl	r2,status
   35098:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   3509c:	e0fff717 	ldw	r3,-36(fp)
   350a0:	00bfff84 	movi	r2,-2
   350a4:	1884703a 	and	r2,r3,r2
   350a8:	1001703a 	wrctl	status,r2
  
  return context;
   350ac:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   350b0:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
   350b4:	00c00044 	movi	r3,1
   350b8:	e0bff217 	ldw	r2,-56(fp)
   350bc:	1884983a 	sll	r2,r3,r2
   350c0:	1007883a 	mov	r3,r2
   350c4:	d0a72317 	ldw	r2,-25460(gp)
   350c8:	1884b03a 	or	r2,r3,r2
   350cc:	d0a72315 	stw	r2,-25460(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   350d0:	d0a72317 	ldw	r2,-25460(gp)
   350d4:	100170fa 	wrctl	ienable,r2
   350d8:	e0bff817 	ldw	r2,-32(fp)
   350dc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   350e0:	e0bff917 	ldw	r2,-28(fp)
   350e4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   350e8:	0005883a 	mov	r2,zero
   350ec:	00001906 	br	35154 <alt_irq_register+0x158>
   350f0:	e0bffd17 	ldw	r2,-12(fp)
   350f4:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   350f8:	0005303a 	rdctl	r2,status
   350fc:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   35100:	e0fffa17 	ldw	r3,-24(fp)
   35104:	00bfff84 	movi	r2,-2
   35108:	1884703a 	and	r2,r3,r2
   3510c:	1001703a 	wrctl	status,r2
  
  return context;
   35110:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   35114:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
   35118:	00c00044 	movi	r3,1
   3511c:	e0bff417 	ldw	r2,-48(fp)
   35120:	1884983a 	sll	r2,r3,r2
   35124:	0084303a 	nor	r2,zero,r2
   35128:	1007883a 	mov	r3,r2
   3512c:	d0a72317 	ldw	r2,-25460(gp)
   35130:	1884703a 	and	r2,r3,r2
   35134:	d0a72315 	stw	r2,-25460(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   35138:	d0a72317 	ldw	r2,-25460(gp)
   3513c:	100170fa 	wrctl	ienable,r2
   35140:	e0bffb17 	ldw	r2,-20(fp)
   35144:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   35148:	e0bffc17 	ldw	r2,-16(fp)
   3514c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   35150:	0005883a 	mov	r2,zero
   35154:	e0bff115 	stw	r2,-60(fp)
   35158:	e0bff317 	ldw	r2,-52(fp)
   3515c:	e0bff515 	stw	r2,-44(fp)
   35160:	e0bff517 	ldw	r2,-44(fp)
   35164:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
   35168:	e0bff117 	ldw	r2,-60(fp)
}
   3516c:	e037883a 	mov	sp,fp
   35170:	df000017 	ldw	fp,0(sp)
   35174:	dec00104 	addi	sp,sp,4
   35178:	f800283a 	ret

0003517c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   3517c:	defffe04 	addi	sp,sp,-8
   35180:	dfc00115 	stw	ra,4(sp)
   35184:	df000015 	stw	fp,0(sp)
   35188:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   3518c:	d0a00e17 	ldw	r2,-32712(gp)
   35190:	10000326 	beq	r2,zero,351a0 <alt_get_errno+0x24>
   35194:	d0a00e17 	ldw	r2,-32712(gp)
   35198:	103ee83a 	callr	r2
   3519c:	00000106 	br	351a4 <alt_get_errno+0x28>
   351a0:	d0a71f04 	addi	r2,gp,-25476
}
   351a4:	e037883a 	mov	sp,fp
   351a8:	dfc00117 	ldw	ra,4(sp)
   351ac:	df000017 	ldw	fp,0(sp)
   351b0:	dec00204 	addi	sp,sp,8
   351b4:	f800283a 	ret

000351b8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   351b8:	defffd04 	addi	sp,sp,-12
   351bc:	df000215 	stw	fp,8(sp)
   351c0:	df000204 	addi	fp,sp,8
   351c4:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   351c8:	e0bfff17 	ldw	r2,-4(fp)
   351cc:	10800217 	ldw	r2,8(r2)
   351d0:	10d00034 	orhi	r3,r2,16384
   351d4:	e0bfff17 	ldw	r2,-4(fp)
   351d8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   351dc:	e03ffe15 	stw	zero,-8(fp)
   351e0:	00001d06 	br	35258 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   351e4:	008000f4 	movhi	r2,3
   351e8:	109b9304 	addi	r2,r2,28236
   351ec:	e0fffe17 	ldw	r3,-8(fp)
   351f0:	18c00324 	muli	r3,r3,12
   351f4:	10c5883a 	add	r2,r2,r3
   351f8:	10c00017 	ldw	r3,0(r2)
   351fc:	e0bfff17 	ldw	r2,-4(fp)
   35200:	10800017 	ldw	r2,0(r2)
   35204:	1880111e 	bne	r3,r2,3524c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   35208:	008000f4 	movhi	r2,3
   3520c:	109b9304 	addi	r2,r2,28236
   35210:	e0fffe17 	ldw	r3,-8(fp)
   35214:	18c00324 	muli	r3,r3,12
   35218:	10c5883a 	add	r2,r2,r3
   3521c:	10800204 	addi	r2,r2,8
   35220:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   35224:	1000090e 	bge	r2,zero,3524c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   35228:	e0bffe17 	ldw	r2,-8(fp)
   3522c:	10c00324 	muli	r3,r2,12
   35230:	008000f4 	movhi	r2,3
   35234:	109b9304 	addi	r2,r2,28236
   35238:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   3523c:	e0bfff17 	ldw	r2,-4(fp)
   35240:	18800226 	beq	r3,r2,3524c <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   35244:	00bffcc4 	movi	r2,-13
   35248:	00000806 	br	3526c <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   3524c:	e0bffe17 	ldw	r2,-8(fp)
   35250:	10800044 	addi	r2,r2,1
   35254:	e0bffe15 	stw	r2,-8(fp)
   35258:	d0a00d17 	ldw	r2,-32716(gp)
   3525c:	1007883a 	mov	r3,r2
   35260:	e0bffe17 	ldw	r2,-8(fp)
   35264:	18bfdf2e 	bgeu	r3,r2,351e4 <__alt_mem_SDRAM_controller+0xfc0351e4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   35268:	0005883a 	mov	r2,zero
}
   3526c:	e037883a 	mov	sp,fp
   35270:	df000017 	ldw	fp,0(sp)
   35274:	dec00104 	addi	sp,sp,4
   35278:	f800283a 	ret

0003527c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   3527c:	defff604 	addi	sp,sp,-40
   35280:	dfc00915 	stw	ra,36(sp)
   35284:	df000815 	stw	fp,32(sp)
   35288:	df000804 	addi	fp,sp,32
   3528c:	e13ffd15 	stw	r4,-12(fp)
   35290:	e17ffe15 	stw	r5,-8(fp)
   35294:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   35298:	00bfffc4 	movi	r2,-1
   3529c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   352a0:	00bffb44 	movi	r2,-19
   352a4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   352a8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   352ac:	d1600b04 	addi	r5,gp,-32724
   352b0:	e13ffd17 	ldw	r4,-12(fp)
   352b4:	0034df80 	call	34df8 <alt_find_dev>
   352b8:	e0bff815 	stw	r2,-32(fp)
   352bc:	e0bff817 	ldw	r2,-32(fp)
   352c0:	1000051e 	bne	r2,zero,352d8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   352c4:	e13ffd17 	ldw	r4,-12(fp)
   352c8:	00355980 	call	35598 <alt_find_file>
   352cc:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   352d0:	00800044 	movi	r2,1
   352d4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   352d8:	e0bff817 	ldw	r2,-32(fp)
   352dc:	10002926 	beq	r2,zero,35384 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   352e0:	e13ff817 	ldw	r4,-32(fp)
   352e4:	00356a00 	call	356a0 <alt_get_fd>
   352e8:	e0bff915 	stw	r2,-28(fp)
   352ec:	e0bff917 	ldw	r2,-28(fp)
   352f0:	1000030e 	bge	r2,zero,35300 <open+0x84>
    {
      status = index;
   352f4:	e0bff917 	ldw	r2,-28(fp)
   352f8:	e0bffa15 	stw	r2,-24(fp)
   352fc:	00002306 	br	3538c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   35300:	e0bff917 	ldw	r2,-28(fp)
   35304:	10c00324 	muli	r3,r2,12
   35308:	008000f4 	movhi	r2,3
   3530c:	109b9304 	addi	r2,r2,28236
   35310:	1885883a 	add	r2,r3,r2
   35314:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   35318:	e0fffe17 	ldw	r3,-8(fp)
   3531c:	00900034 	movhi	r2,16384
   35320:	10bfffc4 	addi	r2,r2,-1
   35324:	1886703a 	and	r3,r3,r2
   35328:	e0bffc17 	ldw	r2,-16(fp)
   3532c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   35330:	e0bffb17 	ldw	r2,-20(fp)
   35334:	1000051e 	bne	r2,zero,3534c <open+0xd0>
   35338:	e13ffc17 	ldw	r4,-16(fp)
   3533c:	00351b80 	call	351b8 <alt_file_locked>
   35340:	e0bffa15 	stw	r2,-24(fp)
   35344:	e0bffa17 	ldw	r2,-24(fp)
   35348:	10001016 	blt	r2,zero,3538c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   3534c:	e0bff817 	ldw	r2,-32(fp)
   35350:	10800317 	ldw	r2,12(r2)
   35354:	10000826 	beq	r2,zero,35378 <open+0xfc>
   35358:	e0bff817 	ldw	r2,-32(fp)
   3535c:	10800317 	ldw	r2,12(r2)
   35360:	e1ffff17 	ldw	r7,-4(fp)
   35364:	e1bffe17 	ldw	r6,-8(fp)
   35368:	e17ffd17 	ldw	r5,-12(fp)
   3536c:	e13ffc17 	ldw	r4,-16(fp)
   35370:	103ee83a 	callr	r2
   35374:	00000106 	br	3537c <open+0x100>
   35378:	0005883a 	mov	r2,zero
   3537c:	e0bffa15 	stw	r2,-24(fp)
   35380:	00000206 	br	3538c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   35384:	00bffb44 	movi	r2,-19
   35388:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   3538c:	e0bffa17 	ldw	r2,-24(fp)
   35390:	1000090e 	bge	r2,zero,353b8 <open+0x13c>
  {
    alt_release_fd (index);  
   35394:	e13ff917 	ldw	r4,-28(fp)
   35398:	0031f5c0 	call	31f5c <alt_release_fd>
    ALT_ERRNO = -status;
   3539c:	003517c0 	call	3517c <alt_get_errno>
   353a0:	1007883a 	mov	r3,r2
   353a4:	e0bffa17 	ldw	r2,-24(fp)
   353a8:	0085c83a 	sub	r2,zero,r2
   353ac:	18800015 	stw	r2,0(r3)
    return -1;
   353b0:	00bfffc4 	movi	r2,-1
   353b4:	00000106 	br	353bc <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   353b8:	e0bff917 	ldw	r2,-28(fp)
}
   353bc:	e037883a 	mov	sp,fp
   353c0:	dfc00117 	ldw	ra,4(sp)
   353c4:	df000017 	ldw	fp,0(sp)
   353c8:	dec00204 	addi	sp,sp,8
   353cc:	f800283a 	ret

000353d0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   353d0:	defffa04 	addi	sp,sp,-24
   353d4:	df000515 	stw	fp,20(sp)
   353d8:	df000504 	addi	fp,sp,20
   353dc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   353e0:	0005303a 	rdctl	r2,status
   353e4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   353e8:	e0fffc17 	ldw	r3,-16(fp)
   353ec:	00bfff84 	movi	r2,-2
   353f0:	1884703a 	and	r2,r3,r2
   353f4:	1001703a 	wrctl	status,r2
  
  return context;
   353f8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   353fc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   35400:	e0bfff17 	ldw	r2,-4(fp)
   35404:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   35408:	e0bffd17 	ldw	r2,-12(fp)
   3540c:	10800017 	ldw	r2,0(r2)
   35410:	e0fffd17 	ldw	r3,-12(fp)
   35414:	18c00117 	ldw	r3,4(r3)
   35418:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   3541c:	e0bffd17 	ldw	r2,-12(fp)
   35420:	10800117 	ldw	r2,4(r2)
   35424:	e0fffd17 	ldw	r3,-12(fp)
   35428:	18c00017 	ldw	r3,0(r3)
   3542c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   35430:	e0bffd17 	ldw	r2,-12(fp)
   35434:	e0fffd17 	ldw	r3,-12(fp)
   35438:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   3543c:	e0bffd17 	ldw	r2,-12(fp)
   35440:	e0fffd17 	ldw	r3,-12(fp)
   35444:	10c00015 	stw	r3,0(r2)
   35448:	e0bffb17 	ldw	r2,-20(fp)
   3544c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   35450:	e0bffe17 	ldw	r2,-8(fp)
   35454:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   35458:	0001883a 	nop
   3545c:	e037883a 	mov	sp,fp
   35460:	df000017 	ldw	fp,0(sp)
   35464:	dec00104 	addi	sp,sp,4
   35468:	f800283a 	ret

0003546c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   3546c:	defffb04 	addi	sp,sp,-20
   35470:	dfc00415 	stw	ra,16(sp)
   35474:	df000315 	stw	fp,12(sp)
   35478:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   3547c:	d0a01517 	ldw	r2,-32684(gp)
   35480:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   35484:	d0a72517 	ldw	r2,-25452(gp)
   35488:	10800044 	addi	r2,r2,1
   3548c:	d0a72515 	stw	r2,-25452(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   35490:	00002e06 	br	3554c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   35494:	e0bffd17 	ldw	r2,-12(fp)
   35498:	10800017 	ldw	r2,0(r2)
   3549c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   354a0:	e0bffd17 	ldw	r2,-12(fp)
   354a4:	10800403 	ldbu	r2,16(r2)
   354a8:	10803fcc 	andi	r2,r2,255
   354ac:	10000426 	beq	r2,zero,354c0 <alt_tick+0x54>
   354b0:	d0a72517 	ldw	r2,-25452(gp)
   354b4:	1000021e 	bne	r2,zero,354c0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   354b8:	e0bffd17 	ldw	r2,-12(fp)
   354bc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   354c0:	e0bffd17 	ldw	r2,-12(fp)
   354c4:	10800217 	ldw	r2,8(r2)
   354c8:	d0e72517 	ldw	r3,-25452(gp)
   354cc:	18801d36 	bltu	r3,r2,35544 <alt_tick+0xd8>
   354d0:	e0bffd17 	ldw	r2,-12(fp)
   354d4:	10800403 	ldbu	r2,16(r2)
   354d8:	10803fcc 	andi	r2,r2,255
   354dc:	1000191e 	bne	r2,zero,35544 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   354e0:	e0bffd17 	ldw	r2,-12(fp)
   354e4:	10800317 	ldw	r2,12(r2)
   354e8:	e0fffd17 	ldw	r3,-12(fp)
   354ec:	18c00517 	ldw	r3,20(r3)
   354f0:	1809883a 	mov	r4,r3
   354f4:	103ee83a 	callr	r2
   354f8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   354fc:	e0bfff17 	ldw	r2,-4(fp)
   35500:	1000031e 	bne	r2,zero,35510 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   35504:	e13ffd17 	ldw	r4,-12(fp)
   35508:	00353d00 	call	353d0 <alt_alarm_stop>
   3550c:	00000d06 	br	35544 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   35510:	e0bffd17 	ldw	r2,-12(fp)
   35514:	10c00217 	ldw	r3,8(r2)
   35518:	e0bfff17 	ldw	r2,-4(fp)
   3551c:	1887883a 	add	r3,r3,r2
   35520:	e0bffd17 	ldw	r2,-12(fp)
   35524:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   35528:	e0bffd17 	ldw	r2,-12(fp)
   3552c:	10c00217 	ldw	r3,8(r2)
   35530:	d0a72517 	ldw	r2,-25452(gp)
   35534:	1880032e 	bgeu	r3,r2,35544 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   35538:	e0bffd17 	ldw	r2,-12(fp)
   3553c:	00c00044 	movi	r3,1
   35540:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   35544:	e0bffe17 	ldw	r2,-8(fp)
   35548:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   3554c:	e0fffd17 	ldw	r3,-12(fp)
   35550:	d0a01504 	addi	r2,gp,-32684
   35554:	18bfcf1e 	bne	r3,r2,35494 <__alt_mem_SDRAM_controller+0xfc035494>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   35558:	0001883a 	nop
}
   3555c:	0001883a 	nop
   35560:	e037883a 	mov	sp,fp
   35564:	dfc00117 	ldw	ra,4(sp)
   35568:	df000017 	ldw	fp,0(sp)
   3556c:	dec00204 	addi	sp,sp,8
   35570:	f800283a 	ret

00035574 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   35574:	deffff04 	addi	sp,sp,-4
   35578:	df000015 	stw	fp,0(sp)
   3557c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   35580:	000170fa 	wrctl	ienable,zero
}
   35584:	0001883a 	nop
   35588:	e037883a 	mov	sp,fp
   3558c:	df000017 	ldw	fp,0(sp)
   35590:	dec00104 	addi	sp,sp,4
   35594:	f800283a 	ret

00035598 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   35598:	defffb04 	addi	sp,sp,-20
   3559c:	dfc00415 	stw	ra,16(sp)
   355a0:	df000315 	stw	fp,12(sp)
   355a4:	df000304 	addi	fp,sp,12
   355a8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   355ac:	d0a00917 	ldw	r2,-32732(gp)
   355b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   355b4:	00003106 	br	3567c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   355b8:	e0bffd17 	ldw	r2,-12(fp)
   355bc:	10800217 	ldw	r2,8(r2)
   355c0:	1009883a 	mov	r4,r2
   355c4:	00278680 	call	27868 <strlen>
   355c8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   355cc:	e0bffd17 	ldw	r2,-12(fp)
   355d0:	10c00217 	ldw	r3,8(r2)
   355d4:	e0bffe17 	ldw	r2,-8(fp)
   355d8:	10bfffc4 	addi	r2,r2,-1
   355dc:	1885883a 	add	r2,r3,r2
   355e0:	10800003 	ldbu	r2,0(r2)
   355e4:	10803fcc 	andi	r2,r2,255
   355e8:	1080201c 	xori	r2,r2,128
   355ec:	10bfe004 	addi	r2,r2,-128
   355f0:	10800bd8 	cmpnei	r2,r2,47
   355f4:	1000031e 	bne	r2,zero,35604 <alt_find_file+0x6c>
    {
      len -= 1;
   355f8:	e0bffe17 	ldw	r2,-8(fp)
   355fc:	10bfffc4 	addi	r2,r2,-1
   35600:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   35604:	e0bffe17 	ldw	r2,-8(fp)
   35608:	e0ffff17 	ldw	r3,-4(fp)
   3560c:	1885883a 	add	r2,r3,r2
   35610:	10800003 	ldbu	r2,0(r2)
   35614:	10803fcc 	andi	r2,r2,255
   35618:	1080201c 	xori	r2,r2,128
   3561c:	10bfe004 	addi	r2,r2,-128
   35620:	10800be0 	cmpeqi	r2,r2,47
   35624:	1000081e 	bne	r2,zero,35648 <alt_find_file+0xb0>
   35628:	e0bffe17 	ldw	r2,-8(fp)
   3562c:	e0ffff17 	ldw	r3,-4(fp)
   35630:	1885883a 	add	r2,r3,r2
   35634:	10800003 	ldbu	r2,0(r2)
   35638:	10803fcc 	andi	r2,r2,255
   3563c:	1080201c 	xori	r2,r2,128
   35640:	10bfe004 	addi	r2,r2,-128
   35644:	10000a1e 	bne	r2,zero,35670 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   35648:	e0bffd17 	ldw	r2,-12(fp)
   3564c:	10800217 	ldw	r2,8(r2)
   35650:	e0fffe17 	ldw	r3,-8(fp)
   35654:	180d883a 	mov	r6,r3
   35658:	e17fff17 	ldw	r5,-4(fp)
   3565c:	1009883a 	mov	r4,r2
   35660:	00358bc0 	call	358bc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   35664:	1000021e 	bne	r2,zero,35670 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   35668:	e0bffd17 	ldw	r2,-12(fp)
   3566c:	00000706 	br	3568c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   35670:	e0bffd17 	ldw	r2,-12(fp)
   35674:	10800017 	ldw	r2,0(r2)
   35678:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   3567c:	e0fffd17 	ldw	r3,-12(fp)
   35680:	d0a00904 	addi	r2,gp,-32732
   35684:	18bfcc1e 	bne	r3,r2,355b8 <__alt_mem_SDRAM_controller+0xfc0355b8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   35688:	0005883a 	mov	r2,zero
}
   3568c:	e037883a 	mov	sp,fp
   35690:	dfc00117 	ldw	ra,4(sp)
   35694:	df000017 	ldw	fp,0(sp)
   35698:	dec00204 	addi	sp,sp,8
   3569c:	f800283a 	ret

000356a0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   356a0:	defffc04 	addi	sp,sp,-16
   356a4:	df000315 	stw	fp,12(sp)
   356a8:	df000304 	addi	fp,sp,12
   356ac:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   356b0:	00bffa04 	movi	r2,-24
   356b4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   356b8:	e03ffd15 	stw	zero,-12(fp)
   356bc:	00001906 	br	35724 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   356c0:	008000f4 	movhi	r2,3
   356c4:	109b9304 	addi	r2,r2,28236
   356c8:	e0fffd17 	ldw	r3,-12(fp)
   356cc:	18c00324 	muli	r3,r3,12
   356d0:	10c5883a 	add	r2,r2,r3
   356d4:	10800017 	ldw	r2,0(r2)
   356d8:	10000f1e 	bne	r2,zero,35718 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   356dc:	008000f4 	movhi	r2,3
   356e0:	109b9304 	addi	r2,r2,28236
   356e4:	e0fffd17 	ldw	r3,-12(fp)
   356e8:	18c00324 	muli	r3,r3,12
   356ec:	10c5883a 	add	r2,r2,r3
   356f0:	e0ffff17 	ldw	r3,-4(fp)
   356f4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   356f8:	d0e00d17 	ldw	r3,-32716(gp)
   356fc:	e0bffd17 	ldw	r2,-12(fp)
   35700:	1880020e 	bge	r3,r2,3570c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   35704:	e0bffd17 	ldw	r2,-12(fp)
   35708:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
   3570c:	e0bffd17 	ldw	r2,-12(fp)
   35710:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   35714:	00000606 	br	35730 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   35718:	e0bffd17 	ldw	r2,-12(fp)
   3571c:	10800044 	addi	r2,r2,1
   35720:	e0bffd15 	stw	r2,-12(fp)
   35724:	e0bffd17 	ldw	r2,-12(fp)
   35728:	10800810 	cmplti	r2,r2,32
   3572c:	103fe41e 	bne	r2,zero,356c0 <__alt_mem_SDRAM_controller+0xfc0356c0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   35730:	e0bffe17 	ldw	r2,-8(fp)
}
   35734:	e037883a 	mov	sp,fp
   35738:	df000017 	ldw	fp,0(sp)
   3573c:	dec00104 	addi	sp,sp,4
   35740:	f800283a 	ret

00035744 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   35744:	defffb04 	addi	sp,sp,-20
   35748:	df000415 	stw	fp,16(sp)
   3574c:	df000404 	addi	fp,sp,16
   35750:	e13ffe15 	stw	r4,-8(fp)
   35754:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   35758:	e0bfff17 	ldw	r2,-4(fp)
   3575c:	10840070 	cmpltui	r2,r2,4097
   35760:	1000021e 	bne	r2,zero,3576c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   35764:	00840004 	movi	r2,4096
   35768:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   3576c:	e0fffe17 	ldw	r3,-8(fp)
   35770:	e0bfff17 	ldw	r2,-4(fp)
   35774:	1885883a 	add	r2,r3,r2
   35778:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   3577c:	e0bffe17 	ldw	r2,-8(fp)
   35780:	e0bffc15 	stw	r2,-16(fp)
   35784:	00000506 	br	3579c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   35788:	e0bffc17 	ldw	r2,-16(fp)
   3578c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   35790:	e0bffc17 	ldw	r2,-16(fp)
   35794:	10800804 	addi	r2,r2,32
   35798:	e0bffc15 	stw	r2,-16(fp)
   3579c:	e0fffc17 	ldw	r3,-16(fp)
   357a0:	e0bffd17 	ldw	r2,-12(fp)
   357a4:	18bff836 	bltu	r3,r2,35788 <__alt_mem_SDRAM_controller+0xfc035788>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   357a8:	e0bffe17 	ldw	r2,-8(fp)
   357ac:	108007cc 	andi	r2,r2,31
   357b0:	10000226 	beq	r2,zero,357bc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   357b4:	e0bffc17 	ldw	r2,-16(fp)
   357b8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   357bc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   357c0:	0001883a 	nop
   357c4:	e037883a 	mov	sp,fp
   357c8:	df000017 	ldw	fp,0(sp)
   357cc:	dec00104 	addi	sp,sp,4
   357d0:	f800283a 	ret

000357d4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   357d4:	defffe04 	addi	sp,sp,-8
   357d8:	df000115 	stw	fp,4(sp)
   357dc:	df000104 	addi	fp,sp,4
   357e0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   357e4:	e0bfff17 	ldw	r2,-4(fp)
   357e8:	10bffe84 	addi	r2,r2,-6
   357ec:	10c00428 	cmpgeui	r3,r2,16
   357f0:	18001a1e 	bne	r3,zero,3585c <alt_exception_cause_generated_bad_addr+0x88>
   357f4:	100690ba 	slli	r3,r2,2
   357f8:	008000f4 	movhi	r2,3
   357fc:	10960304 	addi	r2,r2,22540
   35800:	1885883a 	add	r2,r3,r2
   35804:	10800017 	ldw	r2,0(r2)
   35808:	1000683a 	jmp	r2
   3580c:	0003584c 	andi	zero,zero,3425
   35810:	0003584c 	andi	zero,zero,3425
   35814:	0003585c 	xori	zero,zero,3425
   35818:	0003585c 	xori	zero,zero,3425
   3581c:	0003585c 	xori	zero,zero,3425
   35820:	0003584c 	andi	zero,zero,3425
   35824:	00035854 	movui	zero,3425
   35828:	0003585c 	xori	zero,zero,3425
   3582c:	0003584c 	andi	zero,zero,3425
   35830:	0003584c 	andi	zero,zero,3425
   35834:	0003585c 	xori	zero,zero,3425
   35838:	0003584c 	andi	zero,zero,3425
   3583c:	00035854 	movui	zero,3425
   35840:	0003585c 	xori	zero,zero,3425
   35844:	0003585c 	xori	zero,zero,3425
   35848:	0003584c 	andi	zero,zero,3425
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   3584c:	00800044 	movi	r2,1
   35850:	00000306 	br	35860 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   35854:	0005883a 	mov	r2,zero
   35858:	00000106 	br	35860 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   3585c:	0005883a 	mov	r2,zero
  }
}
   35860:	e037883a 	mov	sp,fp
   35864:	df000017 	ldw	fp,0(sp)
   35868:	dec00104 	addi	sp,sp,4
   3586c:	f800283a 	ret

00035870 <atexit>:
   35870:	200b883a 	mov	r5,r4
   35874:	000f883a 	mov	r7,zero
   35878:	000d883a 	mov	r6,zero
   3587c:	0009883a 	mov	r4,zero
   35880:	00359381 	jmpi	35938 <__register_exitproc>

00035884 <exit>:
   35884:	defffe04 	addi	sp,sp,-8
   35888:	000b883a 	mov	r5,zero
   3588c:	dc000015 	stw	r16,0(sp)
   35890:	dfc00115 	stw	ra,4(sp)
   35894:	2021883a 	mov	r16,r4
   35898:	0035a500 	call	35a50 <__call_exitprocs>
   3589c:	00800134 	movhi	r2,4
   358a0:	10a04e04 	addi	r2,r2,-32456
   358a4:	11000017 	ldw	r4,0(r2)
   358a8:	20800f17 	ldw	r2,60(r4)
   358ac:	10000126 	beq	r2,zero,358b4 <exit+0x30>
   358b0:	103ee83a 	callr	r2
   358b4:	8009883a 	mov	r4,r16
   358b8:	0035bd00 	call	35bd0 <_exit>

000358bc <memcmp>:
   358bc:	01c000c4 	movi	r7,3
   358c0:	3980192e 	bgeu	r7,r6,35928 <memcmp+0x6c>
   358c4:	2144b03a 	or	r2,r4,r5
   358c8:	11c4703a 	and	r2,r2,r7
   358cc:	10000f26 	beq	r2,zero,3590c <memcmp+0x50>
   358d0:	20800003 	ldbu	r2,0(r4)
   358d4:	28c00003 	ldbu	r3,0(r5)
   358d8:	10c0151e 	bne	r2,r3,35930 <memcmp+0x74>
   358dc:	31bfff84 	addi	r6,r6,-2
   358e0:	01ffffc4 	movi	r7,-1
   358e4:	00000406 	br	358f8 <memcmp+0x3c>
   358e8:	20800003 	ldbu	r2,0(r4)
   358ec:	28c00003 	ldbu	r3,0(r5)
   358f0:	31bfffc4 	addi	r6,r6,-1
   358f4:	10c00e1e 	bne	r2,r3,35930 <memcmp+0x74>
   358f8:	21000044 	addi	r4,r4,1
   358fc:	29400044 	addi	r5,r5,1
   35900:	31fff91e 	bne	r6,r7,358e8 <__alt_mem_SDRAM_controller+0xfc0358e8>
   35904:	0005883a 	mov	r2,zero
   35908:	f800283a 	ret
   3590c:	20c00017 	ldw	r3,0(r4)
   35910:	28800017 	ldw	r2,0(r5)
   35914:	18bfee1e 	bne	r3,r2,358d0 <__alt_mem_SDRAM_controller+0xfc0358d0>
   35918:	31bfff04 	addi	r6,r6,-4
   3591c:	21000104 	addi	r4,r4,4
   35920:	29400104 	addi	r5,r5,4
   35924:	39bff936 	bltu	r7,r6,3590c <__alt_mem_SDRAM_controller+0xfc03590c>
   35928:	303fe91e 	bne	r6,zero,358d0 <__alt_mem_SDRAM_controller+0xfc0358d0>
   3592c:	003ff506 	br	35904 <__alt_mem_SDRAM_controller+0xfc035904>
   35930:	10c5c83a 	sub	r2,r2,r3
   35934:	f800283a 	ret

00035938 <__register_exitproc>:
   35938:	defffa04 	addi	sp,sp,-24
   3593c:	dc000315 	stw	r16,12(sp)
   35940:	04000134 	movhi	r16,4
   35944:	84204e04 	addi	r16,r16,-32456
   35948:	80c00017 	ldw	r3,0(r16)
   3594c:	dc400415 	stw	r17,16(sp)
   35950:	dfc00515 	stw	ra,20(sp)
   35954:	18805217 	ldw	r2,328(r3)
   35958:	2023883a 	mov	r17,r4
   3595c:	10003726 	beq	r2,zero,35a3c <__register_exitproc+0x104>
   35960:	10c00117 	ldw	r3,4(r2)
   35964:	010007c4 	movi	r4,31
   35968:	20c00e16 	blt	r4,r3,359a4 <__register_exitproc+0x6c>
   3596c:	1a000044 	addi	r8,r3,1
   35970:	8800221e 	bne	r17,zero,359fc <__register_exitproc+0xc4>
   35974:	18c00084 	addi	r3,r3,2
   35978:	18c7883a 	add	r3,r3,r3
   3597c:	18c7883a 	add	r3,r3,r3
   35980:	12000115 	stw	r8,4(r2)
   35984:	10c7883a 	add	r3,r2,r3
   35988:	19400015 	stw	r5,0(r3)
   3598c:	0005883a 	mov	r2,zero
   35990:	dfc00517 	ldw	ra,20(sp)
   35994:	dc400417 	ldw	r17,16(sp)
   35998:	dc000317 	ldw	r16,12(sp)
   3599c:	dec00604 	addi	sp,sp,24
   359a0:	f800283a 	ret
   359a4:	00800034 	movhi	r2,0
   359a8:	10800004 	addi	r2,r2,0
   359ac:	10002626 	beq	r2,zero,35a48 <__register_exitproc+0x110>
   359b0:	01006404 	movi	r4,400
   359b4:	d9400015 	stw	r5,0(sp)
   359b8:	d9800115 	stw	r6,4(sp)
   359bc:	d9c00215 	stw	r7,8(sp)
   359c0:	00000000 	call	0 <__alt_mem_onchip_memory-0x20000>
   359c4:	d9400017 	ldw	r5,0(sp)
   359c8:	d9800117 	ldw	r6,4(sp)
   359cc:	d9c00217 	ldw	r7,8(sp)
   359d0:	10001d26 	beq	r2,zero,35a48 <__register_exitproc+0x110>
   359d4:	81000017 	ldw	r4,0(r16)
   359d8:	10000115 	stw	zero,4(r2)
   359dc:	02000044 	movi	r8,1
   359e0:	22405217 	ldw	r9,328(r4)
   359e4:	0007883a 	mov	r3,zero
   359e8:	12400015 	stw	r9,0(r2)
   359ec:	20805215 	stw	r2,328(r4)
   359f0:	10006215 	stw	zero,392(r2)
   359f4:	10006315 	stw	zero,396(r2)
   359f8:	883fde26 	beq	r17,zero,35974 <__alt_mem_SDRAM_controller+0xfc035974>
   359fc:	18c9883a 	add	r4,r3,r3
   35a00:	2109883a 	add	r4,r4,r4
   35a04:	1109883a 	add	r4,r2,r4
   35a08:	21802215 	stw	r6,136(r4)
   35a0c:	01800044 	movi	r6,1
   35a10:	12406217 	ldw	r9,392(r2)
   35a14:	30cc983a 	sll	r6,r6,r3
   35a18:	4992b03a 	or	r9,r9,r6
   35a1c:	12406215 	stw	r9,392(r2)
   35a20:	21c04215 	stw	r7,264(r4)
   35a24:	01000084 	movi	r4,2
   35a28:	893fd21e 	bne	r17,r4,35974 <__alt_mem_SDRAM_controller+0xfc035974>
   35a2c:	11006317 	ldw	r4,396(r2)
   35a30:	218cb03a 	or	r6,r4,r6
   35a34:	11806315 	stw	r6,396(r2)
   35a38:	003fce06 	br	35974 <__alt_mem_SDRAM_controller+0xfc035974>
   35a3c:	18805304 	addi	r2,r3,332
   35a40:	18805215 	stw	r2,328(r3)
   35a44:	003fc606 	br	35960 <__alt_mem_SDRAM_controller+0xfc035960>
   35a48:	00bfffc4 	movi	r2,-1
   35a4c:	003fd006 	br	35990 <__alt_mem_SDRAM_controller+0xfc035990>

00035a50 <__call_exitprocs>:
   35a50:	defff504 	addi	sp,sp,-44
   35a54:	df000915 	stw	fp,36(sp)
   35a58:	dd400615 	stw	r21,24(sp)
   35a5c:	dc800315 	stw	r18,12(sp)
   35a60:	dfc00a15 	stw	ra,40(sp)
   35a64:	ddc00815 	stw	r23,32(sp)
   35a68:	dd800715 	stw	r22,28(sp)
   35a6c:	dd000515 	stw	r20,20(sp)
   35a70:	dcc00415 	stw	r19,16(sp)
   35a74:	dc400215 	stw	r17,8(sp)
   35a78:	dc000115 	stw	r16,4(sp)
   35a7c:	d9000015 	stw	r4,0(sp)
   35a80:	2839883a 	mov	fp,r5
   35a84:	04800044 	movi	r18,1
   35a88:	057fffc4 	movi	r21,-1
   35a8c:	00800134 	movhi	r2,4
   35a90:	10a04e04 	addi	r2,r2,-32456
   35a94:	12000017 	ldw	r8,0(r2)
   35a98:	45005217 	ldw	r20,328(r8)
   35a9c:	44c05204 	addi	r19,r8,328
   35aa0:	a0001c26 	beq	r20,zero,35b14 <__call_exitprocs+0xc4>
   35aa4:	a0800117 	ldw	r2,4(r20)
   35aa8:	15ffffc4 	addi	r23,r2,-1
   35aac:	b8000d16 	blt	r23,zero,35ae4 <__call_exitprocs+0x94>
   35ab0:	14000044 	addi	r16,r2,1
   35ab4:	8421883a 	add	r16,r16,r16
   35ab8:	8421883a 	add	r16,r16,r16
   35abc:	84402004 	addi	r17,r16,128
   35ac0:	a463883a 	add	r17,r20,r17
   35ac4:	a421883a 	add	r16,r20,r16
   35ac8:	e0001e26 	beq	fp,zero,35b44 <__call_exitprocs+0xf4>
   35acc:	80804017 	ldw	r2,256(r16)
   35ad0:	e0801c26 	beq	fp,r2,35b44 <__call_exitprocs+0xf4>
   35ad4:	bdffffc4 	addi	r23,r23,-1
   35ad8:	843fff04 	addi	r16,r16,-4
   35adc:	8c7fff04 	addi	r17,r17,-4
   35ae0:	bd7ff91e 	bne	r23,r21,35ac8 <__alt_mem_SDRAM_controller+0xfc035ac8>
   35ae4:	00800034 	movhi	r2,0
   35ae8:	10800004 	addi	r2,r2,0
   35aec:	10000926 	beq	r2,zero,35b14 <__call_exitprocs+0xc4>
   35af0:	a0800117 	ldw	r2,4(r20)
   35af4:	1000301e 	bne	r2,zero,35bb8 <__call_exitprocs+0x168>
   35af8:	a0800017 	ldw	r2,0(r20)
   35afc:	10003226 	beq	r2,zero,35bc8 <__call_exitprocs+0x178>
   35b00:	a009883a 	mov	r4,r20
   35b04:	98800015 	stw	r2,0(r19)
   35b08:	00000000 	call	0 <__alt_mem_onchip_memory-0x20000>
   35b0c:	9d000017 	ldw	r20,0(r19)
   35b10:	a03fe41e 	bne	r20,zero,35aa4 <__alt_mem_SDRAM_controller+0xfc035aa4>
   35b14:	dfc00a17 	ldw	ra,40(sp)
   35b18:	df000917 	ldw	fp,36(sp)
   35b1c:	ddc00817 	ldw	r23,32(sp)
   35b20:	dd800717 	ldw	r22,28(sp)
   35b24:	dd400617 	ldw	r21,24(sp)
   35b28:	dd000517 	ldw	r20,20(sp)
   35b2c:	dcc00417 	ldw	r19,16(sp)
   35b30:	dc800317 	ldw	r18,12(sp)
   35b34:	dc400217 	ldw	r17,8(sp)
   35b38:	dc000117 	ldw	r16,4(sp)
   35b3c:	dec00b04 	addi	sp,sp,44
   35b40:	f800283a 	ret
   35b44:	a0800117 	ldw	r2,4(r20)
   35b48:	80c00017 	ldw	r3,0(r16)
   35b4c:	10bfffc4 	addi	r2,r2,-1
   35b50:	15c01426 	beq	r2,r23,35ba4 <__call_exitprocs+0x154>
   35b54:	80000015 	stw	zero,0(r16)
   35b58:	183fde26 	beq	r3,zero,35ad4 <__alt_mem_SDRAM_controller+0xfc035ad4>
   35b5c:	95c8983a 	sll	r4,r18,r23
   35b60:	a0806217 	ldw	r2,392(r20)
   35b64:	a5800117 	ldw	r22,4(r20)
   35b68:	2084703a 	and	r2,r4,r2
   35b6c:	10000b26 	beq	r2,zero,35b9c <__call_exitprocs+0x14c>
   35b70:	a0806317 	ldw	r2,396(r20)
   35b74:	2088703a 	and	r4,r4,r2
   35b78:	20000c1e 	bne	r4,zero,35bac <__call_exitprocs+0x15c>
   35b7c:	89400017 	ldw	r5,0(r17)
   35b80:	d9000017 	ldw	r4,0(sp)
   35b84:	183ee83a 	callr	r3
   35b88:	a0800117 	ldw	r2,4(r20)
   35b8c:	15bfbf1e 	bne	r2,r22,35a8c <__alt_mem_SDRAM_controller+0xfc035a8c>
   35b90:	98800017 	ldw	r2,0(r19)
   35b94:	153fcf26 	beq	r2,r20,35ad4 <__alt_mem_SDRAM_controller+0xfc035ad4>
   35b98:	003fbc06 	br	35a8c <__alt_mem_SDRAM_controller+0xfc035a8c>
   35b9c:	183ee83a 	callr	r3
   35ba0:	003ff906 	br	35b88 <__alt_mem_SDRAM_controller+0xfc035b88>
   35ba4:	a5c00115 	stw	r23,4(r20)
   35ba8:	003feb06 	br	35b58 <__alt_mem_SDRAM_controller+0xfc035b58>
   35bac:	89000017 	ldw	r4,0(r17)
   35bb0:	183ee83a 	callr	r3
   35bb4:	003ff406 	br	35b88 <__alt_mem_SDRAM_controller+0xfc035b88>
   35bb8:	a0800017 	ldw	r2,0(r20)
   35bbc:	a027883a 	mov	r19,r20
   35bc0:	1029883a 	mov	r20,r2
   35bc4:	003fb606 	br	35aa0 <__alt_mem_SDRAM_controller+0xfc035aa0>
   35bc8:	0005883a 	mov	r2,zero
   35bcc:	003ffb06 	br	35bbc <__alt_mem_SDRAM_controller+0xfc035bbc>

00035bd0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   35bd0:	defffd04 	addi	sp,sp,-12
   35bd4:	df000215 	stw	fp,8(sp)
   35bd8:	df000204 	addi	fp,sp,8
   35bdc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   35be0:	0001883a 	nop
   35be4:	e0bfff17 	ldw	r2,-4(fp)
   35be8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   35bec:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   35bf0:	10000226 	beq	r2,zero,35bfc <_exit+0x2c>
    ALT_SIM_FAIL();
   35bf4:	002af070 	cmpltui	zero,zero,43969
   35bf8:	00000106 	br	35c00 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   35bfc:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   35c00:	003fff06 	br	35c00 <__alt_mem_SDRAM_controller+0xfc035c00>
