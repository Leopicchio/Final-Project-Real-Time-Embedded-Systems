-- main_system.vhd

-- Generated using ACDS version 18.1 625

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_system is
	port (
		audio_0_external_interface_ADCDAT                : in    std_logic                     := '0';             --                  audio_0_external_interface.ADCDAT
		audio_0_external_interface_ADCLRCK               : in    std_logic                     := '0';             --                                            .ADCLRCK
		audio_0_external_interface_BCLK                  : in    std_logic                     := '0';             --                                            .BCLK
		audio_0_external_interface_DACDAT                : out   std_logic;                                        --                                            .DACDAT
		audio_0_external_interface_DACLRCK               : in    std_logic                     := '0';             --                                            .DACLRCK
		audio_and_video_config_0_external_interface_SDAT : inout std_logic                     := '0';             -- audio_and_video_config_0_external_interface.SDAT
		audio_and_video_config_0_external_interface_SCLK : out   std_logic;                                        --                                            .SCLK
		clk_clk                                          : in    std_logic                     := '0';             --                                         clk.clk
		clk_audio_codec_clk                              : out   std_logic;                                        --                             clk_audio_codec.clk
		clk_sdram_clk                                    : out   std_logic;                                        --                                   clk_sdram.clk
		pio_buttons_external_connection_export           : in    std_logic_vector(3 downto 0)  := (others => '0'); --             pio_buttons_external_connection.export
		pio_leds_external_connection_export              : out   std_logic_vector(9 downto 0);                     --                pio_leds_external_connection.export
		pio_switches_external_connection_export          : in    std_logic_vector(9 downto 0)  := (others => '0'); --            pio_switches_external_connection.export
		reset_reset_n                                    : in    std_logic                     := '0';             --                                       reset.reset_n
		sdram_controller_wire_addr                       : out   std_logic_vector(12 downto 0);                    --                       sdram_controller_wire.addr
		sdram_controller_wire_ba                         : out   std_logic_vector(1 downto 0);                     --                                            .ba
		sdram_controller_wire_cas_n                      : out   std_logic;                                        --                                            .cas_n
		sdram_controller_wire_cke                        : out   std_logic;                                        --                                            .cke
		sdram_controller_wire_cs_n                       : out   std_logic;                                        --                                            .cs_n
		sdram_controller_wire_dq                         : inout std_logic_vector(15 downto 0) := (others => '0'); --                                            .dq
		sdram_controller_wire_dqm                        : out   std_logic_vector(1 downto 0);                     --                                            .dqm
		sdram_controller_wire_ras_n                      : out   std_logic;                                        --                                            .ras_n
		sdram_controller_wire_we_n                       : out   std_logic;                                        --                                            .we_n
		uart_0_external_connection_rxd                   : in    std_logic                     := '0';             --                  uart_0_external_connection.rxd
		uart_0_external_connection_txd                   : out   std_logic                                         --                                            .txd
	);
end entity main_system;

architecture rtl of main_system is
	component main_system_SDRAM_controller is
		port (
			clk            : in    std_logic                     := 'X';             -- clk
			reset_n        : in    std_logic                     := 'X';             -- reset_n
			az_addr        : in    std_logic_vector(24 downto 0) := (others => 'X'); -- address
			az_be_n        : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- byteenable_n
			az_cs          : in    std_logic                     := 'X';             -- chipselect
			az_data        : in    std_logic_vector(15 downto 0) := (others => 'X'); -- writedata
			az_rd_n        : in    std_logic                     := 'X';             -- read_n
			az_wr_n        : in    std_logic                     := 'X';             -- write_n
			za_data        : out   std_logic_vector(15 downto 0);                    -- readdata
			za_valid       : out   std_logic;                                        -- readdatavalid
			za_waitrequest : out   std_logic;                                        -- waitrequest
			zs_addr        : out   std_logic_vector(12 downto 0);                    -- export
			zs_ba          : out   std_logic_vector(1 downto 0);                     -- export
			zs_cas_n       : out   std_logic;                                        -- export
			zs_cke         : out   std_logic;                                        -- export
			zs_cs_n        : out   std_logic;                                        -- export
			zs_dq          : inout std_logic_vector(15 downto 0) := (others => 'X'); -- export
			zs_dqm         : out   std_logic_vector(1 downto 0);                     -- export
			zs_ras_n       : out   std_logic;                                        -- export
			zs_we_n        : out   std_logic                                         -- export
		);
	end component main_system_SDRAM_controller;

	component main_system_audio_0 is
		port (
			clk         : in  std_logic                     := 'X';             -- clk
			reset       : in  std_logic                     := 'X';             -- reset
			address     : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			chipselect  : in  std_logic                     := 'X';             -- chipselect
			read        : in  std_logic                     := 'X';             -- read
			write       : in  std_logic                     := 'X';             -- write
			writedata   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			readdata    : out std_logic_vector(31 downto 0);                    -- readdata
			irq         : out std_logic;                                        -- irq
			AUD_ADCDAT  : in  std_logic                     := 'X';             -- export
			AUD_ADCLRCK : in  std_logic                     := 'X';             -- export
			AUD_BCLK    : in  std_logic                     := 'X';             -- export
			AUD_DACDAT  : out std_logic;                                        -- export
			AUD_DACLRCK : in  std_logic                     := 'X'              -- export
		);
	end component main_system_audio_0;

	component main_system_audio_and_video_config_0 is
		port (
			clk         : in    std_logic                     := 'X';             -- clk
			reset       : in    std_logic                     := 'X';             -- reset
			address     : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			byteenable  : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			read        : in    std_logic                     := 'X';             -- read
			write       : in    std_logic                     := 'X';             -- write
			writedata   : in    std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			readdata    : out   std_logic_vector(31 downto 0);                    -- readdata
			waitrequest : out   std_logic;                                        -- waitrequest
			I2C_SDAT    : inout std_logic                     := 'X';             -- export
			I2C_SCLK    : out   std_logic                                         -- export
		);
	end component main_system_audio_and_video_config_0;

	component main_system_jtag_uart_0 is
		port (
			clk            : in  std_logic                     := 'X';             -- clk
			rst_n          : in  std_logic                     := 'X';             -- reset_n
			av_chipselect  : in  std_logic                     := 'X';             -- chipselect
			av_address     : in  std_logic                     := 'X';             -- address
			av_read_n      : in  std_logic                     := 'X';             -- read_n
			av_readdata    : out std_logic_vector(31 downto 0);                    -- readdata
			av_write_n     : in  std_logic                     := 'X';             -- write_n
			av_writedata   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			av_waitrequest : out std_logic;                                        -- waitrequest
			av_irq         : out std_logic                                         -- irq
		);
	end component main_system_jtag_uart_0;

	component altera_avalon_mailbox is
		generic (
			DWIDTH : integer := 32;
			AWIDTH : integer := 2
		);
		port (
			clk                  : in  std_logic                     := 'X';             -- clk
			rst_n                : in  std_logic                     := 'X';             -- reset_n
			avmm_snd_address     : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			avmm_snd_writedata   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			avmm_snd_write       : in  std_logic                     := 'X';             -- write
			avmm_snd_read        : in  std_logic                     := 'X';             -- read
			avmm_snd_readdata    : out std_logic_vector(31 downto 0);                    -- readdata
			avmm_snd_waitrequest : out std_logic;                                        -- waitrequest
			irq_msg              : out std_logic;                                        -- irq
			avmm_rcv_address     : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			avmm_rcv_read        : in  std_logic                     := 'X';             -- read
			avmm_rcv_writedata   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			avmm_rcv_write       : in  std_logic                     := 'X';             -- write
			avmm_rcv_readdata    : out std_logic_vector(31 downto 0);                    -- readdata
			irq_space            : out std_logic                                         -- irq
		);
	end component altera_avalon_mailbox;

	component main_system_mutex_SDRAM is
		port (
			reset_n       : in  std_logic                     := 'X';             -- reset_n
			clk           : in  std_logic                     := 'X';             -- clk
			chipselect    : in  std_logic                     := 'X';             -- chipselect
			data_from_cpu : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			read          : in  std_logic                     := 'X';             -- read
			write         : in  std_logic                     := 'X';             -- write
			data_to_cpu   : out std_logic_vector(31 downto 0);                    -- readdata
			address       : in  std_logic                     := 'X'              -- address
		);
	end component main_system_mutex_SDRAM;

	component main_system_nios2_FFT is
		port (
			clk                                 : in  std_logic                     := 'X';             -- clk
			reset_n                             : in  std_logic                     := 'X';             -- reset_n
			reset_req                           : in  std_logic                     := 'X';             -- reset_req
			d_address                           : out std_logic_vector(27 downto 0);                    -- address
			d_byteenable                        : out std_logic_vector(3 downto 0);                     -- byteenable
			d_read                              : out std_logic;                                        -- read
			d_readdata                          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			d_waitrequest                       : in  std_logic                     := 'X';             -- waitrequest
			d_write                             : out std_logic;                                        -- write
			d_writedata                         : out std_logic_vector(31 downto 0);                    -- writedata
			d_readdatavalid                     : in  std_logic                     := 'X';             -- readdatavalid
			debug_mem_slave_debugaccess_to_roms : out std_logic;                                        -- debugaccess
			i_address                           : out std_logic_vector(18 downto 0);                    -- address
			i_read                              : out std_logic;                                        -- read
			i_readdata                          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			i_waitrequest                       : in  std_logic                     := 'X';             -- waitrequest
			i_readdatavalid                     : in  std_logic                     := 'X';             -- readdatavalid
			irq                                 : in  std_logic_vector(31 downto 0) := (others => 'X'); -- irq
			debug_reset_request                 : out std_logic;                                        -- reset
			debug_mem_slave_address             : in  std_logic_vector(8 downto 0)  := (others => 'X'); -- address
			debug_mem_slave_byteenable          : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			debug_mem_slave_debugaccess         : in  std_logic                     := 'X';             -- debugaccess
			debug_mem_slave_read                : in  std_logic                     := 'X';             -- read
			debug_mem_slave_readdata            : out std_logic_vector(31 downto 0);                    -- readdata
			debug_mem_slave_waitrequest         : out std_logic;                                        -- waitrequest
			debug_mem_slave_write               : in  std_logic                     := 'X';             -- write
			debug_mem_slave_writedata           : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			dummy_ci_port                       : out std_logic                                         -- readra
		);
	end component main_system_nios2_FFT;

	component main_system_nios2_sound_acquisition is
		port (
			clk                                 : in  std_logic                     := 'X';             -- clk
			reset_n                             : in  std_logic                     := 'X';             -- reset_n
			reset_req                           : in  std_logic                     := 'X';             -- reset_req
			d_address                           : out std_logic_vector(27 downto 0);                    -- address
			d_byteenable                        : out std_logic_vector(3 downto 0);                     -- byteenable
			d_read                              : out std_logic;                                        -- read
			d_readdata                          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			d_waitrequest                       : in  std_logic                     := 'X';             -- waitrequest
			d_write                             : out std_logic;                                        -- write
			d_writedata                         : out std_logic_vector(31 downto 0);                    -- writedata
			d_readdatavalid                     : in  std_logic                     := 'X';             -- readdatavalid
			debug_mem_slave_debugaccess_to_roms : out std_logic;                                        -- debugaccess
			i_address                           : out std_logic_vector(27 downto 0);                    -- address
			i_read                              : out std_logic;                                        -- read
			i_readdata                          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			i_waitrequest                       : in  std_logic                     := 'X';             -- waitrequest
			i_readdatavalid                     : in  std_logic                     := 'X';             -- readdatavalid
			irq                                 : in  std_logic_vector(31 downto 0) := (others => 'X'); -- irq
			debug_reset_request                 : out std_logic;                                        -- reset
			debug_mem_slave_address             : in  std_logic_vector(8 downto 0)  := (others => 'X'); -- address
			debug_mem_slave_byteenable          : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			debug_mem_slave_debugaccess         : in  std_logic                     := 'X';             -- debugaccess
			debug_mem_slave_read                : in  std_logic                     := 'X';             -- read
			debug_mem_slave_readdata            : out std_logic_vector(31 downto 0);                    -- readdata
			debug_mem_slave_waitrequest         : out std_logic;                                        -- waitrequest
			debug_mem_slave_write               : in  std_logic                     := 'X';             -- write
			debug_mem_slave_writedata           : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			dummy_ci_port                       : out std_logic                                         -- readra
		);
	end component main_system_nios2_sound_acquisition;

	component main_system_onchip_memory is
		port (
			clk        : in  std_logic                     := 'X';             -- clk
			address    : in  std_logic_vector(14 downto 0) := (others => 'X'); -- address
			clken      : in  std_logic                     := 'X';             -- clken
			chipselect : in  std_logic                     := 'X';             -- chipselect
			write      : in  std_logic                     := 'X';             -- write
			readdata   : out std_logic_vector(31 downto 0);                    -- readdata
			writedata  : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			byteenable : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			reset      : in  std_logic                     := 'X';             -- reset
			reset_req  : in  std_logic                     := 'X';             -- reset_req
			freeze     : in  std_logic                     := 'X'              -- freeze
		);
	end component main_system_onchip_memory;

	component main_system_onchip_memory_nios2_FFT is
		port (
			clk        : in  std_logic                     := 'X';             -- clk
			address    : in  std_logic_vector(14 downto 0) := (others => 'X'); -- address
			clken      : in  std_logic                     := 'X';             -- clken
			chipselect : in  std_logic                     := 'X';             -- chipselect
			write      : in  std_logic                     := 'X';             -- write
			readdata   : out std_logic_vector(31 downto 0);                    -- readdata
			writedata  : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			byteenable : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			reset      : in  std_logic                     := 'X';             -- reset
			reset_req  : in  std_logic                     := 'X';             -- reset_req
			freeze     : in  std_logic                     := 'X'              -- freeze
		);
	end component main_system_onchip_memory_nios2_FFT;

	component main_system_pio_LEDS is
		port (
			clk        : in  std_logic                     := 'X';             -- clk
			reset_n    : in  std_logic                     := 'X';             -- reset_n
			address    : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			write_n    : in  std_logic                     := 'X';             -- write_n
			writedata  : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			chipselect : in  std_logic                     := 'X';             -- chipselect
			readdata   : out std_logic_vector(31 downto 0);                    -- readdata
			out_port   : out std_logic_vector(9 downto 0)                      -- export
		);
	end component main_system_pio_LEDS;

	component main_system_pio_buttons is
		port (
			clk        : in  std_logic                     := 'X';             -- clk
			reset_n    : in  std_logic                     := 'X';             -- reset_n
			address    : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			write_n    : in  std_logic                     := 'X';             -- write_n
			writedata  : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			chipselect : in  std_logic                     := 'X';             -- chipselect
			readdata   : out std_logic_vector(31 downto 0);                    -- readdata
			in_port    : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			irq        : out std_logic                                         -- irq
		);
	end component main_system_pio_buttons;

	component main_system_pio_switches is
		port (
			clk        : in  std_logic                     := 'X';             -- clk
			reset_n    : in  std_logic                     := 'X';             -- reset_n
			address    : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			write_n    : in  std_logic                     := 'X';             -- write_n
			writedata  : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			chipselect : in  std_logic                     := 'X';             -- chipselect
			readdata   : out std_logic_vector(31 downto 0);                    -- readdata
			in_port    : in  std_logic_vector(9 downto 0)  := (others => 'X'); -- export
			irq        : out std_logic                                         -- irq
		);
	end component main_system_pio_switches;

	component main_system_pll is
		port (
			refclk   : in  std_logic := 'X'; -- clk
			rst      : in  std_logic := 'X'; -- reset
			outclk_0 : out std_logic;        -- clk
			outclk_1 : out std_logic;        -- clk
			outclk_2 : out std_logic;        -- clk
			outclk_3 : out std_logic;        -- clk
			locked   : out std_logic         -- export
		);
	end component main_system_pll;

	component main_system_sysid_qsys_0 is
		port (
			clock    : in  std_logic                     := 'X'; -- clk
			reset_n  : in  std_logic                     := 'X'; -- reset_n
			readdata : out std_logic_vector(31 downto 0);        -- readdata
			address  : in  std_logic                     := 'X'  -- address
		);
	end component main_system_sysid_qsys_0;

	component main_system_uart_0 is
		port (
			clk           : in  std_logic                     := 'X';             -- clk
			reset_n       : in  std_logic                     := 'X';             -- reset_n
			address       : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- address
			begintransfer : in  std_logic                     := 'X';             -- begintransfer
			chipselect    : in  std_logic                     := 'X';             -- chipselect
			read_n        : in  std_logic                     := 'X';             -- read_n
			write_n       : in  std_logic                     := 'X';             -- write_n
			writedata     : in  std_logic_vector(15 downto 0) := (others => 'X'); -- writedata
			readdata      : out std_logic_vector(15 downto 0);                    -- readdata
			rxd           : in  std_logic                     := 'X';             -- export
			txd           : out std_logic;                                        -- export
			irq           : out std_logic                                         -- irq
		);
	end component main_system_uart_0;

	component main_system_mm_interconnect_0 is
		port (
			pll_outclk0_clk                                             : in  std_logic                     := 'X';             -- clk
			pll_outclk1_clk                                             : in  std_logic                     := 'X';             -- clk
			nios2_sound_acquisition_reset_reset_bridge_in_reset_reset   : in  std_logic                     := 'X';             -- reset
			SDRAM_controller_reset_reset_bridge_in_reset_reset          : in  std_logic                     := 'X';             -- reset
			nios2_FFT_data_master_address                               : in  std_logic_vector(27 downto 0) := (others => 'X'); -- address
			nios2_FFT_data_master_waitrequest                           : out std_logic;                                        -- waitrequest
			nios2_FFT_data_master_byteenable                            : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			nios2_FFT_data_master_read                                  : in  std_logic                     := 'X';             -- read
			nios2_FFT_data_master_readdata                              : out std_logic_vector(31 downto 0);                    -- readdata
			nios2_FFT_data_master_readdatavalid                         : out std_logic;                                        -- readdatavalid
			nios2_FFT_data_master_write                                 : in  std_logic                     := 'X';             -- write
			nios2_FFT_data_master_writedata                             : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			nios2_FFT_data_master_debugaccess                           : in  std_logic                     := 'X';             -- debugaccess
			nios2_FFT_instruction_master_address                        : in  std_logic_vector(18 downto 0) := (others => 'X'); -- address
			nios2_FFT_instruction_master_waitrequest                    : out std_logic;                                        -- waitrequest
			nios2_FFT_instruction_master_read                           : in  std_logic                     := 'X';             -- read
			nios2_FFT_instruction_master_readdata                       : out std_logic_vector(31 downto 0);                    -- readdata
			nios2_FFT_instruction_master_readdatavalid                  : out std_logic;                                        -- readdatavalid
			nios2_sound_acquisition_data_master_address                 : in  std_logic_vector(27 downto 0) := (others => 'X'); -- address
			nios2_sound_acquisition_data_master_waitrequest             : out std_logic;                                        -- waitrequest
			nios2_sound_acquisition_data_master_byteenable              : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			nios2_sound_acquisition_data_master_read                    : in  std_logic                     := 'X';             -- read
			nios2_sound_acquisition_data_master_readdata                : out std_logic_vector(31 downto 0);                    -- readdata
			nios2_sound_acquisition_data_master_readdatavalid           : out std_logic;                                        -- readdatavalid
			nios2_sound_acquisition_data_master_write                   : in  std_logic                     := 'X';             -- write
			nios2_sound_acquisition_data_master_writedata               : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			nios2_sound_acquisition_data_master_debugaccess             : in  std_logic                     := 'X';             -- debugaccess
			nios2_sound_acquisition_instruction_master_address          : in  std_logic_vector(27 downto 0) := (others => 'X'); -- address
			nios2_sound_acquisition_instruction_master_waitrequest      : out std_logic;                                        -- waitrequest
			nios2_sound_acquisition_instruction_master_read             : in  std_logic                     := 'X';             -- read
			nios2_sound_acquisition_instruction_master_readdata         : out std_logic_vector(31 downto 0);                    -- readdata
			nios2_sound_acquisition_instruction_master_readdatavalid    : out std_logic;                                        -- readdatavalid
			audio_0_avalon_audio_slave_address                          : out std_logic_vector(1 downto 0);                     -- address
			audio_0_avalon_audio_slave_write                            : out std_logic;                                        -- write
			audio_0_avalon_audio_slave_read                             : out std_logic;                                        -- read
			audio_0_avalon_audio_slave_readdata                         : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			audio_0_avalon_audio_slave_writedata                        : out std_logic_vector(31 downto 0);                    -- writedata
			audio_0_avalon_audio_slave_chipselect                       : out std_logic;                                        -- chipselect
			audio_and_video_config_0_avalon_av_config_slave_address     : out std_logic_vector(1 downto 0);                     -- address
			audio_and_video_config_0_avalon_av_config_slave_write       : out std_logic;                                        -- write
			audio_and_video_config_0_avalon_av_config_slave_read        : out std_logic;                                        -- read
			audio_and_video_config_0_avalon_av_config_slave_readdata    : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			audio_and_video_config_0_avalon_av_config_slave_writedata   : out std_logic_vector(31 downto 0);                    -- writedata
			audio_and_video_config_0_avalon_av_config_slave_byteenable  : out std_logic_vector(3 downto 0);                     -- byteenable
			audio_and_video_config_0_avalon_av_config_slave_waitrequest : in  std_logic                     := 'X';             -- waitrequest
			jtag_uart_0_avalon_jtag_slave_address                       : out std_logic_vector(0 downto 0);                     -- address
			jtag_uart_0_avalon_jtag_slave_write                         : out std_logic;                                        -- write
			jtag_uart_0_avalon_jtag_slave_read                          : out std_logic;                                        -- read
			jtag_uart_0_avalon_jtag_slave_readdata                      : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			jtag_uart_0_avalon_jtag_slave_writedata                     : out std_logic_vector(31 downto 0);                    -- writedata
			jtag_uart_0_avalon_jtag_slave_waitrequest                   : in  std_logic                     := 'X';             -- waitrequest
			jtag_uart_0_avalon_jtag_slave_chipselect                    : out std_logic;                                        -- chipselect
			mailbox_simple_0_avmm_msg_receiver_address                  : out std_logic_vector(1 downto 0);                     -- address
			mailbox_simple_0_avmm_msg_receiver_write                    : out std_logic;                                        -- write
			mailbox_simple_0_avmm_msg_receiver_read                     : out std_logic;                                        -- read
			mailbox_simple_0_avmm_msg_receiver_readdata                 : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			mailbox_simple_0_avmm_msg_receiver_writedata                : out std_logic_vector(31 downto 0);                    -- writedata
			mailbox_simple_0_avmm_msg_sender_address                    : out std_logic_vector(1 downto 0);                     -- address
			mailbox_simple_0_avmm_msg_sender_write                      : out std_logic;                                        -- write
			mailbox_simple_0_avmm_msg_sender_read                       : out std_logic;                                        -- read
			mailbox_simple_0_avmm_msg_sender_readdata                   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			mailbox_simple_0_avmm_msg_sender_writedata                  : out std_logic_vector(31 downto 0);                    -- writedata
			mailbox_simple_0_avmm_msg_sender_waitrequest                : in  std_logic                     := 'X';             -- waitrequest
			mutex_SDRAM_s1_address                                      : out std_logic_vector(0 downto 0);                     -- address
			mutex_SDRAM_s1_write                                        : out std_logic;                                        -- write
			mutex_SDRAM_s1_read                                         : out std_logic;                                        -- read
			mutex_SDRAM_s1_readdata                                     : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			mutex_SDRAM_s1_writedata                                    : out std_logic_vector(31 downto 0);                    -- writedata
			mutex_SDRAM_s1_chipselect                                   : out std_logic;                                        -- chipselect
			nios2_FFT_debug_mem_slave_address                           : out std_logic_vector(8 downto 0);                     -- address
			nios2_FFT_debug_mem_slave_write                             : out std_logic;                                        -- write
			nios2_FFT_debug_mem_slave_read                              : out std_logic;                                        -- read
			nios2_FFT_debug_mem_slave_readdata                          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			nios2_FFT_debug_mem_slave_writedata                         : out std_logic_vector(31 downto 0);                    -- writedata
			nios2_FFT_debug_mem_slave_byteenable                        : out std_logic_vector(3 downto 0);                     -- byteenable
			nios2_FFT_debug_mem_slave_waitrequest                       : in  std_logic                     := 'X';             -- waitrequest
			nios2_FFT_debug_mem_slave_debugaccess                       : out std_logic;                                        -- debugaccess
			nios2_sound_acquisition_debug_mem_slave_address             : out std_logic_vector(8 downto 0);                     -- address
			nios2_sound_acquisition_debug_mem_slave_write               : out std_logic;                                        -- write
			nios2_sound_acquisition_debug_mem_slave_read                : out std_logic;                                        -- read
			nios2_sound_acquisition_debug_mem_slave_readdata            : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			nios2_sound_acquisition_debug_mem_slave_writedata           : out std_logic_vector(31 downto 0);                    -- writedata
			nios2_sound_acquisition_debug_mem_slave_byteenable          : out std_logic_vector(3 downto 0);                     -- byteenable
			nios2_sound_acquisition_debug_mem_slave_waitrequest         : in  std_logic                     := 'X';             -- waitrequest
			nios2_sound_acquisition_debug_mem_slave_debugaccess         : out std_logic;                                        -- debugaccess
			onchip_memory_s1_address                                    : out std_logic_vector(14 downto 0);                    -- address
			onchip_memory_s1_write                                      : out std_logic;                                        -- write
			onchip_memory_s1_readdata                                   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			onchip_memory_s1_writedata                                  : out std_logic_vector(31 downto 0);                    -- writedata
			onchip_memory_s1_byteenable                                 : out std_logic_vector(3 downto 0);                     -- byteenable
			onchip_memory_s1_chipselect                                 : out std_logic;                                        -- chipselect
			onchip_memory_s1_clken                                      : out std_logic;                                        -- clken
			onchip_memory_nios2_FFT_s1_address                          : out std_logic_vector(14 downto 0);                    -- address
			onchip_memory_nios2_FFT_s1_write                            : out std_logic;                                        -- write
			onchip_memory_nios2_FFT_s1_readdata                         : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			onchip_memory_nios2_FFT_s1_writedata                        : out std_logic_vector(31 downto 0);                    -- writedata
			onchip_memory_nios2_FFT_s1_byteenable                       : out std_logic_vector(3 downto 0);                     -- byteenable
			onchip_memory_nios2_FFT_s1_chipselect                       : out std_logic;                                        -- chipselect
			onchip_memory_nios2_FFT_s1_clken                            : out std_logic;                                        -- clken
			pio_buttons_s1_address                                      : out std_logic_vector(1 downto 0);                     -- address
			pio_buttons_s1_write                                        : out std_logic;                                        -- write
			pio_buttons_s1_readdata                                     : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			pio_buttons_s1_writedata                                    : out std_logic_vector(31 downto 0);                    -- writedata
			pio_buttons_s1_chipselect                                   : out std_logic;                                        -- chipselect
			pio_LEDS_s1_address                                         : out std_logic_vector(1 downto 0);                     -- address
			pio_LEDS_s1_write                                           : out std_logic;                                        -- write
			pio_LEDS_s1_readdata                                        : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			pio_LEDS_s1_writedata                                       : out std_logic_vector(31 downto 0);                    -- writedata
			pio_LEDS_s1_chipselect                                      : out std_logic;                                        -- chipselect
			pio_switches_s1_address                                     : out std_logic_vector(1 downto 0);                     -- address
			pio_switches_s1_write                                       : out std_logic;                                        -- write
			pio_switches_s1_readdata                                    : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			pio_switches_s1_writedata                                   : out std_logic_vector(31 downto 0);                    -- writedata
			pio_switches_s1_chipselect                                  : out std_logic;                                        -- chipselect
			SDRAM_controller_s1_address                                 : out std_logic_vector(24 downto 0);                    -- address
			SDRAM_controller_s1_write                                   : out std_logic;                                        -- write
			SDRAM_controller_s1_read                                    : out std_logic;                                        -- read
			SDRAM_controller_s1_readdata                                : in  std_logic_vector(15 downto 0) := (others => 'X'); -- readdata
			SDRAM_controller_s1_writedata                               : out std_logic_vector(15 downto 0);                    -- writedata
			SDRAM_controller_s1_byteenable                              : out std_logic_vector(1 downto 0);                     -- byteenable
			SDRAM_controller_s1_readdatavalid                           : in  std_logic                     := 'X';             -- readdatavalid
			SDRAM_controller_s1_waitrequest                             : in  std_logic                     := 'X';             -- waitrequest
			SDRAM_controller_s1_chipselect                              : out std_logic;                                        -- chipselect
			sysid_qsys_0_control_slave_address                          : out std_logic_vector(0 downto 0);                     -- address
			sysid_qsys_0_control_slave_readdata                         : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			uart_0_s1_address                                           : out std_logic_vector(2 downto 0);                     -- address
			uart_0_s1_write                                             : out std_logic;                                        -- write
			uart_0_s1_read                                              : out std_logic;                                        -- read
			uart_0_s1_readdata                                          : in  std_logic_vector(15 downto 0) := (others => 'X'); -- readdata
			uart_0_s1_writedata                                         : out std_logic_vector(15 downto 0);                    -- writedata
			uart_0_s1_begintransfer                                     : out std_logic;                                        -- begintransfer
			uart_0_s1_chipselect                                        : out std_logic                                         -- chipselect
		);
	end component main_system_mm_interconnect_0;

	component main_system_irq_mapper is
		port (
			clk           : in  std_logic                     := 'X'; -- clk
			reset         : in  std_logic                     := 'X'; -- reset
			receiver0_irq : in  std_logic                     := 'X'; -- irq
			receiver1_irq : in  std_logic                     := 'X'; -- irq
			sender_irq    : out std_logic_vector(31 downto 0)         -- irq
		);
	end component main_system_irq_mapper;

	component main_system_irq_mapper_001 is
		port (
			clk           : in  std_logic                     := 'X'; -- clk
			reset         : in  std_logic                     := 'X'; -- reset
			receiver0_irq : in  std_logic                     := 'X'; -- irq
			receiver1_irq : in  std_logic                     := 'X'; -- irq
			receiver2_irq : in  std_logic                     := 'X'; -- irq
			sender_irq    : out std_logic_vector(31 downto 0)         -- irq
		);
	end component main_system_irq_mapper_001;

	component main_system_rst_controller is
		generic (
			NUM_RESET_INPUTS          : integer := 6;
			OUTPUT_RESET_SYNC_EDGES   : string  := "deassert";
			SYNC_DEPTH                : integer := 2;
			RESET_REQUEST_PRESENT     : integer := 0;
			RESET_REQ_WAIT_TIME       : integer := 1;
			MIN_RST_ASSERTION_TIME    : integer := 3;
			RESET_REQ_EARLY_DSRT_TIME : integer := 1;
			USE_RESET_REQUEST_IN0     : integer := 0;
			USE_RESET_REQUEST_IN1     : integer := 0;
			USE_RESET_REQUEST_IN2     : integer := 0;
			USE_RESET_REQUEST_IN3     : integer := 0;
			USE_RESET_REQUEST_IN4     : integer := 0;
			USE_RESET_REQUEST_IN5     : integer := 0;
			USE_RESET_REQUEST_IN6     : integer := 0;
			USE_RESET_REQUEST_IN7     : integer := 0;
			USE_RESET_REQUEST_IN8     : integer := 0;
			USE_RESET_REQUEST_IN9     : integer := 0;
			USE_RESET_REQUEST_IN10    : integer := 0;
			USE_RESET_REQUEST_IN11    : integer := 0;
			USE_RESET_REQUEST_IN12    : integer := 0;
			USE_RESET_REQUEST_IN13    : integer := 0;
			USE_RESET_REQUEST_IN14    : integer := 0;
			USE_RESET_REQUEST_IN15    : integer := 0;
			ADAPT_RESET_REQUEST       : integer := 0
		);
		port (
			reset_in0      : in  std_logic := 'X'; -- reset_in0.reset
			reset_in1      : in  std_logic := 'X'; -- reset_in1.reset
			reset_in2      : in  std_logic := 'X'; -- reset_in2.reset
			clk            : in  std_logic := 'X'; --       clk.clk
			reset_out      : out std_logic;        -- reset_out.reset
			reset_in10     : in  std_logic := 'X';
			reset_in11     : in  std_logic := 'X';
			reset_in12     : in  std_logic := 'X';
			reset_in13     : in  std_logic := 'X';
			reset_in14     : in  std_logic := 'X';
			reset_in15     : in  std_logic := 'X';
			reset_in3      : in  std_logic := 'X';
			reset_in4      : in  std_logic := 'X';
			reset_in5      : in  std_logic := 'X';
			reset_in6      : in  std_logic := 'X';
			reset_in7      : in  std_logic := 'X';
			reset_in8      : in  std_logic := 'X';
			reset_in9      : in  std_logic := 'X';
			reset_req      : out std_logic;
			reset_req_in0  : in  std_logic := 'X';
			reset_req_in1  : in  std_logic := 'X';
			reset_req_in10 : in  std_logic := 'X';
			reset_req_in11 : in  std_logic := 'X';
			reset_req_in12 : in  std_logic := 'X';
			reset_req_in13 : in  std_logic := 'X';
			reset_req_in14 : in  std_logic := 'X';
			reset_req_in15 : in  std_logic := 'X';
			reset_req_in2  : in  std_logic := 'X';
			reset_req_in3  : in  std_logic := 'X';
			reset_req_in4  : in  std_logic := 'X';
			reset_req_in5  : in  std_logic := 'X';
			reset_req_in6  : in  std_logic := 'X';
			reset_req_in7  : in  std_logic := 'X';
			reset_req_in8  : in  std_logic := 'X';
			reset_req_in9  : in  std_logic := 'X'
		);
	end component main_system_rst_controller;

	component main_system_rst_controller_001 is
		generic (
			NUM_RESET_INPUTS          : integer := 6;
			OUTPUT_RESET_SYNC_EDGES   : string  := "deassert";
			SYNC_DEPTH                : integer := 2;
			RESET_REQUEST_PRESENT     : integer := 0;
			RESET_REQ_WAIT_TIME       : integer := 1;
			MIN_RST_ASSERTION_TIME    : integer := 3;
			RESET_REQ_EARLY_DSRT_TIME : integer := 1;
			USE_RESET_REQUEST_IN0     : integer := 0;
			USE_RESET_REQUEST_IN1     : integer := 0;
			USE_RESET_REQUEST_IN2     : integer := 0;
			USE_RESET_REQUEST_IN3     : integer := 0;
			USE_RESET_REQUEST_IN4     : integer := 0;
			USE_RESET_REQUEST_IN5     : integer := 0;
			USE_RESET_REQUEST_IN6     : integer := 0;
			USE_RESET_REQUEST_IN7     : integer := 0;
			USE_RESET_REQUEST_IN8     : integer := 0;
			USE_RESET_REQUEST_IN9     : integer := 0;
			USE_RESET_REQUEST_IN10    : integer := 0;
			USE_RESET_REQUEST_IN11    : integer := 0;
			USE_RESET_REQUEST_IN12    : integer := 0;
			USE_RESET_REQUEST_IN13    : integer := 0;
			USE_RESET_REQUEST_IN14    : integer := 0;
			USE_RESET_REQUEST_IN15    : integer := 0;
			ADAPT_RESET_REQUEST       : integer := 0
		);
		port (
			reset_in0      : in  std_logic := 'X'; -- reset_in0.reset
			reset_in1      : in  std_logic := 'X'; -- reset_in1.reset
			reset_in2      : in  std_logic := 'X'; -- reset_in2.reset
			clk            : in  std_logic := 'X'; --       clk.clk
			reset_out      : out std_logic;        -- reset_out.reset
			reset_req      : out std_logic;        --          .reset_req
			reset_in10     : in  std_logic := 'X';
			reset_in11     : in  std_logic := 'X';
			reset_in12     : in  std_logic := 'X';
			reset_in13     : in  std_logic := 'X';
			reset_in14     : in  std_logic := 'X';
			reset_in15     : in  std_logic := 'X';
			reset_in3      : in  std_logic := 'X';
			reset_in4      : in  std_logic := 'X';
			reset_in5      : in  std_logic := 'X';
			reset_in6      : in  std_logic := 'X';
			reset_in7      : in  std_logic := 'X';
			reset_in8      : in  std_logic := 'X';
			reset_in9      : in  std_logic := 'X';
			reset_req_in0  : in  std_logic := 'X';
			reset_req_in1  : in  std_logic := 'X';
			reset_req_in10 : in  std_logic := 'X';
			reset_req_in11 : in  std_logic := 'X';
			reset_req_in12 : in  std_logic := 'X';
			reset_req_in13 : in  std_logic := 'X';
			reset_req_in14 : in  std_logic := 'X';
			reset_req_in15 : in  std_logic := 'X';
			reset_req_in2  : in  std_logic := 'X';
			reset_req_in3  : in  std_logic := 'X';
			reset_req_in4  : in  std_logic := 'X';
			reset_req_in5  : in  std_logic := 'X';
			reset_req_in6  : in  std_logic := 'X';
			reset_req_in7  : in  std_logic := 'X';
			reset_req_in8  : in  std_logic := 'X';
			reset_req_in9  : in  std_logic := 'X'
		);
	end component main_system_rst_controller_001;

	signal pll_outclk0_clk                                                               : std_logic;                     -- pll:outclk_0 -> [audio_0:clk, audio_and_video_config_0:clk, irq_mapper:clk, irq_mapper_001:clk, jtag_uart_0:clk, mailbox_simple_0:clk, mm_interconnect_0:pll_outclk0_clk, mutex_SDRAM:clk, nios2_FFT:clk, nios2_sound_acquisition:clk, onchip_memory:clk, onchip_memory_nios2_FFT:clk, pio_LEDS:clk, pio_buttons:clk, pio_switches:clk, rst_controller_001:clk, sysid_qsys_0:clock, uart_0:clk]
	signal pll_outclk1_clk                                                               : std_logic;                     -- pll:outclk_1 -> [SDRAM_controller:clk, mm_interconnect_0:pll_outclk1_clk, rst_controller:clk]
	signal nios2_sound_acquisition_data_master_readdata                                  : std_logic_vector(31 downto 0); -- mm_interconnect_0:nios2_sound_acquisition_data_master_readdata -> nios2_sound_acquisition:d_readdata
	signal nios2_sound_acquisition_data_master_waitrequest                               : std_logic;                     -- mm_interconnect_0:nios2_sound_acquisition_data_master_waitrequest -> nios2_sound_acquisition:d_waitrequest
	signal nios2_sound_acquisition_data_master_debugaccess                               : std_logic;                     -- nios2_sound_acquisition:debug_mem_slave_debugaccess_to_roms -> mm_interconnect_0:nios2_sound_acquisition_data_master_debugaccess
	signal nios2_sound_acquisition_data_master_address                                   : std_logic_vector(27 downto 0); -- nios2_sound_acquisition:d_address -> mm_interconnect_0:nios2_sound_acquisition_data_master_address
	signal nios2_sound_acquisition_data_master_byteenable                                : std_logic_vector(3 downto 0);  -- nios2_sound_acquisition:d_byteenable -> mm_interconnect_0:nios2_sound_acquisition_data_master_byteenable
	signal nios2_sound_acquisition_data_master_read                                      : std_logic;                     -- nios2_sound_acquisition:d_read -> mm_interconnect_0:nios2_sound_acquisition_data_master_read
	signal nios2_sound_acquisition_data_master_readdatavalid                             : std_logic;                     -- mm_interconnect_0:nios2_sound_acquisition_data_master_readdatavalid -> nios2_sound_acquisition:d_readdatavalid
	signal nios2_sound_acquisition_data_master_write                                     : std_logic;                     -- nios2_sound_acquisition:d_write -> mm_interconnect_0:nios2_sound_acquisition_data_master_write
	signal nios2_sound_acquisition_data_master_writedata                                 : std_logic_vector(31 downto 0); -- nios2_sound_acquisition:d_writedata -> mm_interconnect_0:nios2_sound_acquisition_data_master_writedata
	signal nios2_fft_data_master_readdata                                                : std_logic_vector(31 downto 0); -- mm_interconnect_0:nios2_FFT_data_master_readdata -> nios2_FFT:d_readdata
	signal nios2_fft_data_master_waitrequest                                             : std_logic;                     -- mm_interconnect_0:nios2_FFT_data_master_waitrequest -> nios2_FFT:d_waitrequest
	signal nios2_fft_data_master_debugaccess                                             : std_logic;                     -- nios2_FFT:debug_mem_slave_debugaccess_to_roms -> mm_interconnect_0:nios2_FFT_data_master_debugaccess
	signal nios2_fft_data_master_address                                                 : std_logic_vector(27 downto 0); -- nios2_FFT:d_address -> mm_interconnect_0:nios2_FFT_data_master_address
	signal nios2_fft_data_master_byteenable                                              : std_logic_vector(3 downto 0);  -- nios2_FFT:d_byteenable -> mm_interconnect_0:nios2_FFT_data_master_byteenable
	signal nios2_fft_data_master_read                                                    : std_logic;                     -- nios2_FFT:d_read -> mm_interconnect_0:nios2_FFT_data_master_read
	signal nios2_fft_data_master_readdatavalid                                           : std_logic;                     -- mm_interconnect_0:nios2_FFT_data_master_readdatavalid -> nios2_FFT:d_readdatavalid
	signal nios2_fft_data_master_write                                                   : std_logic;                     -- nios2_FFT:d_write -> mm_interconnect_0:nios2_FFT_data_master_write
	signal nios2_fft_data_master_writedata                                               : std_logic_vector(31 downto 0); -- nios2_FFT:d_writedata -> mm_interconnect_0:nios2_FFT_data_master_writedata
	signal nios2_fft_instruction_master_readdata                                         : std_logic_vector(31 downto 0); -- mm_interconnect_0:nios2_FFT_instruction_master_readdata -> nios2_FFT:i_readdata
	signal nios2_fft_instruction_master_waitrequest                                      : std_logic;                     -- mm_interconnect_0:nios2_FFT_instruction_master_waitrequest -> nios2_FFT:i_waitrequest
	signal nios2_fft_instruction_master_address                                          : std_logic_vector(18 downto 0); -- nios2_FFT:i_address -> mm_interconnect_0:nios2_FFT_instruction_master_address
	signal nios2_fft_instruction_master_read                                             : std_logic;                     -- nios2_FFT:i_read -> mm_interconnect_0:nios2_FFT_instruction_master_read
	signal nios2_fft_instruction_master_readdatavalid                                    : std_logic;                     -- mm_interconnect_0:nios2_FFT_instruction_master_readdatavalid -> nios2_FFT:i_readdatavalid
	signal nios2_sound_acquisition_instruction_master_readdata                           : std_logic_vector(31 downto 0); -- mm_interconnect_0:nios2_sound_acquisition_instruction_master_readdata -> nios2_sound_acquisition:i_readdata
	signal nios2_sound_acquisition_instruction_master_waitrequest                        : std_logic;                     -- mm_interconnect_0:nios2_sound_acquisition_instruction_master_waitrequest -> nios2_sound_acquisition:i_waitrequest
	signal nios2_sound_acquisition_instruction_master_address                            : std_logic_vector(27 downto 0); -- nios2_sound_acquisition:i_address -> mm_interconnect_0:nios2_sound_acquisition_instruction_master_address
	signal nios2_sound_acquisition_instruction_master_read                               : std_logic;                     -- nios2_sound_acquisition:i_read -> mm_interconnect_0:nios2_sound_acquisition_instruction_master_read
	signal nios2_sound_acquisition_instruction_master_readdatavalid                      : std_logic;                     -- mm_interconnect_0:nios2_sound_acquisition_instruction_master_readdatavalid -> nios2_sound_acquisition:i_readdatavalid
	signal mm_interconnect_0_audio_0_avalon_audio_slave_chipselect                       : std_logic;                     -- mm_interconnect_0:audio_0_avalon_audio_slave_chipselect -> audio_0:chipselect
	signal mm_interconnect_0_audio_0_avalon_audio_slave_readdata                         : std_logic_vector(31 downto 0); -- audio_0:readdata -> mm_interconnect_0:audio_0_avalon_audio_slave_readdata
	signal mm_interconnect_0_audio_0_avalon_audio_slave_address                          : std_logic_vector(1 downto 0);  -- mm_interconnect_0:audio_0_avalon_audio_slave_address -> audio_0:address
	signal mm_interconnect_0_audio_0_avalon_audio_slave_read                             : std_logic;                     -- mm_interconnect_0:audio_0_avalon_audio_slave_read -> audio_0:read
	signal mm_interconnect_0_audio_0_avalon_audio_slave_write                            : std_logic;                     -- mm_interconnect_0:audio_0_avalon_audio_slave_write -> audio_0:write
	signal mm_interconnect_0_audio_0_avalon_audio_slave_writedata                        : std_logic_vector(31 downto 0); -- mm_interconnect_0:audio_0_avalon_audio_slave_writedata -> audio_0:writedata
	signal mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_readdata    : std_logic_vector(31 downto 0); -- audio_and_video_config_0:readdata -> mm_interconnect_0:audio_and_video_config_0_avalon_av_config_slave_readdata
	signal mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_waitrequest : std_logic;                     -- audio_and_video_config_0:waitrequest -> mm_interconnect_0:audio_and_video_config_0_avalon_av_config_slave_waitrequest
	signal mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_address     : std_logic_vector(1 downto 0);  -- mm_interconnect_0:audio_and_video_config_0_avalon_av_config_slave_address -> audio_and_video_config_0:address
	signal mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_read        : std_logic;                     -- mm_interconnect_0:audio_and_video_config_0_avalon_av_config_slave_read -> audio_and_video_config_0:read
	signal mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_byteenable  : std_logic_vector(3 downto 0);  -- mm_interconnect_0:audio_and_video_config_0_avalon_av_config_slave_byteenable -> audio_and_video_config_0:byteenable
	signal mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_write       : std_logic;                     -- mm_interconnect_0:audio_and_video_config_0_avalon_av_config_slave_write -> audio_and_video_config_0:write
	signal mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_writedata   : std_logic_vector(31 downto 0); -- mm_interconnect_0:audio_and_video_config_0_avalon_av_config_slave_writedata -> audio_and_video_config_0:writedata
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect                    : std_logic;                     -- mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_chipselect -> jtag_uart_0:av_chipselect
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata                      : std_logic_vector(31 downto 0); -- jtag_uart_0:av_readdata -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_readdata
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest                   : std_logic;                     -- jtag_uart_0:av_waitrequest -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_waitrequest
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address                       : std_logic_vector(0 downto 0);  -- mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_address -> jtag_uart_0:av_address
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read                          : std_logic;                     -- mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_read -> mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read:in
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write                         : std_logic;                     -- mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_write -> mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write:in
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata                     : std_logic_vector(31 downto 0); -- mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_writedata -> jtag_uart_0:av_writedata
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_readdata                   : std_logic_vector(31 downto 0); -- mailbox_simple_0:avmm_snd_readdata -> mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_readdata
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_waitrequest                : std_logic;                     -- mailbox_simple_0:avmm_snd_waitrequest -> mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_waitrequest
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_address                    : std_logic_vector(1 downto 0);  -- mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_address -> mailbox_simple_0:avmm_snd_address
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_read                       : std_logic;                     -- mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_read -> mailbox_simple_0:avmm_snd_read
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_write                      : std_logic;                     -- mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_write -> mailbox_simple_0:avmm_snd_write
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_writedata                  : std_logic_vector(31 downto 0); -- mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_writedata -> mailbox_simple_0:avmm_snd_writedata
	signal mm_interconnect_0_sysid_qsys_0_control_slave_readdata                         : std_logic_vector(31 downto 0); -- sysid_qsys_0:readdata -> mm_interconnect_0:sysid_qsys_0_control_slave_readdata
	signal mm_interconnect_0_sysid_qsys_0_control_slave_address                          : std_logic_vector(0 downto 0);  -- mm_interconnect_0:sysid_qsys_0_control_slave_address -> sysid_qsys_0:address
	signal mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_readdata            : std_logic_vector(31 downto 0); -- nios2_sound_acquisition:debug_mem_slave_readdata -> mm_interconnect_0:nios2_sound_acquisition_debug_mem_slave_readdata
	signal mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_waitrequest         : std_logic;                     -- nios2_sound_acquisition:debug_mem_slave_waitrequest -> mm_interconnect_0:nios2_sound_acquisition_debug_mem_slave_waitrequest
	signal mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_debugaccess         : std_logic;                     -- mm_interconnect_0:nios2_sound_acquisition_debug_mem_slave_debugaccess -> nios2_sound_acquisition:debug_mem_slave_debugaccess
	signal mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_address             : std_logic_vector(8 downto 0);  -- mm_interconnect_0:nios2_sound_acquisition_debug_mem_slave_address -> nios2_sound_acquisition:debug_mem_slave_address
	signal mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_read                : std_logic;                     -- mm_interconnect_0:nios2_sound_acquisition_debug_mem_slave_read -> nios2_sound_acquisition:debug_mem_slave_read
	signal mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_byteenable          : std_logic_vector(3 downto 0);  -- mm_interconnect_0:nios2_sound_acquisition_debug_mem_slave_byteenable -> nios2_sound_acquisition:debug_mem_slave_byteenable
	signal mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_write               : std_logic;                     -- mm_interconnect_0:nios2_sound_acquisition_debug_mem_slave_write -> nios2_sound_acquisition:debug_mem_slave_write
	signal mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_writedata           : std_logic_vector(31 downto 0); -- mm_interconnect_0:nios2_sound_acquisition_debug_mem_slave_writedata -> nios2_sound_acquisition:debug_mem_slave_writedata
	signal mm_interconnect_0_onchip_memory_s1_chipselect                                 : std_logic;                     -- mm_interconnect_0:onchip_memory_s1_chipselect -> onchip_memory:chipselect
	signal mm_interconnect_0_onchip_memory_s1_readdata                                   : std_logic_vector(31 downto 0); -- onchip_memory:readdata -> mm_interconnect_0:onchip_memory_s1_readdata
	signal mm_interconnect_0_onchip_memory_s1_address                                    : std_logic_vector(14 downto 0); -- mm_interconnect_0:onchip_memory_s1_address -> onchip_memory:address
	signal mm_interconnect_0_onchip_memory_s1_byteenable                                 : std_logic_vector(3 downto 0);  -- mm_interconnect_0:onchip_memory_s1_byteenable -> onchip_memory:byteenable
	signal mm_interconnect_0_onchip_memory_s1_write                                      : std_logic;                     -- mm_interconnect_0:onchip_memory_s1_write -> onchip_memory:write
	signal mm_interconnect_0_onchip_memory_s1_writedata                                  : std_logic_vector(31 downto 0); -- mm_interconnect_0:onchip_memory_s1_writedata -> onchip_memory:writedata
	signal mm_interconnect_0_onchip_memory_s1_clken                                      : std_logic;                     -- mm_interconnect_0:onchip_memory_s1_clken -> onchip_memory:clken
	signal mm_interconnect_0_sdram_controller_s1_chipselect                              : std_logic;                     -- mm_interconnect_0:SDRAM_controller_s1_chipselect -> SDRAM_controller:az_cs
	signal mm_interconnect_0_sdram_controller_s1_readdata                                : std_logic_vector(15 downto 0); -- SDRAM_controller:za_data -> mm_interconnect_0:SDRAM_controller_s1_readdata
	signal mm_interconnect_0_sdram_controller_s1_waitrequest                             : std_logic;                     -- SDRAM_controller:za_waitrequest -> mm_interconnect_0:SDRAM_controller_s1_waitrequest
	signal mm_interconnect_0_sdram_controller_s1_address                                 : std_logic_vector(24 downto 0); -- mm_interconnect_0:SDRAM_controller_s1_address -> SDRAM_controller:az_addr
	signal mm_interconnect_0_sdram_controller_s1_read                                    : std_logic;                     -- mm_interconnect_0:SDRAM_controller_s1_read -> mm_interconnect_0_sdram_controller_s1_read:in
	signal mm_interconnect_0_sdram_controller_s1_byteenable                              : std_logic_vector(1 downto 0);  -- mm_interconnect_0:SDRAM_controller_s1_byteenable -> mm_interconnect_0_sdram_controller_s1_byteenable:in
	signal mm_interconnect_0_sdram_controller_s1_readdatavalid                           : std_logic;                     -- SDRAM_controller:za_valid -> mm_interconnect_0:SDRAM_controller_s1_readdatavalid
	signal mm_interconnect_0_sdram_controller_s1_write                                   : std_logic;                     -- mm_interconnect_0:SDRAM_controller_s1_write -> mm_interconnect_0_sdram_controller_s1_write:in
	signal mm_interconnect_0_sdram_controller_s1_writedata                               : std_logic_vector(15 downto 0); -- mm_interconnect_0:SDRAM_controller_s1_writedata -> SDRAM_controller:az_data
	signal mm_interconnect_0_pio_buttons_s1_chipselect                                   : std_logic;                     -- mm_interconnect_0:pio_buttons_s1_chipselect -> pio_buttons:chipselect
	signal mm_interconnect_0_pio_buttons_s1_readdata                                     : std_logic_vector(31 downto 0); -- pio_buttons:readdata -> mm_interconnect_0:pio_buttons_s1_readdata
	signal mm_interconnect_0_pio_buttons_s1_address                                      : std_logic_vector(1 downto 0);  -- mm_interconnect_0:pio_buttons_s1_address -> pio_buttons:address
	signal mm_interconnect_0_pio_buttons_s1_write                                        : std_logic;                     -- mm_interconnect_0:pio_buttons_s1_write -> mm_interconnect_0_pio_buttons_s1_write:in
	signal mm_interconnect_0_pio_buttons_s1_writedata                                    : std_logic_vector(31 downto 0); -- mm_interconnect_0:pio_buttons_s1_writedata -> pio_buttons:writedata
	signal mm_interconnect_0_pio_leds_s1_chipselect                                      : std_logic;                     -- mm_interconnect_0:pio_LEDS_s1_chipselect -> pio_LEDS:chipselect
	signal mm_interconnect_0_pio_leds_s1_readdata                                        : std_logic_vector(31 downto 0); -- pio_LEDS:readdata -> mm_interconnect_0:pio_LEDS_s1_readdata
	signal mm_interconnect_0_pio_leds_s1_address                                         : std_logic_vector(1 downto 0);  -- mm_interconnect_0:pio_LEDS_s1_address -> pio_LEDS:address
	signal mm_interconnect_0_pio_leds_s1_write                                           : std_logic;                     -- mm_interconnect_0:pio_LEDS_s1_write -> mm_interconnect_0_pio_leds_s1_write:in
	signal mm_interconnect_0_pio_leds_s1_writedata                                       : std_logic_vector(31 downto 0); -- mm_interconnect_0:pio_LEDS_s1_writedata -> pio_LEDS:writedata
	signal mm_interconnect_0_mutex_sdram_s1_chipselect                                   : std_logic;                     -- mm_interconnect_0:mutex_SDRAM_s1_chipselect -> mutex_SDRAM:chipselect
	signal mm_interconnect_0_mutex_sdram_s1_readdata                                     : std_logic_vector(31 downto 0); -- mutex_SDRAM:data_to_cpu -> mm_interconnect_0:mutex_SDRAM_s1_readdata
	signal mm_interconnect_0_mutex_sdram_s1_address                                      : std_logic_vector(0 downto 0);  -- mm_interconnect_0:mutex_SDRAM_s1_address -> mutex_SDRAM:address
	signal mm_interconnect_0_mutex_sdram_s1_read                                         : std_logic;                     -- mm_interconnect_0:mutex_SDRAM_s1_read -> mutex_SDRAM:read
	signal mm_interconnect_0_mutex_sdram_s1_write                                        : std_logic;                     -- mm_interconnect_0:mutex_SDRAM_s1_write -> mutex_SDRAM:write
	signal mm_interconnect_0_mutex_sdram_s1_writedata                                    : std_logic_vector(31 downto 0); -- mm_interconnect_0:mutex_SDRAM_s1_writedata -> mutex_SDRAM:data_from_cpu
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_readdata                 : std_logic_vector(31 downto 0); -- mailbox_simple_0:avmm_rcv_readdata -> mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_readdata
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_address                  : std_logic_vector(1 downto 0);  -- mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_address -> mailbox_simple_0:avmm_rcv_address
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_read                     : std_logic;                     -- mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_read -> mailbox_simple_0:avmm_rcv_read
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_write                    : std_logic;                     -- mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_write -> mailbox_simple_0:avmm_rcv_write
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_writedata                : std_logic_vector(31 downto 0); -- mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_writedata -> mailbox_simple_0:avmm_rcv_writedata
	signal mm_interconnect_0_nios2_fft_debug_mem_slave_readdata                          : std_logic_vector(31 downto 0); -- nios2_FFT:debug_mem_slave_readdata -> mm_interconnect_0:nios2_FFT_debug_mem_slave_readdata
	signal mm_interconnect_0_nios2_fft_debug_mem_slave_waitrequest                       : std_logic;                     -- nios2_FFT:debug_mem_slave_waitrequest -> mm_interconnect_0:nios2_FFT_debug_mem_slave_waitrequest
	signal mm_interconnect_0_nios2_fft_debug_mem_slave_debugaccess                       : std_logic;                     -- mm_interconnect_0:nios2_FFT_debug_mem_slave_debugaccess -> nios2_FFT:debug_mem_slave_debugaccess
	signal mm_interconnect_0_nios2_fft_debug_mem_slave_address                           : std_logic_vector(8 downto 0);  -- mm_interconnect_0:nios2_FFT_debug_mem_slave_address -> nios2_FFT:debug_mem_slave_address
	signal mm_interconnect_0_nios2_fft_debug_mem_slave_read                              : std_logic;                     -- mm_interconnect_0:nios2_FFT_debug_mem_slave_read -> nios2_FFT:debug_mem_slave_read
	signal mm_interconnect_0_nios2_fft_debug_mem_slave_byteenable                        : std_logic_vector(3 downto 0);  -- mm_interconnect_0:nios2_FFT_debug_mem_slave_byteenable -> nios2_FFT:debug_mem_slave_byteenable
	signal mm_interconnect_0_nios2_fft_debug_mem_slave_write                             : std_logic;                     -- mm_interconnect_0:nios2_FFT_debug_mem_slave_write -> nios2_FFT:debug_mem_slave_write
	signal mm_interconnect_0_nios2_fft_debug_mem_slave_writedata                         : std_logic_vector(31 downto 0); -- mm_interconnect_0:nios2_FFT_debug_mem_slave_writedata -> nios2_FFT:debug_mem_slave_writedata
	signal mm_interconnect_0_pio_switches_s1_chipselect                                  : std_logic;                     -- mm_interconnect_0:pio_switches_s1_chipselect -> pio_switches:chipselect
	signal mm_interconnect_0_pio_switches_s1_readdata                                    : std_logic_vector(31 downto 0); -- pio_switches:readdata -> mm_interconnect_0:pio_switches_s1_readdata
	signal mm_interconnect_0_pio_switches_s1_address                                     : std_logic_vector(1 downto 0);  -- mm_interconnect_0:pio_switches_s1_address -> pio_switches:address
	signal mm_interconnect_0_pio_switches_s1_write                                       : std_logic;                     -- mm_interconnect_0:pio_switches_s1_write -> mm_interconnect_0_pio_switches_s1_write:in
	signal mm_interconnect_0_pio_switches_s1_writedata                                   : std_logic_vector(31 downto 0); -- mm_interconnect_0:pio_switches_s1_writedata -> pio_switches:writedata
	signal mm_interconnect_0_onchip_memory_nios2_fft_s1_chipselect                       : std_logic;                     -- mm_interconnect_0:onchip_memory_nios2_FFT_s1_chipselect -> onchip_memory_nios2_FFT:chipselect
	signal mm_interconnect_0_onchip_memory_nios2_fft_s1_readdata                         : std_logic_vector(31 downto 0); -- onchip_memory_nios2_FFT:readdata -> mm_interconnect_0:onchip_memory_nios2_FFT_s1_readdata
	signal mm_interconnect_0_onchip_memory_nios2_fft_s1_address                          : std_logic_vector(14 downto 0); -- mm_interconnect_0:onchip_memory_nios2_FFT_s1_address -> onchip_memory_nios2_FFT:address
	signal mm_interconnect_0_onchip_memory_nios2_fft_s1_byteenable                       : std_logic_vector(3 downto 0);  -- mm_interconnect_0:onchip_memory_nios2_FFT_s1_byteenable -> onchip_memory_nios2_FFT:byteenable
	signal mm_interconnect_0_onchip_memory_nios2_fft_s1_write                            : std_logic;                     -- mm_interconnect_0:onchip_memory_nios2_FFT_s1_write -> onchip_memory_nios2_FFT:write
	signal mm_interconnect_0_onchip_memory_nios2_fft_s1_writedata                        : std_logic_vector(31 downto 0); -- mm_interconnect_0:onchip_memory_nios2_FFT_s1_writedata -> onchip_memory_nios2_FFT:writedata
	signal mm_interconnect_0_onchip_memory_nios2_fft_s1_clken                            : std_logic;                     -- mm_interconnect_0:onchip_memory_nios2_FFT_s1_clken -> onchip_memory_nios2_FFT:clken
	signal mm_interconnect_0_uart_0_s1_chipselect                                        : std_logic;                     -- mm_interconnect_0:uart_0_s1_chipselect -> uart_0:chipselect
	signal mm_interconnect_0_uart_0_s1_readdata                                          : std_logic_vector(15 downto 0); -- uart_0:readdata -> mm_interconnect_0:uart_0_s1_readdata
	signal mm_interconnect_0_uart_0_s1_address                                           : std_logic_vector(2 downto 0);  -- mm_interconnect_0:uart_0_s1_address -> uart_0:address
	signal mm_interconnect_0_uart_0_s1_read                                              : std_logic;                     -- mm_interconnect_0:uart_0_s1_read -> mm_interconnect_0_uart_0_s1_read:in
	signal mm_interconnect_0_uart_0_s1_begintransfer                                     : std_logic;                     -- mm_interconnect_0:uart_0_s1_begintransfer -> uart_0:begintransfer
	signal mm_interconnect_0_uart_0_s1_write                                             : std_logic;                     -- mm_interconnect_0:uart_0_s1_write -> mm_interconnect_0_uart_0_s1_write:in
	signal mm_interconnect_0_uart_0_s1_writedata                                         : std_logic_vector(15 downto 0); -- mm_interconnect_0:uart_0_s1_writedata -> uart_0:writedata
	signal irq_mapper_receiver0_irq                                                      : std_logic;                     -- mailbox_simple_0:irq_msg -> irq_mapper:receiver0_irq
	signal irq_mapper_receiver1_irq                                                      : std_logic;                     -- uart_0:irq -> irq_mapper:receiver1_irq
	signal nios2_fft_irq_irq                                                             : std_logic_vector(31 downto 0); -- irq_mapper:sender_irq -> nios2_FFT:irq
	signal irq_mapper_001_receiver0_irq                                                  : std_logic;                     -- audio_0:irq -> irq_mapper_001:receiver0_irq
	signal irq_mapper_001_receiver1_irq                                                  : std_logic;                     -- jtag_uart_0:av_irq -> irq_mapper_001:receiver1_irq
	signal irq_mapper_001_receiver2_irq                                                  : std_logic;                     -- pio_buttons:irq -> irq_mapper_001:receiver2_irq
	signal nios2_sound_acquisition_irq_irq                                               : std_logic_vector(31 downto 0); -- irq_mapper_001:sender_irq -> nios2_sound_acquisition:irq
	signal rst_controller_reset_out_reset                                                : std_logic;                     -- rst_controller:reset_out -> [mm_interconnect_0:SDRAM_controller_reset_reset_bridge_in_reset_reset, rst_controller_reset_out_reset:in]
	signal nios2_sound_acquisition_debug_reset_request_reset                             : std_logic;                     -- nios2_sound_acquisition:debug_reset_request -> [rst_controller:reset_in1, rst_controller_001:reset_in1, rst_controller_002:reset_in1]
	signal nios2_fft_debug_reset_request_reset                                           : std_logic;                     -- nios2_FFT:debug_reset_request -> [rst_controller:reset_in2, rst_controller_001:reset_in2, rst_controller_002:reset_in2]
	signal rst_controller_001_reset_out_reset                                            : std_logic;                     -- rst_controller_001:reset_out -> [audio_0:reset, audio_and_video_config_0:reset, irq_mapper:reset, irq_mapper_001:reset, mm_interconnect_0:nios2_sound_acquisition_reset_reset_bridge_in_reset_reset, onchip_memory:reset, onchip_memory_nios2_FFT:reset, rst_controller_001_reset_out_reset:in, rst_translator:in_reset]
	signal rst_controller_001_reset_out_reset_req                                        : std_logic;                     -- rst_controller_001:reset_req -> [nios2_FFT:reset_req, nios2_sound_acquisition:reset_req, onchip_memory:reset_req, onchip_memory_nios2_FFT:reset_req, rst_translator:reset_req_in]
	signal rst_controller_002_reset_out_reset                                            : std_logic;                     -- rst_controller_002:reset_out -> pll:rst
	signal reset_reset_n_ports_inv                                                       : std_logic;                     -- reset_reset_n:inv -> [rst_controller:reset_in0, rst_controller_001:reset_in0, rst_controller_002:reset_in0]
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read_ports_inv                : std_logic;                     -- mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read:inv -> jtag_uart_0:av_read_n
	signal mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write_ports_inv               : std_logic;                     -- mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write:inv -> jtag_uart_0:av_write_n
	signal mm_interconnect_0_sdram_controller_s1_read_ports_inv                          : std_logic;                     -- mm_interconnect_0_sdram_controller_s1_read:inv -> SDRAM_controller:az_rd_n
	signal mm_interconnect_0_sdram_controller_s1_byteenable_ports_inv                    : std_logic_vector(1 downto 0);  -- mm_interconnect_0_sdram_controller_s1_byteenable:inv -> SDRAM_controller:az_be_n
	signal mm_interconnect_0_sdram_controller_s1_write_ports_inv                         : std_logic;                     -- mm_interconnect_0_sdram_controller_s1_write:inv -> SDRAM_controller:az_wr_n
	signal mm_interconnect_0_pio_buttons_s1_write_ports_inv                              : std_logic;                     -- mm_interconnect_0_pio_buttons_s1_write:inv -> pio_buttons:write_n
	signal mm_interconnect_0_pio_leds_s1_write_ports_inv                                 : std_logic;                     -- mm_interconnect_0_pio_leds_s1_write:inv -> pio_LEDS:write_n
	signal mm_interconnect_0_pio_switches_s1_write_ports_inv                             : std_logic;                     -- mm_interconnect_0_pio_switches_s1_write:inv -> pio_switches:write_n
	signal mm_interconnect_0_uart_0_s1_read_ports_inv                                    : std_logic;                     -- mm_interconnect_0_uart_0_s1_read:inv -> uart_0:read_n
	signal mm_interconnect_0_uart_0_s1_write_ports_inv                                   : std_logic;                     -- mm_interconnect_0_uart_0_s1_write:inv -> uart_0:write_n
	signal rst_controller_reset_out_reset_ports_inv                                      : std_logic;                     -- rst_controller_reset_out_reset:inv -> SDRAM_controller:reset_n
	signal rst_controller_001_reset_out_reset_ports_inv                                  : std_logic;                     -- rst_controller_001_reset_out_reset:inv -> [jtag_uart_0:rst_n, mailbox_simple_0:rst_n, mutex_SDRAM:reset_n, nios2_FFT:reset_n, nios2_sound_acquisition:reset_n, pio_LEDS:reset_n, pio_buttons:reset_n, pio_switches:reset_n, sysid_qsys_0:reset_n, uart_0:reset_n]

begin

	sdram_controller : component main_system_SDRAM_controller
		port map (
			clk            => pll_outclk1_clk,                                            --   clk.clk
			reset_n        => rst_controller_reset_out_reset_ports_inv,                   -- reset.reset_n
			az_addr        => mm_interconnect_0_sdram_controller_s1_address,              --    s1.address
			az_be_n        => mm_interconnect_0_sdram_controller_s1_byteenable_ports_inv, --      .byteenable_n
			az_cs          => mm_interconnect_0_sdram_controller_s1_chipselect,           --      .chipselect
			az_data        => mm_interconnect_0_sdram_controller_s1_writedata,            --      .writedata
			az_rd_n        => mm_interconnect_0_sdram_controller_s1_read_ports_inv,       --      .read_n
			az_wr_n        => mm_interconnect_0_sdram_controller_s1_write_ports_inv,      --      .write_n
			za_data        => mm_interconnect_0_sdram_controller_s1_readdata,             --      .readdata
			za_valid       => mm_interconnect_0_sdram_controller_s1_readdatavalid,        --      .readdatavalid
			za_waitrequest => mm_interconnect_0_sdram_controller_s1_waitrequest,          --      .waitrequest
			zs_addr        => sdram_controller_wire_addr,                                 --  wire.export
			zs_ba          => sdram_controller_wire_ba,                                   --      .export
			zs_cas_n       => sdram_controller_wire_cas_n,                                --      .export
			zs_cke         => sdram_controller_wire_cke,                                  --      .export
			zs_cs_n        => sdram_controller_wire_cs_n,                                 --      .export
			zs_dq          => sdram_controller_wire_dq,                                   --      .export
			zs_dqm         => sdram_controller_wire_dqm,                                  --      .export
			zs_ras_n       => sdram_controller_wire_ras_n,                                --      .export
			zs_we_n        => sdram_controller_wire_we_n                                  --      .export
		);

	audio_0 : component main_system_audio_0
		port map (
			clk         => pll_outclk0_clk,                                         --                clk.clk
			reset       => rst_controller_001_reset_out_reset,                      --              reset.reset
			address     => mm_interconnect_0_audio_0_avalon_audio_slave_address,    -- avalon_audio_slave.address
			chipselect  => mm_interconnect_0_audio_0_avalon_audio_slave_chipselect, --                   .chipselect
			read        => mm_interconnect_0_audio_0_avalon_audio_slave_read,       --                   .read
			write       => mm_interconnect_0_audio_0_avalon_audio_slave_write,      --                   .write
			writedata   => mm_interconnect_0_audio_0_avalon_audio_slave_writedata,  --                   .writedata
			readdata    => mm_interconnect_0_audio_0_avalon_audio_slave_readdata,   --                   .readdata
			irq         => irq_mapper_001_receiver0_irq,                            --          interrupt.irq
			AUD_ADCDAT  => audio_0_external_interface_ADCDAT,                       -- external_interface.export
			AUD_ADCLRCK => audio_0_external_interface_ADCLRCK,                      --                   .export
			AUD_BCLK    => audio_0_external_interface_BCLK,                         --                   .export
			AUD_DACDAT  => audio_0_external_interface_DACDAT,                       --                   .export
			AUD_DACLRCK => audio_0_external_interface_DACLRCK                       --                   .export
		);

	audio_and_video_config_0 : component main_system_audio_and_video_config_0
		port map (
			clk         => pll_outclk0_clk,                                                               --                    clk.clk
			reset       => rst_controller_001_reset_out_reset,                                            --                  reset.reset
			address     => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_address,     -- avalon_av_config_slave.address
			byteenable  => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_byteenable,  --                       .byteenable
			read        => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_read,        --                       .read
			write       => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_write,       --                       .write
			writedata   => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_writedata,   --                       .writedata
			readdata    => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_readdata,    --                       .readdata
			waitrequest => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_waitrequest, --                       .waitrequest
			I2C_SDAT    => audio_and_video_config_0_external_interface_SDAT,                              --     external_interface.export
			I2C_SCLK    => audio_and_video_config_0_external_interface_SCLK                               --                       .export
		);

	jtag_uart_0 : component main_system_jtag_uart_0
		port map (
			clk            => pll_outclk0_clk,                                                 --               clk.clk
			rst_n          => rst_controller_001_reset_out_reset_ports_inv,                    --             reset.reset_n
			av_chipselect  => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect,      -- avalon_jtag_slave.chipselect
			av_address     => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address(0),      --                  .address
			av_read_n      => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read_ports_inv,  --                  .read_n
			av_readdata    => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata,        --                  .readdata
			av_write_n     => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write_ports_inv, --                  .write_n
			av_writedata   => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata,       --                  .writedata
			av_waitrequest => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest,     --                  .waitrequest
			av_irq         => irq_mapper_001_receiver1_irq                                     --               irq.irq
		);

	mailbox_simple_0 : component altera_avalon_mailbox
		generic map (
			DWIDTH => 32,
			AWIDTH => 2
		)
		port map (
			clk                  => pll_outclk0_clk,                                                --                   clk.clk
			rst_n                => rst_controller_001_reset_out_reset_ports_inv,                   --                 rst_n.reset_n
			avmm_snd_address     => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_address,     --       avmm_msg_sender.address
			avmm_snd_writedata   => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_writedata,   --                      .writedata
			avmm_snd_write       => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_write,       --                      .write
			avmm_snd_read        => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_read,        --                      .read
			avmm_snd_readdata    => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_readdata,    --                      .readdata
			avmm_snd_waitrequest => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_waitrequest, --                      .waitrequest
			irq_msg              => irq_mapper_receiver0_irq,                                       -- interrupt_msg_pending.irq
			avmm_rcv_address     => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_address,   --     avmm_msg_receiver.address
			avmm_rcv_read        => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_read,      --                      .read
			avmm_rcv_writedata   => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_writedata, --                      .writedata
			avmm_rcv_write       => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_write,     --                      .write
			avmm_rcv_readdata    => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_readdata,  --                      .readdata
			irq_space            => open                                                            --           (terminated)
		);

	mutex_sdram : component main_system_mutex_SDRAM
		port map (
			reset_n       => rst_controller_001_reset_out_reset_ports_inv, -- reset.reset_n
			clk           => pll_outclk0_clk,                              --   clk.clk
			chipselect    => mm_interconnect_0_mutex_sdram_s1_chipselect,  --    s1.chipselect
			data_from_cpu => mm_interconnect_0_mutex_sdram_s1_writedata,   --      .writedata
			read          => mm_interconnect_0_mutex_sdram_s1_read,        --      .read
			write         => mm_interconnect_0_mutex_sdram_s1_write,       --      .write
			data_to_cpu   => mm_interconnect_0_mutex_sdram_s1_readdata,    --      .readdata
			address       => mm_interconnect_0_mutex_sdram_s1_address(0)   --      .address
		);

	nios2_fft : component main_system_nios2_FFT
		port map (
			clk                                 => pll_outclk0_clk,                                         --                       clk.clk
			reset_n                             => rst_controller_001_reset_out_reset_ports_inv,            --                     reset.reset_n
			reset_req                           => rst_controller_001_reset_out_reset_req,                  --                          .reset_req
			d_address                           => nios2_fft_data_master_address,                           --               data_master.address
			d_byteenable                        => nios2_fft_data_master_byteenable,                        --                          .byteenable
			d_read                              => nios2_fft_data_master_read,                              --                          .read
			d_readdata                          => nios2_fft_data_master_readdata,                          --                          .readdata
			d_waitrequest                       => nios2_fft_data_master_waitrequest,                       --                          .waitrequest
			d_write                             => nios2_fft_data_master_write,                             --                          .write
			d_writedata                         => nios2_fft_data_master_writedata,                         --                          .writedata
			d_readdatavalid                     => nios2_fft_data_master_readdatavalid,                     --                          .readdatavalid
			debug_mem_slave_debugaccess_to_roms => nios2_fft_data_master_debugaccess,                       --                          .debugaccess
			i_address                           => nios2_fft_instruction_master_address,                    --        instruction_master.address
			i_read                              => nios2_fft_instruction_master_read,                       --                          .read
			i_readdata                          => nios2_fft_instruction_master_readdata,                   --                          .readdata
			i_waitrequest                       => nios2_fft_instruction_master_waitrequest,                --                          .waitrequest
			i_readdatavalid                     => nios2_fft_instruction_master_readdatavalid,              --                          .readdatavalid
			irq                                 => nios2_fft_irq_irq,                                       --                       irq.irq
			debug_reset_request                 => nios2_fft_debug_reset_request_reset,                     --       debug_reset_request.reset
			debug_mem_slave_address             => mm_interconnect_0_nios2_fft_debug_mem_slave_address,     --           debug_mem_slave.address
			debug_mem_slave_byteenable          => mm_interconnect_0_nios2_fft_debug_mem_slave_byteenable,  --                          .byteenable
			debug_mem_slave_debugaccess         => mm_interconnect_0_nios2_fft_debug_mem_slave_debugaccess, --                          .debugaccess
			debug_mem_slave_read                => mm_interconnect_0_nios2_fft_debug_mem_slave_read,        --                          .read
			debug_mem_slave_readdata            => mm_interconnect_0_nios2_fft_debug_mem_slave_readdata,    --                          .readdata
			debug_mem_slave_waitrequest         => mm_interconnect_0_nios2_fft_debug_mem_slave_waitrequest, --                          .waitrequest
			debug_mem_slave_write               => mm_interconnect_0_nios2_fft_debug_mem_slave_write,       --                          .write
			debug_mem_slave_writedata           => mm_interconnect_0_nios2_fft_debug_mem_slave_writedata,   --                          .writedata
			dummy_ci_port                       => open                                                     -- custom_instruction_master.readra
		);

	nios2_sound_acquisition : component main_system_nios2_sound_acquisition
		port map (
			clk                                 => pll_outclk0_clk,                                                       --                       clk.clk
			reset_n                             => rst_controller_001_reset_out_reset_ports_inv,                          --                     reset.reset_n
			reset_req                           => rst_controller_001_reset_out_reset_req,                                --                          .reset_req
			d_address                           => nios2_sound_acquisition_data_master_address,                           --               data_master.address
			d_byteenable                        => nios2_sound_acquisition_data_master_byteenable,                        --                          .byteenable
			d_read                              => nios2_sound_acquisition_data_master_read,                              --                          .read
			d_readdata                          => nios2_sound_acquisition_data_master_readdata,                          --                          .readdata
			d_waitrequest                       => nios2_sound_acquisition_data_master_waitrequest,                       --                          .waitrequest
			d_write                             => nios2_sound_acquisition_data_master_write,                             --                          .write
			d_writedata                         => nios2_sound_acquisition_data_master_writedata,                         --                          .writedata
			d_readdatavalid                     => nios2_sound_acquisition_data_master_readdatavalid,                     --                          .readdatavalid
			debug_mem_slave_debugaccess_to_roms => nios2_sound_acquisition_data_master_debugaccess,                       --                          .debugaccess
			i_address                           => nios2_sound_acquisition_instruction_master_address,                    --        instruction_master.address
			i_read                              => nios2_sound_acquisition_instruction_master_read,                       --                          .read
			i_readdata                          => nios2_sound_acquisition_instruction_master_readdata,                   --                          .readdata
			i_waitrequest                       => nios2_sound_acquisition_instruction_master_waitrequest,                --                          .waitrequest
			i_readdatavalid                     => nios2_sound_acquisition_instruction_master_readdatavalid,              --                          .readdatavalid
			irq                                 => nios2_sound_acquisition_irq_irq,                                       --                       irq.irq
			debug_reset_request                 => nios2_sound_acquisition_debug_reset_request_reset,                     --       debug_reset_request.reset
			debug_mem_slave_address             => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_address,     --           debug_mem_slave.address
			debug_mem_slave_byteenable          => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_byteenable,  --                          .byteenable
			debug_mem_slave_debugaccess         => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_debugaccess, --                          .debugaccess
			debug_mem_slave_read                => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_read,        --                          .read
			debug_mem_slave_readdata            => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_readdata,    --                          .readdata
			debug_mem_slave_waitrequest         => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_waitrequest, --                          .waitrequest
			debug_mem_slave_write               => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_write,       --                          .write
			debug_mem_slave_writedata           => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_writedata,   --                          .writedata
			dummy_ci_port                       => open                                                                   -- custom_instruction_master.readra
		);

	onchip_memory : component main_system_onchip_memory
		port map (
			clk        => pll_outclk0_clk,                               --   clk1.clk
			address    => mm_interconnect_0_onchip_memory_s1_address,    --     s1.address
			clken      => mm_interconnect_0_onchip_memory_s1_clken,      --       .clken
			chipselect => mm_interconnect_0_onchip_memory_s1_chipselect, --       .chipselect
			write      => mm_interconnect_0_onchip_memory_s1_write,      --       .write
			readdata   => mm_interconnect_0_onchip_memory_s1_readdata,   --       .readdata
			writedata  => mm_interconnect_0_onchip_memory_s1_writedata,  --       .writedata
			byteenable => mm_interconnect_0_onchip_memory_s1_byteenable, --       .byteenable
			reset      => rst_controller_001_reset_out_reset,            -- reset1.reset
			reset_req  => rst_controller_001_reset_out_reset_req,        --       .reset_req
			freeze     => '0'                                            -- (terminated)
		);

	onchip_memory_nios2_fft : component main_system_onchip_memory_nios2_FFT
		port map (
			clk        => pll_outclk0_clk,                                         --   clk1.clk
			address    => mm_interconnect_0_onchip_memory_nios2_fft_s1_address,    --     s1.address
			clken      => mm_interconnect_0_onchip_memory_nios2_fft_s1_clken,      --       .clken
			chipselect => mm_interconnect_0_onchip_memory_nios2_fft_s1_chipselect, --       .chipselect
			write      => mm_interconnect_0_onchip_memory_nios2_fft_s1_write,      --       .write
			readdata   => mm_interconnect_0_onchip_memory_nios2_fft_s1_readdata,   --       .readdata
			writedata  => mm_interconnect_0_onchip_memory_nios2_fft_s1_writedata,  --       .writedata
			byteenable => mm_interconnect_0_onchip_memory_nios2_fft_s1_byteenable, --       .byteenable
			reset      => rst_controller_001_reset_out_reset,                      -- reset1.reset
			reset_req  => rst_controller_001_reset_out_reset_req,                  --       .reset_req
			freeze     => '0'                                                      -- (terminated)
		);

	pio_leds : component main_system_pio_LEDS
		port map (
			clk        => pll_outclk0_clk,                               --                 clk.clk
			reset_n    => rst_controller_001_reset_out_reset_ports_inv,  --               reset.reset_n
			address    => mm_interconnect_0_pio_leds_s1_address,         --                  s1.address
			write_n    => mm_interconnect_0_pio_leds_s1_write_ports_inv, --                    .write_n
			writedata  => mm_interconnect_0_pio_leds_s1_writedata,       --                    .writedata
			chipselect => mm_interconnect_0_pio_leds_s1_chipselect,      --                    .chipselect
			readdata   => mm_interconnect_0_pio_leds_s1_readdata,        --                    .readdata
			out_port   => pio_leds_external_connection_export            -- external_connection.export
		);

	pio_buttons : component main_system_pio_buttons
		port map (
			clk        => pll_outclk0_clk,                                  --                 clk.clk
			reset_n    => rst_controller_001_reset_out_reset_ports_inv,     --               reset.reset_n
			address    => mm_interconnect_0_pio_buttons_s1_address,         --                  s1.address
			write_n    => mm_interconnect_0_pio_buttons_s1_write_ports_inv, --                    .write_n
			writedata  => mm_interconnect_0_pio_buttons_s1_writedata,       --                    .writedata
			chipselect => mm_interconnect_0_pio_buttons_s1_chipselect,      --                    .chipselect
			readdata   => mm_interconnect_0_pio_buttons_s1_readdata,        --                    .readdata
			in_port    => pio_buttons_external_connection_export,           -- external_connection.export
			irq        => irq_mapper_001_receiver2_irq                      --                 irq.irq
		);

	pio_switches : component main_system_pio_switches
		port map (
			clk        => pll_outclk0_clk,                                   --                 clk.clk
			reset_n    => rst_controller_001_reset_out_reset_ports_inv,      --               reset.reset_n
			address    => mm_interconnect_0_pio_switches_s1_address,         --                  s1.address
			write_n    => mm_interconnect_0_pio_switches_s1_write_ports_inv, --                    .write_n
			writedata  => mm_interconnect_0_pio_switches_s1_writedata,       --                    .writedata
			chipselect => mm_interconnect_0_pio_switches_s1_chipselect,      --                    .chipselect
			readdata   => mm_interconnect_0_pio_switches_s1_readdata,        --                    .readdata
			in_port    => pio_switches_external_connection_export,           -- external_connection.export
			irq        => open                                               --                 irq.irq
		);

	pll : component main_system_pll
		port map (
			refclk   => clk_clk,                            --  refclk.clk
			rst      => rst_controller_002_reset_out_reset, --   reset.reset
			outclk_0 => pll_outclk0_clk,                    -- outclk0.clk
			outclk_1 => pll_outclk1_clk,                    -- outclk1.clk
			outclk_2 => clk_sdram_clk,                      -- outclk2.clk
			outclk_3 => clk_audio_codec_clk,                -- outclk3.clk
			locked   => open                                -- (terminated)
		);

	sysid_qsys_0 : component main_system_sysid_qsys_0
		port map (
			clock    => pll_outclk0_clk,                                         --           clk.clk
			reset_n  => rst_controller_001_reset_out_reset_ports_inv,            --         reset.reset_n
			readdata => mm_interconnect_0_sysid_qsys_0_control_slave_readdata,   -- control_slave.readdata
			address  => mm_interconnect_0_sysid_qsys_0_control_slave_address(0)  --              .address
		);

	uart_0 : component main_system_uart_0
		port map (
			clk           => pll_outclk0_clk,                              --                 clk.clk
			reset_n       => rst_controller_001_reset_out_reset_ports_inv, --               reset.reset_n
			address       => mm_interconnect_0_uart_0_s1_address,          --                  s1.address
			begintransfer => mm_interconnect_0_uart_0_s1_begintransfer,    --                    .begintransfer
			chipselect    => mm_interconnect_0_uart_0_s1_chipselect,       --                    .chipselect
			read_n        => mm_interconnect_0_uart_0_s1_read_ports_inv,   --                    .read_n
			write_n       => mm_interconnect_0_uart_0_s1_write_ports_inv,  --                    .write_n
			writedata     => mm_interconnect_0_uart_0_s1_writedata,        --                    .writedata
			readdata      => mm_interconnect_0_uart_0_s1_readdata,         --                    .readdata
			rxd           => uart_0_external_connection_rxd,               -- external_connection.export
			txd           => uart_0_external_connection_txd,               --                    .export
			irq           => irq_mapper_receiver1_irq                      --                 irq.irq
		);

	mm_interconnect_0 : component main_system_mm_interconnect_0
		port map (
			pll_outclk0_clk                                             => pll_outclk0_clk,                                                               --                                         pll_outclk0.clk
			pll_outclk1_clk                                             => pll_outclk1_clk,                                                               --                                         pll_outclk1.clk
			nios2_sound_acquisition_reset_reset_bridge_in_reset_reset   => rst_controller_001_reset_out_reset,                                            -- nios2_sound_acquisition_reset_reset_bridge_in_reset.reset
			SDRAM_controller_reset_reset_bridge_in_reset_reset          => rst_controller_reset_out_reset,                                                --        SDRAM_controller_reset_reset_bridge_in_reset.reset
			nios2_FFT_data_master_address                               => nios2_fft_data_master_address,                                                 --                               nios2_FFT_data_master.address
			nios2_FFT_data_master_waitrequest                           => nios2_fft_data_master_waitrequest,                                             --                                                    .waitrequest
			nios2_FFT_data_master_byteenable                            => nios2_fft_data_master_byteenable,                                              --                                                    .byteenable
			nios2_FFT_data_master_read                                  => nios2_fft_data_master_read,                                                    --                                                    .read
			nios2_FFT_data_master_readdata                              => nios2_fft_data_master_readdata,                                                --                                                    .readdata
			nios2_FFT_data_master_readdatavalid                         => nios2_fft_data_master_readdatavalid,                                           --                                                    .readdatavalid
			nios2_FFT_data_master_write                                 => nios2_fft_data_master_write,                                                   --                                                    .write
			nios2_FFT_data_master_writedata                             => nios2_fft_data_master_writedata,                                               --                                                    .writedata
			nios2_FFT_data_master_debugaccess                           => nios2_fft_data_master_debugaccess,                                             --                                                    .debugaccess
			nios2_FFT_instruction_master_address                        => nios2_fft_instruction_master_address,                                          --                        nios2_FFT_instruction_master.address
			nios2_FFT_instruction_master_waitrequest                    => nios2_fft_instruction_master_waitrequest,                                      --                                                    .waitrequest
			nios2_FFT_instruction_master_read                           => nios2_fft_instruction_master_read,                                             --                                                    .read
			nios2_FFT_instruction_master_readdata                       => nios2_fft_instruction_master_readdata,                                         --                                                    .readdata
			nios2_FFT_instruction_master_readdatavalid                  => nios2_fft_instruction_master_readdatavalid,                                    --                                                    .readdatavalid
			nios2_sound_acquisition_data_master_address                 => nios2_sound_acquisition_data_master_address,                                   --                 nios2_sound_acquisition_data_master.address
			nios2_sound_acquisition_data_master_waitrequest             => nios2_sound_acquisition_data_master_waitrequest,                               --                                                    .waitrequest
			nios2_sound_acquisition_data_master_byteenable              => nios2_sound_acquisition_data_master_byteenable,                                --                                                    .byteenable
			nios2_sound_acquisition_data_master_read                    => nios2_sound_acquisition_data_master_read,                                      --                                                    .read
			nios2_sound_acquisition_data_master_readdata                => nios2_sound_acquisition_data_master_readdata,                                  --                                                    .readdata
			nios2_sound_acquisition_data_master_readdatavalid           => nios2_sound_acquisition_data_master_readdatavalid,                             --                                                    .readdatavalid
			nios2_sound_acquisition_data_master_write                   => nios2_sound_acquisition_data_master_write,                                     --                                                    .write
			nios2_sound_acquisition_data_master_writedata               => nios2_sound_acquisition_data_master_writedata,                                 --                                                    .writedata
			nios2_sound_acquisition_data_master_debugaccess             => nios2_sound_acquisition_data_master_debugaccess,                               --                                                    .debugaccess
			nios2_sound_acquisition_instruction_master_address          => nios2_sound_acquisition_instruction_master_address,                            --          nios2_sound_acquisition_instruction_master.address
			nios2_sound_acquisition_instruction_master_waitrequest      => nios2_sound_acquisition_instruction_master_waitrequest,                        --                                                    .waitrequest
			nios2_sound_acquisition_instruction_master_read             => nios2_sound_acquisition_instruction_master_read,                               --                                                    .read
			nios2_sound_acquisition_instruction_master_readdata         => nios2_sound_acquisition_instruction_master_readdata,                           --                                                    .readdata
			nios2_sound_acquisition_instruction_master_readdatavalid    => nios2_sound_acquisition_instruction_master_readdatavalid,                      --                                                    .readdatavalid
			audio_0_avalon_audio_slave_address                          => mm_interconnect_0_audio_0_avalon_audio_slave_address,                          --                          audio_0_avalon_audio_slave.address
			audio_0_avalon_audio_slave_write                            => mm_interconnect_0_audio_0_avalon_audio_slave_write,                            --                                                    .write
			audio_0_avalon_audio_slave_read                             => mm_interconnect_0_audio_0_avalon_audio_slave_read,                             --                                                    .read
			audio_0_avalon_audio_slave_readdata                         => mm_interconnect_0_audio_0_avalon_audio_slave_readdata,                         --                                                    .readdata
			audio_0_avalon_audio_slave_writedata                        => mm_interconnect_0_audio_0_avalon_audio_slave_writedata,                        --                                                    .writedata
			audio_0_avalon_audio_slave_chipselect                       => mm_interconnect_0_audio_0_avalon_audio_slave_chipselect,                       --                                                    .chipselect
			audio_and_video_config_0_avalon_av_config_slave_address     => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_address,     --     audio_and_video_config_0_avalon_av_config_slave.address
			audio_and_video_config_0_avalon_av_config_slave_write       => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_write,       --                                                    .write
			audio_and_video_config_0_avalon_av_config_slave_read        => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_read,        --                                                    .read
			audio_and_video_config_0_avalon_av_config_slave_readdata    => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_readdata,    --                                                    .readdata
			audio_and_video_config_0_avalon_av_config_slave_writedata   => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_writedata,   --                                                    .writedata
			audio_and_video_config_0_avalon_av_config_slave_byteenable  => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_byteenable,  --                                                    .byteenable
			audio_and_video_config_0_avalon_av_config_slave_waitrequest => mm_interconnect_0_audio_and_video_config_0_avalon_av_config_slave_waitrequest, --                                                    .waitrequest
			jtag_uart_0_avalon_jtag_slave_address                       => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address,                       --                       jtag_uart_0_avalon_jtag_slave.address
			jtag_uart_0_avalon_jtag_slave_write                         => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write,                         --                                                    .write
			jtag_uart_0_avalon_jtag_slave_read                          => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read,                          --                                                    .read
			jtag_uart_0_avalon_jtag_slave_readdata                      => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata,                      --                                                    .readdata
			jtag_uart_0_avalon_jtag_slave_writedata                     => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata,                     --                                                    .writedata
			jtag_uart_0_avalon_jtag_slave_waitrequest                   => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest,                   --                                                    .waitrequest
			jtag_uart_0_avalon_jtag_slave_chipselect                    => mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect,                    --                                                    .chipselect
			mailbox_simple_0_avmm_msg_receiver_address                  => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_address,                  --                  mailbox_simple_0_avmm_msg_receiver.address
			mailbox_simple_0_avmm_msg_receiver_write                    => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_write,                    --                                                    .write
			mailbox_simple_0_avmm_msg_receiver_read                     => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_read,                     --                                                    .read
			mailbox_simple_0_avmm_msg_receiver_readdata                 => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_readdata,                 --                                                    .readdata
			mailbox_simple_0_avmm_msg_receiver_writedata                => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_writedata,                --                                                    .writedata
			mailbox_simple_0_avmm_msg_sender_address                    => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_address,                    --                    mailbox_simple_0_avmm_msg_sender.address
			mailbox_simple_0_avmm_msg_sender_write                      => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_write,                      --                                                    .write
			mailbox_simple_0_avmm_msg_sender_read                       => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_read,                       --                                                    .read
			mailbox_simple_0_avmm_msg_sender_readdata                   => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_readdata,                   --                                                    .readdata
			mailbox_simple_0_avmm_msg_sender_writedata                  => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_writedata,                  --                                                    .writedata
			mailbox_simple_0_avmm_msg_sender_waitrequest                => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_waitrequest,                --                                                    .waitrequest
			mutex_SDRAM_s1_address                                      => mm_interconnect_0_mutex_sdram_s1_address,                                      --                                      mutex_SDRAM_s1.address
			mutex_SDRAM_s1_write                                        => mm_interconnect_0_mutex_sdram_s1_write,                                        --                                                    .write
			mutex_SDRAM_s1_read                                         => mm_interconnect_0_mutex_sdram_s1_read,                                         --                                                    .read
			mutex_SDRAM_s1_readdata                                     => mm_interconnect_0_mutex_sdram_s1_readdata,                                     --                                                    .readdata
			mutex_SDRAM_s1_writedata                                    => mm_interconnect_0_mutex_sdram_s1_writedata,                                    --                                                    .writedata
			mutex_SDRAM_s1_chipselect                                   => mm_interconnect_0_mutex_sdram_s1_chipselect,                                   --                                                    .chipselect
			nios2_FFT_debug_mem_slave_address                           => mm_interconnect_0_nios2_fft_debug_mem_slave_address,                           --                           nios2_FFT_debug_mem_slave.address
			nios2_FFT_debug_mem_slave_write                             => mm_interconnect_0_nios2_fft_debug_mem_slave_write,                             --                                                    .write
			nios2_FFT_debug_mem_slave_read                              => mm_interconnect_0_nios2_fft_debug_mem_slave_read,                              --                                                    .read
			nios2_FFT_debug_mem_slave_readdata                          => mm_interconnect_0_nios2_fft_debug_mem_slave_readdata,                          --                                                    .readdata
			nios2_FFT_debug_mem_slave_writedata                         => mm_interconnect_0_nios2_fft_debug_mem_slave_writedata,                         --                                                    .writedata
			nios2_FFT_debug_mem_slave_byteenable                        => mm_interconnect_0_nios2_fft_debug_mem_slave_byteenable,                        --                                                    .byteenable
			nios2_FFT_debug_mem_slave_waitrequest                       => mm_interconnect_0_nios2_fft_debug_mem_slave_waitrequest,                       --                                                    .waitrequest
			nios2_FFT_debug_mem_slave_debugaccess                       => mm_interconnect_0_nios2_fft_debug_mem_slave_debugaccess,                       --                                                    .debugaccess
			nios2_sound_acquisition_debug_mem_slave_address             => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_address,             --             nios2_sound_acquisition_debug_mem_slave.address
			nios2_sound_acquisition_debug_mem_slave_write               => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_write,               --                                                    .write
			nios2_sound_acquisition_debug_mem_slave_read                => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_read,                --                                                    .read
			nios2_sound_acquisition_debug_mem_slave_readdata            => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_readdata,            --                                                    .readdata
			nios2_sound_acquisition_debug_mem_slave_writedata           => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_writedata,           --                                                    .writedata
			nios2_sound_acquisition_debug_mem_slave_byteenable          => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_byteenable,          --                                                    .byteenable
			nios2_sound_acquisition_debug_mem_slave_waitrequest         => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_waitrequest,         --                                                    .waitrequest
			nios2_sound_acquisition_debug_mem_slave_debugaccess         => mm_interconnect_0_nios2_sound_acquisition_debug_mem_slave_debugaccess,         --                                                    .debugaccess
			onchip_memory_s1_address                                    => mm_interconnect_0_onchip_memory_s1_address,                                    --                                    onchip_memory_s1.address
			onchip_memory_s1_write                                      => mm_interconnect_0_onchip_memory_s1_write,                                      --                                                    .write
			onchip_memory_s1_readdata                                   => mm_interconnect_0_onchip_memory_s1_readdata,                                   --                                                    .readdata
			onchip_memory_s1_writedata                                  => mm_interconnect_0_onchip_memory_s1_writedata,                                  --                                                    .writedata
			onchip_memory_s1_byteenable                                 => mm_interconnect_0_onchip_memory_s1_byteenable,                                 --                                                    .byteenable
			onchip_memory_s1_chipselect                                 => mm_interconnect_0_onchip_memory_s1_chipselect,                                 --                                                    .chipselect
			onchip_memory_s1_clken                                      => mm_interconnect_0_onchip_memory_s1_clken,                                      --                                                    .clken
			onchip_memory_nios2_FFT_s1_address                          => mm_interconnect_0_onchip_memory_nios2_fft_s1_address,                          --                          onchip_memory_nios2_FFT_s1.address
			onchip_memory_nios2_FFT_s1_write                            => mm_interconnect_0_onchip_memory_nios2_fft_s1_write,                            --                                                    .write
			onchip_memory_nios2_FFT_s1_readdata                         => mm_interconnect_0_onchip_memory_nios2_fft_s1_readdata,                         --                                                    .readdata
			onchip_memory_nios2_FFT_s1_writedata                        => mm_interconnect_0_onchip_memory_nios2_fft_s1_writedata,                        --                                                    .writedata
			onchip_memory_nios2_FFT_s1_byteenable                       => mm_interconnect_0_onchip_memory_nios2_fft_s1_byteenable,                       --                                                    .byteenable
			onchip_memory_nios2_FFT_s1_chipselect                       => mm_interconnect_0_onchip_memory_nios2_fft_s1_chipselect,                       --                                                    .chipselect
			onchip_memory_nios2_FFT_s1_clken                            => mm_interconnect_0_onchip_memory_nios2_fft_s1_clken,                            --                                                    .clken
			pio_buttons_s1_address                                      => mm_interconnect_0_pio_buttons_s1_address,                                      --                                      pio_buttons_s1.address
			pio_buttons_s1_write                                        => mm_interconnect_0_pio_buttons_s1_write,                                        --                                                    .write
			pio_buttons_s1_readdata                                     => mm_interconnect_0_pio_buttons_s1_readdata,                                     --                                                    .readdata
			pio_buttons_s1_writedata                                    => mm_interconnect_0_pio_buttons_s1_writedata,                                    --                                                    .writedata
			pio_buttons_s1_chipselect                                   => mm_interconnect_0_pio_buttons_s1_chipselect,                                   --                                                    .chipselect
			pio_LEDS_s1_address                                         => mm_interconnect_0_pio_leds_s1_address,                                         --                                         pio_LEDS_s1.address
			pio_LEDS_s1_write                                           => mm_interconnect_0_pio_leds_s1_write,                                           --                                                    .write
			pio_LEDS_s1_readdata                                        => mm_interconnect_0_pio_leds_s1_readdata,                                        --                                                    .readdata
			pio_LEDS_s1_writedata                                       => mm_interconnect_0_pio_leds_s1_writedata,                                       --                                                    .writedata
			pio_LEDS_s1_chipselect                                      => mm_interconnect_0_pio_leds_s1_chipselect,                                      --                                                    .chipselect
			pio_switches_s1_address                                     => mm_interconnect_0_pio_switches_s1_address,                                     --                                     pio_switches_s1.address
			pio_switches_s1_write                                       => mm_interconnect_0_pio_switches_s1_write,                                       --                                                    .write
			pio_switches_s1_readdata                                    => mm_interconnect_0_pio_switches_s1_readdata,                                    --                                                    .readdata
			pio_switches_s1_writedata                                   => mm_interconnect_0_pio_switches_s1_writedata,                                   --                                                    .writedata
			pio_switches_s1_chipselect                                  => mm_interconnect_0_pio_switches_s1_chipselect,                                  --                                                    .chipselect
			SDRAM_controller_s1_address                                 => mm_interconnect_0_sdram_controller_s1_address,                                 --                                 SDRAM_controller_s1.address
			SDRAM_controller_s1_write                                   => mm_interconnect_0_sdram_controller_s1_write,                                   --                                                    .write
			SDRAM_controller_s1_read                                    => mm_interconnect_0_sdram_controller_s1_read,                                    --                                                    .read
			SDRAM_controller_s1_readdata                                => mm_interconnect_0_sdram_controller_s1_readdata,                                --                                                    .readdata
			SDRAM_controller_s1_writedata                               => mm_interconnect_0_sdram_controller_s1_writedata,                               --                                                    .writedata
			SDRAM_controller_s1_byteenable                              => mm_interconnect_0_sdram_controller_s1_byteenable,                              --                                                    .byteenable
			SDRAM_controller_s1_readdatavalid                           => mm_interconnect_0_sdram_controller_s1_readdatavalid,                           --                                                    .readdatavalid
			SDRAM_controller_s1_waitrequest                             => mm_interconnect_0_sdram_controller_s1_waitrequest,                             --                                                    .waitrequest
			SDRAM_controller_s1_chipselect                              => mm_interconnect_0_sdram_controller_s1_chipselect,                              --                                                    .chipselect
			sysid_qsys_0_control_slave_address                          => mm_interconnect_0_sysid_qsys_0_control_slave_address,                          --                          sysid_qsys_0_control_slave.address
			sysid_qsys_0_control_slave_readdata                         => mm_interconnect_0_sysid_qsys_0_control_slave_readdata,                         --                                                    .readdata
			uart_0_s1_address                                           => mm_interconnect_0_uart_0_s1_address,                                           --                                           uart_0_s1.address
			uart_0_s1_write                                             => mm_interconnect_0_uart_0_s1_write,                                             --                                                    .write
			uart_0_s1_read                                              => mm_interconnect_0_uart_0_s1_read,                                              --                                                    .read
			uart_0_s1_readdata                                          => mm_interconnect_0_uart_0_s1_readdata,                                          --                                                    .readdata
			uart_0_s1_writedata                                         => mm_interconnect_0_uart_0_s1_writedata,                                         --                                                    .writedata
			uart_0_s1_begintransfer                                     => mm_interconnect_0_uart_0_s1_begintransfer,                                     --                                                    .begintransfer
			uart_0_s1_chipselect                                        => mm_interconnect_0_uart_0_s1_chipselect                                         --                                                    .chipselect
		);

	irq_mapper : component main_system_irq_mapper
		port map (
			clk           => pll_outclk0_clk,                    --       clk.clk
			reset         => rst_controller_001_reset_out_reset, -- clk_reset.reset
			receiver0_irq => irq_mapper_receiver0_irq,           -- receiver0.irq
			receiver1_irq => irq_mapper_receiver1_irq,           -- receiver1.irq
			sender_irq    => nios2_fft_irq_irq                   --    sender.irq
		);

	irq_mapper_001 : component main_system_irq_mapper_001
		port map (
			clk           => pll_outclk0_clk,                    --       clk.clk
			reset         => rst_controller_001_reset_out_reset, -- clk_reset.reset
			receiver0_irq => irq_mapper_001_receiver0_irq,       -- receiver0.irq
			receiver1_irq => irq_mapper_001_receiver1_irq,       -- receiver1.irq
			receiver2_irq => irq_mapper_001_receiver2_irq,       -- receiver2.irq
			sender_irq    => nios2_sound_acquisition_irq_irq     --    sender.irq
		);

	rst_controller : component main_system_rst_controller
		generic map (
			NUM_RESET_INPUTS          => 3,
			OUTPUT_RESET_SYNC_EDGES   => "deassert",
			SYNC_DEPTH                => 2,
			RESET_REQUEST_PRESENT     => 0,
			RESET_REQ_WAIT_TIME       => 1,
			MIN_RST_ASSERTION_TIME    => 3,
			RESET_REQ_EARLY_DSRT_TIME => 1,
			USE_RESET_REQUEST_IN0     => 0,
			USE_RESET_REQUEST_IN1     => 0,
			USE_RESET_REQUEST_IN2     => 0,
			USE_RESET_REQUEST_IN3     => 0,
			USE_RESET_REQUEST_IN4     => 0,
			USE_RESET_REQUEST_IN5     => 0,
			USE_RESET_REQUEST_IN6     => 0,
			USE_RESET_REQUEST_IN7     => 0,
			USE_RESET_REQUEST_IN8     => 0,
			USE_RESET_REQUEST_IN9     => 0,
			USE_RESET_REQUEST_IN10    => 0,
			USE_RESET_REQUEST_IN11    => 0,
			USE_RESET_REQUEST_IN12    => 0,
			USE_RESET_REQUEST_IN13    => 0,
			USE_RESET_REQUEST_IN14    => 0,
			USE_RESET_REQUEST_IN15    => 0,
			ADAPT_RESET_REQUEST       => 0
		)
		port map (
			reset_in0      => reset_reset_n_ports_inv,                           -- reset_in0.reset
			reset_in1      => nios2_sound_acquisition_debug_reset_request_reset, -- reset_in1.reset
			reset_in2      => nios2_fft_debug_reset_request_reset,               -- reset_in2.reset
			clk            => pll_outclk1_clk,                                   --       clk.clk
			reset_out      => rst_controller_reset_out_reset,                    -- reset_out.reset
			reset_req      => open,                                              -- (terminated)
			reset_req_in0  => '0',                                               -- (terminated)
			reset_req_in1  => '0',                                               -- (terminated)
			reset_req_in2  => '0',                                               -- (terminated)
			reset_in3      => '0',                                               -- (terminated)
			reset_req_in3  => '0',                                               -- (terminated)
			reset_in4      => '0',                                               -- (terminated)
			reset_req_in4  => '0',                                               -- (terminated)
			reset_in5      => '0',                                               -- (terminated)
			reset_req_in5  => '0',                                               -- (terminated)
			reset_in6      => '0',                                               -- (terminated)
			reset_req_in6  => '0',                                               -- (terminated)
			reset_in7      => '0',                                               -- (terminated)
			reset_req_in7  => '0',                                               -- (terminated)
			reset_in8      => '0',                                               -- (terminated)
			reset_req_in8  => '0',                                               -- (terminated)
			reset_in9      => '0',                                               -- (terminated)
			reset_req_in9  => '0',                                               -- (terminated)
			reset_in10     => '0',                                               -- (terminated)
			reset_req_in10 => '0',                                               -- (terminated)
			reset_in11     => '0',                                               -- (terminated)
			reset_req_in11 => '0',                                               -- (terminated)
			reset_in12     => '0',                                               -- (terminated)
			reset_req_in12 => '0',                                               -- (terminated)
			reset_in13     => '0',                                               -- (terminated)
			reset_req_in13 => '0',                                               -- (terminated)
			reset_in14     => '0',                                               -- (terminated)
			reset_req_in14 => '0',                                               -- (terminated)
			reset_in15     => '0',                                               -- (terminated)
			reset_req_in15 => '0'                                                -- (terminated)
		);

	rst_controller_001 : component main_system_rst_controller_001
		generic map (
			NUM_RESET_INPUTS          => 3,
			OUTPUT_RESET_SYNC_EDGES   => "deassert",
			SYNC_DEPTH                => 2,
			RESET_REQUEST_PRESENT     => 1,
			RESET_REQ_WAIT_TIME       => 1,
			MIN_RST_ASSERTION_TIME    => 3,
			RESET_REQ_EARLY_DSRT_TIME => 1,
			USE_RESET_REQUEST_IN0     => 0,
			USE_RESET_REQUEST_IN1     => 0,
			USE_RESET_REQUEST_IN2     => 0,
			USE_RESET_REQUEST_IN3     => 0,
			USE_RESET_REQUEST_IN4     => 0,
			USE_RESET_REQUEST_IN5     => 0,
			USE_RESET_REQUEST_IN6     => 0,
			USE_RESET_REQUEST_IN7     => 0,
			USE_RESET_REQUEST_IN8     => 0,
			USE_RESET_REQUEST_IN9     => 0,
			USE_RESET_REQUEST_IN10    => 0,
			USE_RESET_REQUEST_IN11    => 0,
			USE_RESET_REQUEST_IN12    => 0,
			USE_RESET_REQUEST_IN13    => 0,
			USE_RESET_REQUEST_IN14    => 0,
			USE_RESET_REQUEST_IN15    => 0,
			ADAPT_RESET_REQUEST       => 0
		)
		port map (
			reset_in0      => reset_reset_n_ports_inv,                           -- reset_in0.reset
			reset_in1      => nios2_sound_acquisition_debug_reset_request_reset, -- reset_in1.reset
			reset_in2      => nios2_fft_debug_reset_request_reset,               -- reset_in2.reset
			clk            => pll_outclk0_clk,                                   --       clk.clk
			reset_out      => rst_controller_001_reset_out_reset,                -- reset_out.reset
			reset_req      => rst_controller_001_reset_out_reset_req,            --          .reset_req
			reset_req_in0  => '0',                                               -- (terminated)
			reset_req_in1  => '0',                                               -- (terminated)
			reset_req_in2  => '0',                                               -- (terminated)
			reset_in3      => '0',                                               -- (terminated)
			reset_req_in3  => '0',                                               -- (terminated)
			reset_in4      => '0',                                               -- (terminated)
			reset_req_in4  => '0',                                               -- (terminated)
			reset_in5      => '0',                                               -- (terminated)
			reset_req_in5  => '0',                                               -- (terminated)
			reset_in6      => '0',                                               -- (terminated)
			reset_req_in6  => '0',                                               -- (terminated)
			reset_in7      => '0',                                               -- (terminated)
			reset_req_in7  => '0',                                               -- (terminated)
			reset_in8      => '0',                                               -- (terminated)
			reset_req_in8  => '0',                                               -- (terminated)
			reset_in9      => '0',                                               -- (terminated)
			reset_req_in9  => '0',                                               -- (terminated)
			reset_in10     => '0',                                               -- (terminated)
			reset_req_in10 => '0',                                               -- (terminated)
			reset_in11     => '0',                                               -- (terminated)
			reset_req_in11 => '0',                                               -- (terminated)
			reset_in12     => '0',                                               -- (terminated)
			reset_req_in12 => '0',                                               -- (terminated)
			reset_in13     => '0',                                               -- (terminated)
			reset_req_in13 => '0',                                               -- (terminated)
			reset_in14     => '0',                                               -- (terminated)
			reset_req_in14 => '0',                                               -- (terminated)
			reset_in15     => '0',                                               -- (terminated)
			reset_req_in15 => '0'                                                -- (terminated)
		);

	rst_controller_002 : component main_system_rst_controller
		generic map (
			NUM_RESET_INPUTS          => 3,
			OUTPUT_RESET_SYNC_EDGES   => "none",
			SYNC_DEPTH                => 2,
			RESET_REQUEST_PRESENT     => 0,
			RESET_REQ_WAIT_TIME       => 1,
			MIN_RST_ASSERTION_TIME    => 3,
			RESET_REQ_EARLY_DSRT_TIME => 1,
			USE_RESET_REQUEST_IN0     => 0,
			USE_RESET_REQUEST_IN1     => 0,
			USE_RESET_REQUEST_IN2     => 0,
			USE_RESET_REQUEST_IN3     => 0,
			USE_RESET_REQUEST_IN4     => 0,
			USE_RESET_REQUEST_IN5     => 0,
			USE_RESET_REQUEST_IN6     => 0,
			USE_RESET_REQUEST_IN7     => 0,
			USE_RESET_REQUEST_IN8     => 0,
			USE_RESET_REQUEST_IN9     => 0,
			USE_RESET_REQUEST_IN10    => 0,
			USE_RESET_REQUEST_IN11    => 0,
			USE_RESET_REQUEST_IN12    => 0,
			USE_RESET_REQUEST_IN13    => 0,
			USE_RESET_REQUEST_IN14    => 0,
			USE_RESET_REQUEST_IN15    => 0,
			ADAPT_RESET_REQUEST       => 0
		)
		port map (
			reset_in0      => reset_reset_n_ports_inv,                           -- reset_in0.reset
			reset_in1      => nios2_sound_acquisition_debug_reset_request_reset, -- reset_in1.reset
			reset_in2      => nios2_fft_debug_reset_request_reset,               -- reset_in2.reset
			clk            => open,                                              --       clk.clk
			reset_out      => rst_controller_002_reset_out_reset,                -- reset_out.reset
			reset_req      => open,                                              -- (terminated)
			reset_req_in0  => '0',                                               -- (terminated)
			reset_req_in1  => '0',                                               -- (terminated)
			reset_req_in2  => '0',                                               -- (terminated)
			reset_in3      => '0',                                               -- (terminated)
			reset_req_in3  => '0',                                               -- (terminated)
			reset_in4      => '0',                                               -- (terminated)
			reset_req_in4  => '0',                                               -- (terminated)
			reset_in5      => '0',                                               -- (terminated)
			reset_req_in5  => '0',                                               -- (terminated)
			reset_in6      => '0',                                               -- (terminated)
			reset_req_in6  => '0',                                               -- (terminated)
			reset_in7      => '0',                                               -- (terminated)
			reset_req_in7  => '0',                                               -- (terminated)
			reset_in8      => '0',                                               -- (terminated)
			reset_req_in8  => '0',                                               -- (terminated)
			reset_in9      => '0',                                               -- (terminated)
			reset_req_in9  => '0',                                               -- (terminated)
			reset_in10     => '0',                                               -- (terminated)
			reset_req_in10 => '0',                                               -- (terminated)
			reset_in11     => '0',                                               -- (terminated)
			reset_req_in11 => '0',                                               -- (terminated)
			reset_in12     => '0',                                               -- (terminated)
			reset_req_in12 => '0',                                               -- (terminated)
			reset_in13     => '0',                                               -- (terminated)
			reset_req_in13 => '0',                                               -- (terminated)
			reset_in14     => '0',                                               -- (terminated)
			reset_req_in14 => '0',                                               -- (terminated)
			reset_in15     => '0',                                               -- (terminated)
			reset_req_in15 => '0'                                                -- (terminated)
		);

	reset_reset_n_ports_inv <= not reset_reset_n;

	mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read_ports_inv <= not mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read;

	mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write_ports_inv <= not mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write;

	mm_interconnect_0_sdram_controller_s1_read_ports_inv <= not mm_interconnect_0_sdram_controller_s1_read;

	mm_interconnect_0_sdram_controller_s1_byteenable_ports_inv <= not mm_interconnect_0_sdram_controller_s1_byteenable;

	mm_interconnect_0_sdram_controller_s1_write_ports_inv <= not mm_interconnect_0_sdram_controller_s1_write;

	mm_interconnect_0_pio_buttons_s1_write_ports_inv <= not mm_interconnect_0_pio_buttons_s1_write;

	mm_interconnect_0_pio_leds_s1_write_ports_inv <= not mm_interconnect_0_pio_leds_s1_write;

	mm_interconnect_0_pio_switches_s1_write_ports_inv <= not mm_interconnect_0_pio_switches_s1_write;

	mm_interconnect_0_uart_0_s1_read_ports_inv <= not mm_interconnect_0_uart_0_s1_read;

	mm_interconnect_0_uart_0_s1_write_ports_inv <= not mm_interconnect_0_uart_0_s1_write;

	rst_controller_reset_out_reset_ports_inv <= not rst_controller_reset_out_reset;

	rst_controller_001_reset_out_reset_ports_inv <= not rst_controller_001_reset_out_reset;

end architecture rtl; -- of main_system
